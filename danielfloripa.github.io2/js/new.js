!function (t, e) {
    "object" == typeof module && "object" == typeof module.exports ? module.exports = t.document ? e(t, !0) : function (t) {
        if (!t.document)
            throw new Error("jQuery requires a window with a document");
        return e(t)
    } : e(t)
}("undefined" != typeof window ? window : this, function (t, e) {
    function i(t) {
        var e = t.length, i = J.type(t);
        return "function" === i || J.isWindow(t) ? !1 : 1 === t.nodeType && e ? !0 : "array" === i || 0 === e || "number" == typeof e && e > 0 && e - 1 in t
    }

    function n(t, e, i) {
        if (J.isFunction(e)) return J.grep(t, function (t, n) {
            return !!e.call(t, n, t) !== i
        });
        if (e.nodeType) return J.grep(t, function (t) {
            return t === e !== i
        });
        if ("string" == typeof e) {
            if (st.test(e)) return J.filter(e, t, i);
            e = J.filter(e, t)
        }
        return J.grep(t, function (t) {
            return X.call(e, t) >= 0 !== i
        })
    }

    function r(t, e) {
        for (; (t = t[e]) && 1 !== t.nodeType;) ;
        return t
    }

    function o(t) {
        var e = ft[t] = {};
        return J.each(t.match(dt) || [], function (t, i) {
            e[i] = !0
        }), e
    }

    function a() {
        Q.removeEventListener("DOMContentLoaded", a, !1), t.removeEventListener("load", a, !1), J.ready()
    }

    function s() {
        Object.defineProperty(this.cache = {}, 0, {
            get: function () {
                return {}
            }
        }), this.expando = J.expando + Math.random()
    }

    function l(t, e, i) {
        var n;
        if (void 0 === i && 1 === t.nodeType) if (n = "data-" + e.replace(Tt, "-$1").toLowerCase(), i = t.getAttribute(n), "string" == typeof i) {
            try {
                i = "true" === i ? !0 : "false" === i ? !1 : "null" === i ? null : +i + "" === i ? +i : yt.test(i) ? J.parseJSON(i) : i
            } catch (r) {
            }
            vt.set(t, e, i)
        } else i = void 0;
        return i
    }

    function h() {
        return !0
    }

    function u() {
        return !1
    }

    function c() {
        try {
            return Q.activeElement
        } catch (t) {
        }
    }

    function p(t, e) {
        return J.nodeName(t, "table") && J.nodeName(11 !== e.nodeType ? e : e.firstChild, "tr") ? t.getElementsByTagName("tbody")[0] || t.appendChild(t.ownerDocument.createElement("tbody")) : t
    }

    function d(t) {
        return t.type = (null !== t.getAttribute("type")) + "/" + t.type, t
    }

    function f(t) {
        var e = Nt.exec(t.type);
        return e ? t.type = e[1] : t.removeAttribute("type"), t
    }

    function m(t, e) {
        for (var i = 0, n = t.length; n > i; i++) Et.set(t[i], "globalEval", !e || Et.get(e[i], "globalEval"))
    }

    function g(t, e) {
        var i, n, r, o, a, s, l, h;
        if (1 === e.nodeType) {
            if (Et.hasData(t) && (o = Et.access(t), a = Et.set(e, o), h = o.events)) {
                delete a.handle, a.events = {};
                for (r in h) for (i = 0, n = h[r].length; n > i; i++) J.event.add(e, r, h[r][i])
            }
            vt.hasData(t) && (s = vt.access(t), l = J.extend({}, s), vt.set(e, l))
        }
    }

    function E(t, e) {
        var i = t.getElementsByTagName ? t.getElementsByTagName(e || "*") : t.querySelectorAll ? t.querySelectorAll(e || "*") : [];
        return void 0 === e || e && J.nodeName(t, e) ? J.merge([t], i) : i
    }

    function v(t, e) {
        var i = e.nodeName.toLowerCase();
        "input" === i && Rt.test(t.type) ? e.checked = t.checked : ("input" === i || "textarea" === i) && (e.defaultValue = t.defaultValue)
    }

    function y(e, i) {
        var n, r = J(i.createElement(e)).appendTo(i.body),
            o = t.getDefaultComputedStyle && (n = t.getDefaultComputedStyle(r[0])) ? n.display : J.css(r[0], "display");
        return r.detach(), o
    }

    function T(t) {
        var e = Q, i = Ut[t];
        return i || (i = y(t, e), "none" !== i && i || (Ft = (Ft || J("<iframe frameborder='0' width='0' height='0'/>")).appendTo(e.documentElement), e = Ft[0].contentDocument, e.write(), e.close(), i = y(t, e), Ft.detach()), Ut[t] = i), i
    }

    function _(t, e, i) {
        var n, r, o, a, s = t.style;
        return i = i || Gt(t), i && (a = i.getPropertyValue(e) || i[e]), i && ("" !== a || J.contains(t.ownerDocument, t) || (a = J.style(t, e)), zt.test(a) && Vt.test(e) && (n = s.width, r = s.minWidth, o = s.maxWidth, s.minWidth = s.maxWidth = s.width = a, a = i.width, s.width = n, s.minWidth = r, s.maxWidth = o)), void 0 !== a ? a + "" : a
    }

    function x(t, e) {
        return {
            get: function () {
                return t() ? void delete this.get : (this.get = e).apply(this, arguments)
            }
        }
    }

    function b(t, e) {
        if (e in t) return e;
        for (var i = e[0].toUpperCase() + e.slice(1), n = e, r = $t.length; r--;) if (e = $t[r] + i, e in t) return e;
        return n
    }

    function R(t, e, i) {
        var n = Wt.exec(e);
        return n ? Math.max(0, n[1] - (i || 0)) + (n[2] || "px") : e
    }

    function w(t, e, i, n, r) {
        for (var o = i === (n ? "border" : "content") ? 4 : "width" === e ? 1 : 0, a = 0; 4 > o; o += 2) "margin" === i && (a += J.css(t, i + xt[o], !0, r)), n ? ("content" === i && (a -= J.css(t, "padding" + xt[o], !0, r)), "margin" !== i && (a -= J.css(t, "border" + xt[o] + "Width", !0, r))) : (a += J.css(t, "padding" + xt[o], !0, r), "padding" !== i && (a += J.css(t, "border" + xt[o] + "Width", !0, r)));
        return a
    }

    function H(t, e, i) {
        var n = !0, r = "width" === e ? t.offsetWidth : t.offsetHeight, o = Gt(t), a = "border-box" === J.css(t, "boxSizing", !1, o);
        if (0 >= r || null == r) {
            if (r = _(t, e, o), (0 > r || null == r) && (r = t.style[e]), zt.test(r)) return r;
            n = a && (Z.boxSizingReliable() || r === t.style[e]), r = parseFloat(r) || 0
        }
        return r + w(t, e, i || (a ? "border" : "content"), n, o) + "px"
    }

    function M(t, e) {
        for (var i, n, r, o = [], a = 0, s = t.length; s > a; a++) n = t[a], n.style && (o[a] = Et.get(n, "olddisplay"), i = n.style.display, e ? (o[a] || "none" !== i || (n.style.display = ""), "" === n.style.display && bt(n) && (o[a] = Et.access(n, "olddisplay", T(n.nodeName)))) : (r = bt(n), "none" === i && r || Et.set(n, "olddisplay", r ? i : J.css(n, "display"))));
        for (a = 0; s > a; a++) n = t[a], n.style && (e && "none" !== n.style.display && "" !== n.style.display || (n.style.display = e ? o[a] || "" : "none"));
        return t
    }

    function S(t, e, i, n, r) {
        return new S.prototype.init(t, e, i, n, r)
    }

    function C() {
        return setTimeout(function () {
            Zt = void 0
        }), Zt = J.now()
    }

    function A(t, e) {
        var i, n = 0, r = {height: t};
        for (e = e ? 1 : 0; 4 > n; n += 2 - e) i = xt[n], r["margin" + i] = r["padding" + i] = t;
        return e && (r.opacity = r.width = t), r
    }

    function P(t, e, i) {
        for (var n, r = (ie[e] || []).concat(ie["*"]), o = 0, a = r.length; a > o; o++) if (n = r[o].call(i, e, t)) return n
    }

    function L(t, e, i) {
        var n, r, o, a, s, l, h, u, c = this, p = {}, d = t.style, f = t.nodeType && bt(t), m = Et.get(t, "fxshow");
        i.queue || (s = J._queueHooks(t, "fx"), null == s.unqueued && (s.unqueued = 0, l = s.empty.fire, s.empty.fire = function () {
            s.unqueued || l()
        }), s.unqueued++, c.always(function () {
            c.always(function () {
                s.unqueued--, J.queue(t, "fx").length || s.empty.fire()
            })
        })), 1 === t.nodeType && ("height" in e || "width" in e) && (i.overflow = [d.overflow, d.overflowX, d.overflowY], h = J.css(t, "display"), u = "none" === h ? Et.get(t, "olddisplay") || T(t.nodeName) : h, "inline" === u && "none" === J.css(t, "float") && (d.display = "inline-block")), i.overflow && (d.overflow = "hidden", c.always(function () {
            d.overflow = i.overflow[0], d.overflowX = i.overflow[1], d.overflowY = i.overflow[2]
        }));
        for (n in e) if (r = e[n], Kt.exec(r)) {
            if (delete e[n], o = o || "toggle" === r, r === (f ? "hide" : "show")) {
                if ("show" !== r || !m || void 0 === m[n]) continue;
                f = !0
            }
            p[n] = m && m[n] || J.style(t, n)
        } else h = void 0;
        if (J.isEmptyObject(p)) "inline" === ("none" === h ? T(t.nodeName) : h) && (d.display = h); else {
            m ? "hidden" in m && (f = m.hidden) : m = Et.access(t, "fxshow", {}), o && (m.hidden = !f), f ? J(t).show() : c.done(function () {
                J(t).hide()
            }), c.done(function () {
                var e;
                Et.remove(t, "fxshow");
                for (e in p) J.style(t, e, p[e])
            });
            for (n in p) a = P(f ? m[n] : 0, n, c), n in m || (m[n] = a.start, f && (a.end = a.start, a.start = "width" === n || "height" === n ? 1 : 0))
        }
    }

    function O(t, e) {
        var i, n, r, o, a;
        for (i in t) if (n = J.camelCase(i), r = e[n], o = t[i], J.isArray(o) && (r = o[1], o = t[i] = o[0]), i !== n && (t[n] = o, delete t[i]), a = J.cssHooks[n], a && "expand" in a) {
            o = a.expand(o), delete t[n];
            for (i in o) i in t || (t[i] = o[i], e[i] = r)
        } else e[n] = r
    }

    function D(t, e, i) {
        var n, r, o = 0, a = ee.length, s = J.Deferred().always(function () {
            delete l.elem
        }), l = function () {
            if (r) return !1;
            for (var e = Zt || C(), i = Math.max(0, h.startTime + h.duration - e), n = i / h.duration || 0, o = 1 - n, a = 0, l = h.tweens.length; l > a; a++) h.tweens[a].run(o);
            return s.notifyWith(t, [h, o, i]), 1 > o && l ? i : (s.resolveWith(t, [h]), !1)
        }, h = s.promise({
            elem: t,
            props: J.extend({}, e),
            opts: J.extend(!0, {specialEasing: {}}, i),
            originalProperties: e,
            originalOptions: i,
            startTime: Zt || C(),
            duration: i.duration,
            tweens: [],
            createTween: function (e, i) {
                var n = J.Tween(t, h.opts, e, i, h.opts.specialEasing[e] || h.opts.easing);
                return h.tweens.push(n), n
            },
            stop: function (e) {
                var i = 0, n = e ? h.tweens.length : 0;
                if (r) return this;
                for (r = !0; n > i; i++) h.tweens[i].run(1);
                return e ? s.resolveWith(t, [h, e]) : s.rejectWith(t, [h, e]), this
            }
        }), u = h.props;
        for (O(u, h.opts.specialEasing); a > o; o++) if (n = ee[o].call(h, t, u, h.opts)) return n;
        return J.map(u, P, h), J.isFunction(h.opts.start) && h.opts.start.call(t, h), J.fx.timer(J.extend(l, {
            elem: t,
            anim: h,
            queue: h.opts.queue
        })), h.progress(h.opts.progress).done(h.opts.done, h.opts.complete).fail(h.opts.fail).always(h.opts.always)
    }

    function I(t) {
        return function (e, i) {
            "string" != typeof e && (i = e, e = "*");
            var n, r = 0, o = e.toLowerCase().match(dt) || [];
            if (J.isFunction(i)) for (; n = o[r++];) "+" === n[0] ? (n = n.slice(1) || "*", (t[n] = t[n] || []).unshift(i)) : (t[n] = t[n] || []).push(i)
        }
    }

    function N(t, e, i, n) {
        function r(s) {
            var l;
            return o[s] = !0, J.each(t[s] || [], function (t, s) {
                var h = s(e, i, n);
                return "string" != typeof h || a || o[h] ? a ? !(l = h) : void 0 : (e.dataTypes.unshift(h), r(h), !1)
            }), l
        }

        var o = {}, a = t === _e;
        return r(e.dataTypes[0]) || !o["*"] && r("*")
    }

    function k(t, e) {
        var i, n, r = J.ajaxSettings.flatOptions || {};
        for (i in e) void 0 !== e[i] && ((r[i] ? t : n || (n = {}))[i] = e[i]);
        return n && J.extend(!0, t, n), t
    }

    function B(t, e, i) {
        for (var n, r, o, a, s = t.contents, l = t.dataTypes; "*" === l[0];) l.shift(), void 0 === n && (n = t.mimeType || e.getResponseHeader("Content-Type"));
        if (n) for (r in s) if (s[r] && s[r].test(n)) {
            l.unshift(r);
            break
        }
        if (l[0] in i) o = l[0]; else {
            for (r in i) {
                if (!l[0] || t.converters[r + " " + l[0]]) {
                    o = r;
                    break
                }
                a || (a = r)
            }
            o = o || a
        }
        return o ? (o !== l[0] && l.unshift(o), i[o]) : void 0
    }

    function F(t, e, i, n) {
        var r, o, a, s, l, h = {}, u = t.dataTypes.slice();
        if (u[1]) for (a in t.converters) h[a.toLowerCase()] = t.converters[a];
        for (o = u.shift(); o;) if (t.responseFields[o] && (i[t.responseFields[o]] = e), !l && n && t.dataFilter && (e = t.dataFilter(e, t.dataType)), l = o, o = u.shift()) if ("*" === o) o = l; else if ("*" !== l && l !== o) {
            if (a = h[l + " " + o] || h["* " + o], !a) for (r in h) if (s = r.split(" "), s[1] === o && (a = h[l + " " + s[0]] || h["* " + s[0]])) {
                a === !0 ? a = h[r] : h[r] !== !0 && (o = s[0], u.unshift(s[1]));
                break
            }
            if (a !== !0) if (a && t["throws"]) e = a(e); else try {
                e = a(e)
            } catch (c) {
                return {state: "parsererror", error: a ? c : "No conversion from " + l + " to " + o}
            }
        }
        return {state: "success", data: e}
    }

    function U(t, e, i, n) {
        var r;
        if (J.isArray(e)) J.each(e, function (e, r) {
            i || we.test(t) ? n(t, r) : U(t + "[" + ("object" == typeof r ? e : "") + "]", r, i, n)
        }); else if (i || "object" !== J.type(e)) n(t, e); else for (r in e) U(t + "[" + r + "]", e[r], i, n)
    }

    function V(t) {
        return J.isWindow(t) ? t : 9 === t.nodeType && t.defaultView
    }

    var z = [], G = z.slice, j = z.concat, W = z.push, X = z.indexOf, q = {}, Y = q.toString, $ = q.hasOwnProperty, Z = {}, Q = t.document,
        K = "2.1.1", J = function (t, e) {
            return new J.fn.init(t, e)
        }, tt = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, et = /^-ms-/, it = /-([\da-z])/gi, nt = function (t, e) {
            return e.toUpperCase()
        };
    J.fn = J.prototype = {
        jquery: K, constructor: J, selector: "", length: 0, toArray: function () {
            return G.call(this)
        }, get: function (t) {
            return null != t ? 0 > t ? this[t + this.length] : this[t] : G.call(this)
        }, pushStack: function (t) {
            var e = J.merge(this.constructor(), t);
            return e.prevObject = this, e.context = this.context, e
        }, each: function (t, e) {
            return J.each(this, t, e)
        }, map: function (t) {
            return this.pushStack(J.map(this, function (e, i) {
                return t.call(e, i, e)
            }))
        }, slice: function () {
            return this.pushStack(G.apply(this, arguments))
        }, first: function () {
            return this.eq(0)
        }, last: function () {
            return this.eq(-1)
        }, eq: function (t) {
            var e = this.length, i = +t + (0 > t ? e : 0);
            return this.pushStack(i >= 0 && e > i ? [this[i]] : [])
        }, end: function () {
            return this.prevObject || this.constructor(null)
        }, push: W, sort: z.sort, splice: z.splice
    }, J.extend = J.fn.extend = function () {
        var t, e, i, n, r, o, a = arguments[0] || {}, s = 1, l = arguments.length, h = !1;
        for ("boolean" == typeof a && (h = a, a = arguments[s] || {}, s++), "object" == typeof a || J.isFunction(a) || (a = {}), s === l && (a = this, s--); l > s; s++) if (null != (t = arguments[s])) for (e in t) i = a[e], n = t[e], a !== n && (h && n && (J.isPlainObject(n) || (r = J.isArray(n))) ? (r ? (r = !1, o = i && J.isArray(i) ? i : []) : o = i && J.isPlainObject(i) ? i : {}, a[e] = J.extend(h, o, n)) : void 0 !== n && (a[e] = n));
        return a
    }, J.extend({
        expando: "jQuery" + (K + Math.random()).replace(/\D/g, ""), isReady: !0, error: function (t) {
            throw new Error(t)
        }, noop: function () {
        }, isFunction: function (t) {
            return "function" === J.type(t)
        }, isArray: Array.isArray, isWindow: function (t) {
            return null != t && t === t.window
        }, isNumeric: function (t) {
            return !J.isArray(t) && t - parseFloat(t) >= 0
        }, isPlainObject: function (t) {
            return "object" !== J.type(t) || t.nodeType || J.isWindow(t) ? !1 : t.constructor && !$.call(t.constructor.prototype, "isPrototypeOf") ? !1 : !0
        }, isEmptyObject: function (t) {
            var e;
            for (e in t) return !1;
            return !0
        }, type: function (t) {
            return null == t ? t + "" : "object" == typeof t || "function" == typeof t ? q[Y.call(t)] || "object" : typeof t
        }, globalEval: function (t) {
            var e, i = eval;
            t = J.trim(t), t && (1 === t.indexOf("use strict") ? (e = Q.createElement("script"), e.text = t, Q.head.appendChild(e).parentNode.removeChild(e)) : i(t))
        }, camelCase: function (t) {
            return t.replace(et, "ms-").replace(it, nt)
        }, nodeName: function (t, e) {
            return t.nodeName && t.nodeName.toLowerCase() === e.toLowerCase()
        }, each: function (t, e, n) {
            var r, o = 0, a = t.length, s = i(t);
            if (n) {
                if (s) for (; a > o && (r = e.apply(t[o], n), r !== !1); o++) ; else for (o in t) if (r = e.apply(t[o], n), r === !1) break
            } else if (s) for (; a > o && (r = e.call(t[o], o, t[o]), r !== !1); o++) ; else for (o in t) if (r = e.call(t[o], o, t[o]), r === !1) break;
            return t
        }, trim: function (t) {
            return null == t ? "" : (t + "").replace(tt, "")
        }, makeArray: function (t, e) {
            var n = e || [];
            return null != t && (i(Object(t)) ? J.merge(n, "string" == typeof t ? [t] : t) : W.call(n, t)), n
        }, inArray: function (t, e, i) {
            return null == e ? -1 : X.call(e, t, i)
        }, merge: function (t, e) {
            for (var i = +e.length, n = 0, r = t.length; i > n; n++) t[r++] = e[n];
            return t.length = r, t
        }, grep: function (t, e, i) {
            for (var n, r = [], o = 0, a = t.length, s = !i; a > o; o++) n = !e(t[o], o), n !== s && r.push(t[o]);
            return r
        }, map: function (t, e, n) {
            var r, o = 0, a = t.length, s = i(t), l = [];
            if (s) for (; a > o; o++) r = e(t[o], o, n), null != r && l.push(r); else for (o in t) r = e(t[o], o, n), null != r && l.push(r);
            return j.apply([], l)
        }, guid: 1, proxy: function (t, e) {
            var i, n, r;
            return "string" == typeof e && (i = t[e], e = t, t = i), J.isFunction(t) ? (n = G.call(arguments, 2), r = function () {
                return t.apply(e || this, n.concat(G.call(arguments)))
            }, r.guid = t.guid = t.guid || J.guid++, r) : void 0
        }, now: Date.now, support: Z
    }), J.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function (t, e) {
        q["[object " + e + "]"] = e.toLowerCase()
    });
    var rt = function (t) {
        function e(t, e, i, n) {
            var r, o, a, s, l, h, c, d, f, m;
            if ((e ? e.ownerDocument || e : U) !== L && P(e), e = e || L, i = i || [], !t || "string" != typeof t) return i;
            if (1 !== (s = e.nodeType) && 9 !== s) return [];
            if (D && !n) {
                if (r = vt.exec(t)) if (a = r[1]) {
                    if (9 === s) {
                        if (o = e.getElementById(a), !o || !o.parentNode) return i;
                        if (o.id === a) return i.push(o), i
                    } else if (e.ownerDocument && (o = e.ownerDocument.getElementById(a)) && B(e, o) && o.id === a) return i.push(o), i
                } else {
                    if (r[2]) return J.apply(i, e.getElementsByTagName(t)), i;
                    if ((a = r[3]) && _.getElementsByClassName && e.getElementsByClassName) return J.apply(i, e.getElementsByClassName(a)), i
                }
                if (_.qsa && (!I || !I.test(t))) {
                    if (d = c = F, f = e, m = 9 === s && t, 1 === s && "object" !== e.nodeName.toLowerCase()) {
                        for (h = w(t), (c = e.getAttribute("id")) ? d = c.replace(Tt, "\\$&") : e.setAttribute("id", d), d = "[id='" + d + "'] ", l = h.length; l--;) h[l] = d + p(h[l]);
                        f = yt.test(t) && u(e.parentNode) || e, m = h.join(",")
                    }
                    if (m) try {
                        return J.apply(i, f.querySelectorAll(m)), i
                    } catch (g) {
                    } finally {
                        c || e.removeAttribute("id")
                    }
                }
            }
            return M(t.replace(lt, "$1"), e, i, n)
        }

        function i() {
            function t(i, n) {
                return e.push(i + " ") > x.cacheLength && delete t[e.shift()], t[i + " "] = n
            }

            var e = [];
            return t
        }

        function n(t) {
            return t[F] = !0, t
        }

        function r(t) {
            var e = L.createElement("div");
            try {
                return !!t(e)
            } catch (i) {
                return !1
            } finally {
                e.parentNode && e.parentNode.removeChild(e), e = null
            }
        }

        function o(t, e) {
            for (var i = t.split("|"), n = t.length; n--;) x.attrHandle[i[n]] = e
        }

        function a(t, e) {
            var i = e && t, n = i && 1 === t.nodeType && 1 === e.nodeType && (~e.sourceIndex || Y) - (~t.sourceIndex || Y);
            if (n) return n;
            if (i) for (; i = i.nextSibling;) if (i === e) return -1;
            return t ? 1 : -1
        }

        function s(t) {
            return function (e) {
                var i = e.nodeName.toLowerCase();
                return "input" === i && e.type === t
            }
        }

        function l(t) {
            return function (e) {
                var i = e.nodeName.toLowerCase();
                return ("input" === i || "button" === i) && e.type === t
            }
        }

        function h(t) {
            return n(function (e) {
                return e = +e, n(function (i, n) {
                    for (var r, o = t([], i.length, e), a = o.length; a--;) i[r = o[a]] && (i[r] = !(n[r] = i[r]))
                })
            })
        }

        function u(t) {
            return t && typeof t.getElementsByTagName !== q && t
        }

        function c() {
        }

        function p(t) {
            for (var e = 0, i = t.length, n = ""; i > e; e++) n += t[e].value;
            return n
        }

        function d(t, e, i) {
            var n = e.dir, r = i && "parentNode" === n, o = z++;
            return e.first ? function (e, i, o) {
                for (; e = e[n];) if (1 === e.nodeType || r) return t(e, i, o)
            } : function (e, i, a) {
                var s, l, h = [V, o];
                if (a) {
                    for (; e = e[n];) if ((1 === e.nodeType || r) && t(e, i, a)) return !0
                } else for (; e = e[n];) if (1 === e.nodeType || r) {
                    if (l = e[F] || (e[F] = {}), (s = l[n]) && s[0] === V && s[1] === o) return h[2] = s[2];
                    if (l[n] = h, h[2] = t(e, i, a)) return !0
                }
            }
        }

        function f(t) {
            return t.length > 1 ? function (e, i, n) {
                for (var r = t.length; r--;) if (!t[r](e, i, n)) return !1;
                return !0
            } : t[0]
        }

        function m(t, i, n) {
            for (var r = 0, o = i.length; o > r; r++) e(t, i[r], n);
            return n
        }

        function g(t, e, i, n, r) {
            for (var o, a = [], s = 0, l = t.length, h = null != e; l > s; s++) (o = t[s]) && (!i || i(o, n, r)) && (a.push(o), h && e.push(s));
            return a
        }

        function E(t, e, i, r, o, a) {
            return r && !r[F] && (r = E(r)), o && !o[F] && (o = E(o, a)), n(function (n, a, s, l) {
                var h, u, c, p = [], d = [], f = a.length, E = n || m(e || "*", s.nodeType ? [s] : s, []),
                    v = !t || !n && e ? E : g(E, p, t, s, l), y = i ? o || (n ? t : f || r) ? [] : a : v;
                if (i && i(v, y, s, l), r) for (h = g(y, d), r(h, [], s, l), u = h.length; u--;) (c = h[u]) && (y[d[u]] = !(v[d[u]] = c));
                if (n) {
                    if (o || t) {
                        if (o) {
                            for (h = [], u = y.length; u--;) (c = y[u]) && h.push(v[u] = c);
                            o(null, y = [], h, l)
                        }
                        for (u = y.length; u--;) (c = y[u]) && (h = o ? et.call(n, c) : p[u]) > -1 && (n[h] = !(a[h] = c))
                    }
                } else y = g(y === a ? y.splice(f, y.length) : y), o ? o(null, a, y, l) : J.apply(a, y)
            })
        }

        function v(t) {
            for (var e, i, n, r = t.length, o = x.relative[t[0].type], a = o || x.relative[" "], s = o ? 1 : 0, l = d(function (t) {
                return t === e
            }, a, !0), h = d(function (t) {
                return et.call(e, t) > -1
            }, a, !0), u = [function (t, i, n) {
                return !o && (n || i !== S) || ((e = i).nodeType ? l(t, i, n) : h(t, i, n))
            }]; r > s; s++) if (i = x.relative[t[s].type]) u = [d(f(u), i)]; else {
                if (i = x.filter[t[s].type].apply(null, t[s].matches), i[F]) {
                    for (n = ++s; r > n && !x.relative[t[n].type]; n++) ;
                    return E(s > 1 && f(u), s > 1 && p(t.slice(0, s - 1).concat({value: " " === t[s - 2].type ? "*" : ""})).replace(lt, "$1"), i, n > s && v(t.slice(s, n)), r > n && v(t = t.slice(n)), r > n && p(t))
                }
                u.push(i)
            }
            return f(u)
        }

        function y(t, i) {
            var r = i.length > 0, o = t.length > 0, a = function (n, a, s, l, h) {
                var u, c, p, d = 0, f = "0", m = n && [], E = [], v = S, y = n || o && x.find.TAG("*", h),
                    T = V += null == v ? 1 : Math.random() || .1, _ = y.length;
                for (h && (S = a !== L && a); f !== _ && null != (u = y[f]); f++) {
                    if (o && u) {
                        for (c = 0; p = t[c++];) if (p(u, a, s)) {
                            l.push(u);
                            break
                        }
                        h && (V = T)
                    }
                    r && ((u = !p && u) && d--, n && m.push(u))
                }
                if (d += f, r && f !== d) {
                    for (c = 0; p = i[c++];) p(m, E, a, s);
                    if (n) {
                        if (d > 0) for (; f--;) m[f] || E[f] || (E[f] = Q.call(l));
                        E = g(E)
                    }
                    J.apply(l, E), h && !n && E.length > 0 && d + i.length > 1 && e.uniqueSort(l)
                }
                return h && (V = T, S = v), m
            };
            return r ? n(a) : a
        }

        var T, _, x, b, R, w, H, M, S, C, A, P, L, O, D, I, N, k, B, F = "sizzle" + -new Date, U = t.document, V = 0, z = 0, G = i(),
            j = i(), W = i(), X = function (t, e) {
                return t === e && (A = !0), 0
            }, q = "undefined", Y = 1 << 31, $ = {}.hasOwnProperty, Z = [], Q = Z.pop, K = Z.push, J = Z.push, tt = Z.slice,
            et = Z.indexOf || function (t) {
                for (var e = 0, i = this.length; i > e; e++) if (this[e] === t) return e;
                return -1
            },
            it = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
            nt = "[\\x20\\t\\r\\n\\f]", rt = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", ot = rt.replace("w", "w#"),
            at = "\\[" + nt + "*(" + rt + ")(?:" + nt + "*([*^$|!~]?=)" + nt + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + ot + "))|)" + nt + "*\\]",
            st = ":(" + rt + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + at + ")*)|.*)\\)|)",
            lt = new RegExp("^" + nt + "+|((?:^|[^\\\\])(?:\\\\.)*)" + nt + "+$", "g"), ht = new RegExp("^" + nt + "*," + nt + "*"),
            ut = new RegExp("^" + nt + "*([>+~]|" + nt + ")" + nt + "*"), ct = new RegExp("=" + nt + "*([^\\]'\"]*?)" + nt + "*\\]", "g"),
            pt = new RegExp(st), dt = new RegExp("^" + ot + "$"), ft = {
                ID: new RegExp("^#(" + rt + ")"),
                CLASS: new RegExp("^\\.(" + rt + ")"),
                TAG: new RegExp("^(" + rt.replace("w", "w*") + ")"),
                ATTR: new RegExp("^" + at),
                PSEUDO: new RegExp("^" + st),
                CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + nt + "*(even|odd|(([+-]|)(\\d*)n|)" + nt + "*(?:([+-]|)" + nt + "*(\\d+)|))" + nt + "*\\)|)", "i"),
                bool: new RegExp("^(?:" + it + ")$", "i"),
                needsContext: new RegExp("^" + nt + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + nt + "*((?:-\\d)?\\d*)" + nt + "*\\)|)(?=[^-]|$)", "i")
            }, mt = /^(?:input|select|textarea|button)$/i, gt = /^h\d$/i, Et = /^[^{]+\{\s*\[native \w/,
            vt = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, yt = /[+~]/, Tt = /'|\\/g,
            _t = new RegExp("\\\\([\\da-f]{1,6}" + nt + "?|(" + nt + ")|.)", "ig"), xt = function (t, e, i) {
                var n = "0x" + e - 65536;
                return n !== n || i ? e : 0 > n ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320)
            };
        try {
            J.apply(Z = tt.call(U.childNodes), U.childNodes), Z[U.childNodes.length].nodeType
        } catch (bt) {
            J = {
                apply: Z.length ? function (t, e) {
                    K.apply(t, tt.call(e))
                } : function (t, e) {
                    for (var i = t.length, n = 0; t[i++] = e[n++];) ;
                    t.length = i - 1
                }
            }
        }
        _ = e.support = {}, R = e.isXML = function (t) {
            var e = t && (t.ownerDocument || t).documentElement;
            return e ? "HTML" !== e.nodeName : !1
        }, P = e.setDocument = function (t) {
            var e, i = t ? t.ownerDocument || t : U, n = i.defaultView;
            return i !== L && 9 === i.nodeType && i.documentElement ? (L = i, O = i.documentElement, D = !R(i), n && n !== n.top && (n.addEventListener ? n.addEventListener("unload", function () {
                P()
            }, !1) : n.attachEvent && n.attachEvent("onunload", function () {
                P()
            })), _.attributes = r(function (t) {
                return t.className = "i", !t.getAttribute("className")
            }), _.getElementsByTagName = r(function (t) {
                return t.appendChild(i.createComment("")), !t.getElementsByTagName("*").length
            }), _.getElementsByClassName = Et.test(i.getElementsByClassName) && r(function (t) {
                return t.innerHTML = "<div class='a'></div><div class='a i'></div>", t.firstChild.className = "i", 2 === t.getElementsByClassName("i").length
            }), _.getById = r(function (t) {
                return O.appendChild(t).id = F, !i.getElementsByName || !i.getElementsByName(F).length
            }), _.getById ? (x.find.ID = function (t, e) {
                if (typeof e.getElementById !== q && D) {
                    var i = e.getElementById(t);
                    return i && i.parentNode ? [i] : []
                }
            }, x.filter.ID = function (t) {
                var e = t.replace(_t, xt);
                return function (t) {
                    return t.getAttribute("id") === e
                }
            }) : (delete x.find.ID, x.filter.ID = function (t) {
                var e = t.replace(_t, xt);
                return function (t) {
                    var i = typeof t.getAttributeNode !== q && t.getAttributeNode("id");
                    return i && i.value === e
                }
            }), x.find.TAG = _.getElementsByTagName ? function (t, e) {
                return typeof e.getElementsByTagName !== q ? e.getElementsByTagName(t) : void 0
            } : function (t, e) {
                var i, n = [], r = 0, o = e.getElementsByTagName(t);
                if ("*" === t) {
                    for (; i = o[r++];) 1 === i.nodeType && n.push(i);
                    return n
                }
                return o
            }, x.find.CLASS = _.getElementsByClassName && function (t, e) {
                return typeof e.getElementsByClassName !== q && D ? e.getElementsByClassName(t) : void 0
            }, N = [], I = [], (_.qsa = Et.test(i.querySelectorAll)) && (r(function (t) {
                t.innerHTML = "<select msallowclip=''><option selected=''></option></select>", t.querySelectorAll("[msallowclip^='']").length && I.push("[*^$]=" + nt + "*(?:''|\"\")"), t.querySelectorAll("[selected]").length || I.push("\\[" + nt + "*(?:value|" + it + ")"), t.querySelectorAll(":checked").length || I.push(":checked")
            }), r(function (t) {
                var e = i.createElement("input");
                e.setAttribute("type", "hidden"), t.appendChild(e).setAttribute("name", "D"), t.querySelectorAll("[name=d]").length && I.push("name" + nt + "*[*^$|!~]?="), t.querySelectorAll(":enabled").length || I.push(":enabled", ":disabled"), t.querySelectorAll("*,:x"), I.push(",.*:")
            })), (_.matchesSelector = Et.test(k = O.matches || O.webkitMatchesSelector || O.mozMatchesSelector || O.oMatchesSelector || O.msMatchesSelector)) && r(function (t) {
                _.disconnectedMatch = k.call(t, "div"), k.call(t, "[s!='']:x"), N.push("!=", st)
            }), I = I.length && new RegExp(I.join("|")), N = N.length && new RegExp(N.join("|")), e = Et.test(O.compareDocumentPosition), B = e || Et.test(O.contains) ? function (t, e) {
                var i = 9 === t.nodeType ? t.documentElement : t, n = e && e.parentNode;
                return t === n || !(!n || 1 !== n.nodeType || !(i.contains ? i.contains(n) : t.compareDocumentPosition && 16 & t.compareDocumentPosition(n)))
            } : function (t, e) {
                if (e) for (; e = e.parentNode;) if (e === t) return !0;
                return !1
            }, X = e ? function (t, e) {
                if (t === e) return A = !0, 0;
                var n = !t.compareDocumentPosition - !e.compareDocumentPosition;
                return n ? n : (n = (t.ownerDocument || t) === (e.ownerDocument || e) ? t.compareDocumentPosition(e) : 1, 1 & n || !_.sortDetached && e.compareDocumentPosition(t) === n ? t === i || t.ownerDocument === U && B(U, t) ? -1 : e === i || e.ownerDocument === U && B(U, e) ? 1 : C ? et.call(C, t) - et.call(C, e) : 0 : 4 & n ? -1 : 1)
            } : function (t, e) {
                if (t === e) return A = !0, 0;
                var n, r = 0, o = t.parentNode, s = e.parentNode, l = [t], h = [e];
                if (!o || !s) return t === i ? -1 : e === i ? 1 : o ? -1 : s ? 1 : C ? et.call(C, t) - et.call(C, e) : 0;
                if (o === s) return a(t, e);
                for (n = t; n = n.parentNode;) l.unshift(n);
                for (n = e; n = n.parentNode;) h.unshift(n);
                for (; l[r] === h[r];) r++;
                return r ? a(l[r], h[r]) : l[r] === U ? -1 : h[r] === U ? 1 : 0
            }, i) : L
        }, e.matches = function (t, i) {
            return e(t, null, null, i)
        }, e.matchesSelector = function (t, i) {
            if ((t.ownerDocument || t) !== L && P(t), i = i.replace(ct, "='$1']"), !(!_.matchesSelector || !D || N && N.test(i) || I && I.test(i))) try {
                var n = k.call(t, i);
                if (n || _.disconnectedMatch || t.document && 11 !== t.document.nodeType) return n
            } catch (r) {
            }
            return e(i, L, null, [t]).length > 0
        }, e.contains = function (t, e) {
            return (t.ownerDocument || t) !== L && P(t), B(t, e)
        }, e.attr = function (t, e) {
            (t.ownerDocument || t) !== L && P(t);
            var i = x.attrHandle[e.toLowerCase()], n = i && $.call(x.attrHandle, e.toLowerCase()) ? i(t, e, !D) : void 0;
            return void 0 !== n ? n : _.attributes || !D ? t.getAttribute(e) : (n = t.getAttributeNode(e)) && n.specified ? n.value : null
        }, e.error = function (t) {
            throw new Error("Syntax error, unrecognized expression: " + t)
        }, e.uniqueSort = function (t) {
            var e, i = [], n = 0, r = 0;
            if (A = !_.detectDuplicates, C = !_.sortStable && t.slice(0), t.sort(X), A) {
                for (; e = t[r++];) e === t[r] && (n = i.push(r));
                for (; n--;) t.splice(i[n], 1)
            }
            return C = null, t
        }, b = e.getText = function (t) {
            var e, i = "", n = 0, r = t.nodeType;
            if (r) {
                if (1 === r || 9 === r || 11 === r) {
                    if ("string" == typeof t.textContent) return t.textContent;
                    for (t = t.firstChild; t; t = t.nextSibling) i += b(t)
                } else if (3 === r || 4 === r) return t.nodeValue
            } else for (; e = t[n++];) i += b(e);
            return i
        }, x = e.selectors = {
            cacheLength: 50,
            createPseudo: n,
            match: ft,
            attrHandle: {},
            find: {},
            relative: {
                ">": {dir: "parentNode", first: !0},
                " ": {dir: "parentNode"},
                "+": {dir: "previousSibling", first: !0},
                "~": {dir: "previousSibling"}
            },
            preFilter: {
                ATTR: function (t) {
                    return t[1] = t[1].replace(_t, xt), t[3] = (t[3] || t[4] || t[5] || "").replace(_t, xt), "~=" === t[2] && (t[3] = " " + t[3] + " "), t.slice(0, 4)
                }, CHILD: function (t) {
                    return t[1] = t[1].toLowerCase(), "nth" === t[1].slice(0, 3) ? (t[3] || e.error(t[0]), t[4] = +(t[4] ? t[5] + (t[6] || 1) : 2 * ("even" === t[3] || "odd" === t[3])), t[5] = +(t[7] + t[8] || "odd" === t[3])) : t[3] && e.error(t[0]), t
                }, PSEUDO: function (t) {
                    var e, i = !t[6] && t[2];
                    return ft.CHILD.test(t[0]) ? null : (t[3] ? t[2] = t[4] || t[5] || "" : i && pt.test(i) && (e = w(i, !0)) && (e = i.indexOf(")", i.length - e) - i.length) && (t[0] = t[0].slice(0, e), t[2] = i.slice(0, e)), t.slice(0, 3))
                }
            },
            filter: {
                TAG: function (t) {
                    var e = t.replace(_t, xt).toLowerCase();
                    return "*" === t ? function () {
                        return !0
                    } : function (t) {
                        return t.nodeName && t.nodeName.toLowerCase() === e
                    }
                }, CLASS: function (t) {
                    var e = G[t + " "];
                    return e || (e = new RegExp("(^|" + nt + ")" + t + "(" + nt + "|$)")) && G(t, function (t) {
                        return e.test("string" == typeof t.className && t.className || typeof t.getAttribute !== q && t.getAttribute("class") || "")
                    })
                }, ATTR: function (t, i, n) {
                    return function (r) {
                        var o = e.attr(r, t);
                        return null == o ? "!=" === i : i ? (o += "", "=" === i ? o === n : "!=" === i ? o !== n : "^=" === i ? n && 0 === o.indexOf(n) : "*=" === i ? n && o.indexOf(n) > -1 : "$=" === i ? n && o.slice(-n.length) === n : "~=" === i ? (" " + o + " ").indexOf(n) > -1 : "|=" === i ? o === n || o.slice(0, n.length + 1) === n + "-" : !1) : !0
                    }
                }, CHILD: function (t, e, i, n, r) {
                    var o = "nth" !== t.slice(0, 3), a = "last" !== t.slice(-4), s = "of-type" === e;
                    return 1 === n && 0 === r ? function (t) {
                        return !!t.parentNode
                    } : function (e, i, l) {
                        var h, u, c, p, d, f, m = o !== a ? "nextSibling" : "previousSibling", g = e.parentNode,
                            E = s && e.nodeName.toLowerCase(), v = !l && !s;
                        if (g) {
                            if (o) {
                                for (; m;) {
                                    for (c = e; c = c[m];) if (s ? c.nodeName.toLowerCase() === E : 1 === c.nodeType) return !1;
                                    f = m = "only" === t && !f && "nextSibling"
                                }
                                return !0
                            }
                            if (f = [a ? g.firstChild : g.lastChild], a && v) {
                                for (u = g[F] || (g[F] = {}), h = u[t] || [], d = h[0] === V && h[1], p = h[0] === V && h[2], c = d && g.childNodes[d]; c = ++d && c && c[m] || (p = d = 0) || f.pop();) if (1 === c.nodeType && ++p && c === e) {
                                    u[t] = [V, d, p];
                                    break
                                }
                            } else if (v && (h = (e[F] || (e[F] = {}))[t]) && h[0] === V) p = h[1]; else for (; (c = ++d && c && c[m] || (p = d = 0) || f.pop()) && ((s ? c.nodeName.toLowerCase() !== E : 1 !== c.nodeType) || !++p || (v && ((c[F] || (c[F] = {}))[t] = [V, p]), c !== e));) ;
                            return p -= r, p === n || p % n === 0 && p / n >= 0
                        }
                    }
                }, PSEUDO: function (t, i) {
                    var r, o = x.pseudos[t] || x.setFilters[t.toLowerCase()] || e.error("unsupported pseudo: " + t);
                    return o[F] ? o(i) : o.length > 1 ? (r = [t, t, "", i], x.setFilters.hasOwnProperty(t.toLowerCase()) ? n(function (t, e) {
                        for (var n, r = o(t, i), a = r.length; a--;) n = et.call(t, r[a]), t[n] = !(e[n] = r[a])
                    }) : function (t) {
                        return o(t, 0, r)
                    }) : o
                }
            },
            pseudos: {
                not: n(function (t) {
                    var e = [], i = [], r = H(t.replace(lt, "$1"));
                    return r[F] ? n(function (t, e, i, n) {
                        for (var o, a = r(t, null, n, []), s = t.length; s--;) (o = a[s]) && (t[s] = !(e[s] = o))
                    }) : function (t, n, o) {
                        return e[0] = t, r(e, null, o, i), !i.pop()
                    }
                }), has: n(function (t) {
                    return function (i) {
                        return e(t, i).length > 0
                    }
                }), contains: n(function (t) {
                    return function (e) {
                        return (e.textContent || e.innerText || b(e)).indexOf(t) > -1
                    }
                }), lang: n(function (t) {
                    return dt.test(t || "") || e.error("unsupported lang: " + t), t = t.replace(_t, xt).toLowerCase(), function (e) {
                        var i;
                        do if (i = D ? e.lang : e.getAttribute("xml:lang") || e.getAttribute("lang")) return i = i.toLowerCase(), i === t || 0 === i.indexOf(t + "-"); while ((e = e.parentNode) && 1 === e.nodeType);
                        return !1
                    }
                }), target: function (e) {
                    var i = t.location && t.location.hash;
                    return i && i.slice(1) === e.id
                }, root: function (t) {
                    return t === O
                }, focus: function (t) {
                    return t === L.activeElement && (!L.hasFocus || L.hasFocus()) && !!(t.type || t.href || ~t.tabIndex)
                }, enabled: function (t) {
                    return t.disabled === !1
                }, disabled: function (t) {
                    return t.disabled === !0
                }, checked: function (t) {
                    var e = t.nodeName.toLowerCase();
                    return "input" === e && !!t.checked || "option" === e && !!t.selected
                }, selected: function (t) {
                    return t.parentNode && t.parentNode.selectedIndex, t.selected === !0
                }, empty: function (t) {
                    for (t = t.firstChild; t; t = t.nextSibling) if (t.nodeType < 6) return !1;
                    return !0
                }, parent: function (t) {
                    return !x.pseudos.empty(t)
                }, header: function (t) {
                    return gt.test(t.nodeName)
                }, input: function (t) {
                    return mt.test(t.nodeName)
                }, button: function (t) {
                    var e = t.nodeName.toLowerCase();
                    return "input" === e && "button" === t.type || "button" === e
                }, text: function (t) {
                    var e;
                    return "input" === t.nodeName.toLowerCase() && "text" === t.type && (null == (e = t.getAttribute("type")) || "text" === e.toLowerCase())
                }, first: h(function () {
                    return [0]
                }), last: h(function (t, e) {
                    return [e - 1]
                }), eq: h(function (t, e, i) {
                    return [0 > i ? i + e : i]
                }), even: h(function (t, e) {
                    for (var i = 0; e > i; i += 2) t.push(i);
                    return t
                }), odd: h(function (t, e) {
                    for (var i = 1; e > i; i += 2) t.push(i);
                    return t
                }), lt: h(function (t, e, i) {
                    for (var n = 0 > i ? i + e : i; --n >= 0;) t.push(n);
                    return t
                }), gt: h(function (t, e, i) {
                    for (var n = 0 > i ? i + e : i; ++n < e;) t.push(n);
                    return t
                })
            }
        }, x.pseudos.nth = x.pseudos.eq;
        for (T in{radio: !0, checkbox: !0, file: !0, password: !0, image: !0}) x.pseudos[T] = s(T);
        for (T in{submit: !0, reset: !0}) x.pseudos[T] = l(T);
        return c.prototype = x.filters = x.pseudos, x.setFilters = new c, w = e.tokenize = function (t, i) {
            var n, r, o, a, s, l, h, u = j[t + " "];
            if (u) return i ? 0 : u.slice(0);
            for (s = t, l = [], h = x.preFilter; s;) {
                (!n || (r = ht.exec(s))) && (r && (s = s.slice(r[0].length) || s), l.push(o = [])), n = !1, (r = ut.exec(s)) && (n = r.shift(), o.push({
                    value: n,
                    type: r[0].replace(lt, " ")
                }), s = s.slice(n.length));
                for (a in x.filter) !(r = ft[a].exec(s)) || h[a] && !(r = h[a](r)) || (n = r.shift(), o.push({
                    value: n,
                    type: a,
                    matches: r
                }), s = s.slice(n.length));
                if (!n) break
            }
            return i ? s.length : s ? e.error(t) : j(t, l).slice(0)
        }, H = e.compile = function (t, e) {
            var i, n = [], r = [], o = W[t + " "];
            if (!o) {
                for (e || (e = w(t)), i = e.length; i--;) o = v(e[i]), o[F] ? n.push(o) : r.push(o);
                o = W(t, y(r, n)), o.selector = t
            }
            return o
        }, M = e.select = function (t, e, i, n) {
            var r, o, a, s, l, h = "function" == typeof t && t, c = !n && w(t = h.selector || t);
            if (i = i || [], 1 === c.length) {
                if (o = c[0] = c[0].slice(0), o.length > 2 && "ID" === (a = o[0]).type && _.getById && 9 === e.nodeType && D && x.relative[o[1].type]) {
                    if (e = (x.find.ID(a.matches[0].replace(_t, xt), e) || [])[0], !e) return i;
                    h && (e = e.parentNode), t = t.slice(o.shift().value.length)
                }
                for (r = ft.needsContext.test(t) ? 0 : o.length; r-- && (a = o[r], !x.relative[s = a.type]);) if ((l = x.find[s]) && (n = l(a.matches[0].replace(_t, xt), yt.test(o[0].type) && u(e.parentNode) || e))) {
                    if (o.splice(r, 1), t = n.length && p(o), !t) return J.apply(i, n), i;
                    break
                }
            }
            return (h || H(t, c))(n, e, !D, i, yt.test(t) && u(e.parentNode) || e), i
        }, _.sortStable = F.split("").sort(X).join("") === F, _.detectDuplicates = !!A, P(), _.sortDetached = r(function (t) {
            return 1 & t.compareDocumentPosition(L.createElement("div"))
        }), r(function (t) {
            return t.innerHTML = "<a href='#'></a>", "#" === t.firstChild.getAttribute("href")
        }) || o("type|href|height|width", function (t, e, i) {
            return i ? void 0 : t.getAttribute(e, "type" === e.toLowerCase() ? 1 : 2)
        }), _.attributes && r(function (t) {
            return t.innerHTML = "<input/>", t.firstChild.setAttribute("value", ""), "" === t.firstChild.getAttribute("value")
        }) || o("value", function (t, e, i) {
            return i || "input" !== t.nodeName.toLowerCase() ? void 0 : t.defaultValue
        }), r(function (t) {
            return null == t.getAttribute("disabled")
        }) || o(it, function (t, e, i) {
            var n;
            return i ? void 0 : t[e] === !0 ? e.toLowerCase() : (n = t.getAttributeNode(e)) && n.specified ? n.value : null
        }), e
    }(t);
    J.find = rt, J.expr = rt.selectors, J.expr[":"] = J.expr.pseudos, J.unique = rt.uniqueSort, J.text = rt.getText, J.isXMLDoc = rt.isXML, J.contains = rt.contains;
    var ot = J.expr.match.needsContext, at = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, st = /^.[^:#\[\.,]*$/;
    J.filter = function (t, e, i) {
        var n = e[0];
        return i && (t = ":not(" + t + ")"), 1 === e.length && 1 === n.nodeType ? J.find.matchesSelector(n, t) ? [n] : [] : J.find.matches(t, J.grep(e, function (t) {
            return 1 === t.nodeType
        }))
    }, J.fn.extend({
        find: function (t) {
            var e, i = this.length, n = [], r = this;
            if ("string" != typeof t) return this.pushStack(J(t).filter(function () {
                for (e = 0; i > e; e++) if (J.contains(r[e], this)) return !0
            }));
            for (e = 0; i > e; e++) J.find(t, r[e], n);
            return n = this.pushStack(i > 1 ? J.unique(n) : n), n.selector = this.selector ? this.selector + " " + t : t, n
        }, filter: function (t) {
            return this.pushStack(n(this, t || [], !1))
        }, not: function (t) {
            return this.pushStack(n(this, t || [], !0))
        }, is: function (t) {
            return !!n(this, "string" == typeof t && ot.test(t) ? J(t) : t || [], !1).length
        }
    });
    var lt, ht = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/, ut = J.fn.init = function (t, e) {
        var i, n;
        if (!t) return this;
        if ("string" == typeof t) {
            if (i = "<" === t[0] && ">" === t[t.length - 1] && t.length >= 3 ? [null, t, null] : ht.exec(t), !i || !i[1] && e) return !e || e.jquery ? (e || lt).find(t) : this.constructor(e).find(t);
            if (i[1]) {
                if (e = e instanceof J ? e[0] : e, J.merge(this, J.parseHTML(i[1], e && e.nodeType ? e.ownerDocument || e : Q, !0)), at.test(i[1]) && J.isPlainObject(e)) for (i in e) J.isFunction(this[i]) ? this[i](e[i]) : this.attr(i, e[i]);
                return this
            }
            return n = Q.getElementById(i[2]), n && n.parentNode && (this.length = 1, this[0] = n), this.context = Q, this.selector = t, this
        }
        return t.nodeType ? (this.context = this[0] = t, this.length = 1, this) : J.isFunction(t) ? "undefined" != typeof lt.ready ? lt.ready(t) : t(J) : (void 0 !== t.selector && (this.selector = t.selector, this.context = t.context), J.makeArray(t, this))
    };
    ut.prototype = J.fn, lt = J(Q);
    var ct = /^(?:parents|prev(?:Until|All))/, pt = {children: !0, contents: !0, next: !0, prev: !0};
    J.extend({
        dir: function (t, e, i) {
            for (var n = [], r = void 0 !== i; (t = t[e]) && 9 !== t.nodeType;) if (1 === t.nodeType) {
                if (r && J(t).is(i)) break;
                n.push(t)
            }
            return n
        }, sibling: function (t, e) {
            for (var i = []; t; t = t.nextSibling) 1 === t.nodeType && t !== e && i.push(t);
            return i
        }
    }), J.fn.extend({
        has: function (t) {
            var e = J(t, this), i = e.length;
            return this.filter(function () {
                for (var t = 0; i > t; t++) if (J.contains(this, e[t])) return !0
            })
        }, closest: function (t, e) {
            for (var i, n = 0, r = this.length, o = [], a = ot.test(t) || "string" != typeof t ? J(t, e || this.context) : 0; r > n; n++) for (i = this[n]; i && i !== e; i = i.parentNode) if (i.nodeType < 11 && (a ? a.index(i) > -1 : 1 === i.nodeType && J.find.matchesSelector(i, t))) {
                o.push(i);
                break
            }
            return this.pushStack(o.length > 1 ? J.unique(o) : o)
        }, index: function (t) {
            return t ? "string" == typeof t ? X.call(J(t), this[0]) : X.call(this, t.jquery ? t[0] : t) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1
        }, add: function (t, e) {
            return this.pushStack(J.unique(J.merge(this.get(), J(t, e))))
        }, addBack: function (t) {
            return this.add(null == t ? this.prevObject : this.prevObject.filter(t))
        }
    }), J.each({
        parent: function (t) {
            var e = t.parentNode;
            return e && 11 !== e.nodeType ? e : null
        }, parents: function (t) {
            return J.dir(t, "parentNode")
        }, parentsUntil: function (t, e, i) {
            return J.dir(t, "parentNode", i)
        }, next: function (t) {
            return r(t, "nextSibling")
        }, prev: function (t) {
            return r(t, "previousSibling")
        }, nextAll: function (t) {
            return J.dir(t, "nextSibling")
        }, prevAll: function (t) {
            return J.dir(t, "previousSibling")
        }, nextUntil: function (t, e, i) {
            return J.dir(t, "nextSibling", i)
        }, prevUntil: function (t, e, i) {
            return J.dir(t, "previousSibling", i)
        }, siblings: function (t) {
            return J.sibling((t.parentNode || {}).firstChild, t)
        }, children: function (t) {
            return J.sibling(t.firstChild)
        }, contents: function (t) {
            return t.contentDocument || J.merge([], t.childNodes)
        }
    }, function (t, e) {
        J.fn[t] = function (i, n) {
            var r = J.map(this, e, i);
            return "Until" !== t.slice(-5) && (n = i), n && "string" == typeof n && (r = J.filter(n, r)), this.length > 1 && (pt[t] || J.unique(r), ct.test(t) && r.reverse()), this.pushStack(r)
        }
    });
    var dt = /\S+/g, ft = {};
    J.Callbacks = function (t) {
        t = "string" == typeof t ? ft[t] || o(t) : J.extend({}, t);
        var e, i, n, r, a, s, l = [], h = !t.once && [], u = function (o) {
            for (e = t.memory && o, i = !0, s = r || 0, r = 0, a = l.length, n = !0; l && a > s; s++) if (l[s].apply(o[0], o[1]) === !1 && t.stopOnFalse) {
                e = !1;
                break
            }
            n = !1, l && (h ? h.length && u(h.shift()) : e ? l = [] : c.disable())
        }, c = {
            add: function () {
                if (l) {
                    var i = l.length;
                    !function o(e) {
                        J.each(e, function (e, i) {
                            var n = J.type(i);
                            "function" === n ? t.unique && c.has(i) || l.push(i) : i && i.length && "string" !== n && o(i)
                        })
                    }(arguments), n ? a = l.length : e && (r = i, u(e))
                }
                return this
            }, remove: function () {
                return l && J.each(arguments, function (t, e) {
                    for (var i; (i = J.inArray(e, l, i)) > -1;) l.splice(i, 1), n && (a >= i && a--, s >= i && s--)
                }), this
            }, has: function (t) {
                return t ? J.inArray(t, l) > -1 : !(!l || !l.length)
            }, empty: function () {
                return l = [], a = 0, this
            }, disable: function () {
                return l = h = e = void 0, this
            }, disabled: function () {
                return !l
            }, lock: function () {
                return h = void 0, e || c.disable(), this
            }, locked: function () {
                return !h
            }, fireWith: function (t, e) {
                return !l || i && !h || (e = e || [], e = [t, e.slice ? e.slice() : e], n ? h.push(e) : u(e)), this
            }, fire: function () {
                return c.fireWith(this, arguments), this
            }, fired: function () {
                return !!i
            }
        };
        return c
    }, J.extend({
        Deferred: function (t) {
            var e = [["resolve", "done", J.Callbacks("once memory"), "resolved"], ["reject", "fail", J.Callbacks("once memory"), "rejected"], ["notify", "progress", J.Callbacks("memory")]],
                i = "pending", n = {
                    state: function () {
                        return i
                    }, always: function () {
                        return r.done(arguments).fail(arguments), this
                    }, then: function () {
                        var t = arguments;
                        return J.Deferred(function (i) {
                            J.each(e, function (e, o) {
                                var a = J.isFunction(t[e]) && t[e];
                                r[o[1]](function () {
                                    var t = a && a.apply(this, arguments);
                                    t && J.isFunction(t.promise) ? t.promise().done(i.resolve).fail(i.reject).progress(i.notify) : i[o[0] + "With"](this === n ? i.promise() : this, a ? [t] : arguments)
                                })
                            }), t = null
                        }).promise()
                    }, promise: function (t) {
                        return null != t ? J.extend(t, n) : n
                    }
                }, r = {};
            return n.pipe = n.then, J.each(e, function (t, o) {
                var a = o[2], s = o[3];
                n[o[1]] = a.add, s && a.add(function () {
                    i = s
                }, e[1 ^ t][2].disable, e[2][2].lock), r[o[0]] = function () {
                    return r[o[0] + "With"](this === r ? n : this, arguments), this
                }, r[o[0] + "With"] = a.fireWith
            }), n.promise(r), t && t.call(r, r), r
        }, when: function (t) {
            var e, i, n, r = 0, o = G.call(arguments), a = o.length, s = 1 !== a || t && J.isFunction(t.promise) ? a : 0,
                l = 1 === s ? t : J.Deferred(), h = function (t, i, n) {
                    return function (r) {
                        i[t] = this, n[t] = arguments.length > 1 ? G.call(arguments) : r, n === e ? l.notifyWith(i, n) : --s || l.resolveWith(i, n)
                    }
                };
            if (a > 1) for (e = new Array(a), i = new Array(a), n = new Array(a); a > r; r++) o[r] && J.isFunction(o[r].promise) ? o[r].promise().done(h(r, n, o)).fail(l.reject).progress(h(r, i, e)) : --s;
            return s || l.resolveWith(n, o), l.promise()
        }
    });
    var mt;
    J.fn.ready = function (t) {
        return J.ready.promise().done(t), this
    }, J.extend({
        isReady: !1, readyWait: 1, holdReady: function (t) {
            t ? J.readyWait++ : J.ready(!0)
        }, ready: function (t) {
            (t === !0 ? --J.readyWait : J.isReady) || (J.isReady = !0, t !== !0 && --J.readyWait > 0 || (mt.resolveWith(Q, [J]), J.fn.triggerHandler && (J(Q).triggerHandler("ready"), J(Q).off("ready"))))
        }
    }), J.ready.promise = function (e) {
        return mt || (mt = J.Deferred(), "complete" === Q.readyState ? setTimeout(J.ready) : (Q.addEventListener("DOMContentLoaded", a, !1), t.addEventListener("load", a, !1))), mt.promise(e)
    }, J.ready.promise();
    var gt = J.access = function (t, e, i, n, r, o, a) {
        var s = 0, l = t.length, h = null == i;
        if ("object" === J.type(i)) {
            r = !0;
            for (s in i) J.access(t, e, s, i[s], !0, o, a)
        } else if (void 0 !== n && (r = !0, J.isFunction(n) || (a = !0), h && (a ? (e.call(t, n), e = null) : (h = e, e = function (t, e, i) {
                return h.call(J(t), i)
            })), e)) for (; l > s; s++) e(t[s], i, a ? n : n.call(t[s], s, e(t[s], i)));
        return r ? t : h ? e.call(t) : l ? e(t[0], i) : o
    };
    J.acceptData = function (t) {
        return 1 === t.nodeType || 9 === t.nodeType || !+t.nodeType
    }, s.uid = 1, s.accepts = J.acceptData, s.prototype = {
        key: function (t) {
            if (!s.accepts(t)) return 0;
            var e = {}, i = t[this.expando];
            if (!i) {
                i = s.uid++;
                try {
                    e[this.expando] = {value: i}, Object.defineProperties(t, e)
                } catch (n) {
                    e[this.expando] = i, J.extend(t, e)
                }
            }
            return this.cache[i] || (this.cache[i] = {}), i
        }, set: function (t, e, i) {
            var n, r = this.key(t), o = this.cache[r];
            if ("string" == typeof e) o[e] = i; else if (J.isEmptyObject(o)) J.extend(this.cache[r], e); else for (n in e) o[n] = e[n];
            return o
        }, get: function (t, e) {
            var i = this.cache[this.key(t)];
            return void 0 === e ? i : i[e]
        }, access: function (t, e, i) {
            var n;
            return void 0 === e || e && "string" == typeof e && void 0 === i ? (n = this.get(t, e), void 0 !== n ? n : this.get(t, J.camelCase(e))) : (this.set(t, e, i), void 0 !== i ? i : e)
        }, remove: function (t, e) {
            var i, n, r, o = this.key(t), a = this.cache[o];
            if (void 0 === e) this.cache[o] = {}; else {
                J.isArray(e) ? n = e.concat(e.map(J.camelCase)) : (r = J.camelCase(e), e in a ? n = [e, r] : (n = r, n = n in a ? [n] : n.match(dt) || [])), i = n.length;
                for (; i--;) delete a[n[i]]
            }
        }, hasData: function (t) {
            return !J.isEmptyObject(this.cache[t[this.expando]] || {})
        }, discard: function (t) {
            t[this.expando] && delete this.cache[t[this.expando]]
        }
    };
    var Et = new s, vt = new s, yt = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, Tt = /([A-Z])/g;
    J.extend({
        hasData: function (t) {
            return vt.hasData(t) || Et.hasData(t)
        }, data: function (t, e, i) {
            return vt.access(t, e, i)
        }, removeData: function (t, e) {
            vt.remove(t, e)
        }, _data: function (t, e, i) {
            return Et.access(t, e, i)
        }, _removeData: function (t, e) {
            Et.remove(t, e)
        }
    }), J.fn.extend({
        data: function (t, e) {
            var i, n, r, o = this[0], a = o && o.attributes;
            if (void 0 === t) {
                if (this.length && (r = vt.get(o), 1 === o.nodeType && !Et.get(o, "hasDataAttrs"))) {
                    for (i = a.length; i--;) a[i] && (n = a[i].name, 0 === n.indexOf("data-") && (n = J.camelCase(n.slice(5)), l(o, n, r[n])));
                    Et.set(o, "hasDataAttrs", !0)
                }
                return r
            }
            return "object" == typeof t ? this.each(function () {
                vt.set(this, t)
            }) : gt(this, function (e) {
                var i, n = J.camelCase(t);
                if (o && void 0 === e) {
                    if (i = vt.get(o, t), void 0 !== i) return i;
                    if (i = vt.get(o, n), void 0 !== i) return i;
                    if (i = l(o, n, void 0), void 0 !== i) return i
                } else this.each(function () {
                    var i = vt.get(this, n);
                    vt.set(this, n, e), -1 !== t.indexOf("-") && void 0 !== i && vt.set(this, t, e)
                })
            }, null, e, arguments.length > 1, null, !0)
        }, removeData: function (t) {
            return this.each(function () {
                vt.remove(this, t)
            })
        }
    }), J.extend({
        queue: function (t, e, i) {
            var n;
            return t ? (e = (e || "fx") + "queue", n = Et.get(t, e), i && (!n || J.isArray(i) ? n = Et.access(t, e, J.makeArray(i)) : n.push(i)), n || []) : void 0
        }, dequeue: function (t, e) {
            e = e || "fx";
            var i = J.queue(t, e), n = i.length, r = i.shift(), o = J._queueHooks(t, e), a = function () {
                J.dequeue(t, e)
            };
            "inprogress" === r && (r = i.shift(), n--), r && ("fx" === e && i.unshift("inprogress"), delete o.stop, r.call(t, a, o)), !n && o && o.empty.fire()
        }, _queueHooks: function (t, e) {
            var i = e + "queueHooks";
            return Et.get(t, i) || Et.access(t, i, {
                empty: J.Callbacks("once memory").add(function () {
                    Et.remove(t, [e + "queue", i])
                })
            })
        }
    }), J.fn.extend({
        queue: function (t, e) {
            var i = 2;
            return "string" != typeof t && (e = t, t = "fx", i--), arguments.length < i ? J.queue(this[0], t) : void 0 === e ? this : this.each(function () {
                var i = J.queue(this, t, e);
                J._queueHooks(this, t), "fx" === t && "inprogress" !== i[0] && J.dequeue(this, t)
            })
        }, dequeue: function (t) {
            return this.each(function () {
                J.dequeue(this, t)
            })
        }, clearQueue: function (t) {
            return this.queue(t || "fx", [])
        }, promise: function (t, e) {
            var i, n = 1, r = J.Deferred(), o = this, a = this.length, s = function () {
                --n || r.resolveWith(o, [o])
            };
            for ("string" != typeof t && (e = t, t = void 0), t = t || "fx"; a--;) i = Et.get(o[a], t + "queueHooks"), i && i.empty && (n++, i.empty.add(s));
            return s(), r.promise(e)
        }
    });
    var _t = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, xt = ["Top", "Right", "Bottom", "Left"], bt = function (t, e) {
        return t = e || t, "none" === J.css(t, "display") || !J.contains(t.ownerDocument, t)
    }, Rt = /^(?:checkbox|radio)$/i;
    !function () {
        var t = Q.createDocumentFragment(), e = t.appendChild(Q.createElement("div")), i = Q.createElement("input");
        i.setAttribute("type", "radio"), i.setAttribute("checked", "checked"), i.setAttribute("name", "t"), e.appendChild(i), Z.checkClone = e.cloneNode(!0).cloneNode(!0).lastChild.checked, e.innerHTML = "<textarea>x</textarea>", Z.noCloneChecked = !!e.cloneNode(!0).lastChild.defaultValue
    }();
    var wt = "undefined";
    Z.focusinBubbles = "onfocusin" in t;
    var Ht = /^key/, Mt = /^(?:mouse|pointer|contextmenu)|click/, St = /^(?:focusinfocus|focusoutblur)$/, Ct = /^([^.]*)(?:\.(.+)|)$/;
    J.event = {
        global: {},
        add: function (t, e, i, n, r) {
            var o, a, s, l, h, u, c, p, d, f, m, g = Et.get(t);
            if (g) for (i.handler && (o = i, i = o.handler, r = o.selector), i.guid || (i.guid = J.guid++), (l = g.events) || (l = g.events = {}), (a = g.handle) || (a = g.handle = function (e) {
                return typeof J !== wt && J.event.triggered !== e.type ? J.event.dispatch.apply(t, arguments) : void 0
            }), e = (e || "").match(dt) || [""], h = e.length; h--;) s = Ct.exec(e[h]) || [], d = m = s[1], f = (s[2] || "").split(".").sort(), d && (c = J.event.special[d] || {}, d = (r ? c.delegateType : c.bindType) || d, c = J.event.special[d] || {}, u = J.extend({
                type: d,
                origType: m,
                data: n,
                handler: i,
                guid: i.guid,
                selector: r,
                needsContext: r && J.expr.match.needsContext.test(r),
                namespace: f.join(".")
            }, o), (p = l[d]) || (p = l[d] = [], p.delegateCount = 0, c.setup && c.setup.call(t, n, f, a) !== !1 || t.addEventListener && t.addEventListener(d, a, !1)), c.add && (c.add.call(t, u), u.handler.guid || (u.handler.guid = i.guid)), r ? p.splice(p.delegateCount++, 0, u) : p.push(u), J.event.global[d] = !0)
        },
        remove: function (t, e, i, n, r) {
            var o, a, s, l, h, u, c, p, d, f, m, g = Et.hasData(t) && Et.get(t);
            if (g && (l = g.events)) {
                for (e = (e || "").match(dt) || [""], h = e.length; h--;) if (s = Ct.exec(e[h]) || [], d = m = s[1], f = (s[2] || "").split(".").sort(), d) {
                    for (c = J.event.special[d] || {}, d = (n ? c.delegateType : c.bindType) || d, p = l[d] || [], s = s[2] && new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)"), a = o = p.length; o--;) u = p[o], !r && m !== u.origType || i && i.guid !== u.guid || s && !s.test(u.namespace) || n && n !== u.selector && ("**" !== n || !u.selector) || (p.splice(o, 1), u.selector && p.delegateCount--, c.remove && c.remove.call(t, u));
                    a && !p.length && (c.teardown && c.teardown.call(t, f, g.handle) !== !1 || J.removeEvent(t, d, g.handle), delete l[d])
                } else for (d in l) J.event.remove(t, d + e[h], i, n, !0);
                J.isEmptyObject(l) && (delete g.handle, Et.remove(t, "events"))
            }
        },
        trigger: function (e, i, n, r) {
            var o, a, s, l, h, u, c, p = [n || Q], d = $.call(e, "type") ? e.type : e,
                f = $.call(e, "namespace") ? e.namespace.split(".") : [];
            if (a = s = n = n || Q, 3 !== n.nodeType && 8 !== n.nodeType && !St.test(d + J.event.triggered) && (d.indexOf(".") >= 0 && (f = d.split("."), d = f.shift(), f.sort()), h = d.indexOf(":") < 0 && "on" + d, e = e[J.expando] ? e : new J.Event(d, "object" == typeof e && e), e.isTrigger = r ? 2 : 3, e.namespace = f.join("."), e.namespace_re = e.namespace ? new RegExp("(^|\\.)" + f.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, e.result = void 0, e.target || (e.target = n), i = null == i ? [e] : J.makeArray(i, [e]), c = J.event.special[d] || {}, r || !c.trigger || c.trigger.apply(n, i) !== !1)) {
                if (!r && !c.noBubble && !J.isWindow(n)) {
                    for (l = c.delegateType || d, St.test(l + d) || (a = a.parentNode); a; a = a.parentNode) p.push(a), s = a;
                    s === (n.ownerDocument || Q) && p.push(s.defaultView || s.parentWindow || t)
                }
                for (o = 0; (a = p[o++]) && !e.isPropagationStopped();) e.type = o > 1 ? l : c.bindType || d, u = (Et.get(a, "events") || {})[e.type] && Et.get(a, "handle"), u && u.apply(a, i), u = h && a[h], u && u.apply && J.acceptData(a) && (e.result = u.apply(a, i), e.result === !1 && e.preventDefault());
                return e.type = d, r || e.isDefaultPrevented() || c._default && c._default.apply(p.pop(), i) !== !1 || !J.acceptData(n) || h && J.isFunction(n[d]) && !J.isWindow(n) && (s = n[h], s && (n[h] = null), J.event.triggered = d, n[d](), J.event.triggered = void 0, s && (n[h] = s)), e.result
            }
        },
        dispatch: function (t) {
            t = J.event.fix(t);
            var e, i, n, r, o, a = [], s = G.call(arguments), l = (Et.get(this, "events") || {})[t.type] || [],
                h = J.event.special[t.type] || {};
            if (s[0] = t, t.delegateTarget = this, !h.preDispatch || h.preDispatch.call(this, t) !== !1) {
                for (a = J.event.handlers.call(this, t, l), e = 0; (r = a[e++]) && !t.isPropagationStopped();) for (t.currentTarget = r.elem, i = 0; (o = r.handlers[i++]) && !t.isImmediatePropagationStopped();) (!t.namespace_re || t.namespace_re.test(o.namespace)) && (t.handleObj = o, t.data = o.data, n = ((J.event.special[o.origType] || {}).handle || o.handler).apply(r.elem, s), void 0 !== n && (t.result = n) === !1 && (t.preventDefault(), t.stopPropagation()));
                return h.postDispatch && h.postDispatch.call(this, t), t.result
            }
        },
        handlers: function (t, e) {
            var i, n, r, o, a = [], s = e.delegateCount, l = t.target;
            if (s && l.nodeType && (!t.button || "click" !== t.type)) for (; l !== this; l = l.parentNode || this) if (l.disabled !== !0 || "click" !== t.type) {
                for (n = [], i = 0; s > i; i++) o = e[i], r = o.selector + " ", void 0 === n[r] && (n[r] = o.needsContext ? J(r, this).index(l) >= 0 : J.find(r, this, null, [l]).length), n[r] && n.push(o);
                n.length && a.push({elem: l, handlers: n})
            }
            return s < e.length && a.push({elem: this, handlers: e.slice(s)}), a
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "), filter: function (t, e) {
                return null == t.which && (t.which = null != e.charCode ? e.charCode : e.keyCode), t
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function (t, e) {
                var i, n, r, o = e.button;
                return null == t.pageX && null != e.clientX && (i = t.target.ownerDocument || Q, n = i.documentElement, r = i.body, t.pageX = e.clientX + (n && n.scrollLeft || r && r.scrollLeft || 0) - (n && n.clientLeft || r && r.clientLeft || 0), t.pageY = e.clientY + (n && n.scrollTop || r && r.scrollTop || 0) - (n && n.clientTop || r && r.clientTop || 0)), t.which || void 0 === o || (t.which = 1 & o ? 1 : 2 & o ? 3 : 4 & o ? 2 : 0), t
            }
        },
        fix: function (t) {
            if (t[J.expando]) return t;
            var e, i, n, r = t.type, o = t, a = this.fixHooks[r];
            for (a || (this.fixHooks[r] = a = Mt.test(r) ? this.mouseHooks : Ht.test(r) ? this.keyHooks : {}), n = a.props ? this.props.concat(a.props) : this.props, t = new J.Event(o), e = n.length; e--;) i = n[e], t[i] = o[i];
            return t.target || (t.target = Q), 3 === t.target.nodeType && (t.target = t.target.parentNode), a.filter ? a.filter(t, o) : t
        },
        special: {
            load: {noBubble: !0}, focus: {
                trigger: function () {
                    return this !== c() && this.focus ? (this.focus(), !1) : void 0
                }, delegateType: "focusin"
            }, blur: {
                trigger: function () {
                    return this === c() && this.blur ? (this.blur(), !1) : void 0
                }, delegateType: "focusout"
            }, click: {
                trigger: function () {
                    return "checkbox" === this.type && this.click && J.nodeName(this, "input") ? (this.click(), !1) : void 0
                }, _default: function (t) {
                    return J.nodeName(t.target, "a")
                }
            }, beforeunload: {
                postDispatch: function (t) {
                    void 0 !== t.result && t.originalEvent && (t.originalEvent.returnValue = t.result)
                }
            }
        },
        simulate: function (t, e, i, n) {
            var r = J.extend(new J.Event, i, {type: t, isSimulated: !0, originalEvent: {}});
            n ? J.event.trigger(r, null, e) : J.event.dispatch.call(e, r), r.isDefaultPrevented() && i.preventDefault()
        }
    }, J.removeEvent = function (t, e, i) {
        t.removeEventListener && t.removeEventListener(e, i, !1)
    }, J.Event = function (t, e) {
        return this instanceof J.Event ? (t && t.type ? (this.originalEvent = t, this.type = t.type, this.isDefaultPrevented = t.defaultPrevented || void 0 === t.defaultPrevented && t.returnValue === !1 ? h : u) : this.type = t, e && J.extend(this, e), this.timeStamp = t && t.timeStamp || J.now(), void(this[J.expando] = !0)) : new J.Event(t, e)
    }, J.Event.prototype = {
        isDefaultPrevented: u, isPropagationStopped: u, isImmediatePropagationStopped: u, preventDefault: function () {
            var t = this.originalEvent;
            this.isDefaultPrevented = h, t && t.preventDefault && t.preventDefault()
        }, stopPropagation: function () {
            var t = this.originalEvent;
            this.isPropagationStopped = h, t && t.stopPropagation && t.stopPropagation()
        }, stopImmediatePropagation: function () {
            var t = this.originalEvent;
            this.isImmediatePropagationStopped = h, t && t.stopImmediatePropagation && t.stopImmediatePropagation(), this.stopPropagation()
        }
    }, J.each({mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout"}, function (t, e) {
        J.event.special[t] = {
            delegateType: e, bindType: e, handle: function (t) {
                var i, n = this, r = t.relatedTarget, o = t.handleObj;
                return (!r || r !== n && !J.contains(n, r)) && (t.type = o.origType, i = o.handler.apply(this, arguments), t.type = e), i
            }
        }
    }), Z.focusinBubbles || J.each({focus: "focusin", blur: "focusout"}, function (t, e) {
        var i = function (t) {
            J.event.simulate(e, t.target, J.event.fix(t), !0)
        };
        J.event.special[e] = {
            setup: function () {
                var n = this.ownerDocument || this, r = Et.access(n, e);
                r || n.addEventListener(t, i, !0), Et.access(n, e, (r || 0) + 1)
            }, teardown: function () {
                var n = this.ownerDocument || this, r = Et.access(n, e) - 1;
                r ? Et.access(n, e, r) : (n.removeEventListener(t, i, !0), Et.remove(n, e))
            }
        }
    }), J.fn.extend({
        on: function (t, e, i, n, r) {
            var o, a;
            if ("object" == typeof t) {
                "string" != typeof e && (i = i || e, e = void 0);
                for (a in t) this.on(a, e, i, t[a], r);
                return this
            }
            if (null == i && null == n ? (n = e, i = e = void 0) : null == n && ("string" == typeof e ? (n = i, i = void 0) : (n = i, i = e, e = void 0)), n === !1) n = u; else if (!n) return this;
            return 1 === r && (o = n, n = function (t) {
                return J().off(t), o.apply(this, arguments)
            }, n.guid = o.guid || (o.guid = J.guid++)), this.each(function () {
                J.event.add(this, t, n, i, e)
            })
        }, one: function (t, e, i, n) {
            return this.on(t, e, i, n, 1)
        }, off: function (t, e, i) {
            var n, r;
            if (t && t.preventDefault && t.handleObj) return n = t.handleObj, J(t.delegateTarget).off(n.namespace ? n.origType + "." + n.namespace : n.origType, n.selector, n.handler), this;
            if ("object" == typeof t) {
                for (r in t) this.off(r, e, t[r]);
                return this
            }
            return (e === !1 || "function" == typeof e) && (i = e, e = void 0), i === !1 && (i = u), this.each(function () {
                J.event.remove(this, t, i, e)
            })
        }, trigger: function (t, e) {
            return this.each(function () {
                J.event.trigger(t, e, this)
            })
        }, triggerHandler: function (t, e) {
            var i = this[0];
            return i ? J.event.trigger(t, e, i, !0) : void 0
        }
    });
    var At = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, Pt = /<([\w:]+)/, Lt = /<|&#?\w+;/,
        Ot = /<(?:script|style|link)/i, Dt = /checked\s*(?:[^=]|=\s*.checked.)/i, It = /^$|\/(?:java|ecma)script/i, Nt = /^true\/(.*)/,
        kt = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, Bt = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            thead: [1, "<table>", "</table>"],
            col: [2, "<table><colgroup>", "</colgroup></table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            _default: [0, "", ""]
        };
    Bt.optgroup = Bt.option, Bt.tbody = Bt.tfoot = Bt.colgroup = Bt.caption = Bt.thead, Bt.th = Bt.td, J.extend({
        clone: function (t, e, i) {
            var n, r, o, a, s = t.cloneNode(!0), l = J.contains(t.ownerDocument, t);
            if (!(Z.noCloneChecked || 1 !== t.nodeType && 11 !== t.nodeType || J.isXMLDoc(t))) for (a = E(s), o = E(t), n = 0, r = o.length; r > n; n++) v(o[n], a[n]);
            if (e) if (i) for (o = o || E(t), a = a || E(s), n = 0, r = o.length; r > n; n++) g(o[n], a[n]); else g(t, s);
            return a = E(s, "script"), a.length > 0 && m(a, !l && E(t, "script")), s
        }, buildFragment: function (t, e, i, n) {
            for (var r, o, a, s, l, h, u = e.createDocumentFragment(), c = [], p = 0, d = t.length; d > p; p++) if (r = t[p], r || 0 === r) if ("object" === J.type(r)) J.merge(c, r.nodeType ? [r] : r); else if (Lt.test(r)) {
                for (o = o || u.appendChild(e.createElement("div")), a = (Pt.exec(r) || ["", ""])[1].toLowerCase(), s = Bt[a] || Bt._default, o.innerHTML = s[1] + r.replace(At, "<$1></$2>") + s[2], h = s[0]; h--;) o = o.lastChild;
                J.merge(c, o.childNodes), o = u.firstChild, o.textContent = ""
            } else c.push(e.createTextNode(r));
            for (u.textContent = "", p = 0; r = c[p++];) if ((!n || -1 === J.inArray(r, n)) && (l = J.contains(r.ownerDocument, r), o = E(u.appendChild(r), "script"), l && m(o), i)) for (h = 0; r = o[h++];) It.test(r.type || "") && i.push(r);
            return u
        }, cleanData: function (t) {
            for (var e, i, n, r, o = J.event.special, a = 0; void 0 !== (i = t[a]); a++) {
                if (J.acceptData(i) && (r = i[Et.expando], r && (e = Et.cache[r]))) {
                    if (e.events) for (n in e.events) o[n] ? J.event.remove(i, n) : J.removeEvent(i, n, e.handle);
                    Et.cache[r] && delete Et.cache[r]
                }
                delete vt.cache[i[vt.expando]]
            }
        }
    }), J.fn.extend({
        text: function (t) {
            return gt(this, function (t) {
                return void 0 === t ? J.text(this) : this.empty().each(function () {
                    (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) && (this.textContent = t)
                })
            }, null, t, arguments.length)
        }, append: function () {
            return this.domManip(arguments, function (t) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var e = p(this, t);
                    e.appendChild(t)
                }
            })
        }, prepend: function () {
            return this.domManip(arguments, function (t) {
                if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
                    var e = p(this, t);
                    e.insertBefore(t, e.firstChild)
                }
            })
        }, before: function () {
            return this.domManip(arguments, function (t) {
                this.parentNode && this.parentNode.insertBefore(t, this)
            })
        }, after: function () {
            return this.domManip(arguments, function (t) {
                this.parentNode && this.parentNode.insertBefore(t, this.nextSibling)
            })
        }, remove: function (t, e) {
            for (var i, n = t ? J.filter(t, this) : this, r = 0; null != (i = n[r]); r++) e || 1 !== i.nodeType || J.cleanData(E(i)), i.parentNode && (e && J.contains(i.ownerDocument, i) && m(E(i, "script")), i.parentNode.removeChild(i));
            return this
        }, empty: function () {
            for (var t, e = 0; null != (t = this[e]); e++) 1 === t.nodeType && (J.cleanData(E(t, !1)), t.textContent = "");
            return this
        }, clone: function (t, e) {
            return t = null == t ? !1 : t, e = null == e ? t : e, this.map(function () {
                return J.clone(this, t, e)
            })
        }, html: function (t) {
            return gt(this, function (t) {
                var e = this[0] || {}, i = 0, n = this.length;
                if (void 0 === t && 1 === e.nodeType) return e.innerHTML;
                if ("string" == typeof t && !Ot.test(t) && !Bt[(Pt.exec(t) || ["", ""])[1].toLowerCase()]) {
                    t = t.replace(At, "<$1></$2>");
                    try {
                        for (; n > i; i++) e = this[i] || {}, 1 === e.nodeType && (J.cleanData(E(e, !1)), e.innerHTML = t);
                        e = 0
                    } catch (r) {
                    }
                }
                e && this.empty().append(t)
            }, null, t, arguments.length)
        }, replaceWith: function () {
            var t = arguments[0];
            return this.domManip(arguments, function (e) {
                t = this.parentNode, J.cleanData(E(this)), t && t.replaceChild(e, this)
            }), t && (t.length || t.nodeType) ? this : this.remove()
        }, detach: function (t) {
            return this.remove(t, !0)
        }, domManip: function (t, e) {
            t = j.apply([], t);
            var i, n, r, o, a, s, l = 0, h = this.length, u = this, c = h - 1, p = t[0], m = J.isFunction(p);
            if (m || h > 1 && "string" == typeof p && !Z.checkClone && Dt.test(p)) return this.each(function (i) {
                var n = u.eq(i);
                m && (t[0] = p.call(this, i, n.html())), n.domManip(t, e)
            });
            if (h && (i = J.buildFragment(t, this[0].ownerDocument, !1, this), n = i.firstChild, 1 === i.childNodes.length && (i = n), n)) {
                for (r = J.map(E(i, "script"), d), o = r.length; h > l; l++) a = i, l !== c && (a = J.clone(a, !0, !0), o && J.merge(r, E(a, "script"))), e.call(this[l], a, l);
                if (o) for (s = r[r.length - 1].ownerDocument, J.map(r, f), l = 0; o > l; l++) a = r[l], It.test(a.type || "") && !Et.access(a, "globalEval") && J.contains(s, a) && (a.src ? J._evalUrl && J._evalUrl(a.src) : J.globalEval(a.textContent.replace(kt, "")))
            }
            return this
        }
    }), J.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function (t, e) {
        J.fn[t] = function (t) {
            for (var i, n = [], r = J(t), o = r.length - 1, a = 0; o >= a; a++) i = a === o ? this : this.clone(!0), J(r[a])[e](i), W.apply(n, i.get());
            return this.pushStack(n)
        }
    });
    var Ft, Ut = {}, Vt = /^margin/, zt = new RegExp("^(" + _t + ")(?!px)[a-z%]+$", "i"), Gt = function (t) {
        return t.ownerDocument.defaultView.getComputedStyle(t, null)
    };
    !function () {
        function e() {
            a.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute", a.innerHTML = "", r.appendChild(o);
            var e = t.getComputedStyle(a, null);
            i = "1%" !== e.top, n = "4px" === e.width, r.removeChild(o)
        }

        var i, n, r = Q.documentElement, o = Q.createElement("div"), a = Q.createElement("div");
        a.style && (a.style.backgroundClip = "content-box", a.cloneNode(!0).style.backgroundClip = "", Z.clearCloneStyle = "content-box" === a.style.backgroundClip, o.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute", o.appendChild(a), t.getComputedStyle && J.extend(Z, {
            pixelPosition: function () {
                return e(), i
            }, boxSizingReliable: function () {
                return null == n && e(), n
            }, reliableMarginRight: function () {
                var e, i = a.appendChild(Q.createElement("div"));
                return i.style.cssText = a.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", i.style.marginRight = i.style.width = "0", a.style.width = "1px", r.appendChild(o), e = !parseFloat(t.getComputedStyle(i, null).marginRight), r.removeChild(o), e
            }
        }))
    }(), J.swap = function (t, e, i, n) {
        var r, o, a = {};
        for (o in e) a[o] = t.style[o], t.style[o] = e[o];
        r = i.apply(t, n || []);
        for (o in e) t.style[o] = a[o];
        return r
    };
    var jt = /^(none|table(?!-c[ea]).+)/, Wt = new RegExp("^(" + _t + ")(.*)$", "i"), Xt = new RegExp("^([+-])=(" + _t + ")", "i"),
        qt = {position: "absolute", visibility: "hidden", display: "block"}, Yt = {letterSpacing: "0", fontWeight: "400"},
        $t = ["Webkit", "O", "Moz", "ms"];
    J.extend({
        cssHooks: {
            opacity: {
                get: function (t, e) {
                    if (e) {
                        var i = _(t, "opacity");
                        return "" === i ? "1" : i
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            flexGrow: !0,
            flexShrink: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {"float": "cssFloat"},
        style: function (t, e, i, n) {
            if (t && 3 !== t.nodeType && 8 !== t.nodeType && t.style) {
                var r, o, a, s = J.camelCase(e), l = t.style;
                return e = J.cssProps[s] || (J.cssProps[s] = b(l, s)), a = J.cssHooks[e] || J.cssHooks[s], void 0 === i ? a && "get" in a && void 0 !== (r = a.get(t, !1, n)) ? r : l[e] : (o = typeof i, "string" === o && (r = Xt.exec(i)) && (i = (r[1] + 1) * r[2] + parseFloat(J.css(t, e)), o = "number"), void(null != i && i === i && ("number" !== o || J.cssNumber[s] || (i += "px"), Z.clearCloneStyle || "" !== i || 0 !== e.indexOf("background") || (l[e] = "inherit"), a && "set" in a && void 0 === (i = a.set(t, i, n)) || (l[e] = i))))
            }
        },
        css: function (t, e, i, n) {
            var r, o, a, s = J.camelCase(e);
            return e = J.cssProps[s] || (J.cssProps[s] = b(t.style, s)), a = J.cssHooks[e] || J.cssHooks[s], a && "get" in a && (r = a.get(t, !0, i)), void 0 === r && (r = _(t, e, n)), "normal" === r && e in Yt && (r = Yt[e]), "" === i || i ? (o = parseFloat(r), i === !0 || J.isNumeric(o) ? o || 0 : r) : r
        }
    }), J.each(["height", "width"], function (t, e) {
        J.cssHooks[e] = {
            get: function (t, i, n) {
                return i ? jt.test(J.css(t, "display")) && 0 === t.offsetWidth ? J.swap(t, qt, function () {
                    return H(t, e, n)
                }) : H(t, e, n) : void 0
            }, set: function (t, i, n) {
                var r = n && Gt(t);
                return R(t, i, n ? w(t, e, n, "border-box" === J.css(t, "boxSizing", !1, r), r) : 0)
            }
        }
    }), J.cssHooks.marginRight = x(Z.reliableMarginRight, function (t, e) {
        return e ? J.swap(t, {display: "inline-block"}, _, [t, "marginRight"]) : void 0
    }), J.each({margin: "", padding: "", border: "Width"}, function (t, e) {
        J.cssHooks[t + e] = {
            expand: function (i) {
                for (var n = 0, r = {}, o = "string" == typeof i ? i.split(" ") : [i]; 4 > n; n++) r[t + xt[n] + e] = o[n] || o[n - 2] || o[0];
                return r
            }
        }, Vt.test(t) || (J.cssHooks[t + e].set = R)
    }), J.fn.extend({
        css: function (t, e) {
            return gt(this, function (t, e, i) {
                var n, r, o = {}, a = 0;
                if (J.isArray(e)) {
                    for (n = Gt(t), r = e.length; r > a; a++) o[e[a]] = J.css(t, e[a], !1, n);
                    return o
                }
                return void 0 !== i ? J.style(t, e, i) : J.css(t, e)
            }, t, e, arguments.length > 1)
        }, show: function () {
            return M(this, !0)
        }, hide: function () {
            return M(this)
        }, toggle: function (t) {
            return "boolean" == typeof t ? t ? this.show() : this.hide() : this.each(function () {
                bt(this) ? J(this).show() : J(this).hide()
            })
        }
    }), J.Tween = S, S.prototype = {
        constructor: S, init: function (t, e, i, n, r, o) {
            this.elem = t, this.prop = i, this.easing = r || "swing", this.options = e, this.start = this.now = this.cur(), this.end = n, this.unit = o || (J.cssNumber[i] ? "" : "px")
        }, cur: function () {
            var t = S.propHooks[this.prop];
            return t && t.get ? t.get(this) : S.propHooks._default.get(this)
        }, run: function (t) {
            var e, i = S.propHooks[this.prop];
            return this.pos = e = this.options.duration ? J.easing[this.easing](t, this.options.duration * t, 0, 1, this.options.duration) : t, this.now = (this.end - this.start) * e + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), i && i.set ? i.set(this) : S.propHooks._default.set(this), this
        }
    }, S.prototype.init.prototype = S.prototype, S.propHooks = {
        _default: {
            get: function (t) {
                var e;
                return null == t.elem[t.prop] || t.elem.style && null != t.elem.style[t.prop] ? (e = J.css(t.elem, t.prop, ""), e && "auto" !== e ? e : 0) : t.elem[t.prop]
            }, set: function (t) {
                J.fx.step[t.prop] ? J.fx.step[t.prop](t) : t.elem.style && (null != t.elem.style[J.cssProps[t.prop]] || J.cssHooks[t.prop]) ? J.style(t.elem, t.prop, t.now + t.unit) : t.elem[t.prop] = t.now
            }
        }
    }, S.propHooks.scrollTop = S.propHooks.scrollLeft = {
        set: function (t) {
            t.elem.nodeType && t.elem.parentNode && (t.elem[t.prop] = t.now)
        }
    }, J.easing = {
        linear: function (t) {
            return t
        }, swing: function (t) {
            return .5 - Math.cos(t * Math.PI) / 2
        }
    }, J.fx = S.prototype.init, J.fx.step = {};
    var Zt, Qt, Kt = /^(?:toggle|show|hide)$/, Jt = new RegExp("^(?:([+-])=|)(" + _t + ")([a-z%]*)$", "i"), te = /queueHooks$/, ee = [L],
        ie = {
            "*": [function (t, e) {
                var i = this.createTween(t, e), n = i.cur(), r = Jt.exec(e), o = r && r[3] || (J.cssNumber[t] ? "" : "px"),
                    a = (J.cssNumber[t] || "px" !== o && +n) && Jt.exec(J.css(i.elem, t)), s = 1, l = 20;
                if (a && a[3] !== o) {
                    o = o || a[3], r = r || [], a = +n || 1;
                    do s = s || ".5", a /= s, J.style(i.elem, t, a + o); while (s !== (s = i.cur() / n) && 1 !== s && --l)
                }
                return r && (a = i.start = +a || +n || 0, i.unit = o, i.end = r[1] ? a + (r[1] + 1) * r[2] : +r[2]), i
            }]
        };
    J.Animation = J.extend(D, {
        tweener: function (t, e) {
            J.isFunction(t) ? (e = t, t = ["*"]) : t = t.split(" ");
            for (var i, n = 0, r = t.length; r > n; n++) i = t[n], ie[i] = ie[i] || [], ie[i].unshift(e)
        }, prefilter: function (t, e) {
            e ? ee.unshift(t) : ee.push(t)
        }
    }), J.speed = function (t, e, i) {
        var n = t && "object" == typeof t ? J.extend({}, t) : {
            complete: i || !i && e || J.isFunction(t) && t,
            duration: t,
            easing: i && e || e && !J.isFunction(e) && e
        };
        return n.duration = J.fx.off ? 0 : "number" == typeof n.duration ? n.duration : n.duration in J.fx.speeds ? J.fx.speeds[n.duration] : J.fx.speeds._default, (null == n.queue || n.queue === !0) && (n.queue = "fx"), n.old = n.complete, n.complete = function () {
            J.isFunction(n.old) && n.old.call(this), n.queue && J.dequeue(this, n.queue)
        }, n
    }, J.fn.extend({
        fadeTo: function (t, e, i, n) {
            return this.filter(bt).css("opacity", 0).show().end().animate({opacity: e}, t, i, n)
        }, animate: function (t, e, i, n) {
            var r = J.isEmptyObject(t), o = J.speed(e, i, n), a = function () {
                var e = D(this, J.extend({}, t), o);
                (r || Et.get(this, "finish")) && e.stop(!0)
            };
            return a.finish = a, r || o.queue === !1 ? this.each(a) : this.queue(o.queue, a)
        }, stop: function (t, e, i) {
            var n = function (t) {
                var e = t.stop;
                delete t.stop, e(i)
            };
            return "string" != typeof t && (i = e, e = t, t = void 0), e && t !== !1 && this.queue(t || "fx", []), this.each(function () {
                var e = !0, r = null != t && t + "queueHooks", o = J.timers, a = Et.get(this);
                if (r) a[r] && a[r].stop && n(a[r]); else for (r in a) a[r] && a[r].stop && te.test(r) && n(a[r]);
                for (r = o.length; r--;) o[r].elem !== this || null != t && o[r].queue !== t || (o[r].anim.stop(i), e = !1, o.splice(r, 1));
                (e || !i) && J.dequeue(this, t)
            })
        }, finish: function (t) {
            return t !== !1 && (t = t || "fx"), this.each(function () {
                var e, i = Et.get(this), n = i[t + "queue"], r = i[t + "queueHooks"], o = J.timers, a = n ? n.length : 0;
                for (i.finish = !0, J.queue(this, t, []), r && r.stop && r.stop.call(this, !0), e = o.length; e--;) o[e].elem === this && o[e].queue === t && (o[e].anim.stop(!0), o.splice(e, 1));
                for (e = 0; a > e; e++) n[e] && n[e].finish && n[e].finish.call(this);
                delete i.finish
            })
        }
    }), J.each(["toggle", "show", "hide"], function (t, e) {
        var i = J.fn[e];
        J.fn[e] = function (t, n, r) {
            return null == t || "boolean" == typeof t ? i.apply(this, arguments) : this.animate(A(e, !0), t, n, r)
        }
    }), J.each({
        slideDown: A("show"),
        slideUp: A("hide"),
        slideToggle: A("toggle"),
        fadeIn: {opacity: "show"},
        fadeOut: {opacity: "hide"},
        fadeToggle: {opacity: "toggle"}
    }, function (t, e) {
        J.fn[t] = function (t, i, n) {
            return this.animate(e, t, i, n)
        }
    }), J.timers = [], J.fx.tick = function () {
        var t, e = 0, i = J.timers;
        for (Zt = J.now(); e < i.length; e++) t = i[e], t() || i[e] !== t || i.splice(e--, 1);
        i.length || J.fx.stop(), Zt = void 0
    }, J.fx.timer = function (t) {
        J.timers.push(t), t() ? J.fx.start() : J.timers.pop()
    }, J.fx.interval = 13, J.fx.start = function () {
        Qt || (Qt = setInterval(J.fx.tick, J.fx.interval))
    }, J.fx.stop = function () {
        clearInterval(Qt), Qt = null
    }, J.fx.speeds = {slow: 600, fast: 200, _default: 400}, J.fn.delay = function (t, e) {
        return t = J.fx ? J.fx.speeds[t] || t : t, e = e || "fx", this.queue(e, function (e, i) {
            var n = setTimeout(e, t);
            i.stop = function () {
                clearTimeout(n)
            }
        })
    }, function () {
        var t = Q.createElement("input"), e = Q.createElement("select"), i = e.appendChild(Q.createElement("option"));
        t.type = "checkbox", Z.checkOn = "" !== t.value, Z.optSelected = i.selected, e.disabled = !0, Z.optDisabled = !i.disabled, t = Q.createElement("input"), t.value = "t", t.type = "radio", Z.radioValue = "t" === t.value
    }();
    var ne, re, oe = J.expr.attrHandle;
    J.fn.extend({
        attr: function (t, e) {
            return gt(this, J.attr, t, e, arguments.length > 1)
        }, removeAttr: function (t) {
            return this.each(function () {
                J.removeAttr(this, t)
            })
        }
    }), J.extend({
        attr: function (t, e, i) {
            var n, r, o = t.nodeType;
            return t && 3 !== o && 8 !== o && 2 !== o ? typeof t.getAttribute === wt ? J.prop(t, e, i) : (1 === o && J.isXMLDoc(t) || (e = e.toLowerCase(), n = J.attrHooks[e] || (J.expr.match.bool.test(e) ? re : ne)), void 0 === i ? n && "get" in n && null !== (r = n.get(t, e)) ? r : (r = J.find.attr(t, e), null == r ? void 0 : r) : null !== i ? n && "set" in n && void 0 !== (r = n.set(t, i, e)) ? r : (t.setAttribute(e, i + ""), i) : void J.removeAttr(t, e)) : void 0
        }, removeAttr: function (t, e) {
            var i, n, r = 0, o = e && e.match(dt);
            if (o && 1 === t.nodeType) for (; i = o[r++];) n = J.propFix[i] || i, J.expr.match.bool.test(i) && (t[n] = !1), t.removeAttribute(i)
        }, attrHooks: {
            type: {
                set: function (t, e) {
                    if (!Z.radioValue && "radio" === e && J.nodeName(t, "input")) {
                        var i = t.value;
                        return t.setAttribute("type", e), i && (t.value = i), e
                    }
                }
            }
        }
    }), re = {
        set: function (t, e, i) {
            return e === !1 ? J.removeAttr(t, i) : t.setAttribute(i, i), i
        }
    }, J.each(J.expr.match.bool.source.match(/\w+/g), function (t, e) {
        var i = oe[e] || J.find.attr;
        oe[e] = function (t, e, n) {
            var r, o;
            return n || (o = oe[e], oe[e] = r, r = null != i(t, e, n) ? e.toLowerCase() : null, oe[e] = o), r
        }
    });
    var ae = /^(?:input|select|textarea|button)$/i;
    J.fn.extend({
        prop: function (t, e) {
            return gt(this, J.prop, t, e, arguments.length > 1)
        }, removeProp: function (t) {
            return this.each(function () {
                delete this[J.propFix[t] || t]
            })
        }
    }), J.extend({
        propFix: {"for": "htmlFor", "class": "className"}, prop: function (t, e, i) {
            var n, r, o, a = t.nodeType;
            return t && 3 !== a && 8 !== a && 2 !== a ? (o = 1 !== a || !J.isXMLDoc(t), o && (e = J.propFix[e] || e, r = J.propHooks[e]), void 0 !== i ? r && "set" in r && void 0 !== (n = r.set(t, i, e)) ? n : t[e] = i : r && "get" in r && null !== (n = r.get(t, e)) ? n : t[e]) : void 0
        }, propHooks: {
            tabIndex: {
                get: function (t) {
                    return t.hasAttribute("tabindex") || ae.test(t.nodeName) || t.href ? t.tabIndex : -1
                }
            }
        }
    }), Z.optSelected || (J.propHooks.selected = {
        get: function (t) {
            var e = t.parentNode;
            return e && e.parentNode && e.parentNode.selectedIndex, null
        }
    }), J.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function () {
        J.propFix[this.toLowerCase()] = this
    });
    var se = /[\t\r\n\f]/g;
    J.fn.extend({
        addClass: function (t) {
            var e, i, n, r, o, a, s = "string" == typeof t && t, l = 0, h = this.length;
            if (J.isFunction(t)) return this.each(function (e) {
                J(this).addClass(t.call(this, e, this.className))
            });
            if (s) for (e = (t || "").match(dt) || []; h > l; l++) if (i = this[l], n = 1 === i.nodeType && (i.className ? (" " + i.className + " ").replace(se, " ") : " ")) {
                for (o = 0; r = e[o++];) n.indexOf(" " + r + " ") < 0 && (n += r + " ");
                a = J.trim(n), i.className !== a && (i.className = a)
            }
            return this
        }, removeClass: function (t) {
            var e, i, n, r, o, a, s = 0 === arguments.length || "string" == typeof t && t, l = 0, h = this.length;
            if (J.isFunction(t)) return this.each(function (e) {
                J(this).removeClass(t.call(this, e, this.className))
            });
            if (s) for (e = (t || "").match(dt) || []; h > l; l++) if (i = this[l], n = 1 === i.nodeType && (i.className ? (" " + i.className + " ").replace(se, " ") : "")) {
                for (o = 0; r = e[o++];) for (; n.indexOf(" " + r + " ") >= 0;) n = n.replace(" " + r + " ", " ");
                a = t ? J.trim(n) : "", i.className !== a && (i.className = a)
            }
            return this
        }, toggleClass: function (t, e) {
            var i = typeof t;
            return "boolean" == typeof e && "string" === i ? e ? this.addClass(t) : this.removeClass(t) : this.each(J.isFunction(t) ? function (i) {
                J(this).toggleClass(t.call(this, i, this.className, e), e)
            } : function () {
                if ("string" === i) for (var e, n = 0, r = J(this), o = t.match(dt) || []; e = o[n++];) r.hasClass(e) ? r.removeClass(e) : r.addClass(e); else (i === wt || "boolean" === i) && (this.className && Et.set(this, "__className__", this.className), this.className = this.className || t === !1 ? "" : Et.get(this, "__className__") || "")
            })
        }, hasClass: function (t) {
            for (var e = " " + t + " ", i = 0, n = this.length; n > i; i++) if (1 === this[i].nodeType && (" " + this[i].className + " ").replace(se, " ").indexOf(e) >= 0) return !0;
            return !1
        }
    });
    var le = /\r/g;
    J.fn.extend({
        val: function (t) {
            var e, i, n, r = this[0];
            return arguments.length ? (n = J.isFunction(t), this.each(function (i) {
                var r;
                1 === this.nodeType && (r = n ? t.call(this, i, J(this).val()) : t, null == r ? r = "" : "number" == typeof r ? r += "" : J.isArray(r) && (r = J.map(r, function (t) {
                    return null == t ? "" : t + ""
                })), e = J.valHooks[this.type] || J.valHooks[this.nodeName.toLowerCase()], e && "set" in e && void 0 !== e.set(this, r, "value") || (this.value = r))
            })) : r ? (e = J.valHooks[r.type] || J.valHooks[r.nodeName.toLowerCase()], e && "get" in e && void 0 !== (i = e.get(r, "value")) ? i : (i = r.value, "string" == typeof i ? i.replace(le, "") : null == i ? "" : i)) : void 0
        }
    }), J.extend({
        valHooks: {
            option: {
                get: function (t) {
                    var e = J.find.attr(t, "value");
                    return null != e ? e : J.trim(J.text(t))
                }
            }, select: {
                get: function (t) {
                    for (var e, i, n = t.options, r = t.selectedIndex, o = "select-one" === t.type || 0 > r, a = o ? null : [], s = o ? r + 1 : n.length, l = 0 > r ? s : o ? r : 0; s > l; l++) if (i = n[l], !(!i.selected && l !== r || (Z.optDisabled ? i.disabled : null !== i.getAttribute("disabled")) || i.parentNode.disabled && J.nodeName(i.parentNode, "optgroup"))) {
                        if (e = J(i).val(), o) return e;
                        a.push(e)
                    }
                    return a
                }, set: function (t, e) {
                    for (var i, n, r = t.options, o = J.makeArray(e), a = r.length; a--;) n = r[a], (n.selected = J.inArray(n.value, o) >= 0) && (i = !0);
                    return i || (t.selectedIndex = -1), o
                }
            }
        }
    }), J.each(["radio", "checkbox"], function () {
        J.valHooks[this] = {
            set: function (t, e) {
                return J.isArray(e) ? t.checked = J.inArray(J(t).val(), e) >= 0 : void 0
            }
        }, Z.checkOn || (J.valHooks[this].get = function (t) {
            return null === t.getAttribute("value") ? "on" : t.value
        })
    }), J.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function (t, e) {
        J.fn[e] = function (t, i) {
            return arguments.length > 0 ? this.on(e, null, t, i) : this.trigger(e)
        }
    }), J.fn.extend({
        hover: function (t, e) {
            return this.mouseenter(t).mouseleave(e || t)
        }, bind: function (t, e, i) {
            return this.on(t, null, e, i)
        }, unbind: function (t, e) {
            return this.off(t, null, e)
        }, delegate: function (t, e, i, n) {
            return this.on(e, t, i, n)
        }, undelegate: function (t, e, i) {
            return 1 === arguments.length ? this.off(t, "**") : this.off(e, t || "**", i)
        }
    });
    var he = J.now(), ue = /\?/;
    J.parseJSON = function (t) {
        return JSON.parse(t + "")
    }, J.parseXML = function (t) {
        var e, i;
        if (!t || "string" != typeof t) return null;
        try {
            i = new DOMParser, e = i.parseFromString(t, "text/xml")
        } catch (n) {
            e = void 0
        }
        return (!e || e.getElementsByTagName("parsererror").length) && J.error("Invalid XML: " + t), e
    };
    var ce, pe, de = /#.*$/, fe = /([?&])_=[^&]*/, me = /^(.*?):[ \t]*([^\r\n]*)$/gm,
        ge = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, Ee = /^(?:GET|HEAD)$/, ve = /^\/\//,
        ye = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/, Te = {}, _e = {}, xe = "*/".concat("*");
    try {
        pe = location.href
    } catch (be) {
        pe = Q.createElement("a"), pe.href = "", pe = pe.href
    }
    ce = ye.exec(pe.toLowerCase()) || [], J.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: pe,
            type: "GET",
            isLocal: ge.test(ce[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": xe,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {xml: /xml/, html: /html/, json: /json/},
            responseFields: {xml: "responseXML", text: "responseText", json: "responseJSON"},
            converters: {"* text": String, "text html": !0, "text json": J.parseJSON, "text xml": J.parseXML},
            flatOptions: {url: !0, context: !0}
        },
        ajaxSetup: function (t, e) {
            return e ? k(k(t, J.ajaxSettings), e) : k(J.ajaxSettings, t)
        },
        ajaxPrefilter: I(Te),
        ajaxTransport: I(_e),
        ajax: function (t, e) {
            function i(t, e, i, a) {
                var l, u, E, v, T, x = e;
                2 !== y && (y = 2, s && clearTimeout(s), n = void 0, o = a || "", _.readyState = t > 0 ? 4 : 0, l = t >= 200 && 300 > t || 304 === t, i && (v = B(c, _, i)), v = F(c, v, _, l), l ? (c.ifModified && (T = _.getResponseHeader("Last-Modified"), T && (J.lastModified[r] = T), T = _.getResponseHeader("etag"), T && (J.etag[r] = T)), 204 === t || "HEAD" === c.type ? x = "nocontent" : 304 === t ? x = "notmodified" : (x = v.state, u = v.data, E = v.error, l = !E)) : (E = x, (t || !x) && (x = "error", 0 > t && (t = 0))), _.status = t, _.statusText = (e || x) + "", l ? f.resolveWith(p, [u, x, _]) : f.rejectWith(p, [_, x, E]), _.statusCode(g), g = void 0, h && d.trigger(l ? "ajaxSuccess" : "ajaxError", [_, c, l ? u : E]), m.fireWith(p, [_, x]), h && (d.trigger("ajaxComplete", [_, c]), --J.active || J.event.trigger("ajaxStop")))
            }

            "object" == typeof t && (e = t, t = void 0), e = e || {};
            var n, r, o, a, s, l, h, u, c = J.ajaxSetup({}, e), p = c.context || c,
                d = c.context && (p.nodeType || p.jquery) ? J(p) : J.event, f = J.Deferred(), m = J.Callbacks("once memory"),
                g = c.statusCode || {}, E = {}, v = {}, y = 0, T = "canceled", _ = {
                    readyState: 0, getResponseHeader: function (t) {
                        var e;
                        if (2 === y) {
                            if (!a) for (a = {}; e = me.exec(o);) a[e[1].toLowerCase()] = e[2];
                            e = a[t.toLowerCase()]
                        }
                        return null == e ? null : e
                    }, getAllResponseHeaders: function () {
                        return 2 === y ? o : null
                    }, setRequestHeader: function (t, e) {
                        var i = t.toLowerCase();
                        return y || (t = v[i] = v[i] || t, E[t] = e), this
                    }, overrideMimeType: function (t) {
                        return y || (c.mimeType = t), this
                    }, statusCode: function (t) {
                        var e;
                        if (t) if (2 > y) for (e in t) g[e] = [g[e], t[e]]; else _.always(t[_.status]);
                        return this
                    }, abort: function (t) {
                        var e = t || T;
                        return n && n.abort(e), i(0, e), this
                    }
                };
            if (f.promise(_).complete = m.add, _.success = _.done, _.error = _.fail, c.url = ((t || c.url || pe) + "").replace(de, "").replace(ve, ce[1] + "//"), c.type = e.method || e.type || c.method || c.type, c.dataTypes = J.trim(c.dataType || "*").toLowerCase().match(dt) || [""], null == c.crossDomain && (l = ye.exec(c.url.toLowerCase()), c.crossDomain = !(!l || l[1] === ce[1] && l[2] === ce[2] && (l[3] || ("http:" === l[1] ? "80" : "443")) === (ce[3] || ("http:" === ce[1] ? "80" : "443")))), c.data && c.processData && "string" != typeof c.data && (c.data = J.param(c.data, c.traditional)), N(Te, c, e, _), 2 === y) return _;
            h = c.global, h && 0 === J.active++ && J.event.trigger("ajaxStart"), c.type = c.type.toUpperCase(), c.hasContent = !Ee.test(c.type), r = c.url, c.hasContent || (c.data && (r = c.url += (ue.test(r) ? "&" : "?") + c.data, delete c.data), c.cache === !1 && (c.url = fe.test(r) ? r.replace(fe, "$1_=" + he++) : r + (ue.test(r) ? "&" : "?") + "_=" + he++)), c.ifModified && (J.lastModified[r] && _.setRequestHeader("If-Modified-Since", J.lastModified[r]), J.etag[r] && _.setRequestHeader("If-None-Match", J.etag[r])), (c.data && c.hasContent && c.contentType !== !1 || e.contentType) && _.setRequestHeader("Content-Type", c.contentType), _.setRequestHeader("Accept", c.dataTypes[0] && c.accepts[c.dataTypes[0]] ? c.accepts[c.dataTypes[0]] + ("*" !== c.dataTypes[0] ? ", " + xe + "; q=0.01" : "") : c.accepts["*"]);
            for (u in c.headers) _.setRequestHeader(u, c.headers[u]);
            if (c.beforeSend && (c.beforeSend.call(p, _, c) === !1 || 2 === y)) return _.abort();
            T = "abort";
            for (u in{success: 1, error: 1, complete: 1}) _[u](c[u]);
            if (n = N(_e, c, e, _)) {
                _.readyState = 1, h && d.trigger("ajaxSend", [_, c]), c.async && c.timeout > 0 && (s = setTimeout(function () {
                    _.abort("timeout")
                }, c.timeout));
                try {
                    y = 1, n.send(E, i)
                } catch (x) {
                    if (!(2 > y)) throw x;
                    i(-1, x)
                }
            } else i(-1, "No Transport");
            return _
        },
        getJSON: function (t, e, i) {
            return J.get(t, e, i, "json")
        },
        getScript: function (t, e) {
            return J.get(t, void 0, e, "script")
        }
    }), J.each(["get", "post"], function (t, e) {
        J[e] = function (t, i, n, r) {
            return J.isFunction(i) && (r = r || n, n = i, i = void 0), J.ajax({url: t, type: e, dataType: r, data: i, success: n})
        }
    }), J.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function (t, e) {
        J.fn[e] = function (t) {
            return this.on(e, t)
        }
    }), J._evalUrl = function (t) {
        return J.ajax({url: t, type: "GET", dataType: "script", async: !1, global: !1, "throws": !0})
    }, J.fn.extend({
        wrapAll: function (t) {
            var e;
            return J.isFunction(t) ? this.each(function (e) {
                J(this).wrapAll(t.call(this, e))
            }) : (this[0] && (e = J(t, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && e.insertBefore(this[0]), e.map(function () {
                for (var t = this; t.firstElementChild;) t = t.firstElementChild;
                return t
            }).append(this)), this)
        }, wrapInner: function (t) {
            return this.each(J.isFunction(t) ? function (e) {
                J(this).wrapInner(t.call(this, e))
            } : function () {
                var e = J(this), i = e.contents();
                i.length ? i.wrapAll(t) : e.append(t)
            })
        }, wrap: function (t) {
            var e = J.isFunction(t);
            return this.each(function (i) {
                J(this).wrapAll(e ? t.call(this, i) : t)
            })
        }, unwrap: function () {
            return this.parent().each(function () {
                J.nodeName(this, "body") || J(this).replaceWith(this.childNodes)
            }).end()
        }
    }), J.expr.filters.hidden = function (t) {
        return t.offsetWidth <= 0 && t.offsetHeight <= 0
    }, J.expr.filters.visible = function (t) {
        return !J.expr.filters.hidden(t)
    };
    var Re = /%20/g, we = /\[\]$/, He = /\r?\n/g, Me = /^(?:submit|button|image|reset|file)$/i, Se = /^(?:input|select|textarea|keygen)/i;
    J.param = function (t, e) {
        var i, n = [], r = function (t, e) {
            e = J.isFunction(e) ? e() : null == e ? "" : e, n[n.length] = encodeURIComponent(t) + "=" + encodeURIComponent(e)
        };
        if (void 0 === e && (e = J.ajaxSettings && J.ajaxSettings.traditional), J.isArray(t) || t.jquery && !J.isPlainObject(t)) J.each(t, function () {
            r(this.name, this.value)
        }); else for (i in t) U(i, t[i], e, r);
        return n.join("&").replace(Re, "+")
    }, J.fn.extend({
        serialize: function () {
            return J.param(this.serializeArray())
        }, serializeArray: function () {
            return this.map(function () {
                var t = J.prop(this, "elements");
                return t ? J.makeArray(t) : this
            }).filter(function () {
                var t = this.type;
                return this.name && !J(this).is(":disabled") && Se.test(this.nodeName) && !Me.test(t) && (this.checked || !Rt.test(t))
            }).map(function (t, e) {
                var i = J(this).val();
                return null == i ? null : J.isArray(i) ? J.map(i, function (t) {
                    return {name: e.name, value: t.replace(He, "\r\n")}
                }) : {name: e.name, value: i.replace(He, "\r\n")}
            }).get()
        }
    }), J.ajaxSettings.xhr = function () {
        try {
            return new XMLHttpRequest
        } catch (t) {
        }
    };
    var Ce = 0, Ae = {}, Pe = {0: 200, 1223: 204}, Le = J.ajaxSettings.xhr();
    t.ActiveXObject && J(t).on("unload", function () {
        for (var t in Ae) Ae[t]()
    }), Z.cors = !!Le && "withCredentials" in Le, Z.ajax = Le = !!Le, J.ajaxTransport(function (t) {
        var e;
        return Z.cors || Le && !t.crossDomain ? {
            send: function (i, n) {
                var r, o = t.xhr(), a = ++Ce;
                if (o.open(t.type, t.url, t.async, t.username, t.password), t.xhrFields) for (r in t.xhrFields) o[r] = t.xhrFields[r];
                t.mimeType && o.overrideMimeType && o.overrideMimeType(t.mimeType), t.crossDomain || i["X-Requested-With"] || (i["X-Requested-With"] = "XMLHttpRequest");
                for (r in i) o.setRequestHeader(r, i[r]);
                e = function (t) {
                    return function () {
                        e && (delete Ae[a], e = o.onload = o.onerror = null, "abort" === t ? o.abort() : "error" === t ? n(o.status, o.statusText) : n(Pe[o.status] || o.status, o.statusText, "string" == typeof o.responseText ? {text: o.responseText} : void 0, o.getAllResponseHeaders()))
                    }
                }, o.onload = e(), o.onerror = e("error"), e = Ae[a] = e("abort");
                try {
                    o.send(t.hasContent && t.data || null)
                } catch (s) {
                    if (e) throw s
                }
            }, abort: function () {
                e && e()
            }
        } : void 0
    }), J.ajaxSetup({
        accepts: {script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},
        contents: {script: /(?:java|ecma)script/},
        converters: {
            "text script": function (t) {
                return J.globalEval(t), t
            }
        }
    }), J.ajaxPrefilter("script", function (t) {
        void 0 === t.cache && (t.cache = !1), t.crossDomain && (t.type = "GET")
    }), J.ajaxTransport("script", function (t) {
        if (t.crossDomain) {
            var e, i;
            return {
                send: function (n, r) {
                    e = J("<script>").prop({async: !0, charset: t.scriptCharset, src: t.url}).on("load error", i = function (t) {
                        e.remove(), i = null, t && r("error" === t.type ? 404 : 200, t.type)
                    }), Q.head.appendChild(e[0])
                }, abort: function () {
                    i && i()
                }
            }
        }
    });
    var Oe = [], De = /(=)\?(?=&|$)|\?\?/;
    J.ajaxSetup({
        jsonp: "callback", jsonpCallback: function () {
            var t = Oe.pop() || J.expando + "_" + he++;
            return this[t] = !0, t
        }
    }), J.ajaxPrefilter("json jsonp", function (e, i, n) {
        var r, o, a,
            s = e.jsonp !== !1 && (De.test(e.url) ? "url" : "string" == typeof e.data && !(e.contentType || "").indexOf("application/x-www-form-urlencoded") && De.test(e.data) && "data");
        return s || "jsonp" === e.dataTypes[0] ? (r = e.jsonpCallback = J.isFunction(e.jsonpCallback) ? e.jsonpCallback() : e.jsonpCallback, s ? e[s] = e[s].replace(De, "$1" + r) : e.jsonp !== !1 && (e.url += (ue.test(e.url) ? "&" : "?") + e.jsonp + "=" + r), e.converters["script json"] = function () {
            return a || J.error(r + " was not called"), a[0]
        }, e.dataTypes[0] = "json", o = t[r], t[r] = function () {
            a = arguments
        }, n.always(function () {
            t[r] = o, e[r] && (e.jsonpCallback = i.jsonpCallback, Oe.push(r)), a && J.isFunction(o) && o(a[0]), a = o = void 0
        }), "script") : void 0
    }), J.parseHTML = function (t, e, i) {
        if (!t || "string" != typeof t) return null;
        "boolean" == typeof e && (i = e, e = !1), e = e || Q;
        var n = at.exec(t), r = !i && [];
        return n ? [e.createElement(n[1])] : (n = J.buildFragment([t], e, r), r && r.length && J(r).remove(), J.merge([], n.childNodes))
    };
    var Ie = J.fn.load;
    J.fn.load = function (t, e, i) {
        if ("string" != typeof t && Ie) return Ie.apply(this, arguments);
        var n, r, o, a = this, s = t.indexOf(" ");
        return s >= 0 && (n = J.trim(t.slice(s)), t = t.slice(0, s)), J.isFunction(e) ? (i = e, e = void 0) : e && "object" == typeof e && (r = "POST"), a.length > 0 && J.ajax({
            url: t,
            type: r,
            dataType: "html",
            data: e
        }).done(function (t) {
            o = arguments, a.html(n ? J("<div>").append(J.parseHTML(t)).find(n) : t)
        }).complete(i && function (t, e) {
            a.each(i, o || [t.responseText, e, t])
        }), this
    }, J.expr.filters.animated = function (t) {
        return J.grep(J.timers, function (e) {
            return t === e.elem
        }).length
    };
    var Ne = t.document.documentElement;
    J.offset = {
        setOffset: function (t, e, i) {
            var n, r, o, a, s, l, h, u = J.css(t, "position"), c = J(t), p = {};
            "static" === u && (t.style.position = "relative"), s = c.offset(), o = J.css(t, "top"), l = J.css(t, "left"), h = ("absolute" === u || "fixed" === u) && (o + l).indexOf("auto") > -1, h ? (n = c.position(), a = n.top, r = n.left) : (a = parseFloat(o) || 0, r = parseFloat(l) || 0), J.isFunction(e) && (e = e.call(t, i, s)), null != e.top && (p.top = e.top - s.top + a), null != e.left && (p.left = e.left - s.left + r), "using" in e ? e.using.call(t, p) : c.css(p)
        }
    }, J.fn.extend({
        offset: function (t) {
            if (arguments.length) return void 0 === t ? this : this.each(function (e) {
                J.offset.setOffset(this, t, e)
            });
            var e, i, n = this[0], r = {top: 0, left: 0}, o = n && n.ownerDocument;
            return o ? (e = o.documentElement, J.contains(e, n) ? (typeof n.getBoundingClientRect !== wt && (r = n.getBoundingClientRect()), i = V(o), {
                top: r.top + i.pageYOffset - e.clientTop,
                left: r.left + i.pageXOffset - e.clientLeft
            }) : r) : void 0
        }, position: function () {
            if (this[0]) {
                var t, e, i = this[0], n = {top: 0, left: 0};
                return "fixed" === J.css(i, "position") ? e = i.getBoundingClientRect() : (t = this.offsetParent(), e = this.offset(), J.nodeName(t[0], "html") || (n = t.offset()), n.top += J.css(t[0], "borderTopWidth", !0), n.left += J.css(t[0], "borderLeftWidth", !0)), {
                    top: e.top - n.top - J.css(i, "marginTop", !0),
                    left: e.left - n.left - J.css(i, "marginLeft", !0)
                }
            }
        }, offsetParent: function () {
            return this.map(function () {
                for (var t = this.offsetParent || Ne; t && !J.nodeName(t, "html") && "static" === J.css(t, "position");) t = t.offsetParent;
                return t || Ne
            })
        }
    }), J.each({scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, function (e, i) {
        var n = "pageYOffset" === i;
        J.fn[e] = function (r) {
            return gt(this, function (e, r, o) {
                var a = V(e);
                return void 0 === o ? a ? a[i] : e[r] : void(a ? a.scrollTo(n ? t.pageXOffset : o, n ? o : t.pageYOffset) : e[r] = o)
            }, e, r, arguments.length, null)
        }
    }), J.each(["top", "left"], function (t, e) {
        J.cssHooks[e] = x(Z.pixelPosition, function (t, i) {
            return i ? (i = _(t, e), zt.test(i) ? J(t).position()[e] + "px" : i) : void 0
        })
    }), J.each({Height: "height", Width: "width"}, function (t, e) {
        J.each({padding: "inner" + t, content: e, "": "outer" + t}, function (i, n) {
            J.fn[n] = function (n, r) {
                var o = arguments.length && (i || "boolean" != typeof n), a = i || (n === !0 || r === !0 ? "margin" : "border");
                return gt(this, function (e, i, n) {
                    var r;
                    return J.isWindow(e) ? e.document.documentElement["client" + t] : 9 === e.nodeType ? (r = e.documentElement, Math.max(e.body["scroll" + t], r["scroll" + t], e.body["offset" + t], r["offset" + t], r["client" + t])) : void 0 === n ? J.css(e, i, a) : J.style(e, i, n, a)
                }, e, o ? n : void 0, o, null)
            }
        })
    }), J.fn.size = function () {
        return this.length
    }, J.fn.andSelf = J.fn.addBack, "function" == typeof define && define.amd && define("jquery", [], function () {
        return J
    });
    var ke = t.jQuery, Be = t.$;
    return J.noConflict = function (e) {
        return t.$ === J && (t.$ = Be), e && t.jQuery === J && (t.jQuery = ke), J
    }, typeof e === wt && (t.jQuery = t.$ = J), J
}), window.Modernizr = function (t, e, i) {
    function n(t) {
        f.cssText = t
    }

    function r(t, e) {
        return typeof t === e
    }

    var o, a, s, l = "2.8.3", h = {}, u = !0, c = e.documentElement, p = "modernizr", d = e.createElement(p), f = d.style,
        m = ({}.toString, " -webkit- -moz- -o- -ms- ".split(" ")), g = {}, E = [], v = E.slice, y = function (t, i, n, r) {
            var o, a, s, l, h = e.createElement("div"), u = e.body, d = u || e.createElement("body");
            if (parseInt(n, 10)) for (; n--;) s = e.createElement("div"), s.id = r ? r[n] : p + (n + 1), h.appendChild(s);
            return o = ["&#173;", '<style id="s', p, '">', t, "</style>"].join(""), h.id = p, (u ? h : d).innerHTML += o, d.appendChild(h), u || (d.style.background = "", d.style.overflow = "hidden", l = c.style.overflow, c.style.overflow = "hidden", c.appendChild(d)), a = i(h, t), u ? h.parentNode.removeChild(h) : (d.parentNode.removeChild(d), c.style.overflow = l), !!a
        }, T = {}.hasOwnProperty;
    s = r(T, "undefined") || r(T.call, "undefined") ? function (t, e) {
        return e in t && r(t.constructor.prototype[e], "undefined")
    } : function (t, e) {
        return T.call(t, e)
    }, Function.prototype.bind || (Function.prototype.bind = function (t) {
        var e = this;
        if ("function" != typeof e) throw new TypeError;
        var i = v.call(arguments, 1), n = function () {
            if (this instanceof n) {
                var r = function () {
                };
                r.prototype = e.prototype;
                var o = new r, a = e.apply(o, i.concat(v.call(arguments)));
                return Object(a) === a ? a : o
            }
            return e.apply(t, i.concat(v.call(arguments)))
        };
        return n
    }), g.touch = function () {
        var i;
        return "ontouchstart" in t || t.DocumentTouch && e instanceof DocumentTouch ? i = !0 : y(["@media (", m.join("touch-enabled),("), p, ")", "{#modernizr{top:9px;position:absolute}}"].join(""), function (t) {
            i = 9 === t.offsetTop
        }), i
    };
    for (var _ in g) s(g, _) && (a = _.toLowerCase(), h[a] = g[_](), E.push((h[a] ? "" : "no-") + a));
    return h.addTest = function (t, e) {
        if ("object" == typeof t) for (var n in t) s(t, n) && h.addTest(n, t[n]); else {
            if (t = t.toLowerCase(), h[t] !== i) return h;
            e = "function" == typeof e ? e() : e, "undefined" != typeof u && u && (c.className += " " + (e ? "" : "no-") + t), h[t] = e
        }
        return h
    }, n(""), d = o = null, function (t, e) {
        function i(t, e) {
            var i = t.createElement("p"), n = t.getElementsByTagName("head")[0] || t.documentElement;
            return i.innerHTML = "x<style>" + e + "</style>", n.insertBefore(i.lastChild, n.firstChild)
        }

        function n() {
            var t = v.elements;
            return "string" == typeof t ? t.split(" ") : t
        }

        function r(t) {
            var e = E[t[m]];
            return e || (e = {}, g++, t[m] = g, E[g] = e), e
        }

        function o(t, i, n) {
            if (i || (i = e), u) return i.createElement(t);
            n || (n = r(i));
            var o;
            return o = n.cache[t] ? n.cache[t].cloneNode() : f.test(t) ? (n.cache[t] = n.createElem(t)).cloneNode() : n.createElem(t), !o.canHaveChildren || d.test(t) || o.tagUrn ? o : n.frag.appendChild(o)
        }

        function a(t, i) {
            if (t || (t = e), u) return t.createDocumentFragment();
            i = i || r(t);
            for (var o = i.frag.cloneNode(), a = 0, s = n(), l = s.length; l > a; a++) o.createElement(s[a]);
            return o
        }

        function s(t, e) {
            e.cache || (e.cache = {}, e.createElem = t.createElement, e.createFrag = t.createDocumentFragment, e.frag = e.createFrag()), t.createElement = function (i) {
                return v.shivMethods ? o(i, t, e) : e.createElem(i)
            }, t.createDocumentFragment = Function("h,f", "return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&&(" + n().join().replace(/[\w\-]+/g, function (t) {
                return e.createElem(t), e.frag.createElement(t), 'c("' + t + '")'
            }) + ");return n}")(v, e.frag)
        }

        function l(t) {
            t || (t = e);
            var n = r(t);
            return v.shivCSS && !h && !n.hasCSS && (n.hasCSS = !!i(t, "article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}mark{background:#FF0;color:#000}template{display:none}")), u || s(t, n), t
        }

        var h, u, c = "3.7.0", p = t.html5 || {}, d = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i,
            f = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i,
            m = "_html5shiv", g = 0, E = {};
        !function () {
            try {
                var t = e.createElement("a");
                t.innerHTML = "<xyz></xyz>", h = "hidden" in t, u = 1 == t.childNodes.length || function () {
                    e.createElement("a");
                    var t = e.createDocumentFragment();
                    return "undefined" == typeof t.cloneNode || "undefined" == typeof t.createDocumentFragment || "undefined" == typeof t.createElement
                }()
            } catch (i) {
                h = !0, u = !0
            }
        }();
        var v = {
            elements: p.elements || "abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video",
            version: c,
            shivCSS: p.shivCSS !== !1,
            supportsUnknownElements: u,
            shivMethods: p.shivMethods !== !1,
            type: "default",
            shivDocument: l,
            createElement: o,
            createDocumentFragment: a
        };
        t.html5 = v, l(e)
    }(this, e), h._version = l, h._prefixes = m, h.testStyles = y, c.className = c.className.replace(/(^|\s)no-js(\s|$)/, "$1$2") + (u ? " js " + E.join(" ") : ""), h
}(this, this.document), function (t, e, i) {
    function n(t) {
        return "[object Function]" == g.call(t)
    }

    function r(t) {
        return "string" == typeof t
    }

    function o() {
    }

    function a(t) {
        return !t || "loaded" == t || "complete" == t || "uninitialized" == t
    }

    function s() {
        var t = E.shift();
        v = 1, t ? t.t ? f(function () {
            ("c" == t.t ? p.injectCss : p.injectJs)(t.s, 0, t.a, t.x, t.e, 1)
        }, 0) : (t(), s()) : v = 0
    }

    function l(t, i, n, r, o, l, h) {
        function u(e) {
            if (!d && a(c.readyState) && (y.r = d = 1, !v && s(), c.onload = c.onreadystatechange = null, e)) {
                "img" != t && f(function () {
                    _.removeChild(c)
                }, 50);
                for (var n in H[i]) H[i].hasOwnProperty(n) && H[i][n].onload()
            }
        }

        var h = h || p.errorTimeout, c = e.createElement(t), d = 0, g = 0, y = {t: n, s: i, e: o, a: l, x: h};
        1 === H[i] && (g = 1, H[i] = []), "object" == t ? c.data = i : (c.src = i, c.type = t), c.width = c.height = "0", c.onerror = c.onload = c.onreadystatechange = function () {
            u.call(this, g)
        }, E.splice(r, 0, y), "img" != t && (g || 2 === H[i] ? (_.insertBefore(c, T ? null : m), f(u, h)) : H[i].push(c))
    }

    function h(t, e, i, n, o) {
        return v = 0, e = e || "j", r(t) ? l("c" == e ? b : x, t, e, this.i++, i, n, o) : (E.splice(this.i++, 0, t), 1 == E.length && s()), this
    }

    function u() {
        var t = p;
        return t.loader = {load: h, i: 0}, t
    }

    var c, p, d = e.documentElement, f = t.setTimeout, m = e.getElementsByTagName("script")[0], g = {}.toString, E = [], v = 0,
        y = "MozAppearance" in d.style, T = y && !!e.createRange().compareNode, _ = T ? d : m.parentNode,
        d = t.opera && "[object Opera]" == g.call(t.opera), d = !!e.attachEvent && !d, x = y ? "object" : d ? "script" : "img",
        b = d ? "script" : x, R = Array.isArray || function (t) {
            return "[object Array]" == g.call(t)
        }, w = [], H = {}, M = {
            timeout: function (t, e) {
                return e.length && (t.timeout = e[0]), t
            }
        };
    p = function (t) {
        function e(t) {
            var e, i, n, t = t.split("!"), r = w.length, o = t.pop(), a = t.length, o = {url: o, origUrl: o, prefixes: t};
            for (i = 0; a > i; i++) n = t[i].split("="), (e = M[n.shift()]) && (o = e(o, n));
            for (i = 0; r > i; i++) o = w[i](o);
            return o
        }

        function a(t, r, o, a, s) {
            var l = e(t), h = l.autoCallback;
            l.url.split(".").pop().split("?").shift(), l.bypass || (r && (r = n(r) ? r : r[t] || r[a] || r[t.split("/").pop().split("?")[0]]), l.instead ? l.instead(t, r, o, a, s) : (H[l.url] ? l.noexec = !0 : H[l.url] = 1, o.load(l.url, l.forceCSS || !l.forceJS && "css" == l.url.split(".").pop().split("?").shift() ? "c" : i, l.noexec, l.attrs, l.timeout), (n(r) || n(h)) && o.load(function () {
                u(), r && r(l.origUrl, s, a), h && h(l.origUrl, s, a), H[l.url] = 2
            })))
        }

        function s(t, e) {
            function i(t, i) {
                if (t) {
                    if (r(t)) i || (c = function () {
                        var t = [].slice.call(arguments);
                        p.apply(this, t), d()
                    }), a(t, c, e, 0, h); else if (Object(t) === t) for (l in s = function () {
                        var e, i = 0;
                        for (e in t) t.hasOwnProperty(e) && i++;
                        return i
                    }(), t) t.hasOwnProperty(l) && (!i && !--s && (n(c) ? c = function () {
                        var t = [].slice.call(arguments);
                        p.apply(this, t), d()
                    } : c[l] = function (t) {
                        return function () {
                            var e = [].slice.call(arguments);
                            t && t.apply(this, e), d()
                        }
                    }(p[l])), a(t[l], c, e, l, h))
                } else !i && d()
            }

            var s, l, h = !!t.test, u = t.load || t.both, c = t.callback || o, p = c, d = t.complete || o;
            i(h ? t.yep : t.nope, !!u), u && i(u)
        }

        var l, h, c = this.yepnope.loader;
        if (r(t)) a(t, 0, c, 0); else if (R(t)) for (l = 0; l < t.length; l++) h = t[l], r(h) ? a(h, 0, c, 0) : R(h) ? p(h) : Object(h) === h && s(h, c); else Object(t) === t && s(t, c)
    }, p.addPrefix = function (t, e) {
        M[t] = e
    }, p.addFilter = function (t) {
        w.push(t)
    }, p.errorTimeout = 1e4, null == e.readyState && e.addEventListener && (e.readyState = "loading", e.addEventListener("DOMContentLoaded", c = function () {
        e.removeEventListener("DOMContentLoaded", c, 0), e.readyState = "complete"
    }, 0)), t.yepnope = u(), t.yepnope.executeStack = s, t.yepnope.injectJs = function (t, i, n, r, l, h) {
        var u, c, d = e.createElement("script"), r = r || p.errorTimeout;
        d.src = t;
        for (c in n) d.setAttribute(c, n[c]);
        i = h ? s : i || o, d.onreadystatechange = d.onload = function () {
            !u && a(d.readyState) && (u = 1, i(), d.onload = d.onreadystatechange = null)
        }, f(function () {
            u || (u = 1, i(1))
        }, r), l ? d.onload() : m.parentNode.insertBefore(d, m)
    }, t.yepnope.injectCss = function (t, i, n, r, a, l) {
        var h, r = e.createElement("link"), i = l ? s : i || o;
        r.href = t, r.rel = "stylesheet", r.type = "text/css";
        for (h in n) r.setAttribute(h, n[h]);
        a || (m.parentNode.insertBefore(r, m), f(i, 0))
    }
}(this, document), Modernizr.load = function () {
    yepnope.apply(window, [].slice.call(arguments, 0))
}, function () {
    function t(t) {
        function e(e, i, n, r, o, a) {
            for (; o >= 0 && a > o; o += t) {
                var s = r ? r[o] : o;
                n = i(n, e[s], s, e)
            }
            return n
        }

        return function (i, n, r, o) {
            n = y(n, o, 4);
            var a = !H(i) && v.keys(i), s = (a || i).length, l = t > 0 ? 0 : s - 1;
            return arguments.length < 3 && (r = i[a ? a[l] : l], l += t), e(i, n, r, a, l, s)
        }
    }

    function e(t) {
        return function (e, i, n) {
            i = T(i, n);
            for (var r = w(e), o = t > 0 ? 0 : r - 1; o >= 0 && r > o; o += t) if (i(e[o], o, e)) return o;
            return -1
        }
    }

    function i(t, e, i) {
        return function (n, r, o) {
            var a = 0, s = w(n);
            if ("number" == typeof o) t > 0 ? a = o >= 0 ? o : Math.max(o + s, a) : s = o >= 0 ? Math.min(o + 1, s) : o + s + 1; else if (i && o && s) return o = i(n, r), n[o] === r ? o : -1;
            if (r !== r) return o = e(u.call(n, a, s), v.isNaN), o >= 0 ? o + a : -1;
            for (o = t > 0 ? a : s - 1; o >= 0 && s > o; o += t) if (n[o] === r) return o;
            return -1
        }
    }

    function n(t, e) {
        var i = P.length, n = t.constructor, r = v.isFunction(n) && n.prototype || s, o = "constructor";
        for (v.has(t, o) && !v.contains(e, o) && e.push(o); i--;) o = P[i], o in t && t[o] !== r[o] && !v.contains(e, o) && e.push(o)
    }

    var r = this, o = r._, a = Array.prototype, s = Object.prototype, l = Function.prototype, h = a.push, u = a.slice, c = s.toString,
        p = s.hasOwnProperty, d = Array.isArray, f = Object.keys, m = l.bind, g = Object.create, E = function () {
        }, v = function (t) {
            return t instanceof v ? t : this instanceof v ? void(this._wrapped = t) : new v(t)
        };
    "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = v), exports._ = v) : r._ = v, v.VERSION = "1.8.3";
    var y = function (t, e, i) {
        if (void 0 === e) return t;
        switch (null == i ? 3 : i) {
            case 1:
                return function (i) {
                    return t.call(e, i)
                };
            case 2:
                return function (i, n) {
                    return t.call(e, i, n)
                };
            case 3:
                return function (i, n, r) {
                    return t.call(e, i, n, r)
                };
            case 4:
                return function (i, n, r, o) {
                    return t.call(e, i, n, r, o)
                }
        }
        return function () {
            return t.apply(e, arguments)
        }
    }, T = function (t, e, i) {
        return null == t ? v.identity : v.isFunction(t) ? y(t, e, i) : v.isObject(t) ? v.matcher(t) : v.property(t)
    };
    v.iteratee = function (t, e) {
        return T(t, e, 1 / 0)
    };
    var _ = function (t, e) {
        return function (i) {
            var n = arguments.length;
            if (2 > n || null == i) return i;
            for (var r = 1; n > r; r++) for (var o = arguments[r], a = t(o), s = a.length, l = 0; s > l; l++) {
                var h = a[l];
                e && void 0 !== i[h] || (i[h] = o[h])
            }
            return i
        }
    }, x = function (t) {
        if (!v.isObject(t)) return {};
        if (g) return g(t);
        E.prototype = t;
        var e = new E;
        return E.prototype = null, e
    }, b = function (t) {
        return function (e) {
            return null == e ? void 0 : e[t]
        }
    }, R = Math.pow(2, 53) - 1, w = b("length"), H = function (t) {
        var e = w(t);
        return "number" == typeof e && e >= 0 && R >= e
    };
    v.each = v.forEach = function (t, e, i) {
        e = y(e, i);
        var n, r;
        if (H(t)) for (n = 0, r = t.length; r > n; n++) e(t[n], n, t); else {
            var o = v.keys(t);
            for (n = 0, r = o.length; r > n; n++) e(t[o[n]], o[n], t)
        }
        return t
    }, v.map = v.collect = function (t, e, i) {
        e = T(e, i);
        for (var n = !H(t) && v.keys(t), r = (n || t).length, o = Array(r), a = 0; r > a; a++) {
            var s = n ? n[a] : a;
            o[a] = e(t[s], s, t)
        }
        return o
    }, v.reduce = v.foldl = v.inject = t(1), v.reduceRight = v.foldr = t(-1), v.find = v.detect = function (t, e, i) {
        var n;
        return n = H(t) ? v.findIndex(t, e, i) : v.findKey(t, e, i), void 0 !== n && -1 !== n ? t[n] : void 0
    }, v.filter = v.select = function (t, e, i) {
        var n = [];
        return e = T(e, i), v.each(t, function (t, i, r) {
            e(t, i, r) && n.push(t)
        }), n
    }, v.reject = function (t, e, i) {
        return v.filter(t, v.negate(T(e)), i)
    }, v.every = v.all = function (t, e, i) {
        e = T(e, i);
        for (var n = !H(t) && v.keys(t), r = (n || t).length, o = 0; r > o; o++) {
            var a = n ? n[o] : o;
            if (!e(t[a], a, t)) return !1
        }
        return !0
    }, v.some = v.any = function (t, e, i) {
        e = T(e, i);
        for (var n = !H(t) && v.keys(t), r = (n || t).length, o = 0; r > o; o++) {
            var a = n ? n[o] : o;
            if (e(t[a], a, t)) return !0
        }
        return !1
    }, v.contains = v.includes = v.include = function (t, e, i, n) {
        return H(t) || (t = v.values(t)), ("number" != typeof i || n) && (i = 0), v.indexOf(t, e, i) >= 0
    }, v.invoke = function (t, e) {
        var i = u.call(arguments, 2), n = v.isFunction(e);
        return v.map(t, function (t) {
            var r = n ? e : t[e];
            return null == r ? r : r.apply(t, i)
        })
    }, v.pluck = function (t, e) {
        return v.map(t, v.property(e))
    }, v.where = function (t, e) {
        return v.filter(t, v.matcher(e))
    }, v.findWhere = function (t, e) {
        return v.find(t, v.matcher(e))
    }, v.max = function (t, e, i) {
        var n, r, o = -1 / 0, a = -1 / 0;
        if (null == e && null != t) {
            t = H(t) ? t : v.values(t);
            for (var s = 0, l = t.length; l > s; s++) n = t[s], n > o && (o = n)
        } else e = T(e, i), v.each(t, function (t, i, n) {
            r = e(t, i, n), (r > a || r === -1 / 0 && o === -1 / 0) && (o = t, a = r)
        });
        return o
    }, v.min = function (t, e, i) {
        var n, r, o = 1 / 0, a = 1 / 0;
        if (null == e && null != t) {
            t = H(t) ? t : v.values(t);
            for (var s = 0, l = t.length; l > s; s++) n = t[s], o > n && (o = n)
        } else e = T(e, i), v.each(t, function (t, i, n) {
            r = e(t, i, n), (a > r || 1 / 0 === r && 1 / 0 === o) && (o = t, a = r)
        });
        return o
    }, v.shuffle = function (t) {
        for (var e, i = H(t) ? t : v.values(t), n = i.length, r = Array(n), o = 0; n > o; o++) e = v.random(0, o), e !== o && (r[o] = r[e]), r[e] = i[o];
        return r
    }, v.sample = function (t, e, i) {
        return null == e || i ? (H(t) || (t = v.values(t)), t[v.random(t.length - 1)]) : v.shuffle(t).slice(0, Math.max(0, e))
    }, v.sortBy = function (t, e, i) {
        return e = T(e, i), v.pluck(v.map(t, function (t, i, n) {
            return {value: t, index: i, criteria: e(t, i, n)}
        }).sort(function (t, e) {
            var i = t.criteria, n = e.criteria;
            if (i !== n) {
                if (i > n || void 0 === i) return 1;
                if (n > i || void 0 === n) return -1
            }
            return t.index - e.index
        }), "value")
    };
    var M = function (t) {
        return function (e, i, n) {
            var r = {};
            return i = T(i, n), v.each(e, function (n, o) {
                var a = i(n, o, e);
                t(r, n, a)
            }), r
        }
    };
    v.groupBy = M(function (t, e, i) {
        v.has(t, i) ? t[i].push(e) : t[i] = [e]
    }), v.indexBy = M(function (t, e, i) {
        t[i] = e
    }), v.countBy = M(function (t, e, i) {
        v.has(t, i) ? t[i]++ : t[i] = 1
    }), v.toArray = function (t) {
        return t ? v.isArray(t) ? u.call(t) : H(t) ? v.map(t, v.identity) : v.values(t) : []
    }, v.size = function (t) {
        return null == t ? 0 : H(t) ? t.length : v.keys(t).length
    }, v.partition = function (t, e, i) {
        e = T(e, i);
        var n = [], r = [];
        return v.each(t, function (t, i, o) {
            (e(t, i, o) ? n : r).push(t)
        }), [n, r]
    }, v.first = v.head = v.take = function (t, e, i) {
        return null == t ? void 0 : null == e || i ? t[0] : v.initial(t, t.length - e)
    }, v.initial = function (t, e, i) {
        return u.call(t, 0, Math.max(0, t.length - (null == e || i ? 1 : e)))
    }, v.last = function (t, e, i) {
        return null == t ? void 0 : null == e || i ? t[t.length - 1] : v.rest(t, Math.max(0, t.length - e))
    }, v.rest = v.tail = v.drop = function (t, e, i) {
        return u.call(t, null == e || i ? 1 : e)
    }, v.compact = function (t) {
        return v.filter(t, v.identity)
    };
    var S = function (t, e, i, n) {
        for (var r = [], o = 0, a = n || 0, s = w(t); s > a; a++) {
            var l = t[a];
            if (H(l) && (v.isArray(l) || v.isArguments(l))) {
                e || (l = S(l, e, i));
                var h = 0, u = l.length;
                for (r.length += u; u > h;) r[o++] = l[h++]
            } else i || (r[o++] = l)
        }
        return r
    };
    v.flatten = function (t, e) {
        return S(t, e, !1)
    }, v.without = function (t) {
        return v.difference(t, u.call(arguments, 1))
    }, v.uniq = v.unique = function (t, e, i, n) {
        v.isBoolean(e) || (n = i, i = e, e = !1), null != i && (i = T(i, n));
        for (var r = [], o = [], a = 0, s = w(t); s > a; a++) {
            var l = t[a], h = i ? i(l, a, t) : l;
            e ? (a && o === h || r.push(l), o = h) : i ? v.contains(o, h) || (o.push(h), r.push(l)) : v.contains(r, l) || r.push(l)
        }
        return r
    }, v.union = function () {
        return v.uniq(S(arguments, !0, !0))
    }, v.intersection = function (t) {
        for (var e = [], i = arguments.length, n = 0, r = w(t); r > n; n++) {
            var o = t[n];
            if (!v.contains(e, o)) {
                for (var a = 1; i > a && v.contains(arguments[a], o); a++) ;
                a === i && e.push(o)
            }
        }
        return e
    }, v.difference = function (t) {
        var e = S(arguments, !0, !0, 1);
        return v.filter(t, function (t) {
            return !v.contains(e, t)
        })
    }, v.zip = function () {
        return v.unzip(arguments)
    }, v.unzip = function (t) {
        for (var e = t && v.max(t, w).length || 0, i = Array(e), n = 0; e > n; n++) i[n] = v.pluck(t, n);
        return i
    }, v.object = function (t, e) {
        for (var i = {}, n = 0, r = w(t); r > n; n++) e ? i[t[n]] = e[n] : i[t[n][0]] = t[n][1];
        return i
    }, v.findIndex = e(1), v.findLastIndex = e(-1), v.sortedIndex = function (t, e, i, n) {
        i = T(i, n, 1);
        for (var r = i(e), o = 0, a = w(t); a > o;) {
            var s = Math.floor((o + a) / 2);
            i(t[s]) < r ? o = s + 1 : a = s
        }
        return o
    }, v.indexOf = i(1, v.findIndex, v.sortedIndex), v.lastIndexOf = i(-1, v.findLastIndex), v.range = function (t, e, i) {
        null == e && (e = t || 0, t = 0), i = i || 1;
        for (var n = Math.max(Math.ceil((e - t) / i), 0), r = Array(n), o = 0; n > o; o++, t += i) r[o] = t;
        return r
    };
    var C = function (t, e, i, n, r) {
        if (!(n instanceof e)) return t.apply(i, r);
        var o = x(t.prototype), a = t.apply(o, r);
        return v.isObject(a) ? a : o
    };
    v.bind = function (t, e) {
        if (m && t.bind === m) return m.apply(t, u.call(arguments, 1));
        if (!v.isFunction(t)) throw new TypeError("Bind must be called on a function");
        var i = u.call(arguments, 2), n = function () {
            return C(t, n, e, this, i.concat(u.call(arguments)))
        };
        return n
    }, v.partial = function (t) {
        var e = u.call(arguments, 1), i = function () {
            for (var n = 0, r = e.length, o = Array(r), a = 0; r > a; a++) o[a] = e[a] === v ? arguments[n++] : e[a];
            for (; n < arguments.length;) o.push(arguments[n++]);
            return C(t, i, this, this, o)
        };
        return i
    }, v.bindAll = function (t) {
        var e, i, n = arguments.length;
        if (1 >= n) throw new Error("bindAll must be passed function names");
        for (e = 1; n > e; e++) i = arguments[e], t[i] = v.bind(t[i], t);
        return t
    }, v.memoize = function (t, e) {
        var i = function (n) {
            var r = i.cache, o = "" + (e ? e.apply(this, arguments) : n);
            return v.has(r, o) || (r[o] = t.apply(this, arguments)), r[o]
        };
        return i.cache = {}, i
    }, v.delay = function (t, e) {
        var i = u.call(arguments, 2);
        return setTimeout(function () {
            return t.apply(null, i)
        }, e)
    }, v.defer = v.partial(v.delay, v, 1), v.throttle = function (t, e, i) {
        var n, r, o, a = null, s = 0;
        i || (i = {});
        var l = function () {
            s = i.leading === !1 ? 0 : v.now(), a = null, o = t.apply(n, r), a || (n = r = null)
        };
        return function () {
            var h = v.now();
            s || i.leading !== !1 || (s = h);
            var u = e - (h - s);
            return n = this, r = arguments, 0 >= u || u > e ? (a && (clearTimeout(a), a = null), s = h, o = t.apply(n, r), a || (n = r = null)) : a || i.trailing === !1 || (a = setTimeout(l, u)), o
        }
    }, v.debounce = function (t, e, i) {
        var n, r, o, a, s, l = function () {
            var h = v.now() - a;
            e > h && h >= 0 ? n = setTimeout(l, e - h) : (n = null, i || (s = t.apply(o, r), n || (o = r = null)))
        };
        return function () {
            o = this, r = arguments, a = v.now();
            var h = i && !n;
            return n || (n = setTimeout(l, e)), h && (s = t.apply(o, r), o = r = null), s
        }
    }, v.wrap = function (t, e) {
        return v.partial(e, t)
    }, v.negate = function (t) {
        return function () {
            return !t.apply(this, arguments)
        }
    }, v.compose = function () {
        var t = arguments, e = t.length - 1;
        return function () {
            for (var i = e, n = t[e].apply(this, arguments); i--;) n = t[i].call(this, n);
            return n
        }
    }, v.after = function (t, e) {
        return function () {
            return --t < 1 ? e.apply(this, arguments) : void 0
        }
    }, v.before = function (t, e) {
        var i;
        return function () {
            return --t > 0 && (i = e.apply(this, arguments)), 1 >= t && (e = null), i
        }
    }, v.once = v.partial(v.before, 2);
    var A = !{toString: null}.propertyIsEnumerable("toString"),
        P = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"];
    v.keys = function (t) {
        if (!v.isObject(t)) return [];
        if (f) return f(t);
        var e = [];
        for (var i in t) v.has(t, i) && e.push(i);
        return A && n(t, e), e
    }, v.allKeys = function (t) {
        if (!v.isObject(t)) return [];
        var e = [];
        for (var i in t) e.push(i);
        return A && n(t, e), e
    }, v.values = function (t) {
        for (var e = v.keys(t), i = e.length, n = Array(i), r = 0; i > r; r++) n[r] = t[e[r]];
        return n
    }, v.mapObject = function (t, e, i) {
        e = T(e, i);
        for (var n, r = v.keys(t), o = r.length, a = {}, s = 0; o > s; s++) n = r[s], a[n] = e(t[n], n, t);
        return a
    }, v.pairs = function (t) {
        for (var e = v.keys(t), i = e.length, n = Array(i), r = 0; i > r; r++) n[r] = [e[r], t[e[r]]];
        return n
    }, v.invert = function (t) {
        for (var e = {}, i = v.keys(t), n = 0, r = i.length; r > n; n++) e[t[i[n]]] = i[n];
        return e
    }, v.functions = v.methods = function (t) {
        var e = [];
        for (var i in t) v.isFunction(t[i]) && e.push(i);
        return e.sort()
    }, v.extend = _(v.allKeys), v.extendOwn = v.assign = _(v.keys), v.findKey = function (t, e, i) {
        e = T(e, i);
        for (var n, r = v.keys(t), o = 0, a = r.length; a > o; o++) if (n = r[o], e(t[n], n, t)) return n
    }, v.pick = function (t, e, i) {
        var n, r, o = {}, a = t;
        if (null == a) return o;
        v.isFunction(e) ? (r = v.allKeys(a), n = y(e, i)) : (r = S(arguments, !1, !1, 1), n = function (t, e, i) {
            return e in i
        }, a = Object(a));
        for (var s = 0, l = r.length; l > s; s++) {
            var h = r[s], u = a[h];
            n(u, h, a) && (o[h] = u)
        }
        return o
    }, v.omit = function (t, e, i) {
        if (v.isFunction(e)) e = v.negate(e); else {
            var n = v.map(S(arguments, !1, !1, 1), String);
            e = function (t, e) {
                return !v.contains(n, e)
            }
        }
        return v.pick(t, e, i)
    }, v.defaults = _(v.allKeys, !0), v.create = function (t, e) {
        var i = x(t);
        return e && v.extendOwn(i, e), i
    }, v.clone = function (t) {
        return v.isObject(t) ? v.isArray(t) ? t.slice() : v.extend({}, t) : t
    }, v.tap = function (t, e) {
        return e(t), t
    }, v.isMatch = function (t, e) {
        var i = v.keys(e), n = i.length;
        if (null == t) return !n;
        for (var r = Object(t), o = 0; n > o; o++) {
            var a = i[o];
            if (e[a] !== r[a] || !(a in r)) return !1
        }
        return !0
    };
    var L = function (t, e, i, n) {
        if (t === e) return 0 !== t || 1 / t === 1 / e;
        if (null == t || null == e) return t === e;
        t instanceof v && (t = t._wrapped), e instanceof v && (e = e._wrapped);
        var r = c.call(t);
        if (r !== c.call(e)) return !1;
        switch (r) {
            case"[object RegExp]":
            case"[object String]":
                return "" + t == "" + e;
            case"[object Number]":
                return +t !== +t ? +e !== +e : 0 === +t ? 1 / +t === 1 / e : +t === +e;
            case"[object Date]":
            case"[object Boolean]":
                return +t === +e
        }
        var o = "[object Array]" === r;
        if (!o) {
            if ("object" != typeof t || "object" != typeof e) return !1;
            var a = t.constructor, s = e.constructor;
            if (a !== s && !(v.isFunction(a) && a instanceof a && v.isFunction(s) && s instanceof s) && "constructor" in t && "constructor" in e) return !1
        }
        i = i || [], n = n || [];
        for (var l = i.length; l--;) if (i[l] === t) return n[l] === e;
        if (i.push(t), n.push(e), o) {
            if (l = t.length, l !== e.length) return !1;
            for (; l--;) if (!L(t[l], e[l], i, n)) return !1
        } else {
            var h, u = v.keys(t);
            if (l = u.length, v.keys(e).length !== l) return !1;
            for (; l--;) if (h = u[l], !v.has(e, h) || !L(t[h], e[h], i, n)) return !1
        }
        return i.pop(), n.pop(), !0
    };
    v.isEqual = function (t, e) {
        return L(t, e)
    }, v.isEmpty = function (t) {
        return null == t ? !0 : H(t) && (v.isArray(t) || v.isString(t) || v.isArguments(t)) ? 0 === t.length : 0 === v.keys(t).length
    }, v.isElement = function (t) {
        return !(!t || 1 !== t.nodeType)
    }, v.isArray = d || function (t) {
        return "[object Array]" === c.call(t)
    }, v.isObject = function (t) {
        var e = typeof t;
        return "function" === e || "object" === e && !!t
    }, v.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error"], function (t) {
        v["is" + t] = function (e) {
            return c.call(e) === "[object " + t + "]"
        }
    }), v.isArguments(arguments) || (v.isArguments = function (t) {
        return v.has(t, "callee")
    }), "function" != typeof/./ && "object" != typeof Int8Array && (v.isFunction = function (t) {
        return "function" == typeof t || !1
    }), v.isFinite = function (t) {
        return isFinite(t) && !isNaN(parseFloat(t))
    }, v.isNaN = function (t) {
        return v.isNumber(t) && t !== +t
    }, v.isBoolean = function (t) {
        return t === !0 || t === !1 || "[object Boolean]" === c.call(t)
    }, v.isNull = function (t) {
        return null === t
    }, v.isUndefined = function (t) {
        return void 0 === t
    }, v.has = function (t, e) {
        return null != t && p.call(t, e)
    }, v.noConflict = function () {
        return r._ = o, this
    }, v.identity = function (t) {
        return t
    }, v.constant = function (t) {
        return function () {
            return t
        }
    }, v.noop = function () {
    }, v.property = b, v.propertyOf = function (t) {
        return null == t ? function () {
        } : function (e) {
            return t[e]
        }
    }, v.matcher = v.matches = function (t) {
        return t = v.extendOwn({}, t), function (e) {
            return v.isMatch(e, t)
        }
    }, v.times = function (t, e, i) {
        var n = Array(Math.max(0, t));
        e = y(e, i, 1);
        for (var r = 0; t > r; r++) n[r] = e(r);
        return n
    }, v.random = function (t, e) {
        return null == e && (e = t, t = 0), t + Math.floor(Math.random() * (e - t + 1))
    }, v.now = Date.now || function () {
        return (new Date).getTime()
    };
    var O = {"&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#x27;", "`": "&#x60;"}, D = v.invert(O), I = function (t) {
        var e = function (e) {
            return t[e]
        }, i = "(?:" + v.keys(t).join("|") + ")", n = RegExp(i), r = RegExp(i, "g");
        return function (t) {
            return t = null == t ? "" : "" + t, n.test(t) ? t.replace(r, e) : t
        }
    };
    v.escape = I(O), v.unescape = I(D), v.result = function (t, e, i) {
        var n = null == t ? void 0 : t[e];
        return void 0 === n && (n = i), v.isFunction(n) ? n.call(t) : n
    };
    var N = 0;
    v.uniqueId = function (t) {
        var e = ++N + "";
        return t ? t + e : e
    }, v.templateSettings = {evaluate: /<%([\s\S]+?)%>/g, interpolate: /<%=([\s\S]+?)%>/g, escape: /<%-([\s\S]+?)%>/g};
    var k = /(.)^/, B = {"'": "'", "\\": "\\", "\r": "r", "\n": "n", "\u2028": "u2028", "\u2029": "u2029"}, F = /\\|'|\r|\n|\u2028|\u2029/g,
        U = function (t) {
            return "\\" + B[t]
        };
    v.template = function (t, e, i) {
        !e && i && (e = i), e = v.defaults({}, e, v.templateSettings);
        var n = RegExp([(e.escape || k).source, (e.interpolate || k).source, (e.evaluate || k).source].join("|") + "|$", "g"), r = 0,
            o = "__p+='";
        t.replace(n, function (e, i, n, a, s) {
            return o += t.slice(r, s).replace(F, U), r = s + e.length, i ? o += "'+\n((__t=(" + i + "))==null?'':_.escape(__t))+\n'" : n ? o += "'+\n((__t=(" + n + "))==null?'':__t)+\n'" : a && (o += "';\n" + a + "\n__p+='"), e
        }), o += "';\n", e.variable || (o = "with(obj||{}){\n" + o + "}\n"), o = "var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n" + o + "return __p;\n";
        try {
            var a = new Function(e.variable || "obj", "_", o)
        } catch (s) {
            throw s.source = o, s
        }
        var l = function (t) {
            return a.call(this, t, v)
        }, h = e.variable || "obj";
        return l.source = "function(" + h + "){\n" + o + "}", l
    }, v.chain = function (t) {
        var e = v(t);
        return e._chain = !0, e
    };
    var V = function (t, e) {
        return t._chain ? v(e).chain() : e
    };
    v.mixin = function (t) {
        v.each(v.functions(t), function (e) {
            var i = v[e] = t[e];
            v.prototype[e] = function () {
                var t = [this._wrapped];
                return h.apply(t, arguments), V(this, i.apply(v, t))
            }
        })
    }, v.mixin(v), v.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function (t) {
        var e = a[t];
        v.prototype[t] = function () {
            var i = this._wrapped;
            return e.apply(i, arguments), "shift" !== t && "splice" !== t || 0 !== i.length || delete i[0], V(this, i)
        }
    }), v.each(["concat", "join", "slice"], function (t) {
        var e = a[t];
        v.prototype[t] = function () {
            return V(this, e.apply(this._wrapped, arguments))
        }
    }), v.prototype.value = function () {
        return this._wrapped
    }, v.prototype.valueOf = v.prototype.toJSON = v.prototype.value, v.prototype.toString = function () {
        return "" + this._wrapped
    }, "function" == typeof define && define.amd && define("underscore", [], function () {
        return v
    })
}.call(this), function (t) {
    var e = "object" == typeof self && self.self === self && self || "object" == typeof global && global.global === global && global;
    if ("function" == typeof define && define.amd) define(["underscore", "jquery", "exports"], function (i, n, r) {
        e.Backbone = t(e, r, i, n)
    }); else if ("undefined" != typeof exports) {
        var i, n = require("underscore");
        try {
            i = require("jquery")
        } catch (r) {
        }
        t(e, exports, n, i)
    } else e.Backbone = t(e, {}, e._, e.jQuery || e.Zepto || e.ender || e.$)
}(function (t, e, i, n) {
    var r = t.Backbone, o = Array.prototype.slice;
    e.VERSION = "1.3.3", e.$ = n, e.noConflict = function () {
        return t.Backbone = r, this
    }, e.emulateHTTP = !1, e.emulateJSON = !1;
    var a = function (t, e, n) {
        switch (t) {
            case 1:
                return function () {
                    return i[e](this[n])
                };
            case 2:
                return function (t) {
                    return i[e](this[n], t)
                };
            case 3:
                return function (t, r) {
                    return i[e](this[n], l(t, this), r)
                };
            case 4:
                return function (t, r, o) {
                    return i[e](this[n], l(t, this), r, o)
                };
            default:
                return function () {
                    var t = o.call(arguments);
                    return t.unshift(this[n]), i[e].apply(i, t)
                }
        }
    }, s = function (t, e, n) {
        i.each(e, function (e, r) {
            i[r] && (t.prototype[r] = a(e, r, n))
        })
    }, l = function (t, e) {
        return i.isFunction(t) ? t : i.isObject(t) && !e._isModel(t) ? h(t) : i.isString(t) ? function (e) {
            return e.get(t)
        } : t
    }, h = function (t) {
        var e = i.matches(t);
        return function (t) {
            return e(t.attributes)
        }
    }, u = e.Events = {}, c = /\s+/, p = function (t, e, n, r, o) {
        var a, s = 0;
        if (n && "object" == typeof n) {
            void 0 !== r && "context" in o && void 0 === o.context && (o.context = r);
            for (a = i.keys(n); s < a.length; s++) e = p(t, e, a[s], n[a[s]], o)
        } else if (n && c.test(n)) for (a = n.split(c); s < a.length; s++) e = t(e, a[s], r, o); else e = t(e, n, r, o);
        return e
    };
    u.on = function (t, e, i) {
        return d(this, t, e, i)
    };
    var d = function (t, e, i, n, r) {
        if (t._events = p(f, t._events || {}, e, i, {context: n, ctx: t, listening: r}), r) {
            var o = t._listeners || (t._listeners = {});
            o[r.id] = r
        }
        return t
    };
    u.listenTo = function (t, e, n) {
        if (!t) return this;
        var r = t._listenId || (t._listenId = i.uniqueId("l")), o = this._listeningTo || (this._listeningTo = {}), a = o[r];
        if (!a) {
            var s = this._listenId || (this._listenId = i.uniqueId("l"));
            a = o[r] = {obj: t, objId: r, id: s, listeningTo: o, count: 0}
        }
        return d(t, e, n, this, a), this
    };
    var f = function (t, e, i, n) {
        if (i) {
            var r = t[e] || (t[e] = []), o = n.context, a = n.ctx, s = n.listening;
            s && s.count++, r.push({callback: i, context: o, ctx: o || a, listening: s})
        }
        return t
    };
    u.off = function (t, e, i) {
        return this._events ? (this._events = p(m, this._events, t, e, {context: i, listeners: this._listeners}), this) : this
    }, u.stopListening = function (t, e, n) {
        var r = this._listeningTo;
        if (!r) return this;
        for (var o = t ? [t._listenId] : i.keys(r), a = 0; a < o.length; a++) {
            var s = r[o[a]];
            if (!s) break;
            s.obj.off(e, n, this)
        }
        return this
    };
    var m = function (t, e, n, r) {
        if (t) {
            var o, a = 0, s = r.context, l = r.listeners;
            if (e || n || s) {
                for (var h = e ? [e] : i.keys(t); a < h.length; a++) {
                    e = h[a];
                    var u = t[e];
                    if (!u) break;
                    for (var c = [], p = 0; p < u.length; p++) {
                        var d = u[p];
                        n && n !== d.callback && n !== d.callback._callback || s && s !== d.context ? c.push(d) : (o = d.listening, o && 0 === --o.count && (delete l[o.id], delete o.listeningTo[o.objId]))
                    }
                    c.length ? t[e] = c : delete t[e]
                }
                return t
            }
            for (var f = i.keys(l); a < f.length; a++) o = l[f[a]], delete l[o.id], delete o.listeningTo[o.objId]
        }
    };
    u.once = function (t, e, n) {
        var r = p(g, {}, t, e, i.bind(this.off, this));
        return "string" == typeof t && null == n && (e = void 0), this.on(r, e, n)
    }, u.listenToOnce = function (t, e, n) {
        var r = p(g, {}, e, n, i.bind(this.stopListening, this, t));
        return this.listenTo(t, r)
    };
    var g = function (t, e, n, r) {
        if (n) {
            var o = t[e] = i.once(function () {
                r(e, o), n.apply(this, arguments)
            });
            o._callback = n
        }
        return t
    };
    u.trigger = function (t) {
        if (!this._events) return this;
        for (var e = Math.max(0, arguments.length - 1), i = Array(e), n = 0; e > n; n++) i[n] = arguments[n + 1];
        return p(E, this._events, t, void 0, i), this
    };
    var E = function (t, e, i, n) {
        if (t) {
            var r = t[e], o = t.all;
            r && o && (o = o.slice()), r && v(r, n), o && v(o, [e].concat(n))
        }
        return t
    }, v = function (t, e) {
        var i, n = -1, r = t.length, o = e[0], a = e[1], s = e[2];
        switch (e.length) {
            case 0:
                for (; ++n < r;) (i = t[n]).callback.call(i.ctx);
                return;
            case 1:
                for (; ++n < r;) (i = t[n]).callback.call(i.ctx, o);
                return;
            case 2:
                for (; ++n < r;) (i = t[n]).callback.call(i.ctx, o, a);
                return;
            case 3:
                for (; ++n < r;) (i = t[n]).callback.call(i.ctx, o, a, s);
                return;
            default:
                for (; ++n < r;) (i = t[n]).callback.apply(i.ctx, e);
                return
        }
    };
    u.bind = u.on, u.unbind = u.off, i.extend(e, u);
    var y = e.Model = function (t, e) {
        var n = t || {};
        e || (e = {}), this.cid = i.uniqueId(this.cidPrefix), this.attributes = {}, e.collection && (this.collection = e.collection), e.parse && (n = this.parse(n, e) || {});
        var r = i.result(this, "defaults");
        n = i.defaults(i.extend({}, r, n), r), this.set(n, e), this.changed = {}, this.initialize.apply(this, arguments)
    };
    i.extend(y.prototype, u, {
        changed: null, validationError: null, idAttribute: "id", cidPrefix: "c", initialize: function () {
        }, toJSON: function (t) {
            return i.clone(this.attributes)
        }, sync: function () {
            return e.sync.apply(this, arguments)
        }, get: function (t) {
            return this.attributes[t]
        }, escape: function (t) {
            return i.escape(this.get(t))
        }, has: function (t) {
            return null != this.get(t)
        }, matches: function (t) {
            return !!i.iteratee(t, this)(this.attributes)
        }, set: function (t, e, n) {
            if (null == t) return this;
            var r;
            if ("object" == typeof t ? (r = t, n = e) : (r = {})[t] = e, n || (n = {}), !this._validate(r, n)) return !1;
            var o = n.unset, a = n.silent, s = [], l = this._changing;
            this._changing = !0, l || (this._previousAttributes = i.clone(this.attributes), this.changed = {});
            var h = this.attributes, u = this.changed, c = this._previousAttributes;
            for (var p in r) e = r[p], i.isEqual(h[p], e) || s.push(p), i.isEqual(c[p], e) ? delete u[p] : u[p] = e, o ? delete h[p] : h[p] = e;
            if (this.idAttribute in r && (this.id = this.get(this.idAttribute)), !a) {
                s.length && (this._pending = n);
                for (var d = 0; d < s.length; d++) this.trigger("change:" + s[d], this, h[s[d]], n)
            }
            if (l) return this;
            if (!a) for (; this._pending;) n = this._pending, this._pending = !1, this.trigger("change", this, n);
            return this._pending = !1, this._changing = !1, this
        }, unset: function (t, e) {
            return this.set(t, void 0, i.extend({}, e, {unset: !0}))
        }, clear: function (t) {
            var e = {};
            for (var n in this.attributes) e[n] = void 0;
            return this.set(e, i.extend({}, t, {unset: !0}))
        }, hasChanged: function (t) {
            return null == t ? !i.isEmpty(this.changed) : i.has(this.changed, t)
        }, changedAttributes: function (t) {
            if (!t) return this.hasChanged() ? i.clone(this.changed) : !1;
            var e = this._changing ? this._previousAttributes : this.attributes, n = {};
            for (var r in t) {
                var o = t[r];
                i.isEqual(e[r], o) || (n[r] = o)
            }
            return i.size(n) ? n : !1
        }, previous: function (t) {
            return null != t && this._previousAttributes ? this._previousAttributes[t] : null
        }, previousAttributes: function () {
            return i.clone(this._previousAttributes)
        }, fetch: function (t) {
            t = i.extend({parse: !0}, t);
            var e = this, n = t.success;
            return t.success = function (i) {
                var r = t.parse ? e.parse(i, t) : i;
                return e.set(r, t) ? (n && n.call(t.context, e, i, t), void e.trigger("sync", e, i, t)) : !1
            }, V(this, t), this.sync("read", this, t)
        }, save: function (t, e, n) {
            var r;
            null == t || "object" == typeof t ? (r = t, n = e) : (r = {})[t] = e, n = i.extend({validate: !0, parse: !0}, n);
            var o = n.wait;
            if (r && !o) {
                if (!this.set(r, n)) return !1
            } else if (!this._validate(r, n)) return !1;
            var a = this, s = n.success, l = this.attributes;
            n.success = function (t) {
                a.attributes = l;
                var e = n.parse ? a.parse(t, n) : t;
                return o && (e = i.extend({}, r, e)), e && !a.set(e, n) ? !1 : (s && s.call(n.context, a, t, n), void a.trigger("sync", a, t, n))
            }, V(this, n), r && o && (this.attributes = i.extend({}, l, r));
            var h = this.isNew() ? "create" : n.patch ? "patch" : "update";
            "patch" !== h || n.attrs || (n.attrs = r);
            var u = this.sync(h, this, n);
            return this.attributes = l, u
        }, destroy: function (t) {
            t = t ? i.clone(t) : {};
            var e = this, n = t.success, r = t.wait, o = function () {
                e.stopListening(), e.trigger("destroy", e, e.collection, t)
            };
            t.success = function (i) {
                r && o(), n && n.call(t.context, e, i, t), e.isNew() || e.trigger("sync", e, i, t)
            };
            var a = !1;
            return this.isNew() ? i.defer(t.success) : (V(this, t), a = this.sync("delete", this, t)), r || o(), a
        }, url: function () {
            var t = i.result(this, "urlRoot") || i.result(this.collection, "url") || U();
            if (this.isNew()) return t;
            var e = this.get(this.idAttribute);
            return t.replace(/[^\/]$/, "$&/") + encodeURIComponent(e)
        }, parse: function (t, e) {
            return t
        }, clone: function () {
            return new this.constructor(this.attributes)
        }, isNew: function () {
            return !this.has(this.idAttribute)
        }, isValid: function (t) {
            return this._validate({}, i.extend({}, t, {validate: !0}))
        }, _validate: function (t, e) {
            if (!e.validate || !this.validate) return !0;
            t = i.extend({}, this.attributes, t);
            var n = this.validationError = this.validate(t, e) || null;
            return n ? (this.trigger("invalid", this, n, i.extend(e, {validationError: n})), !1) : !0
        }
    });
    var T = {keys: 1, values: 1, pairs: 1, invert: 1, pick: 0, omit: 0, chain: 1, isEmpty: 1};
    s(y, T, "attributes");
    var _ = e.Collection = function (t, e) {
        e || (e = {}), e.model && (this.model = e.model), void 0 !== e.comparator && (this.comparator = e.comparator), this._reset(), this.initialize.apply(this, arguments), t && this.reset(t, i.extend({silent: !0}, e))
    }, x = {add: !0, remove: !0, merge: !0}, b = {add: !0, remove: !1}, R = function (t, e, i) {
        i = Math.min(Math.max(i, 0), t.length);
        var n, r = Array(t.length - i), o = e.length;
        for (n = 0; n < r.length; n++) r[n] = t[n + i];
        for (n = 0; o > n; n++) t[n + i] = e[n];
        for (n = 0; n < r.length; n++) t[n + o + i] = r[n]
    };
    i.extend(_.prototype, u, {
        model: y, initialize: function () {
        }, toJSON: function (t) {
            return this.map(function (e) {
                return e.toJSON(t)
            })
        }, sync: function () {
            return e.sync.apply(this, arguments)
        }, add: function (t, e) {
            return this.set(t, i.extend({merge: !1}, e, b))
        }, remove: function (t, e) {
            e = i.extend({}, e);
            var n = !i.isArray(t);
            t = n ? [t] : t.slice();
            var r = this._removeModels(t, e);
            return !e.silent && r.length && (e.changes = {added: [], merged: [], removed: r}, this.trigger("update", this, e)), n ? r[0] : r
        }, set: function (t, e) {
            if (null != t) {
                e = i.extend({}, x, e), e.parse && !this._isModel(t) && (t = this.parse(t, e) || []);
                var n = !i.isArray(t);
                t = n ? [t] : t.slice();
                var r = e.at;
                null != r && (r = +r), r > this.length && (r = this.length), 0 > r && (r += this.length + 1);
                var o, a, s = [], l = [], h = [], u = [], c = {}, p = e.add, d = e.merge, f = e.remove, m = !1,
                    g = this.comparator && null == r && e.sort !== !1, E = i.isString(this.comparator) ? this.comparator : null;
                for (a = 0; a < t.length; a++) {
                    o = t[a];
                    var v = this.get(o);
                    if (v) {
                        if (d && o !== v) {
                            var y = this._isModel(o) ? o.attributes : o;
                            e.parse && (y = v.parse(y, e)), v.set(y, e), h.push(v), g && !m && (m = v.hasChanged(E))
                        }
                        c[v.cid] || (c[v.cid] = !0, s.push(v)), t[a] = v
                    } else p && (o = t[a] = this._prepareModel(o, e), o && (l.push(o), this._addReference(o, e), c[o.cid] = !0, s.push(o)))
                }
                if (f) {
                    for (a = 0; a < this.length; a++) o = this.models[a], c[o.cid] || u.push(o);
                    u.length && this._removeModels(u, e)
                }
                var T = !1, _ = !g && p && f;
                if (s.length && _ ? (T = this.length !== s.length || i.some(this.models, function (t, e) {
                        return t !== s[e]
                    }), this.models.length = 0, R(this.models, s, 0), this.length = this.models.length) : l.length && (g && (m = !0), R(this.models, l, null == r ? this.length : r), this.length = this.models.length), m && this.sort({silent: !0}), !e.silent) {
                    for (a = 0; a < l.length; a++) null != r && (e.index = r + a), o = l[a], o.trigger("add", o, this, e);
                    (m || T) && this.trigger("sort", this, e), (l.length || u.length || h.length) && (e.changes = {
                        added: l,
                        removed: u,
                        merged: h
                    }, this.trigger("update", this, e))
                }
                return n ? t[0] : t
            }
        }, reset: function (t, e) {
            e = e ? i.clone(e) : {};
            for (var n = 0; n < this.models.length; n++) this._removeReference(this.models[n], e);
            return e.previousModels = this.models, this._reset(), t = this.add(t, i.extend({silent: !0}, e)), e.silent || this.trigger("reset", this, e), t
        }, push: function (t, e) {
            return this.add(t, i.extend({at: this.length}, e))
        }, pop: function (t) {
            var e = this.at(this.length - 1);
            return this.remove(e, t)
        }, unshift: function (t, e) {
            return this.add(t, i.extend({at: 0}, e))
        }, shift: function (t) {
            var e = this.at(0);
            return this.remove(e, t)
        }, slice: function () {
            return o.apply(this.models, arguments)
        }, get: function (t) {
            return null != t ? this._byId[t] || this._byId[this.modelId(t.attributes || t)] || t.cid && this._byId[t.cid] : void 0
        }, has: function (t) {
            return null != this.get(t)
        }, at: function (t) {
            return 0 > t && (t += this.length), this.models[t]
        }, where: function (t, e) {
            return this[e ? "find" : "filter"](t)
        }, findWhere: function (t) {
            return this.where(t, !0)
        }, sort: function (t) {
            var e = this.comparator;
            if (!e) throw new Error("Cannot sort a set without a comparator");
            t || (t = {});
            var n = e.length;
            return i.isFunction(e) && (e = i.bind(e, this)), 1 === n || i.isString(e) ? this.models = this.sortBy(e) : this.models.sort(e), t.silent || this.trigger("sort", this, t), this
        }, pluck: function (t) {
            return this.map(t + "")
        }, fetch: function (t) {
            t = i.extend({parse: !0}, t);
            var e = t.success, n = this;
            return t.success = function (i) {
                var r = t.reset ? "reset" : "set";
                n[r](i, t), e && e.call(t.context, n, i, t), n.trigger("sync", n, i, t)
            }, V(this, t), this.sync("read", this, t)
        }, create: function (t, e) {
            e = e ? i.clone(e) : {};
            var n = e.wait;
            if (t = this._prepareModel(t, e), !t) return !1;
            n || this.add(t, e);
            var r = this, o = e.success;
            return e.success = function (t, e, i) {
                n && r.add(t, i), o && o.call(i.context, t, e, i)
            }, t.save(null, e), t
        }, parse: function (t, e) {
            return t
        }, clone: function () {
            return new this.constructor(this.models, {model: this.model, comparator: this.comparator})
        }, modelId: function (t) {
            return t[this.model.prototype.idAttribute || "id"]
        }, _reset: function () {
            this.length = 0, this.models = [], this._byId = {}
        }, _prepareModel: function (t, e) {
            if (this._isModel(t)) return t.collection || (t.collection = this), t;
            e = e ? i.clone(e) : {}, e.collection = this;
            var n = new this.model(t, e);
            return n.validationError ? (this.trigger("invalid", this, n.validationError, e), !1) : n
        }, _removeModels: function (t, e) {
            for (var i = [], n = 0; n < t.length; n++) {
                var r = this.get(t[n]);
                if (r) {
                    var o = this.indexOf(r);
                    this.models.splice(o, 1), this.length--, delete this._byId[r.cid];
                    var a = this.modelId(r.attributes);
                    null != a && delete this._byId[a], e.silent || (e.index = o, r.trigger("remove", r, this, e)), i.push(r), this._removeReference(r, e)
                }
            }
            return i
        }, _isModel: function (t) {
            return t instanceof y
        }, _addReference: function (t, e) {
            this._byId[t.cid] = t;
            var i = this.modelId(t.attributes);
            null != i && (this._byId[i] = t), t.on("all", this._onModelEvent, this)
        }, _removeReference: function (t, e) {
            delete this._byId[t.cid];
            var i = this.modelId(t.attributes);
            null != i && delete this._byId[i], this === t.collection && delete t.collection, t.off("all", this._onModelEvent, this)
        }, _onModelEvent: function (t, e, i, n) {
            if (e) {
                if (("add" === t || "remove" === t) && i !== this) return;
                if ("destroy" === t && this.remove(e, n), "change" === t) {
                    var r = this.modelId(e.previousAttributes()), o = this.modelId(e.attributes);
                    r !== o && (null != r && delete this._byId[r], null != o && (this._byId[o] = e))
                }
            }
            this.trigger.apply(this, arguments)
        }
    });
    var w = {
        forEach: 3,
        each: 3,
        map: 3,
        collect: 3,
        reduce: 0,
        foldl: 0,
        inject: 0,
        reduceRight: 0,
        foldr: 0,
        find: 3,
        detect: 3,
        filter: 3,
        select: 3,
        reject: 3,
        every: 3,
        all: 3,
        some: 3,
        any: 3,
        include: 3,
        includes: 3,
        contains: 3,
        invoke: 0,
        max: 3,
        min: 3,
        toArray: 1,
        size: 1,
        first: 3,
        head: 3,
        take: 3,
        initial: 3,
        rest: 3,
        tail: 3,
        drop: 3,
        last: 3,
        without: 0,
        difference: 0,
        indexOf: 3,
        shuffle: 1,
        lastIndexOf: 3,
        isEmpty: 1,
        chain: 1,
        sample: 3,
        partition: 3,
        groupBy: 3,
        countBy: 3,
        sortBy: 3,
        indexBy: 3,
        findIndex: 3,
        findLastIndex: 3
    };
    s(_, w, "models");
    var H = e.View = function (t) {
        this.cid = i.uniqueId("view"), i.extend(this, i.pick(t, S)), this._ensureElement(), this.initialize.apply(this, arguments)
    }, M = /^(\S+)\s*(.*)$/, S = ["model", "collection", "el", "id", "attributes", "className", "tagName", "events"];
    i.extend(H.prototype, u, {
        tagName: "div", $: function (t) {
            return this.$el.find(t)
        }, initialize: function () {
        }, render: function () {
            return this
        }, remove: function () {
            return this._removeElement(), this.stopListening(), this
        }, _removeElement: function () {
            this.$el.remove()
        }, setElement: function (t) {
            return this.undelegateEvents(), this._setElement(t), this.delegateEvents(), this
        }, _setElement: function (t) {
            this.$el = t instanceof e.$ ? t : e.$(t), this.el = this.$el[0]
        }, delegateEvents: function (t) {
            if (t || (t = i.result(this, "events")), !t) return this;
            this.undelegateEvents();
            for (var e in t) {
                var n = t[e];
                if (i.isFunction(n) || (n = this[n]), n) {
                    var r = e.match(M);
                    this.delegate(r[1], r[2], i.bind(n, this))
                }
            }
            return this
        }, delegate: function (t, e, i) {
            return this.$el.on(t + ".delegateEvents" + this.cid, e, i), this
        }, undelegateEvents: function () {
            return this.$el && this.$el.off(".delegateEvents" + this.cid), this
        }, undelegate: function (t, e, i) {
            return this.$el.off(t + ".delegateEvents" + this.cid, e, i), this
        }, _createElement: function (t) {
            return document.createElement(t)
        }, _ensureElement: function () {
            if (this.el) this.setElement(i.result(this, "el")); else {
                var t = i.extend({}, i.result(this, "attributes"));
                this.id && (t.id = i.result(this, "id")), this.className && (t["class"] = i.result(this, "className")), this.setElement(this._createElement(i.result(this, "tagName"))), this._setAttributes(t)
            }
        }, _setAttributes: function (t) {
            this.$el.attr(t)
        }
    }), e.sync = function (t, n, r) {
        var o = C[t];
        i.defaults(r || (r = {}), {emulateHTTP: e.emulateHTTP, emulateJSON: e.emulateJSON});
        var a = {type: o, dataType: "json"};
        if (r.url || (a.url = i.result(n, "url") || U()), null != r.data || !n || "create" !== t && "update" !== t && "patch" !== t || (a.contentType = "application/json", a.data = JSON.stringify(r.attrs || n.toJSON(r))), r.emulateJSON && (a.contentType = "application/x-www-form-urlencoded", a.data = a.data ? {model: a.data} : {}), r.emulateHTTP && ("PUT" === o || "DELETE" === o || "PATCH" === o)) {
            a.type = "POST", r.emulateJSON && (a.data._method = o);
            var s = r.beforeSend;
            r.beforeSend = function (t) {
                return t.setRequestHeader("X-HTTP-Method-Override", o), s ? s.apply(this, arguments) : void 0
            }
        }
        "GET" === a.type || r.emulateJSON || (a.processData = !1);
        var l = r.error;
        r.error = function (t, e, i) {
            r.textStatus = e, r.errorThrown = i, l && l.call(r.context, t, e, i)
        };
        var h = r.xhr = e.ajax(i.extend(a, r));
        return n.trigger("request", n, h, r), h
    };
    var C = {create: "POST", update: "PUT", patch: "PATCH", "delete": "DELETE", read: "GET"};
    e.ajax = function () {
        return e.$.ajax.apply(e.$, arguments)
    };
    var A = e.Router = function (t) {
        t || (t = {}), t.routes && (this.routes = t.routes), this._bindRoutes(), this.initialize.apply(this, arguments)
    }, P = /\((.*?)\)/g, L = /(\(\?)?:\w+/g, O = /\*\w+/g, D = /[\-{}\[\]+?.,\\\^$|#\s]/g;
    i.extend(A.prototype, u, {
        initialize: function () {
        }, route: function (t, n, r) {
            i.isRegExp(t) || (t = this._routeToRegExp(t)), i.isFunction(n) && (r = n, n = ""), r || (r = this[n]);
            var o = this;
            return e.history.route(t, function (i) {
                var a = o._extractParameters(t, i);
                o.execute(r, a, n) !== !1 && (o.trigger.apply(o, ["route:" + n].concat(a)), o.trigger("route", n, a), e.history.trigger("route", o, n, a))
            }), this
        }, execute: function (t, e, i) {
            t && t.apply(this, e)
        }, navigate: function (t, i) {
            return e.history.navigate(t, i), this
        }, _bindRoutes: function () {
            if (this.routes) {
                this.routes = i.result(this, "routes");
                for (var t, e = i.keys(this.routes); null != (t = e.pop());) this.route(t, this.routes[t])
            }
        }, _routeToRegExp: function (t) {
            return t = t.replace(D, "\\$&").replace(P, "(?:$1)?").replace(L, function (t, e) {
                return e ? t : "([^/?]+)"
            }).replace(O, "([^?]*?)"), new RegExp("^" + t + "(?:\\?([\\s\\S]*))?$")
        }, _extractParameters: function (t, e) {
            var n = t.exec(e).slice(1);
            return i.map(n, function (t, e) {
                return e === n.length - 1 ? t || null : t ? decodeURIComponent(t) : null
            })
        }
    });
    var I = e.History = function () {
        this.handlers = [], this.checkUrl = i.bind(this.checkUrl, this), "undefined" != typeof window && (this.location = window.location, this.history = window.history)
    }, N = /^[#\/]|\s+$/g, k = /^\/+|\/+$/g, B = /#.*$/;
    I.started = !1, i.extend(I.prototype, u, {
        interval: 50, atRoot: function () {
            var t = this.location.pathname.replace(/[^\/]$/, "$&/");
            return t === this.root && !this.getSearch()
        }, matchRoot: function () {
            var t = this.decodeFragment(this.location.pathname), e = t.slice(0, this.root.length - 1) + "/";
            return e === this.root
        }, decodeFragment: function (t) {
            return decodeURI(t.replace(/%25/g, "%2525"))
        }, getSearch: function () {
            var t = this.location.href.replace(/#.*/, "").match(/\?.+/);
            return t ? t[0] : ""
        }, getHash: function (t) {
            var e = (t || this).location.href.match(/#(.*)$/);
            return e ? e[1] : ""
        }, getPath: function () {
            var t = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);
            return "/" === t.charAt(0) ? t.slice(1) : t
        }, getFragment: function (t) {
            return null == t && (t = this._usePushState || !this._wantsHashChange ? this.getPath() : this.getHash()), t.replace(N, "")
        }, start: function (t) {
            if (I.started) throw new Error("Backbone.history has already been started");
            if (I.started = !0, this.options = i.extend({root: "/"}, this.options, t), this.root = this.options.root, this._wantsHashChange = this.options.hashChange !== !1, this._hasHashChange = "onhashchange" in window && (void 0 === document.documentMode || document.documentMode > 7), this._useHashChange = this._wantsHashChange && this._hasHashChange, this._wantsPushState = !!this.options.pushState, this._hasPushState = !(!this.history || !this.history.pushState), this._usePushState = this._wantsPushState && this._hasPushState, this.fragment = this.getFragment(), this.root = ("/" + this.root + "/").replace(k, "/"), this._wantsHashChange && this._wantsPushState) {
                if (!this._hasPushState && !this.atRoot()) {
                    var e = this.root.slice(0, -1) || "/";
                    return this.location.replace(e + "#" + this.getPath()), !0
                }
                this._hasPushState && this.atRoot() && this.navigate(this.getHash(), {replace: !0})
            }
            if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {
                this.iframe = document.createElement("iframe"), this.iframe.src = "javascript:0", this.iframe.style.display = "none", this.iframe.tabIndex = -1;
                var n = document.body, r = n.insertBefore(this.iframe, n.firstChild).contentWindow;
                r.document.open(), r.document.close(), r.location.hash = "#" + this.fragment
            }
            var o = window.addEventListener || function (t, e) {
                return attachEvent("on" + t, e)
            };
            return this._usePushState ? o("popstate", this.checkUrl, !1) : this._useHashChange && !this.iframe ? o("hashchange", this.checkUrl, !1) : this._wantsHashChange && (this._checkUrlInterval = setInterval(this.checkUrl, this.interval)), this.options.silent ? void 0 : this.loadUrl()
        }, stop: function () {
            var t = window.removeEventListener || function (t, e) {
                return detachEvent("on" + t, e)
            };
            this._usePushState ? t("popstate", this.checkUrl, !1) : this._useHashChange && !this.iframe && t("hashchange", this.checkUrl, !1), this.iframe && (document.body.removeChild(this.iframe), this.iframe = null), this._checkUrlInterval && clearInterval(this._checkUrlInterval), I.started = !1
        }, route: function (t, e) {
            this.handlers.unshift({route: t, callback: e})
        }, checkUrl: function (t) {
            var e = this.getFragment();
            return e === this.fragment && this.iframe && (e = this.getHash(this.iframe.contentWindow)), e === this.fragment ? !1 : (this.iframe && this.navigate(e), void this.loadUrl())
        }, loadUrl: function (t) {
            return this.matchRoot() ? (t = this.fragment = this.getFragment(t), i.some(this.handlers, function (e) {
                return e.route.test(t) ? (e.callback(t), !0) : void 0
            })) : !1
        }, navigate: function (t, e) {
            if (!I.started) return !1;
            e && e !== !0 || (e = {trigger: !!e}), t = this.getFragment(t || "");
            var i = this.root;
            ("" === t || "?" === t.charAt(0)) && (i = i.slice(0, -1) || "/");
            var n = i + t;
            if (t = this.decodeFragment(t.replace(B, "")), this.fragment !== t) {
                if (this.fragment = t, this._usePushState) this.history[e.replace ? "replaceState" : "pushState"]({}, document.title, n); else {
                    if (!this._wantsHashChange) return this.location.assign(n);
                    if (this._updateHash(this.location, t, e.replace), this.iframe && t !== this.getHash(this.iframe.contentWindow)) {
                        var r = this.iframe.contentWindow;
                        e.replace || (r.document.open(), r.document.close()), this._updateHash(r.location, t, e.replace)
                    }
                }
                return e.trigger ? this.loadUrl(t) : void 0
            }
        }, _updateHash: function (t, e, i) {
            if (i) {
                var n = t.href.replace(/(javascript:|#).*$/, "");
                t.replace(n + "#" + e)
            } else t.hash = "#" + e
        }
    }), e.history = new I;
    var F = function (t, e) {
        var n, r = this;
        return n = t && i.has(t, "constructor") ? t.constructor : function () {
            return r.apply(this, arguments)
        }, i.extend(n, r, e), n.prototype = i.create(r.prototype, t), n.prototype.constructor = n, n.__super__ = r.prototype, n
    };
    y.extend = _.extend = A.extend = H.extend = I.extend = F;
    var U = function () {
        throw new Error('A "url" property or function must be specified')
    }, V = function (t, e) {
        var i = e.error;
        e.error = function (n) {
            i && i.call(e.context, t, n, e), t.trigger("error", t, n, e)
        }
    };
    return e
});
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function () {
    "use strict";
    _gsScope._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function (t, e, i) {
        var n = function (t) {
            var e, i = [], n = t.length;
            for (e = 0; e !== n; i.push(t[e++])) ;
            return i
        }, r = function (t, e, n) {
            i.call(this, t, e, n), this._cycle = 0, this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._dirty = !0, this.render = r.prototype.render
        }, o = 1e-10, a = i._internals, s = a.isSelector, l = a.isArray, h = r.prototype = i.to({}, .1, {}), u = [];
        r.version = "1.13.1", h.constructor = r, h.kill()._gc = !1, r.killTweensOf = r.killDelayedCallsTo = i.killTweensOf, r.getTweensOf = i.getTweensOf, r.lagSmoothing = i.lagSmoothing, r.ticker = i.ticker, r.render = i.render, h.invalidate = function () {
            return this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), i.prototype.invalidate.call(this)
        }, h.updateTo = function (t, e) {
            var n, r = this.ratio;
            e && this._startTime < this._timeline._time && (this._startTime = this._timeline._time, this._uncache(!1), this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
            for (n in t) this.vars[n] = t[n];
            if (this._initted) if (e) this._initted = !1; else if (this._gc && this._enabled(!0, !1), this._notifyPluginsOfEnabled && this._firstPT && i._onPluginEvent("_onDisable", this), this._time / this._duration > .998) {
                var o = this._time;
                this.render(0, !0, !1), this._initted = !1, this.render(o, !0, !1)
            } else if (this._time > 0) {
                this._initted = !1, this._init();
                for (var a, s = 1 / (1 - r), l = this._firstPT; l;) a = l.s + l.c, l.c *= s, l.s = a - l.c, l = l._next
            }
            return this
        }, h.render = function (t, e, i) {
            this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
            var n, r, s, l, h, c, p, d, f = this._dirty ? this.totalDuration() : this._totalDuration, m = this._time, g = this._totalTime,
                E = this._cycle, v = this._duration, y = this._rawPrevTime;
            if (t >= f ? (this._totalTime = f, this._cycle = this._repeat, this._yoyo && 0 !== (1 & this._cycle) ? (this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = v, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1), this._reversed || (n = !0, r = "onComplete"), 0 === v && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (t = 0), (0 === t || 0 > y || y === o) && y !== t && (i = !0, y > o && (r = "onReverseComplete")), this._rawPrevTime = d = !e || t || y === t ? t : o)) : 1e-7 > t ? (this._totalTime = this._time = this._cycle = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== g || 0 === v && y > 0 && y !== o) && (r = "onReverseComplete", n = this._reversed), 0 > t ? (this._active = !1, 0 === v && (this._initted || !this.vars.lazy || i) && (y >= 0 && (i = !0), this._rawPrevTime = d = !e || t || y === t ? t : o)) : this._initted || (i = !0)) : (this._totalTime = this._time = t, 0 !== this._repeat && (l = v + this._repeatDelay, this._cycle = this._totalTime / l >> 0, 0 !== this._cycle && this._cycle === this._totalTime / l && this._cycle--, this._time = this._totalTime - this._cycle * l, this._yoyo && 0 !== (1 & this._cycle) && (this._time = v - this._time), this._time > v ? this._time = v : 0 > this._time && (this._time = 0)), this._easeType ? (h = this._time / v, c = this._easeType, p = this._easePower, (1 === c || 3 === c && h >= .5) && (h = 1 - h), 3 === c && (h *= 2), 1 === p ? h *= h : 2 === p ? h *= h * h : 3 === p ? h *= h * h * h : 4 === p && (h *= h * h * h * h), this.ratio = 1 === c ? 1 - h : 2 === c ? h : .5 > this._time / v ? h / 2 : 1 - h / 2) : this.ratio = this._ease.getRatio(this._time / v)), m === this._time && !i && E === this._cycle) return void(g !== this._totalTime && this._onUpdate && (e || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || u)));
            if (!this._initted) {
                if (this._init(), !this._initted || this._gc) return;
                if (!i && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration)) return this._time = m, this._totalTime = g, this._rawPrevTime = y, this._cycle = E, a.lazyTweens.push(this), void(this._lazy = t);
                this._time && !n ? this.ratio = this._ease.getRatio(this._time / v) : n && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
            }
            for (this._lazy !== !1 && (this._lazy = !1), this._active || !this._paused && this._time !== m && t >= 0 && (this._active = !0), 0 === g && (2 === this._initted && t > 0 && this._init(), this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : r || (r = "_dummyGS")), this.vars.onStart && (0 !== this._totalTime || 0 === v) && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || u))), s = this._firstPT; s;) s.f ? s.t[s.p](s.c * this.ratio + s.s) : s.t[s.p] = s.c * this.ratio + s.s, s = s._next;
            this._onUpdate && (0 > t && this._startAt && this._startTime && this._startAt.render(t, e, i), e || (this._totalTime !== g || n) && this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || u)), this._cycle !== E && (e || this._gc || this.vars.onRepeat && this.vars.onRepeat.apply(this.vars.onRepeatScope || this, this.vars.onRepeatParams || u)), r && (!this._gc || i) && (0 > t && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, e, i), n && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[r] && this.vars[r].apply(this.vars[r + "Scope"] || this, this.vars[r + "Params"] || u), 0 === v && this._rawPrevTime === o && d !== o && (this._rawPrevTime = 0))
        }, r.to = function (t, e, i) {
            return new r(t, e, i)
        }, r.from = function (t, e, i) {
            return i.runBackwards = !0, i.immediateRender = 0 != i.immediateRender, new r(t, e, i)
        }, r.fromTo = function (t, e, i, n) {
            return n.startAt = i, n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender, new r(t, e, n)
        }, r.staggerTo = r.allTo = function (t, e, o, a, h, c, p) {
            a = a || 0;
            var d, f, m, g, E = o.delay || 0, v = [], y = function () {
                o.onComplete && o.onComplete.apply(o.onCompleteScope || this, arguments), h.apply(p || this, c || u)
            };
            for (l(t) || ("string" == typeof t && (t = i.selector(t) || t), s(t) && (t = n(t))), d = t.length, m = 0; d > m; m++) {
                f = {};
                for (g in o) f[g] = o[g];
                f.delay = E, m === d - 1 && h && (f.onComplete = y), v[m] = new r(t[m], e, f), E += a
            }
            return v
        }, r.staggerFrom = r.allFrom = function (t, e, i, n, o, a, s) {
            return i.runBackwards = !0, i.immediateRender = 0 != i.immediateRender, r.staggerTo(t, e, i, n, o, a, s)
        }, r.staggerFromTo = r.allFromTo = function (t, e, i, n, o, a, s, l) {
            return n.startAt = i, n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender, r.staggerTo(t, e, n, o, a, s, l)
        }, r.delayedCall = function (t, e, i, n, o) {
            return new r(e, 0, {
                delay: t,
                onComplete: e,
                onCompleteParams: i,
                onCompleteScope: n,
                onReverseComplete: e,
                onReverseCompleteParams: i,
                onReverseCompleteScope: n,
                immediateRender: !1,
                useFrames: o,
                overwrite: 0
            })
        }, r.set = function (t, e) {
            return new r(t, 0, e)
        }, r.isTweening = function (t) {
            return i.getTweensOf(t, !0).length > 0
        };
        var c = function (t, e) {
            for (var n = [], r = 0, o = t._first; o;) o instanceof i ? n[r++] = o : (e && (n[r++] = o), n = n.concat(c(o, e)), r = n.length), o = o._next;
            return n
        }, p = r.getAllTweens = function (e) {
            return c(t._rootTimeline, e).concat(c(t._rootFramesTimeline, e))
        };
        r.killAll = function (t, i, n, r) {
            null == i && (i = !0), null == n && (n = !0);
            var o, a, s, l = p(0 != r), h = l.length, u = i && n && r;
            for (s = 0; h > s; s++) a = l[s], (u || a instanceof e || (o = a.target === a.vars.onComplete) && n || i && !o) && (t ? a.totalTime(a._reversed ? 0 : a.totalDuration()) : a._enabled(!1, !1))
        }, r.killChildTweensOf = function (t, e) {
            if (null != t) {
                var o, h, u, c, p, d = a.tweenLookup;
                if ("string" == typeof t && (t = i.selector(t) || t), s(t) && (t = n(t)), l(t)) for (c = t.length; --c > -1;) r.killChildTweensOf(t[c], e); else {
                    o = [];
                    for (u in d) for (h = d[u].target.parentNode; h;) h === t && (o = o.concat(d[u].tweens)), h = h.parentNode;
                    for (p = o.length, c = 0; p > c; c++) e && o[c].totalTime(o[c].totalDuration()), o[c]._enabled(!1, !1)
                }
            }
        };
        var d = function (t, i, n, r) {
            i = i !== !1, n = n !== !1, r = r !== !1;
            for (var o, a, s = p(r), l = i && n && r, h = s.length; --h > -1;) a = s[h], (l || a instanceof e || (o = a.target === a.vars.onComplete) && n || i && !o) && a.paused(t)
        };
        return r.pauseAll = function (t, e, i) {
            d(!0, t, e, i)
        }, r.resumeAll = function (t, e, i) {
            d(!1, t, e, i)
        }, r.globalTimeScale = function (e) {
            var n = t._rootTimeline, r = i.ticker.time;
            return arguments.length ? (e = e || o, n._startTime = r - (r - n._startTime) * n._timeScale / e, n = t._rootFramesTimeline, r = i.ticker.frame, n._startTime = r - (r - n._startTime) * n._timeScale / e, n._timeScale = t._rootTimeline._timeScale = e, e) : n._timeScale
        }, h.progress = function (t) {
            return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), !1) : this._time / this.duration()
        }, h.totalProgress = function (t) {
            return arguments.length ? this.totalTime(this.totalDuration() * t, !1) : this._totalTime / this.totalDuration()
        }, h.time = function (t, e) {
            return arguments.length ? (this._dirty && this.totalDuration(), t > this._duration && (t = this._duration), this._yoyo && 0 !== (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(t, e)) : this._time
        }, h.duration = function (e) {
            return arguments.length ? t.prototype.duration.call(this, e) : this._duration
        }, h.totalDuration = function (t) {
            return arguments.length ? -1 === this._repeat ? this : this.duration((t - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat, this._dirty = !1), this._totalDuration)
        }, h.repeat = function (t) {
            return arguments.length ? (this._repeat = t, this._uncache(!0)) : this._repeat
        }, h.repeatDelay = function (t) {
            return arguments.length ? (this._repeatDelay = t, this._uncache(!0)) : this._repeatDelay
        }, h.yoyo = function (t) {
            return arguments.length ? (this._yoyo = t, this) : this._yoyo
        }, r
    }, !0), _gsScope._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function (t, e, i) {
        var n = function (t) {
                e.call(this, t), this._labels = {}, this.autoRemoveChildren = this.vars.autoRemoveChildren === !0, this.smoothChildTiming = this.vars.smoothChildTiming === !0, this._sortChildren = !0, this._onUpdate = this.vars.onUpdate;
                var i, n, r = this.vars;
                for (n in r) i = r[n], s(i) && -1 !== i.join("").indexOf("{self}") && (r[n] = this._swapSelfInParams(i));
                s(r.tweens) && this.add(r.tweens, 0, r.align, r.stagger)
            }, r = 1e-10, o = i._internals, a = o.isSelector, s = o.isArray, l = o.lazyTweens, h = o.lazyRender, u = [],
            c = _gsScope._gsDefine.globals, p = function (t) {
                var e, i = {};
                for (e in t) i[e] = t[e];
                return i
            }, d = function (t, e, i, n) {
                t._timeline.pause(t._startTime), e && e.apply(n || t._timeline, i || u)
            }, f = function (t) {
                var e, i = [], n = t.length;
                for (e = 0; e !== n; i.push(t[e++])) ;
                return i
            }, m = n.prototype = new e;
        return n.version = "1.13.1", m.constructor = n, m.kill()._gc = !1, m.to = function (t, e, n, r) {
            var o = n.repeat && c.TweenMax || i;
            return e ? this.add(new o(t, e, n), r) : this.set(t, n, r)
        }, m.from = function (t, e, n, r) {
            return this.add((n.repeat && c.TweenMax || i).from(t, e, n), r)
        }, m.fromTo = function (t, e, n, r, o) {
            var a = r.repeat && c.TweenMax || i;
            return e ? this.add(a.fromTo(t, e, n, r), o) : this.set(t, r, o)
        }, m.staggerTo = function (t, e, r, o, s, l, h, u) {
            var c, d = new n({onComplete: l, onCompleteParams: h, onCompleteScope: u, smoothChildTiming: this.smoothChildTiming});
            for ("string" == typeof t && (t = i.selector(t) || t), a(t) && (t = f(t)), o = o || 0, c = 0; t.length > c; c++) r.startAt && (r.startAt = p(r.startAt)), d.to(t[c], e, p(r), c * o);
            return this.add(d, s)
        }, m.staggerFrom = function (t, e, i, n, r, o, a, s) {
            return i.immediateRender = 0 != i.immediateRender, i.runBackwards = !0, this.staggerTo(t, e, i, n, r, o, a, s)
        }, m.staggerFromTo = function (t, e, i, n, r, o, a, s, l) {
            return n.startAt = i, n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender, this.staggerTo(t, e, n, r, o, a, s, l)
        }, m.call = function (t, e, n, r) {
            return this.add(i.delayedCall(0, t, e, n), r)
        }, m.set = function (t, e, n) {
            return n = this._parseTimeOrLabel(n, 0, !0), null == e.immediateRender && (e.immediateRender = n === this._time && !this._paused), this.add(new i(t, 0, e), n)
        }, n.exportRoot = function (t, e) {
            t = t || {}, null == t.smoothChildTiming && (t.smoothChildTiming = !0);
            var r, o, a = new n(t), s = a._timeline;
            for (null == e && (e = !0), s._remove(a, !0), a._startTime = 0, a._rawPrevTime = a._time = a._totalTime = s._time, r = s._first; r;) o = r._next, e && r instanceof i && r.target === r.vars.onComplete || a.add(r, r._startTime - r._delay), r = o;
            return s.add(a, 0), a
        }, m.add = function (r, o, a, l) {
            var h, u, c, p, d, f;
            if ("number" != typeof o && (o = this._parseTimeOrLabel(o, 0, !0, r)), !(r instanceof t)) {
                if (r instanceof Array || r && r.push && s(r)) {
                    for (a = a || "normal", l = l || 0, h = o, u = r.length, c = 0; u > c; c++) s(p = r[c]) && (p = new n({tweens: p})), this.add(p, h), "string" != typeof p && "function" != typeof p && ("sequence" === a ? h = p._startTime + p.totalDuration() / p._timeScale : "start" === a && (p._startTime -= p.delay())), h += l;
                    return this._uncache(!0)
                }
                if ("string" == typeof r) return this.addLabel(r, o);
                if ("function" != typeof r) throw"Cannot add " + r + " into the timeline; it is not a tween, timeline, function, or string.";
                r = i.delayedCall(0, r)
            }
            if (e.prototype.add.call(this, r, o), (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration()) for (d = this, f = d.rawTime() > r._startTime; d._timeline;) f && d._timeline.smoothChildTiming ? d.totalTime(d._totalTime, !0) : d._gc && d._enabled(!0, !1), d = d._timeline;
            return this
        }, m.remove = function (e) {
            if (e instanceof t) return this._remove(e, !1);
            if (e instanceof Array || e && e.push && s(e)) {
                for (var i = e.length; --i > -1;) this.remove(e[i]);
                return this
            }
            return "string" == typeof e ? this.removeLabel(e) : this.kill(null, e)
        }, m._remove = function (t, i) {
            e.prototype._remove.call(this, t, i);
            var n = this._last;
            return n ? this._time > n._startTime + n._totalDuration / n._timeScale && (this._time = this.duration(), this._totalTime = this._totalDuration) : this._time = this._totalTime = this._duration = this._totalDuration = 0, this
        }, m.append = function (t, e) {
            return this.add(t, this._parseTimeOrLabel(null, e, !0, t))
        }, m.insert = m.insertMultiple = function (t, e, i, n) {
            return this.add(t, e || 0, i, n)
        }, m.appendMultiple = function (t, e, i, n) {
            return this.add(t, this._parseTimeOrLabel(null, e, !0, t), i, n)
        }, m.addLabel = function (t, e) {
            return this._labels[t] = this._parseTimeOrLabel(e), this
        }, m.addPause = function (t, e, i, n) {
            return this.call(d, ["{self}", e, i, n], this, t)
        }, m.removeLabel = function (t) {
            return delete this._labels[t], this
        }, m.getLabelTime = function (t) {
            return null != this._labels[t] ? this._labels[t] : -1
        }, m._parseTimeOrLabel = function (e, i, n, r) {
            var o;
            if (r instanceof t && r.timeline === this) this.remove(r); else if (r && (r instanceof Array || r.push && s(r))) for (o = r.length; --o > -1;) r[o] instanceof t && r[o].timeline === this && this.remove(r[o]);
            if ("string" == typeof i) return this._parseTimeOrLabel(i, n && "number" == typeof e && null == this._labels[i] ? e - this.duration() : 0, n);
            if (i = i || 0, "string" != typeof e || !isNaN(e) && null == this._labels[e]) null == e && (e = this.duration()); else {
                if (o = e.indexOf("="), -1 === o) return null == this._labels[e] ? n ? this._labels[e] = this.duration() + i : i : this._labels[e] + i;
                i = parseInt(e.charAt(o - 1) + "1", 10) * Number(e.substr(o + 1)), e = o > 1 ? this._parseTimeOrLabel(e.substr(0, o - 1), 0, n) : this.duration()
            }
            return Number(e) + i
        }, m.seek = function (t, e) {
            return this.totalTime("number" == typeof t ? t : this._parseTimeOrLabel(t), e !== !1)
        }, m.stop = function () {
            return this.paused(!0)
        }, m.gotoAndPlay = function (t, e) {
            return this.play(t, e)
        }, m.gotoAndStop = function (t, e) {
            return this.pause(t, e)
        }, m.render = function (t, e, i) {
            this._gc && this._enabled(!0, !1);
            var n, o, a, s, c, p = this._dirty ? this.totalDuration() : this._totalDuration, d = this._time, f = this._startTime,
                m = this._timeScale, g = this._paused;
            if (t >= p ? (this._totalTime = this._time = p, this._reversed || this._hasPausedChild() || (o = !0, s = "onComplete", 0 === this._duration && (0 === t || 0 > this._rawPrevTime || this._rawPrevTime === r) && this._rawPrevTime !== t && this._first && (c = !0, this._rawPrevTime > r && (s = "onReverseComplete"))), this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : r, t = p + 1e-4) : 1e-7 > t ? (this._totalTime = this._time = 0, (0 !== d || 0 === this._duration && this._rawPrevTime !== r && (this._rawPrevTime > 0 || 0 > t && this._rawPrevTime >= 0)) && (s = "onReverseComplete", o = this._reversed), 0 > t ? (this._active = !1, this._rawPrevTime >= 0 && this._first && (c = !0), this._rawPrevTime = t) : (this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : r, t = 0, this._initted || (c = !0))) : this._totalTime = this._time = this._rawPrevTime = t, this._time !== d && this._first || i || c) {
                if (this._initted || (this._initted = !0), this._active || !this._paused && this._time !== d && t > 0 && (this._active = !0), 0 === d && this.vars.onStart && 0 !== this._time && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || u)), this._time >= d) for (n = this._first; n && (a = n._next, !this._paused || g);) (n._active || n._startTime <= this._time && !n._paused && !n._gc) && (n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)), n = a; else for (n = this._last; n && (a = n._prev, !this._paused || g);) (n._active || d >= n._startTime && !n._paused && !n._gc) && (n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)), n = a;
                this._onUpdate && (e || (l.length && h(), this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || u))), s && (this._gc || (f === this._startTime || m !== this._timeScale) && (0 === this._time || p >= this.totalDuration()) && (o && (l.length && h(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[s] && this.vars[s].apply(this.vars[s + "Scope"] || this, this.vars[s + "Params"] || u)))
            }
        }, m._hasPausedChild = function () {
            for (var t = this._first; t;) {
                if (t._paused || t instanceof n && t._hasPausedChild()) return !0;
                t = t._next
            }
            return !1
        }, m.getChildren = function (t, e, n, r) {
            r = r || -9999999999;
            for (var o = [], a = this._first, s = 0; a;) r > a._startTime || (a instanceof i ? e !== !1 && (o[s++] = a) : (n !== !1 && (o[s++] = a), t !== !1 && (o = o.concat(a.getChildren(!0, e, n)), s = o.length))), a = a._next;
            return o
        }, m.getTweensOf = function (t, e) {
            var n, r, o = this._gc, a = [], s = 0;
            for (o && this._enabled(!0, !0), n = i.getTweensOf(t), r = n.length; --r > -1;) (n[r].timeline === this || e && this._contains(n[r])) && (a[s++] = n[r]);
            return o && this._enabled(!1, !0), a
        }, m._contains = function (t) {
            for (var e = t.timeline; e;) {
                if (e === this) return !0;
                e = e.timeline
            }
            return !1
        }, m.shiftChildren = function (t, e, i) {
            i = i || 0;
            for (var n, r = this._first, o = this._labels; r;) r._startTime >= i && (r._startTime += t), r = r._next;
            if (e) for (n in o) o[n] >= i && (o[n] += t);
            return this._uncache(!0)
        }, m._kill = function (t, e) {
            if (!t && !e) return this._enabled(!1, !1);
            for (var i = e ? this.getTweensOf(e) : this.getChildren(!0, !0, !1), n = i.length, r = !1; --n > -1;) i[n]._kill(t, e) && (r = !0);
            return r
        }, m.clear = function (t) {
            var e = this.getChildren(!1, !0, !0), i = e.length;
            for (this._time = this._totalTime = 0; --i > -1;) e[i]._enabled(!1, !1);
            return t !== !1 && (this._labels = {}), this._uncache(!0)
        }, m.invalidate = function () {
            for (var t = this._first; t;) t.invalidate(), t = t._next;
            return this
        }, m._enabled = function (t, i) {
            if (t === this._gc) for (var n = this._first; n;) n._enabled(t, !0), n = n._next;
            return e.prototype._enabled.call(this, t, i)
        }, m.duration = function (t) {
            return arguments.length ? (0 !== this.duration() && 0 !== t && this.timeScale(this._duration / t), this) : (this._dirty && this.totalDuration(), this._duration)
        }, m.totalDuration = function (t) {
            if (!arguments.length) {
                if (this._dirty) {
                    for (var e, i, n = 0, r = this._last, o = 999999999999; r;) e = r._prev, r._dirty && r.totalDuration(), r._startTime > o && this._sortChildren && !r._paused ? this.add(r, r._startTime - r._delay) : o = r._startTime, 0 > r._startTime && !r._paused && (n -= r._startTime, this._timeline.smoothChildTiming && (this._startTime += r._startTime / this._timeScale), this.shiftChildren(-r._startTime, !1, -9999999999), o = 0), i = r._startTime + r._totalDuration / r._timeScale, i > n && (n = i), r = e;
                    this._duration = this._totalDuration = n, this._dirty = !1
                }
                return this._totalDuration
            }
            return 0 !== this.totalDuration() && 0 !== t && this.timeScale(this._totalDuration / t), this
        }, m.usesFrames = function () {
            for (var e = this._timeline; e._timeline;) e = e._timeline;
            return e === t._rootFramesTimeline
        }, m.rawTime = function () {
            return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale
        }, n
    }, !0), _gsScope._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function (t, e, i) {
        var n = function (e) {
            t.call(this, e), this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._cycle = 0, this._yoyo = this.vars.yoyo === !0, this._dirty = !0
        }, r = 1e-10, o = [], a = e._internals, s = a.lazyTweens, l = a.lazyRender, h = new i(null, null, 1, 0), u = n.prototype = new t;
        return u.constructor = n, u.kill()._gc = !1, n.version = "1.13.1", u.invalidate = function () {
            return this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), t.prototype.invalidate.call(this)
        }, u.addCallback = function (t, i, n, r) {
            return this.add(e.delayedCall(0, t, n, r), i)
        }, u.removeCallback = function (t, e) {
            if (t) if (null == e) this._kill(null, t); else for (var i = this.getTweensOf(t, !1), n = i.length, r = this._parseTimeOrLabel(e); --n > -1;) i[n]._startTime === r && i[n]._enabled(!1, !1);
            return this
        }, u.tweenTo = function (t, i) {
            i = i || {};
            var n, r, a, s = {ease: h, overwrite: i.delay ? 2 : 1, useFrames: this.usesFrames(), immediateRender: !1};
            for (r in i) s[r] = i[r];
            return s.time = this._parseTimeOrLabel(t), n = Math.abs(Number(s.time) - this._time) / this._timeScale || .001, a = new e(this, n, s), s.onStart = function () {
                a.target.paused(!0), a.vars.time !== a.target.time() && n === a.duration() && a.duration(Math.abs(a.vars.time - a.target.time()) / a.target._timeScale), i.onStart && i.onStart.apply(i.onStartScope || a, i.onStartParams || o)
            }, a
        }, u.tweenFromTo = function (t, e, i) {
            i = i || {}, t = this._parseTimeOrLabel(t), i.startAt = {
                onComplete: this.seek,
                onCompleteParams: [t],
                onCompleteScope: this
            }, i.immediateRender = i.immediateRender !== !1;
            var n = this.tweenTo(e, i);
            return n.duration(Math.abs(n.vars.time - t) / this._timeScale || .001)
        }, u.render = function (t, e, i) {
            this._gc && this._enabled(!0, !1);
            var n, a, h, u, c, p, d = this._dirty ? this.totalDuration() : this._totalDuration, f = this._duration, m = this._time,
                g = this._totalTime, E = this._startTime, v = this._timeScale, y = this._rawPrevTime, T = this._paused, _ = this._cycle;
            if (t >= d ? (this._locked || (this._totalTime = d, this._cycle = this._repeat), this._reversed || this._hasPausedChild() || (a = !0, u = "onComplete", 0 === this._duration && (0 === t || 0 > y || y === r) && y !== t && this._first && (c = !0, y > r && (u = "onReverseComplete"))), this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : r, this._yoyo && 0 !== (1 & this._cycle) ? this._time = t = 0 : (this._time = f, t = f + 1e-4)) : 1e-7 > t ? (this._locked || (this._totalTime = this._cycle = 0), this._time = 0, (0 !== m || 0 === f && y !== r && (y > 0 || 0 > t && y >= 0) && !this._locked) && (u = "onReverseComplete", a = this._reversed), 0 > t ? (this._active = !1, y >= 0 && this._first && (c = !0), this._rawPrevTime = t) : (this._rawPrevTime = f || !e || t || this._rawPrevTime === t ? t : r, t = 0, this._initted || (c = !0))) : (0 === f && 0 > y && (c = !0), this._time = this._rawPrevTime = t, this._locked || (this._totalTime = t, 0 !== this._repeat && (p = f + this._repeatDelay, this._cycle = this._totalTime / p >> 0, 0 !== this._cycle && this._cycle === this._totalTime / p && this._cycle--, this._time = this._totalTime - this._cycle * p, this._yoyo && 0 !== (1 & this._cycle) && (this._time = f - this._time), this._time > f ? (this._time = f, t = f + 1e-4) : 0 > this._time ? this._time = t = 0 : t = this._time))), this._cycle !== _ && !this._locked) {
                var x = this._yoyo && 0 !== (1 & _), b = x === (this._yoyo && 0 !== (1 & this._cycle)), R = this._totalTime,
                    w = this._cycle, H = this._rawPrevTime, M = this._time;
                if (this._totalTime = _ * f, _ > this._cycle ? x = !x : this._totalTime += f, this._time = m, this._rawPrevTime = 0 === f ? y - 1e-4 : y, this._cycle = _, this._locked = !0, m = x ? 0 : f, this.render(m, e, 0 === f), e || this._gc || this.vars.onRepeat && this.vars.onRepeat.apply(this.vars.onRepeatScope || this, this.vars.onRepeatParams || o), b && (m = x ? f + 1e-4 : -1e-4, this.render(m, !0, !1)), this._locked = !1, this._paused && !T) return;
                this._time = M, this._totalTime = R, this._cycle = w, this._rawPrevTime = H
            }
            if (!(this._time !== m && this._first || i || c)) return void(g !== this._totalTime && this._onUpdate && (e || this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || o)));
            if (this._initted || (this._initted = !0), this._active || !this._paused && this._totalTime !== g && t > 0 && (this._active = !0), 0 === g && this.vars.onStart && 0 !== this._totalTime && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || o)), this._time >= m) for (n = this._first; n && (h = n._next, !this._paused || T);) (n._active || n._startTime <= this._time && !n._paused && !n._gc) && (n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)), n = h; else for (n = this._last; n && (h = n._prev, !this._paused || T);) (n._active || m >= n._startTime && !n._paused && !n._gc) && (n._reversed ? n.render((n._dirty ? n.totalDuration() : n._totalDuration) - (t - n._startTime) * n._timeScale, e, i) : n.render((t - n._startTime) * n._timeScale, e, i)), n = h;
            this._onUpdate && (e || (s.length && l(), this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || o))), u && (this._locked || this._gc || (E === this._startTime || v !== this._timeScale) && (0 === this._time || d >= this.totalDuration()) && (a && (s.length && l(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[u] && this.vars[u].apply(this.vars[u + "Scope"] || this, this.vars[u + "Params"] || o)))
        }, u.getActive = function (t, e, i) {
            null == t && (t = !0), null == e && (e = !0), null == i && (i = !1);
            var n, r, o = [], a = this.getChildren(t, e, i), s = 0, l = a.length;
            for (n = 0; l > n; n++) r = a[n], r.isActive() && (o[s++] = r);
            return o
        }, u.getLabelAfter = function (t) {
            t || 0 !== t && (t = this._time);
            var e, i = this.getLabelsArray(), n = i.length;
            for (e = 0; n > e; e++) if (i[e].time > t) return i[e].name;
            return null
        }, u.getLabelBefore = function (t) {
            null == t && (t = this._time);
            for (var e = this.getLabelsArray(), i = e.length; --i > -1;) if (t > e[i].time) return e[i].name;
            return null
        }, u.getLabelsArray = function () {
            var t, e = [], i = 0;
            for (t in this._labels) e[i++] = {time: this._labels[t], name: t};
            return e.sort(function (t, e) {
                return t.time - e.time
            }), e
        }, u.progress = function (t) {
            return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), !1) : this._time / this.duration()
        }, u.totalProgress = function (t) {
            return arguments.length ? this.totalTime(this.totalDuration() * t, !1) : this._totalTime / this.totalDuration()
        }, u.totalDuration = function (e) {
            return arguments.length ? -1 === this._repeat ? this : this.duration((e - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (t.prototype.totalDuration.call(this), this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat), this._totalDuration)
        }, u.time = function (t, e) {
            return arguments.length ? (this._dirty && this.totalDuration(), t > this._duration && (t = this._duration), this._yoyo && 0 !== (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(t, e)) : this._time
        }, u.repeat = function (t) {
            return arguments.length ? (this._repeat = t, this._uncache(!0)) : this._repeat
        }, u.repeatDelay = function (t) {
            return arguments.length ? (this._repeatDelay = t, this._uncache(!0)) : this._repeatDelay
        }, u.yoyo = function (t) {
            return arguments.length ? (this._yoyo = t, this) : this._yoyo
        }, u.currentLabel = function (t) {
            return arguments.length ? this.seek(t, !0) : this.getLabelBefore(this._time + 1e-8)
        }, n
    }, !0), function () {
        var t = 180 / Math.PI, e = [], i = [], n = [], r = {}, o = function (t, e, i, n) {
                this.a = t, this.b = e, this.c = i, this.d = n, this.da = n - t, this.ca = i - t, this.ba = e - t
            },
            a = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
            s = function (t, e, i, n) {
                var r = {a: t}, o = {}, a = {}, s = {c: n}, l = (t + e) / 2, h = (e + i) / 2, u = (i + n) / 2, c = (l + h) / 2,
                    p = (h + u) / 2, d = (p - c) / 8;
                return r.b = l + (t - l) / 4, o.b = c + d, r.c = o.a = (r.b + o.b) / 2, o.c = a.a = (c + p) / 2, a.b = p - d, s.b = u + (n - u) / 4, a.c = s.a = (a.b + s.b) / 2, [r, o, a, s]
            }, l = function (t, r, o, a, l) {
                var h, u, c, p, d, f, m, g, E, v, y, T, _, x = t.length - 1, b = 0, R = t[0].a;
                for (h = 0; x > h; h++) d = t[b], u = d.a, c = d.d, p = t[b + 1].d, l ? (y = e[h], T = i[h], _ = .25 * (T + y) * r / (a ? .5 : n[h] || .5), f = c - (c - u) * (a ? .5 * r : 0 !== y ? _ / y : 0), m = c + (p - c) * (a ? .5 * r : 0 !== T ? _ / T : 0), g = c - (f + ((m - f) * (3 * y / (y + T) + .5) / 4 || 0))) : (f = c - .5 * (c - u) * r, m = c + .5 * (p - c) * r, g = c - (f + m) / 2), f += g, m += g, d.c = E = f, d.b = 0 !== h ? R : R = d.a + .6 * (d.c - d.a), d.da = c - u, d.ca = E - u, d.ba = R - u, o ? (v = s(u, R, E, c), t.splice(b, 1, v[0], v[1], v[2], v[3]), b += 4) : b++, R = m;
                d = t[b], d.b = R, d.c = R + .4 * (d.d - R), d.da = d.d - d.a, d.ca = d.c - d.a, d.ba = R - d.a, o && (v = s(d.a, R, d.c, d.d), t.splice(b, 1, v[0], v[1], v[2], v[3]))
            }, h = function (t, n, r, a) {
                var s, l, h, u, c, p, d = [];
                if (a) for (t = [a].concat(t), l = t.length; --l > -1;) "string" == typeof(p = t[l][n]) && "=" === p.charAt(1) && (t[l][n] = a[n] + Number(p.charAt(0) + p.substr(2)));
                if (s = t.length - 2, 0 > s) return d[0] = new o(t[0][n], 0, 0, t[-1 > s ? 0 : 1][n]), d;
                for (l = 0; s > l; l++) h = t[l][n], u = t[l + 1][n], d[l] = new o(h, 0, 0, u), r && (c = t[l + 2][n], e[l] = (e[l] || 0) + (u - h) * (u - h), i[l] = (i[l] || 0) + (c - u) * (c - u));
                return d[l] = new o(t[l][n], 0, 0, t[l + 1][n]), d
            }, u = function (t, o, s, u, c, p) {
                var d, f, m, g, E, v, y, T, _ = {}, x = [], b = p || t[0];
                c = "string" == typeof c ? "," + c + "," : a, null == o && (o = 1);
                for (f in t[0]) x.push(f);
                if (t.length > 1) {
                    for (T = t[t.length - 1], y = !0, d = x.length; --d > -1;) if (f = x[d], Math.abs(b[f] - T[f]) > .05) {
                        y = !1;
                        break
                    }
                    y && (t = t.concat(), p && t.unshift(p), t.push(t[1]), p = t[t.length - 3])
                }
                for (e.length = i.length = n.length = 0, d = x.length; --d > -1;) f = x[d], r[f] = -1 !== c.indexOf("," + f + ","), _[f] = h(t, f, r[f], p);
                for (d = e.length; --d > -1;) e[d] = Math.sqrt(e[d]), i[d] = Math.sqrt(i[d]);
                if (!u) {
                    for (d = x.length; --d > -1;) if (r[f]) for (m = _[x[d]], v = m.length - 1, g = 0; v > g; g++) E = m[g + 1].da / i[g] + m[g].da / e[g], n[g] = (n[g] || 0) + E * E;
                    for (d = n.length; --d > -1;) n[d] = Math.sqrt(n[d])
                }
                for (d = x.length, g = s ? 4 : 1; --d > -1;) f = x[d], m = _[f], l(m, o, s, u, r[f]), y && (m.splice(0, g), m.splice(m.length - g, g));
                return _
            }, c = function (t, e, i) {
                e = e || "soft";
                var n, r, a, s, l, h, u, c, p, d, f, m = {}, g = "cubic" === e ? 3 : 2, E = "soft" === e, v = [];
                if (E && i && (t = [i].concat(t)), null == t || g + 1 > t.length) throw"invalid Bezier data";
                for (p in t[0]) v.push(p);
                for (h = v.length; --h > -1;) {
                    for (p = v[h], m[p] = l = [], d = 0, c = t.length, u = 0; c > u; u++) n = null == i ? t[u][p] : "string" == typeof(f = t[u][p]) && "=" === f.charAt(1) ? i[p] + Number(f.charAt(0) + f.substr(2)) : Number(f), E && u > 1 && c - 1 > u && (l[d++] = (n + l[d - 2]) / 2), l[d++] = n;
                    for (c = d - g + 1, d = 0, u = 0; c > u; u += g) n = l[u], r = l[u + 1], a = l[u + 2], s = 2 === g ? 0 : l[u + 3], l[d++] = f = 3 === g ? new o(n, r, a, s) : new o(n, (2 * r + n) / 3, (2 * r + a) / 3, a);
                    l.length = d
                }
                return m
            }, p = function (t, e, i) {
                for (var n, r, o, a, s, l, h, u, c, p, d, f = 1 / i, m = t.length; --m > -1;) for (p = t[m], o = p.a, a = p.d - o, s = p.c - o, l = p.b - o, n = r = 0, u = 1; i >= u; u++) h = f * u, c = 1 - h, n = r - (r = (h * h * a + 3 * c * (h * s + c * l)) * h), d = m * i + u - 1, e[d] = (e[d] || 0) + n * n
            }, d = function (t, e) {
                e = e >> 0 || 6;
                var i, n, r, o, a = [], s = [], l = 0, h = 0, u = e - 1, c = [], d = [];
                for (i in t) p(t[i], a, e);
                for (r = a.length, n = 0; r > n; n++) l += Math.sqrt(a[n]), o = n % e, d[o] = l, o === u && (h += l, o = n / e >> 0, c[o] = d, s[o] = h, l = 0, d = []);
                return {length: h, lengths: s, segments: c}
            }, f = _gsScope._gsDefine.plugin({
                propName: "bezier", priority: -1, version: "1.3.3", API: 2, global: !0, init: function (t, e, i) {
                    this._target = t, e instanceof Array && (e = {values: e}), this._func = {}, this._round = {}, this._props = [], this._timeRes = null == e.timeResolution ? 6 : parseInt(e.timeResolution, 10);
                    var n, r, o, a, s, l = e.values || [], h = {}, p = l[0], f = e.autoRotate || i.vars.orientToBezier;
                    this._autoRotate = f ? f instanceof Array ? f : [["x", "y", "rotation", f === !0 ? 0 : Number(f) || 0]] : null;
                    for (n in p) this._props.push(n);
                    for (o = this._props.length; --o > -1;) n = this._props[o], this._overwriteProps.push(n), r = this._func[n] = "function" == typeof t[n], h[n] = r ? t[n.indexOf("set") || "function" != typeof t["get" + n.substr(3)] ? n : "get" + n.substr(3)]() : parseFloat(t[n]), s || h[n] !== l[0][n] && (s = h);
                    if (this._beziers = "cubic" !== e.type && "quadratic" !== e.type && "soft" !== e.type ? u(l, isNaN(e.curviness) ? 1 : e.curviness, !1, "thruBasic" === e.type, e.correlate, s) : c(l, e.type, h), this._segCount = this._beziers[n].length, this._timeRes) {
                        var m = d(this._beziers, this._timeRes);
                        this._length = m.length, this._lengths = m.lengths, this._segments = m.segments, this._l1 = this._li = this._s1 = this._si = 0, this._l2 = this._lengths[0], this._curSeg = this._segments[0], this._s2 = this._curSeg[0], this._prec = 1 / this._curSeg.length
                    }
                    if (f = this._autoRotate) for (this._initialRotations = [], f[0] instanceof Array || (this._autoRotate = f = [f]), o = f.length; --o > -1;) {
                        for (a = 0; 3 > a; a++) n = f[o][a], this._func[n] = "function" == typeof t[n] ? t[n.indexOf("set") || "function" != typeof t["get" + n.substr(3)] ? n : "get" + n.substr(3)] : !1;
                        n = f[o][2], this._initialRotations[o] = this._func[n] ? this._func[n].call(this._target) : this._target[n]
                    }
                    return this._startRatio = i.vars.runBackwards ? 1 : 0, !0
                }, set: function (e) {
                    var i, n, r, o, a, s, l, h, u, c, p = this._segCount, d = this._func, f = this._target, m = e !== this._startRatio;
                    if (this._timeRes) {
                        if (u = this._lengths, c = this._curSeg, e *= this._length, r = this._li, e > this._l2 && p - 1 > r) {
                            for (h = p - 1; h > r && e >= (this._l2 = u[++r]);) ;
                            this._l1 = u[r - 1], this._li = r, this._curSeg = c = this._segments[r], this._s2 = c[this._s1 = this._si = 0]
                        } else if (this._l1 > e && r > 0) {
                            for (; r > 0 && (this._l1 = u[--r]) >= e;) ;
                            0 === r && this._l1 > e ? this._l1 = 0 : r++, this._l2 = u[r], this._li = r, this._curSeg = c = this._segments[r], this._s1 = c[(this._si = c.length - 1) - 1] || 0, this._s2 = c[this._si]
                        }
                        if (i = r, e -= this._l1, r = this._si, e > this._s2 && c.length - 1 > r) {
                            for (h = c.length - 1; h > r && e >= (this._s2 = c[++r]);) ;
                            this._s1 = c[r - 1], this._si = r
                        } else if (this._s1 > e && r > 0) {
                            for (; r > 0 && (this._s1 = c[--r]) >= e;) ;
                            0 === r && this._s1 > e ? this._s1 = 0 : r++, this._s2 = c[r], this._si = r
                        }
                        s = (r + (e - this._s1) / (this._s2 - this._s1)) * this._prec
                    } else i = 0 > e ? 0 : e >= 1 ? p - 1 : p * e >> 0, s = (e - i * (1 / p)) * p;
                    for (n = 1 - s, r = this._props.length; --r > -1;) o = this._props[r], a = this._beziers[o][i], l = (s * s * a.da + 3 * n * (s * a.ca + n * a.ba)) * s + a.a, this._round[o] && (l = Math.round(l)), d[o] ? f[o](l) : f[o] = l;
                    if (this._autoRotate) {
                        var g, E, v, y, T, _, x, b = this._autoRotate;
                        for (r = b.length; --r > -1;) o = b[r][2], _ = b[r][3] || 0, x = b[r][4] === !0 ? 1 : t, a = this._beziers[b[r][0]], g = this._beziers[b[r][1]], a && g && (a = a[i], g = g[i], E = a.a + (a.b - a.a) * s, y = a.b + (a.c - a.b) * s, E += (y - E) * s, y += (a.c + (a.d - a.c) * s - y) * s, v = g.a + (g.b - g.a) * s, T = g.b + (g.c - g.b) * s, v += (T - v) * s, T += (g.c + (g.d - g.c) * s - T) * s, l = m ? Math.atan2(T - v, y - E) * x + _ : this._initialRotations[r], d[o] ? f[o](l) : f[o] = l)
                    }
                }
            }), m = f.prototype;
        f.bezierThrough = u, f.cubicToQuadratic = s, f._autoCSS = !0, f.quadraticToCubic = function (t, e, i) {
            return new o(t, (2 * e + t) / 3, (2 * e + i) / 3, i)
        }, f._cssRegister = function () {
            var t = _gsScope._gsDefine.globals.CSSPlugin;
            if (t) {
                var e = t._internals, i = e._parseToProxy, n = e._setPluginRatio, r = e.CSSPropTween;
                e._registerComplexSpecialProp("bezier", {
                    parser: function (t, e, o, a, s, l) {
                        e instanceof Array && (e = {values: e}), l = new f;
                        var h, u, c, p = e.values, d = p.length - 1, m = [], g = {};
                        if (0 > d) return s;
                        for (h = 0; d >= h; h++) c = i(t, p[h], a, s, l, d !== h), m[h] = c.end;
                        for (u in e) g[u] = e[u];
                        return g.values = m, s = new r(t, "bezier", 0, 0, c.pt, 2), s.data = c, s.plugin = l, s.setRatio = n, 0 === g.autoRotate && (g.autoRotate = !0), !g.autoRotate || g.autoRotate instanceof Array || (h = g.autoRotate === !0 ? 0 : Number(g.autoRotate), g.autoRotate = null != c.end.left ? [["left", "top", "rotation", h, !1]] : null != c.end.x ? [["x", "y", "rotation", h, !1]] : !1), g.autoRotate && (a._transform || a._enableTransforms(!1), c.autoRotate = a._target._gsTransform), l._onInitTween(c.proxy, g, a._tween), s
                    }
                })
            }
        }, m._roundProps = function (t, e) {
            for (var i = this._overwriteProps, n = i.length; --n > -1;) (t[i[n]] || t.bezier || t.bezierThrough) && (this._round[i[n]] = e)
        }, m._kill = function (t) {
            var e, i, n = this._props;
            for (e in this._beziers) if (e in t) for (delete this._beziers[e], delete this._func[e], i = n.length; --i > -1;) n[i] === e && n.splice(i, 1);
            return this._super._kill.call(this, t)
        }
    }(), _gsScope._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function (t, e) {
        var i, n, r, o, a = function () {
            t.call(this, "css"), this._overwriteProps.length = 0, this.setRatio = a.prototype.setRatio
        }, s = {}, l = a.prototype = new t("css");
        l.constructor = a, a.version = "1.13.1", a.API = 2, a.defaultTransformPerspective = 0, a.defaultSkewType = "compensated", l = "px", a.suffixMap = {
            top: l,
            right: l,
            bottom: l,
            left: l,
            width: l,
            height: l,
            fontSize: l,
            padding: l,
            margin: l,
            perspective: l,
            lineHeight: ""
        };
        var h, u, c, p, d, f, m = /(?:\d|\-\d|\.\d|\-\.\d)+/g, g = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
            E = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi, v = /[^\d\-\.]/g, y = /(?:\d|\-|\+|=|#|\.)*/g,
            T = /opacity *= *([^)]*)/i, _ = /opacity:([^;]*)/i, x = /alpha\(opacity *=.+?\)/i, b = /^(rgb|hsl)/, R = /([A-Z])/g,
            w = /-([a-z])/gi, H = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi, M = function (t, e) {
                return e.toUpperCase()
            }, S = /(?:Left|Right|Width)/i, C = /(M11|M12|M21|M22)=[\d\-\.e]+/gi, A = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
            P = /,(?=[^\)]*(?:\(|$))/gi, L = Math.PI / 180, O = 180 / Math.PI, D = {}, I = document, N = I.createElement("div"),
            k = I.createElement("img"), B = a._internals = {_specialProps: s}, F = navigator.userAgent, U = function () {
                var t, e = F.indexOf("Android"), i = I.createElement("div");
                return c = -1 !== F.indexOf("Safari") && -1 === F.indexOf("Chrome") && (-1 === e || Number(F.substr(e + 8, 1)) > 3), d = c && 6 > Number(F.substr(F.indexOf("Version/") + 8, 1)), p = -1 !== F.indexOf("Firefox"), /MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(F) && (f = parseFloat(RegExp.$1)), i.innerHTML = "<a style='top:1px;opacity:.55;'>a</a>", t = i.getElementsByTagName("a")[0], t ? /^0.55/.test(t.style.opacity) : !1
            }(), V = function (t) {
                return T.test("string" == typeof t ? t : (t.currentStyle ? t.currentStyle.filter : t.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1
            }, z = function (t) {
                window.console && console.log(t)
            }, G = "", j = "", W = function (t, e) {
                e = e || N;
                var i, n, r = e.style;
                if (void 0 !== r[t]) return t;
                for (t = t.charAt(0).toUpperCase() + t.substr(1), i = ["O", "Moz", "ms", "Ms", "Webkit"], n = 5; --n > -1 && void 0 === r[i[n] + t];) ;
                return n >= 0 ? (j = 3 === n ? "ms" : i[n], G = "-" + j.toLowerCase() + "-", j + t) : null
            }, X = I.defaultView ? I.defaultView.getComputedStyle : function () {
            }, q = a.getStyle = function (t, e, i, n, r) {
                var o;
                return U || "opacity" !== e ? (!n && t.style[e] ? o = t.style[e] : (i = i || X(t)) ? o = i[e] || i.getPropertyValue(e) || i.getPropertyValue(e.replace(R, "-$1").toLowerCase()) : t.currentStyle && (o = t.currentStyle[e]), null == r || o && "none" !== o && "auto" !== o && "auto auto" !== o ? o : r) : V(t)
            }, Y = B.convertToPixels = function (t, i, n, r, o) {
                if ("px" === r || !r) return n;
                if ("auto" === r || !n) return 0;
                var s, l, h, u = S.test(i), c = t, p = N.style, d = 0 > n;
                if (d && (n = -n), "%" === r && -1 !== i.indexOf("border")) s = n / 100 * (u ? t.clientWidth : t.clientHeight); else {
                    if (p.cssText = "border:0 solid red;position:" + q(t, "position") + ";line-height:0;", "%" !== r && c.appendChild) p[u ? "borderLeftWidth" : "borderTopWidth"] = n + r; else {
                        if (c = t.parentNode || I.body, l = c._gsCache, h = e.ticker.frame, l && u && l.time === h) return l.width * n / 100;
                        p[u ? "width" : "height"] = n + r
                    }
                    c.appendChild(N), s = parseFloat(N[u ? "offsetWidth" : "offsetHeight"]), c.removeChild(N), u && "%" === r && a.cacheWidths !== !1 && (l = c._gsCache = c._gsCache || {}, l.time = h, l.width = 100 * (s / n)), 0 !== s || o || (s = Y(t, i, n, r, !0))
                }
                return d ? -s : s
            }, $ = B.calculateOffset = function (t, e, i) {
                if ("absolute" !== q(t, "position", i)) return 0;
                var n = "left" === e ? "Left" : "Top", r = q(t, "margin" + n, i);
                return t["offset" + n] - (Y(t, e, parseFloat(r), r.replace(y, "")) || 0)
            }, Z = function (t, e) {
                var i, n, r = {};
                if (e = e || X(t, null)) if (i = e.length) for (; --i > -1;) r[e[i].replace(w, M)] = e.getPropertyValue(e[i]); else for (i in e) r[i] = e[i]; else if (e = t.currentStyle || t.style) for (i in e) "string" == typeof i && void 0 === r[i] && (r[i.replace(w, M)] = e[i]);
                return U || (r.opacity = V(t)), n = Rt(t, e, !1), r.rotation = n.rotation, r.skewX = n.skewX, r.scaleX = n.scaleX, r.scaleY = n.scaleY, r.x = n.x, r.y = n.y, xt && (r.z = n.z, r.rotationX = n.rotationX, r.rotationY = n.rotationY, r.scaleZ = n.scaleZ), r.filters && delete r.filters, r
            }, Q = function (t, e, i, n, r) {
                var o, a, s, l = {}, h = t.style;
                for (a in i) "cssText" !== a && "length" !== a && isNaN(a) && (e[a] !== (o = i[a]) || r && r[a]) && -1 === a.indexOf("Origin") && ("number" == typeof o || "string" == typeof o) && (l[a] = "auto" !== o || "left" !== a && "top" !== a ? "" !== o && "auto" !== o && "none" !== o || "string" != typeof e[a] || "" === e[a].replace(v, "") ? o : 0 : $(t, a), void 0 !== h[a] && (s = new ct(h, a, h[a], s)));
                if (n) for (a in n) "className" !== a && (l[a] = n[a]);
                return {difs: l, firstMPT: s}
            }, K = {width: ["Left", "Right"], height: ["Top", "Bottom"]}, J = ["marginLeft", "marginRight", "marginTop", "marginBottom"],
            tt = function (t, e, i) {
                var n = parseFloat("width" === e ? t.offsetWidth : t.offsetHeight), r = K[e], o = r.length;
                for (i = i || X(t, null); --o > -1;) n -= parseFloat(q(t, "padding" + r[o], i, !0)) || 0, n -= parseFloat(q(t, "border" + r[o] + "Width", i, !0)) || 0;
                return n
            }, et = function (t, e) {
                (null == t || "" === t || "auto" === t || "auto auto" === t) && (t = "0 0");
                var i = t.split(" "), n = -1 !== t.indexOf("left") ? "0%" : -1 !== t.indexOf("right") ? "100%" : i[0],
                    r = -1 !== t.indexOf("top") ? "0%" : -1 !== t.indexOf("bottom") ? "100%" : i[1];
                return null == r ? r = "0" : "center" === r && (r = "50%"), ("center" === n || isNaN(parseFloat(n)) && -1 === (n + "").indexOf("=")) && (n = "50%"), e && (e.oxp = -1 !== n.indexOf("%"), e.oyp = -1 !== r.indexOf("%"), e.oxr = "=" === n.charAt(1), e.oyr = "=" === r.charAt(1), e.ox = parseFloat(n.replace(v, "")), e.oy = parseFloat(r.replace(v, ""))), n + " " + r + (i.length > 2 ? " " + i[2] : "")
            }, it = function (t, e) {
                return "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) : parseFloat(t) - parseFloat(e)
            }, nt = function (t, e) {
                return null == t ? e : "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * Number(t.substr(2)) + e : parseFloat(t)
            }, rt = function (t, e, i, n) {
                var r, o, a, s, l = 1e-6;
                return null == t ? s = e : "number" == typeof t ? s = t : (r = 360, o = t.split("_"), a = Number(o[0].replace(v, "")) * (-1 === t.indexOf("rad") ? 1 : O) - ("=" === t.charAt(1) ? 0 : e), o.length && (n && (n[i] = e + a), -1 !== t.indexOf("short") && (a %= r, a !== a % (r / 2) && (a = 0 > a ? a + r : a - r)), -1 !== t.indexOf("_cw") && 0 > a ? a = (a + 9999999999 * r) % r - (0 | a / r) * r : -1 !== t.indexOf("ccw") && a > 0 && (a = (a - 9999999999 * r) % r - (0 | a / r) * r)), s = e + a), l > s && s > -l && (s = 0), s
            }, ot = {
                aqua: [0, 255, 255],
                lime: [0, 255, 0],
                silver: [192, 192, 192],
                black: [0, 0, 0],
                maroon: [128, 0, 0],
                teal: [0, 128, 128],
                blue: [0, 0, 255],
                navy: [0, 0, 128],
                white: [255, 255, 255],
                fuchsia: [255, 0, 255],
                olive: [128, 128, 0],
                yellow: [255, 255, 0],
                orange: [255, 165, 0],
                gray: [128, 128, 128],
                purple: [128, 0, 128],
                green: [0, 128, 0],
                red: [255, 0, 0],
                pink: [255, 192, 203],
                cyan: [0, 255, 255],
                transparent: [255, 255, 255, 0]
            }, at = function (t, e, i) {
                return t = 0 > t ? t + 1 : t > 1 ? t - 1 : t, 0 | 255 * (1 > 6 * t ? e + 6 * (i - e) * t : .5 > t ? i : 2 > 3 * t ? e + 6 * (i - e) * (2 / 3 - t) : e) + .5
            }, st = function (t) {
                var e, i, n, r, o, a;
                return t && "" !== t ? "number" == typeof t ? [t >> 16, 255 & t >> 8, 255 & t] : ("," === t.charAt(t.length - 1) && (t = t.substr(0, t.length - 1)), ot[t] ? ot[t] : "#" === t.charAt(0) ? (4 === t.length && (e = t.charAt(1), i = t.charAt(2), n = t.charAt(3), t = "#" + e + e + i + i + n + n), t = parseInt(t.substr(1), 16), [t >> 16, 255 & t >> 8, 255 & t]) : "hsl" === t.substr(0, 3) ? (t = t.match(m), r = Number(t[0]) % 360 / 360, o = Number(t[1]) / 100, a = Number(t[2]) / 100, i = .5 >= a ? a * (o + 1) : a + o - a * o, e = 2 * a - i, t.length > 3 && (t[3] = Number(t[3])), t[0] = at(r + 1 / 3, e, i), t[1] = at(r, e, i), t[2] = at(r - 1 / 3, e, i), t) : (t = t.match(m) || ot.transparent, t[0] = Number(t[0]), t[1] = Number(t[1]), t[2] = Number(t[2]), t.length > 3 && (t[3] = Number(t[3])), t)) : ot.black
            }, lt = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b";
        for (l in ot) lt += "|" + l + "\\b";
        lt = RegExp(lt + ")", "gi");
        var ht = function (t, e, i, n) {
            if (null == t) return function (t) {
                return t
            };
            var r, o = e ? (t.match(lt) || [""])[0] : "", a = t.split(o).join("").match(E) || [], s = t.substr(0, t.indexOf(a[0])),
                l = ")" === t.charAt(t.length - 1) ? ")" : "", h = -1 !== t.indexOf(" ") ? " " : ",", u = a.length,
                c = u > 0 ? a[0].replace(m, "") : "";
            return u ? r = e ? function (t) {
                var e, p, d, f;
                if ("number" == typeof t) t += c; else if (n && P.test(t)) {
                    for (f = t.replace(P, "|").split("|"), d = 0; f.length > d; d++) f[d] = r(f[d]);
                    return f.join(",")
                }
                if (e = (t.match(lt) || [o])[0], p = t.split(e).join("").match(E) || [], d = p.length, u > d--) for (; u > ++d;) p[d] = i ? p[0 | (d - 1) / 2] : a[d];
                return s + p.join(h) + h + e + l + (-1 !== t.indexOf("inset") ? " inset" : "")
            } : function (t) {
                var e, o, p;
                if ("number" == typeof t) t += c; else if (n && P.test(t)) {
                    for (o = t.replace(P, "|").split("|"), p = 0; o.length > p; p++) o[p] = r(o[p]);
                    return o.join(",")
                }
                if (e = t.match(E) || [], p = e.length, u > p--) for (; u > ++p;) e[p] = i ? e[0 | (p - 1) / 2] : a[p];
                return s + e.join(h) + l
            } : function (t) {
                return t
            }
        }, ut = function (t) {
            return t = t.split(","), function (e, i, n, r, o, a, s) {
                var l, h = (i + "").split(" ");
                for (s = {}, l = 0; 4 > l; l++) s[t[l]] = h[l] = h[l] || h[(l - 1) / 2 >> 0];
                return r.parse(e, s, o, a)
            }
        }, ct = (B._setPluginRatio = function (t) {
            this.plugin.setRatio(t);
            for (var e, i, n, r, o = this.data, a = o.proxy, s = o.firstMPT, l = 1e-6; s;) e = a[s.v], s.r ? e = Math.round(e) : l > e && e > -l && (e = 0), s.t[s.p] = e, s = s._next;
            if (o.autoRotate && (o.autoRotate.rotation = a.rotation), 1 === t) for (s = o.firstMPT; s;) {
                if (i = s.t, i.type) {
                    if (1 === i.type) {
                        for (r = i.xs0 + i.s + i.xs1, n = 1; i.l > n; n++) r += i["xn" + n] + i["xs" + (n + 1)];
                        i.e = r
                    }
                } else i.e = i.s + i.xs0;
                s = s._next
            }
        }, function (t, e, i, n, r) {
            this.t = t, this.p = e, this.v = i, this.r = r, n && (n._prev = this, this._next = n)
        }), pt = (B._parseToProxy = function (t, e, i, n, r, o) {
            var a, s, l, h, u, c = n, p = {}, d = {}, f = i._transform, m = D;
            for (i._transform = null, D = e, n = u = i.parse(t, e, n, r), D = m, o && (i._transform = f, c && (c._prev = null, c._prev && (c._prev._next = null))); n && n !== c;) {
                if (1 >= n.type && (s = n.p, d[s] = n.s + n.c, p[s] = n.s, o || (h = new ct(n, "s", s, h, n.r), n.c = 0), 1 === n.type)) for (a = n.l; --a > 0;) l = "xn" + a, s = n.p + "_" + l, d[s] = n.data[l], p[s] = n[l], o || (h = new ct(n, l, s, h, n.rxp[l]));
                n = n._next
            }
            return {proxy: p, end: d, firstMPT: h, pt: u}
        }, B.CSSPropTween = function (t, e, n, r, a, s, l, h, u, c, p) {
            this.t = t, this.p = e, this.s = n, this.c = r, this.n = l || e, t instanceof pt || o.push(this.n), this.r = h, this.type = s || 0, u && (this.pr = u, i = !0), this.b = void 0 === c ? n : c, this.e = void 0 === p ? n + r : p, a && (this._next = a, a._prev = this)
        }), dt = a.parseComplex = function (t, e, i, n, r, o, a, s, l, u) {
            i = i || o || "", a = new pt(t, e, 0, 0, a, u ? 2 : 1, null, !1, s, i, n), n += "";
            var c, p, d, f, E, v, y, T, _, x, R, w, H = i.split(", ").join(",").split(" "), M = n.split(", ").join(",").split(" "),
                S = H.length, C = h !== !1;
            for ((-1 !== n.indexOf(",") || -1 !== i.indexOf(",")) && (H = H.join(" ").replace(P, ", ").split(" "), M = M.join(" ").replace(P, ", ").split(" "), S = H.length), S !== M.length && (H = (o || "").split(" "), S = H.length), a.plugin = l, a.setRatio = u, c = 0; S > c; c++) if (f = H[c], E = M[c], T = parseFloat(f), T || 0 === T) a.appendXtra("", T, it(E, T), E.replace(g, ""), C && -1 !== E.indexOf("px"), !0); else if (r && ("#" === f.charAt(0) || ot[f] || b.test(f))) w = "," === E.charAt(E.length - 1) ? ")," : ")", f = st(f), E = st(E), _ = f.length + E.length > 6, _ && !U && 0 === E[3] ? (a["xs" + a.l] += a.l ? " transparent" : "transparent", a.e = a.e.split(M[c]).join("transparent")) : (U || (_ = !1), a.appendXtra(_ ? "rgba(" : "rgb(", f[0], E[0] - f[0], ",", !0, !0).appendXtra("", f[1], E[1] - f[1], ",", !0).appendXtra("", f[2], E[2] - f[2], _ ? "," : w, !0), _ && (f = 4 > f.length ? 1 : f[3], a.appendXtra("", f, (4 > E.length ? 1 : E[3]) - f, w, !1))); else if (v = f.match(m)) {
                if (y = E.match(g), !y || y.length !== v.length) return a;
                for (d = 0, p = 0; v.length > p; p++) R = v[p], x = f.indexOf(R, d), a.appendXtra(f.substr(d, x - d), Number(R), it(y[p], R), "", C && "px" === f.substr(x + R.length, 2), 0 === p), d = x + R.length;
                a["xs" + a.l] += f.substr(d)
            } else a["xs" + a.l] += a.l ? " " + f : f;
            if (-1 !== n.indexOf("=") && a.data) {
                for (w = a.xs0 + a.data.s, c = 1; a.l > c; c++) w += a["xs" + c] + a.data["xn" + c];
                a.e = w + a["xs" + c]
            }
            return a.l || (a.type = -1, a.xs0 = a.e), a.xfirst || a
        }, ft = 9;
        for (l = pt.prototype, l.l = l.pr = 0; --ft > 0;) l["xn" + ft] = 0, l["xs" + ft] = "";
        l.xs0 = "", l._next = l._prev = l.xfirst = l.data = l.plugin = l.setRatio = l.rxp = null, l.appendXtra = function (t, e, i, n, r, o) {
            var a = this, s = a.l;
            return a["xs" + s] += o && s ? " " + t : t || "", i || 0 === s || a.plugin ? (a.l++, a.type = a.setRatio ? 2 : 1, a["xs" + a.l] = n || "", s > 0 ? (a.data["xn" + s] = e + i, a.rxp["xn" + s] = r, a["xn" + s] = e, a.plugin || (a.xfirst = new pt(a, "xn" + s, e, i, a.xfirst || a, 0, a.n, r, a.pr), a.xfirst.xs0 = 0), a) : (a.data = {s: e + i}, a.rxp = {}, a.s = e, a.c = i, a.r = r, a)) : (a["xs" + s] += e + (n || ""), a)
        };
        var mt = function (t, e) {
            e = e || {}, this.p = e.prefix ? W(t) || t : t, s[t] = s[this.p] = this, this.format = e.formatter || ht(e.defaultValue, e.color, e.collapsible, e.multi), e.parser && (this.parse = e.parser), this.clrs = e.color, this.multi = e.multi, this.keyword = e.keyword, this.dflt = e.defaultValue, this.pr = e.priority || 0
        }, gt = B._registerComplexSpecialProp = function (t, e, i) {
            "object" != typeof e && (e = {parser: i});
            var n, r, o = t.split(","), a = e.defaultValue;
            for (i = i || [a], n = 0; o.length > n; n++) e.prefix = 0 === n && e.prefix, e.defaultValue = i[n] || a, r = new mt(o[n], e)
        }, Et = function (t) {
            if (!s[t]) {
                var e = t.charAt(0).toUpperCase() + t.substr(1) + "Plugin";
                gt(t, {
                    parser: function (t, i, n, r, o, a, l) {
                        var h = (_gsScope.GreenSockGlobals || _gsScope).com.greensock.plugins[e];
                        return h ? (h._cssRegister(), s[n].parse(t, i, n, r, o, a, l)) : (z("Error: " + e + " js file not loaded."), o)
                    }
                })
            }
        };
        l = mt.prototype, l.parseComplex = function (t, e, i, n, r, o) {
            var a, s, l, h, u, c, p = this.keyword;
            if (this.multi && (P.test(i) || P.test(e) ? (s = e.replace(P, "|").split("|"), l = i.replace(P, "|").split("|")) : p && (s = [e], l = [i])), l) {
                for (h = l.length > s.length ? l.length : s.length, a = 0; h > a; a++) e = s[a] = s[a] || this.dflt, i = l[a] = l[a] || this.dflt, p && (u = e.indexOf(p), c = i.indexOf(p), u !== c && (i = -1 === c ? l : s, i[a] += " " + p));
                e = s.join(", "), i = l.join(", ")
            }
            return dt(t, this.p, e, i, this.clrs, this.dflt, n, this.pr, r, o)
        }, l.parse = function (t, e, i, n, o, a) {
            return this.parseComplex(t.style, this.format(q(t, this.p, r, !1, this.dflt)), this.format(e), o, a)
        }, a.registerSpecialProp = function (t, e, i) {
            gt(t, {
                parser: function (t, n, r, o, a, s) {
                    var l = new pt(t, r, 0, 0, a, 2, r, !1, i);
                    return l.plugin = s, l.setRatio = e(t, n, o._tween, r), l
                }, priority: i
            })
        };
        var vt = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),
            yt = W("transform"), Tt = G + "transform", _t = W("transformOrigin"), xt = null !== W("perspective"),
            bt = B.Transform = function () {
                this.skewY = 0
            }, Rt = B.getTransform = function (t, e, i, n) {
                if (t._gsTransform && i && !n) return t._gsTransform;
                var r, o, s, l, h, u, c, p, d, f, m, g, E, v = i ? t._gsTransform || new bt : new bt, y = 0 > v.scaleX, T = 2e-5, _ = 1e5,
                    x = 179.99, b = x * L, R = xt ? parseFloat(q(t, _t, e, !1, "0 0 0").split(" ")[2]) || v.zOrigin || 0 : 0;
                if (yt ? r = q(t, Tt, e, !0) : t.currentStyle && (r = t.currentStyle.filter.match(C), r = r && 4 === r.length ? [r[0].substr(4), Number(r[2].substr(4)), Number(r[1].substr(4)), r[3].substr(4), v.x || 0, v.y || 0].join(",") : ""), r && "none" !== r && "matrix(1, 0, 0, 1, 0, 0)" !== r) {
                    for (o = (r || "").match(/(?:\-|\b)[\d\-\.e]+\b/gi) || [], s = o.length; --s > -1;) l = Number(o[s]), o[s] = (h = l - (l |= 0)) ? (0 | h * _ + (0 > h ? -.5 : .5)) / _ + l : l;
                    if (16 === o.length) {
                        var w = o[8], H = o[9], M = o[10], S = o[12], A = o[13], P = o[14];
                        if (v.zOrigin && (P = -v.zOrigin, S = w * P - o[12], A = H * P - o[13], P = M * P + v.zOrigin - o[14]), !i || n || null == v.rotationX) {
                            var D, I, N, k, B, F, U, V = o[0], z = o[1], G = o[2], j = o[3], W = o[4], X = o[5], Y = o[6], $ = o[7], Z = o[11],
                                Q = Math.atan2(Y, M), K = -b > Q || Q > b;
                            v.rotationX = Q * O, Q && (k = Math.cos(-Q), B = Math.sin(-Q), D = W * k + w * B, I = X * k + H * B, N = Y * k + M * B, w = W * -B + w * k, H = X * -B + H * k, M = Y * -B + M * k, Z = $ * -B + Z * k, W = D, X = I, Y = N), Q = Math.atan2(w, V), v.rotationY = Q * O, Q && (F = -b > Q || Q > b, k = Math.cos(-Q), B = Math.sin(-Q), D = V * k - w * B, I = z * k - H * B, N = G * k - M * B, H = z * B + H * k, M = G * B + M * k, Z = j * B + Z * k, V = D, z = I, G = N), Q = Math.atan2(z, X), v.rotation = Q * O, Q && (U = -b > Q || Q > b, k = Math.cos(-Q), B = Math.sin(-Q), V = V * k + W * B, I = z * k + X * B, X = z * -B + X * k, Y = G * -B + Y * k, z = I), U && K ? v.rotation = v.rotationX = 0 : U && F ? v.rotation = v.rotationY = 0 : F && K && (v.rotationY = v.rotationX = 0), v.scaleX = (0 | Math.sqrt(V * V + z * z) * _ + .5) / _, v.scaleY = (0 | Math.sqrt(X * X + H * H) * _ + .5) / _, v.scaleZ = (0 | Math.sqrt(Y * Y + M * M) * _ + .5) / _, v.skewX = 0, v.perspective = Z ? 1 / (0 > Z ? -Z : Z) : 0, v.x = S, v.y = A, v.z = P
                        }
                    } else if (!(xt && !n && o.length && v.x === o[4] && v.y === o[5] && (v.rotationX || v.rotationY) || void 0 !== v.x && "none" === q(t, "display", e))) {
                        var J = o.length >= 6, tt = J ? o[0] : 1, et = o[1] || 0, it = o[2] || 0, nt = J ? o[3] : 1;
                        v.x = o[4] || 0, v.y = o[5] || 0, u = Math.sqrt(tt * tt + et * et), c = Math.sqrt(nt * nt + it * it), p = tt || et ? Math.atan2(et, tt) * O : v.rotation || 0, d = it || nt ? Math.atan2(it, nt) * O + p : v.skewX || 0, f = u - Math.abs(v.scaleX || 0), m = c - Math.abs(v.scaleY || 0), Math.abs(d) > 90 && 270 > Math.abs(d) && (y ? (u *= -1, d += 0 >= p ? 180 : -180, p += 0 >= p ? 180 : -180) : (c *= -1, d += 0 >= d ? 180 : -180)), g = (p - v.rotation) % 180, E = (d - v.skewX) % 180, (void 0 === v.skewX || f > T || -T > f || m > T || -T > m || g > -x && x > g && !1 | g * _ || E > -x && x > E && !1 | E * _) && (v.scaleX = u, v.scaleY = c, v.rotation = p, v.skewX = d), xt && (v.rotationX = v.rotationY = v.z = 0, v.perspective = parseFloat(a.defaultTransformPerspective) || 0, v.scaleZ = 1)
                    }
                    v.zOrigin = R;
                    for (s in v) T > v[s] && v[s] > -T && (v[s] = 0)
                } else v = {
                    x: 0,
                    y: 0,
                    z: 0,
                    scaleX: 1,
                    scaleY: 1,
                    scaleZ: 1,
                    skewX: 0,
                    perspective: 0,
                    rotation: 0,
                    rotationX: 0,
                    rotationY: 0,
                    zOrigin: 0
                };
                return i && (t._gsTransform = v), v.xPercent = v.yPercent = 0, v
            }, wt = function (t) {
                var e, i, n = this.data, r = -n.rotation * L, o = r + n.skewX * L, a = 1e5, s = (0 | Math.cos(r) * n.scaleX * a) / a,
                    l = (0 | Math.sin(r) * n.scaleX * a) / a, h = (0 | Math.sin(o) * -n.scaleY * a) / a,
                    u = (0 | Math.cos(o) * n.scaleY * a) / a, c = this.t.style, p = this.t.currentStyle;
                if (p) {
                    i = l, l = -h, h = -i, e = p.filter, c.filter = "";
                    var d, m, g = this.t.offsetWidth, E = this.t.offsetHeight, v = "absolute" !== p.position,
                        _ = "progid:DXImageTransform.Microsoft.Matrix(M11=" + s + ", M12=" + l + ", M21=" + h + ", M22=" + u,
                        x = n.x + g * n.xPercent / 100, b = n.y + E * n.yPercent / 100;
                    if (null != n.ox && (d = (n.oxp ? .01 * g * n.ox : n.ox) - g / 2, m = (n.oyp ? .01 * E * n.oy : n.oy) - E / 2, x += d - (d * s + m * l), b += m - (d * h + m * u)), v ? (d = g / 2, m = E / 2, _ += ", Dx=" + (d - (d * s + m * l) + x) + ", Dy=" + (m - (d * h + m * u) + b) + ")") : _ += ", sizingMethod='auto expand')", c.filter = -1 !== e.indexOf("DXImageTransform.Microsoft.Matrix(") ? e.replace(A, _) : _ + " " + e, (0 === t || 1 === t) && 1 === s && 0 === l && 0 === h && 1 === u && (v && -1 === _.indexOf("Dx=0, Dy=0") || T.test(e) && 100 !== parseFloat(RegExp.$1) || -1 === e.indexOf(e.indexOf("Alpha")) && c.removeAttribute("filter")), !v) {
                        var R, w, H, M = 8 > f ? 1 : -1;
                        for (d = n.ieOffsetX || 0, m = n.ieOffsetY || 0, n.ieOffsetX = Math.round((g - ((0 > s ? -s : s) * g + (0 > l ? -l : l) * E)) / 2 + x), n.ieOffsetY = Math.round((E - ((0 > u ? -u : u) * E + (0 > h ? -h : h) * g)) / 2 + b), ft = 0; 4 > ft; ft++) w = J[ft], R = p[w], i = -1 !== R.indexOf("px") ? parseFloat(R) : Y(this.t, w, parseFloat(R), R.replace(y, "")) || 0, H = i !== n[w] ? 2 > ft ? -n.ieOffsetX : -n.ieOffsetY : 2 > ft ? d - n.ieOffsetX : m - n.ieOffsetY, c[w] = (n[w] = Math.round(i - H * (0 === ft || 2 === ft ? 1 : M))) + "px"
                    }
                }
            }, Ht = B.set3DTransformRatio = function (t) {
                var e, i, n, r, o, a, s, l, h, u, c, d, f, m, g, E, v, y, T, _, x, b, R, w = this.data, H = this.t.style, M = w.rotation * L,
                    S = w.scaleX, C = w.scaleY, A = w.scaleZ, P = w.x, O = w.y, D = w.z, I = w.perspective;
                if (!(1 !== t && 0 !== t || "auto" !== w.force3D || w.rotationY || w.rotationX || 1 !== A || I || D)) return void Mt.call(this, t);
                if (p) {
                    var N = 1e-4;
                    N > S && S > -N && (S = A = 2e-5), N > C && C > -N && (C = A = 2e-5), !I || w.z || w.rotationX || w.rotationY || (I = 0)
                }
                if (M || w.skewX) y = Math.cos(M), T = Math.sin(M), e = y, o = T, w.skewX && (M -= w.skewX * L, y = Math.cos(M), T = Math.sin(M), "simple" === w.skewType && (_ = Math.tan(w.skewX * L), _ = Math.sqrt(1 + _ * _), y *= _, T *= _)), i = -T, a = y; else {
                    if (!(w.rotationY || w.rotationX || 1 !== A || I)) return void(H[yt] = (w.xPercent || w.yPercent ? "translate(" + w.xPercent + "%," + w.yPercent + "%) translate3d(" : "translate3d(") + P + "px," + O + "px," + D + "px)" + (1 !== S || 1 !== C ? " scale(" + S + "," + C + ")" : ""));
                    e = a = 1, i = o = 0
                }
                c = 1, n = r = s = l = h = u = d = f = m = 0, g = I ? -1 / I : 0, E = w.zOrigin, v = 1e5, M = w.rotationY * L, M && (y = Math.cos(M), T = Math.sin(M), h = c * -T, f = g * -T, n = e * T, s = o * T, c *= y, g *= y, e *= y, o *= y), M = w.rotationX * L, M && (y = Math.cos(M), T = Math.sin(M), _ = i * y + n * T, x = a * y + s * T, b = u * y + c * T, R = m * y + g * T, n = i * -T + n * y, s = a * -T + s * y, c = u * -T + c * y, g = m * -T + g * y, i = _, a = x, u = b, m = R), 1 !== A && (n *= A, s *= A, c *= A, g *= A), 1 !== C && (i *= C, a *= C, u *= C, m *= C), 1 !== S && (e *= S, o *= S, h *= S, f *= S), E && (d -= E, r = n * d, l = s * d, d = c * d + E), r = (_ = (r += P) - (r |= 0)) ? (0 | _ * v + (0 > _ ? -.5 : .5)) / v + r : r, l = (_ = (l += O) - (l |= 0)) ? (0 | _ * v + (0 > _ ? -.5 : .5)) / v + l : l, d = (_ = (d += D) - (d |= 0)) ? (0 | _ * v + (0 > _ ? -.5 : .5)) / v + d : d, H[yt] = (w.xPercent || w.yPercent ? "translate(" + w.xPercent + "%," + w.yPercent + "%) matrix3d(" : "matrix3d(") + [(0 | e * v) / v, (0 | o * v) / v, (0 | h * v) / v, (0 | f * v) / v, (0 | i * v) / v, (0 | a * v) / v, (0 | u * v) / v, (0 | m * v) / v, (0 | n * v) / v, (0 | s * v) / v, (0 | c * v) / v, (0 | g * v) / v, r, l, d, I ? 1 + -d / I : 1].join(",") + ")"
            }, Mt = B.set2DTransformRatio = function (t) {
                var e, i, n, r, o, a = this.data, s = this.t, l = s.style, h = a.x, u = a.y;
                return a.rotationX || a.rotationY || a.z || a.force3D === !0 || "auto" === a.force3D && 1 !== t && 0 !== t ? (this.setRatio = Ht, void Ht.call(this, t)) : void(a.rotation || a.skewX ? (e = a.rotation * L, i = e - a.skewX * L, n = 1e5, r = a.scaleX * n, o = a.scaleY * n, l[yt] = (a.xPercent || a.yPercent ? "translate(" + a.xPercent + "%," + a.yPercent + "%) matrix(" : "matrix(") + (0 | Math.cos(e) * r) / n + "," + (0 | Math.sin(e) * r) / n + "," + (0 | Math.sin(i) * -o) / n + "," + (0 | Math.cos(i) * o) / n + "," + h + "," + u + ")") : l[yt] = (a.xPercent || a.yPercent ? "translate(" + a.xPercent + "%," + a.yPercent + "%) matrix(" : "matrix(") + a.scaleX + ",0,0," + a.scaleY + "," + h + "," + u + ")")
            };
        gt("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent", {
            parser: function (t, e, i, n, o, s, l) {
                if (n._transform) return o;
                var h, u, c, p, d, f, m, g = n._transform = Rt(t, r, !0, l.parseTransform), E = t.style, v = 1e-6, y = vt.length, T = l,
                    _ = {};
                if ("string" == typeof T.transform && yt) c = N.style, c[yt] = T.transform, c.display = "block", c.position = "absolute", I.body.appendChild(N), h = Rt(N, null, !1), I.body.removeChild(N); else if ("object" == typeof T) {
                    if (h = {
                            scaleX: nt(null != T.scaleX ? T.scaleX : T.scale, g.scaleX),
                            scaleY: nt(null != T.scaleY ? T.scaleY : T.scale, g.scaleY),
                            scaleZ: nt(T.scaleZ, g.scaleZ),
                            x: nt(T.x, g.x),
                            y: nt(T.y, g.y),
                            z: nt(T.z, g.z),
                            xPercent: nt(T.xPercent, g.xPercent),
                            yPercent: nt(T.yPercent, g.yPercent),
                            perspective: nt(T.transformPerspective, g.perspective)
                        }, m = T.directionalRotation, null != m) if ("object" == typeof m) for (c in m) T[c] = m[c]; else T.rotation = m;
                    "string" == typeof T.x && -1 !== T.x.indexOf("%") && (h.x = 0, h.xPercent = nt(T.x, g.xPercent)), "string" == typeof T.y && -1 !== T.y.indexOf("%") && (h.y = 0, h.yPercent = nt(T.y, g.yPercent)), h.rotation = rt("rotation" in T ? T.rotation : "shortRotation" in T ? T.shortRotation + "_short" : "rotationZ" in T ? T.rotationZ : g.rotation, g.rotation, "rotation", _), xt && (h.rotationX = rt("rotationX" in T ? T.rotationX : "shortRotationX" in T ? T.shortRotationX + "_short" : g.rotationX || 0, g.rotationX, "rotationX", _), h.rotationY = rt("rotationY" in T ? T.rotationY : "shortRotationY" in T ? T.shortRotationY + "_short" : g.rotationY || 0, g.rotationY, "rotationY", _)), h.skewX = null == T.skewX ? g.skewX : rt(T.skewX, g.skewX), h.skewY = null == T.skewY ? g.skewY : rt(T.skewY, g.skewY), (u = h.skewY - g.skewY) && (h.skewX += u, h.rotation += u)
                }
                for (xt && null != T.force3D && (g.force3D = T.force3D, f = !0), g.skewType = T.skewType || g.skewType || a.defaultSkewType, d = g.force3D || g.z || g.rotationX || g.rotationY || h.z || h.rotationX || h.rotationY || h.perspective, d || null == T.scale || (h.scaleZ = 1); --y > -1;) i = vt[y], p = h[i] - g[i], (p > v || -v > p || null != D[i]) && (f = !0, o = new pt(g, i, g[i], p, o), i in _ && (o.e = _[i]), o.xs0 = 0, o.plugin = s, n._overwriteProps.push(o.n));
                return p = T.transformOrigin, (p || xt && d && g.zOrigin) && (yt ? (f = !0, i = _t, p = (p || q(t, i, r, !1, "50% 50%")) + "", o = new pt(E, i, 0, 0, o, -1, "transformOrigin"), o.b = E[i], o.plugin = s, xt ? (c = g.zOrigin, p = p.split(" "), g.zOrigin = (p.length > 2 && (0 === c || "0px" !== p[2]) ? parseFloat(p[2]) : c) || 0, o.xs0 = o.e = p[0] + " " + (p[1] || "50%") + " 0px", o = new pt(g, "zOrigin", 0, 0, o, -1, o.n), o.b = c, o.xs0 = o.e = g.zOrigin) : o.xs0 = o.e = p) : et(p + "", g)), f && (n._transformType = d || 3 === this._transformType ? 3 : 2), o
            }, prefix: !0
        }), gt("boxShadow", {
            defaultValue: "0px 0px 0px 0px #999",
            prefix: !0,
            color: !0,
            multi: !0,
            keyword: "inset"
        }), gt("borderRadius", {
            defaultValue: "0px", parser: function (t, e, i, o, a) {
                e = this.format(e);
                var s, l, h, u, c, p, d, f, m, g, E, v, y, T, _, x,
                    b = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"], R = t.style;
                for (m = parseFloat(t.offsetWidth), g = parseFloat(t.offsetHeight), s = e.split(" "), l = 0; b.length > l; l++) this.p.indexOf("border") && (b[l] = W(b[l])), c = u = q(t, b[l], r, !1, "0px"), -1 !== c.indexOf(" ") && (u = c.split(" "), c = u[0], u = u[1]), p = h = s[l], d = parseFloat(c), v = c.substr((d + "").length), y = "=" === p.charAt(1), y ? (f = parseInt(p.charAt(0) + "1", 10), p = p.substr(2), f *= parseFloat(p), E = p.substr((f + "").length - (0 > f ? 1 : 0)) || "") : (f = parseFloat(p), E = p.substr((f + "").length)), "" === E && (E = n[i] || v), E !== v && (T = Y(t, "borderLeft", d, v), _ = Y(t, "borderTop", d, v), "%" === E ? (c = 100 * (T / m) + "%", u = 100 * (_ / g) + "%") : "em" === E ? (x = Y(t, "borderLeft", 1, "em"), c = T / x + "em", u = _ / x + "em") : (c = T + "px", u = _ + "px"), y && (p = parseFloat(c) + f + E, h = parseFloat(u) + f + E)), a = dt(R, b[l], c + " " + u, p + " " + h, !1, "0px", a);
                return a
            }, prefix: !0, formatter: ht("0px 0px 0px 0px", !1, !0)
        }), gt("backgroundPosition", {
            defaultValue: "0 0", parser: function (t, e, i, n, o, a) {
                var s, l, h, u, c, p, d = "background-position", m = r || X(t, null),
                    g = this.format((m ? f ? m.getPropertyValue(d + "-x") + " " + m.getPropertyValue(d + "-y") : m.getPropertyValue(d) : t.currentStyle.backgroundPositionX + " " + t.currentStyle.backgroundPositionY) || "0 0"),
                    E = this.format(e);
                if (-1 !== g.indexOf("%") != (-1 !== E.indexOf("%")) && (p = q(t, "backgroundImage").replace(H, ""), p && "none" !== p)) {
                    for (s = g.split(" "), l = E.split(" "), k.setAttribute("src", p), h = 2; --h > -1;) g = s[h], u = -1 !== g.indexOf("%"), u !== (-1 !== l[h].indexOf("%")) && (c = 0 === h ? t.offsetWidth - k.width : t.offsetHeight - k.height, s[h] = u ? parseFloat(g) / 100 * c + "px" : 100 * (parseFloat(g) / c) + "%");
                    g = s.join(" ")
                }
                return this.parseComplex(t.style, g, E, o, a)
            }, formatter: et
        }), gt("backgroundSize", {defaultValue: "0 0", formatter: et}), gt("perspective", {
            defaultValue: "0px",
            prefix: !0
        }), gt("perspectiveOrigin", {
            defaultValue: "50% 50%",
            prefix: !0
        }), gt("transformStyle", {prefix: !0}), gt("backfaceVisibility", {prefix: !0}), gt("userSelect", {prefix: !0}), gt("margin", {parser: ut("marginTop,marginRight,marginBottom,marginLeft")}), gt("padding", {parser: ut("paddingTop,paddingRight,paddingBottom,paddingLeft")}), gt("clip", {
            defaultValue: "rect(0px,0px,0px,0px)",
            parser: function (t, e, i, n, o, a) {
                var s, l, h;
                return 9 > f ? (l = t.currentStyle, h = 8 > f ? " " : ",", s = "rect(" + l.clipTop + h + l.clipRight + h + l.clipBottom + h + l.clipLeft + ")", e = this.format(e).split(",").join(h)) : (s = this.format(q(t, this.p, r, !1, this.dflt)), e = this.format(e)), this.parseComplex(t.style, s, e, o, a)
            }
        }), gt("textShadow", {
            defaultValue: "0px 0px 0px #999",
            color: !0,
            multi: !0
        }), gt("autoRound,strictUnits", {
            parser: function (t, e, i, n, r) {
                return r
            }
        }), gt("border", {
            defaultValue: "0px solid #000", parser: function (t, e, i, n, o, a) {
                return this.parseComplex(t.style, this.format(q(t, "borderTopWidth", r, !1, "0px") + " " + q(t, "borderTopStyle", r, !1, "solid") + " " + q(t, "borderTopColor", r, !1, "#000")), this.format(e), o, a)
            }, color: !0, formatter: function (t) {
                var e = t.split(" ");
                return e[0] + " " + (e[1] || "solid") + " " + (t.match(lt) || ["#000"])[0]
            }
        }), gt("borderWidth", {parser: ut("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}), gt("float,cssFloat,styleFloat", {
            parser: function (t, e, i, n, r) {
                var o = t.style, a = "cssFloat" in o ? "cssFloat" : "styleFloat";
                return new pt(o, a, 0, 0, r, -1, i, !1, 0, o[a], e)
            }
        });
        var St = function (t) {
            var e, i = this.t, n = i.filter || q(this.data, "filter"), r = 0 | this.s + this.c * t;
            100 === r && (-1 === n.indexOf("atrix(") && -1 === n.indexOf("radient(") && -1 === n.indexOf("oader(") ? (i.removeAttribute("filter"), e = !q(this.data, "filter")) : (i.filter = n.replace(x, ""), e = !0)), e || (this.xn1 && (i.filter = n = n || "alpha(opacity=" + r + ")"), -1 === n.indexOf("pacity") ? 0 === r && this.xn1 || (i.filter = n + " alpha(opacity=" + r + ")") : i.filter = n.replace(T, "opacity=" + r))
        };
        gt("opacity,alpha,autoAlpha", {
            defaultValue: "1", parser: function (t, e, i, n, o, a) {
                var s = parseFloat(q(t, "opacity", r, !1, "1")), l = t.style, h = "autoAlpha" === i;
                return "string" == typeof e && "=" === e.charAt(1) && (e = ("-" === e.charAt(0) ? -1 : 1) * parseFloat(e.substr(2)) + s), h && 1 === s && "hidden" === q(t, "visibility", r) && 0 !== e && (s = 0), U ? o = new pt(l, "opacity", s, e - s, o) : (o = new pt(l, "opacity", 100 * s, 100 * (e - s), o), o.xn1 = h ? 1 : 0, l.zoom = 1, o.type = 2, o.b = "alpha(opacity=" + o.s + ")", o.e = "alpha(opacity=" + (o.s + o.c) + ")", o.data = t, o.plugin = a, o.setRatio = St), h && (o = new pt(l, "visibility", 0, 0, o, -1, null, !1, 0, 0 !== s ? "inherit" : "hidden", 0 === e ? "hidden" : "inherit"), o.xs0 = "inherit", n._overwriteProps.push(o.n), n._overwriteProps.push(i)), o
            }
        });
        var Ct = function (t, e) {
            e && (t.removeProperty ? ("ms" === e.substr(0, 2) && (e = "M" + e.substr(1)), t.removeProperty(e.replace(R, "-$1").toLowerCase())) : t.removeAttribute(e))
        }, At = function (t) {
            if (this.t._gsClassPT = this, 1 === t || 0 === t) {
                this.t.setAttribute("class", 0 === t ? this.b : this.e);
                for (var e = this.data, i = this.t.style; e;) e.v ? i[e.p] = e.v : Ct(i, e.p), e = e._next;
                1 === t && this.t._gsClassPT === this && (this.t._gsClassPT = null)
            } else this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e)
        };
        gt("className", {
            parser: function (t, e, n, o, a, s, l) {
                var h, u, c, p, d, f = t.getAttribute("class") || "", m = t.style.cssText;
                if (a = o._classNamePT = new pt(t, n, 0, 0, a, 2), a.setRatio = At, a.pr = -11, i = !0, a.b = f, u = Z(t, r), c = t._gsClassPT) {
                    for (p = {}, d = c.data; d;) p[d.p] = 1, d = d._next;
                    c.setRatio(1)
                }
                return t._gsClassPT = a, a.e = "=" !== e.charAt(1) ? e : f.replace(RegExp("\\s*\\b" + e.substr(2) + "\\b"), "") + ("+" === e.charAt(0) ? " " + e.substr(2) : ""), o._tween._duration && (t.setAttribute("class", a.e), h = Q(t, u, Z(t), l, p), t.setAttribute("class", f), a.data = h.firstMPT, t.style.cssText = m, a = a.xfirst = o.parse(t, h.difs, a, s)), a
            }
        });
        var Pt = function (t) {
            if ((1 === t || 0 === t) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
                var e, i, n, r, o = this.t.style, a = s.transform.parse;
                if ("all" === this.e) o.cssText = "", r = !0; else for (e = this.e.split(","), n = e.length; --n > -1;) i = e[n], s[i] && (s[i].parse === a ? r = !0 : i = "transformOrigin" === i ? _t : s[i].p), Ct(o, i);
                r && (Ct(o, yt), this.t._gsTransform && delete this.t._gsTransform)
            }
        };
        for (gt("clearProps", {
            parser: function (t, e, n, r, o) {
                return o = new pt(t, n, 0, 0, o, 2), o.setRatio = Pt, o.e = e, o.pr = -10, o.data = r._tween, i = !0, o
            }
        }), l = "bezier,throwProps,physicsProps,physics2D".split(","), ft = l.length; ft--;) Et(l[ft]);
        l = a.prototype, l._firstPT = null, l._onInitTween = function (t, e, s) {
            if (!t.nodeType) return !1;
            this._target = t, this._tween = s, this._vars = e, h = e.autoRound, i = !1, n = e.suffixMap || a.suffixMap, r = X(t, ""), o = this._overwriteProps;
            var l, p, f, m, g, E, v, y, T, x = t.style;
            if (u && "" === x.zIndex && (l = q(t, "zIndex", r), ("auto" === l || "" === l) && this._addLazySet(x, "zIndex", 0)), "string" == typeof e && (m = x.cssText, l = Z(t, r), x.cssText = m + ";" + e, l = Q(t, l, Z(t)).difs, !U && _.test(e) && (l.opacity = parseFloat(RegExp.$1)), e = l, x.cssText = m), this._firstPT = p = this.parse(t, e, null), this._transformType) {
                for (T = 3 === this._transformType, yt ? c && (u = !0, "" === x.zIndex && (v = q(t, "zIndex", r), ("auto" === v || "" === v) && this._addLazySet(x, "zIndex", 0)), d && this._addLazySet(x, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (T ? "visible" : "hidden"))) : x.zoom = 1, f = p; f && f._next;) f = f._next;
                y = new pt(t, "transform", 0, 0, null, 2), this._linkCSSP(y, null, f), y.setRatio = T && xt ? Ht : yt ? Mt : wt, y.data = this._transform || Rt(t, r, !0), o.pop()
            }
            if (i) {
                for (; p;) {
                    for (E = p._next, f = m; f && f.pr > p.pr;) f = f._next;
                    (p._prev = f ? f._prev : g) ? p._prev._next = p : m = p, (p._next = f) ? f._prev = p : g = p, p = E
                }
                this._firstPT = m
            }
            return !0
        }, l.parse = function (t, e, i, o) {
            var a, l, u, c, p, d, f, m, g, E, v = t.style;
            for (a in e) d = e[a], l = s[a], l ? i = l.parse(t, d, a, this, i, o, e) : (p = q(t, a, r) + "", g = "string" == typeof d, "color" === a || "fill" === a || "stroke" === a || -1 !== a.indexOf("Color") || g && b.test(d) ? (g || (d = st(d), d = (d.length > 3 ? "rgba(" : "rgb(") + d.join(",") + ")"), i = dt(v, a, p, d, !0, "transparent", i, 0, o)) : !g || -1 === d.indexOf(" ") && -1 === d.indexOf(",") ? (u = parseFloat(p), f = u || 0 === u ? p.substr((u + "").length) : "", ("" === p || "auto" === p) && ("width" === a || "height" === a ? (u = tt(t, a, r), f = "px") : "left" === a || "top" === a ? (u = $(t, a, r), f = "px") : (u = "opacity" !== a ? 0 : 1, f = "")), E = g && "=" === d.charAt(1), E ? (c = parseInt(d.charAt(0) + "1", 10), d = d.substr(2), c *= parseFloat(d), m = d.replace(y, "")) : (c = parseFloat(d), m = g ? d.substr((c + "").length) || "" : ""), "" === m && (m = a in n ? n[a] : f), d = c || 0 === c ? (E ? c + u : c) + m : e[a], f !== m && "" !== m && (c || 0 === c) && u && (u = Y(t, a, u, f), "%" === m ? (u /= Y(t, a, 100, "%") / 100, e.strictUnits !== !0 && (p = u + "%")) : "em" === m ? u /= Y(t, a, 1, "em") : "px" !== m && (c = Y(t, a, c, m), m = "px"), E && (c || 0 === c) && (d = c + u + m)), E && (c += u), !u && 0 !== u || !c && 0 !== c ? void 0 !== v[a] && (d || "NaN" != d + "" && null != d) ? (i = new pt(v, a, c || u || 0, 0, i, -1, a, !1, 0, p, d), i.xs0 = "none" !== d || "display" !== a && -1 === a.indexOf("Style") ? d : p) : z("invalid " + a + " tween value: " + e[a]) : (i = new pt(v, a, u, c - u, i, 0, a, h !== !1 && ("px" === m || "zIndex" === a), 0, p, d), i.xs0 = m)) : i = dt(v, a, p, d, !0, null, i, 0, o)), o && i && !i.plugin && (i.plugin = o);
            return i
        }, l.setRatio = function (t) {
            var e, i, n, r = this._firstPT, o = 1e-6;
            if (1 !== t || this._tween._time !== this._tween._duration && 0 !== this._tween._time) if (t || this._tween._time !== this._tween._duration && 0 !== this._tween._time || this._tween._rawPrevTime === -1e-6) for (; r;) {
                if (e = r.c * t + r.s, r.r ? e = Math.round(e) : o > e && e > -o && (e = 0), r.type) if (1 === r.type) if (n = r.l, 2 === n) r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2; else if (3 === n) r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3; else if (4 === n) r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4; else if (5 === n) r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4 + r.xn4 + r.xs5; else {
                    for (i = r.xs0 + e + r.xs1, n = 1; r.l > n; n++) i += r["xn" + n] + r["xs" + (n + 1)];
                    r.t[r.p] = i
                } else -1 === r.type ? r.t[r.p] = r.xs0 : r.setRatio && r.setRatio(t); else r.t[r.p] = e + r.xs0;
                r = r._next
            } else for (; r;) 2 !== r.type ? r.t[r.p] = r.b : r.setRatio(t), r = r._next; else for (; r;) 2 !== r.type ? r.t[r.p] = r.e : r.setRatio(t), r = r._next
        }, l._enableTransforms = function (t) {
            this._transformType = t || 3 === this._transformType ? 3 : 2, this._transform = this._transform || Rt(this._target, r, !0)
        };
        var Lt = function () {
            this.t[this.p] = this.e, this.data._linkCSSP(this, this._next, null, !0)
        };
        l._addLazySet = function (t, e, i) {
            var n = this._firstPT = new pt(t, e, 0, 0, this._firstPT, 2);
            n.e = i, n.setRatio = Lt, n.data = this
        }, l._linkCSSP = function (t, e, i, n) {
            return t && (e && (e._prev = t), t._next && (t._next._prev = t._prev), t._prev ? t._prev._next = t._next : this._firstPT === t && (this._firstPT = t._next, n = !0), i ? i._next = t : n || null !== this._firstPT || (this._firstPT = t), t._next = e, t._prev = i), t
        }, l._kill = function (e) {
            var i, n, r, o = e;
            if (e.autoAlpha || e.alpha) {
                o = {};
                for (n in e) o[n] = e[n];
                o.opacity = 1, o.autoAlpha && (o.visibility = 1)
            }
            return e.className && (i = this._classNamePT) && (r = i.xfirst, r && r._prev ? this._linkCSSP(r._prev, i._next, r._prev._prev) : r === this._firstPT && (this._firstPT = i._next), i._next && this._linkCSSP(i._next, i._next._next, r._prev), this._classNamePT = null), t.prototype._kill.call(this, o)
        };
        var Ot = function (t, e, i) {
            var n, r, o, a;
            if (t.slice) for (r = t.length; --r > -1;) Ot(t[r], e, i); else for (n = t.childNodes, r = n.length; --r > -1;) o = n[r], a = o.type, o.style && (e.push(Z(o)), i && i.push(o)), 1 !== a && 9 !== a && 11 !== a || !o.childNodes.length || Ot(o, e, i)
        };
        return a.cascadeTo = function (t, i, n) {
            var r, o, a, s = e.to(t, i, n), l = [s], h = [], u = [], c = [], p = e._internals.reservedProps;
            for (t = s._targets || s.target, Ot(t, h, c), s.render(i, !0), Ot(t, u), s.render(0, !0), s._enabled(!0), r = c.length; --r > -1;) if (o = Q(c[r], h[r], u[r]), o.firstMPT) {
                o = o.difs;
                for (a in n) p[a] && (o[a] = n[a]);
                l.push(e.to(c[r], i, o))
            }
            return l
        }, t.activate([a]), a
    }, !0), function () {
        var t = _gsScope._gsDefine.plugin({
            propName: "roundProps", priority: -1, API: 2, init: function (t, e, i) {
                return this._tween = i, !0
            }
        }), e = t.prototype;
        e._onInitAllProps = function () {
            for (var t, e, i, n = this._tween, r = n.vars.roundProps instanceof Array ? n.vars.roundProps : n.vars.roundProps.split(","), o = r.length, a = {}, s = n._propLookup.roundProps; --o > -1;) a[r[o]] = 1;
            for (o = r.length; --o > -1;) for (t = r[o], e = n._firstPT; e;) i = e._next, e.pg ? e.t._roundProps(a, !0) : e.n === t && (this._add(e.t, t, e.s, e.c), i && (i._prev = e._prev), e._prev ? e._prev._next = i : n._firstPT === e && (n._firstPT = i), e._next = e._prev = null, n._propLookup[t] = s), e = i;
            return !1
        }, e._add = function (t, e, i, n) {
            this._addTween(t, e, i, i + n, e, !0), this._overwriteProps.push(e)
        }
    }(), _gsScope._gsDefine.plugin({
        propName: "attr", API: 2, version: "0.3.3", init: function (t, e) {
            var i, n, r;
            if ("function" != typeof t.setAttribute) return !1;
            this._target = t, this._proxy = {}, this._start = {}, this._end = {};
            for (i in e) this._start[i] = this._proxy[i] = n = t.getAttribute(i), r = this._addTween(this._proxy, i, parseFloat(n), e[i], i), this._end[i] = r ? r.s + r.c : e[i], this._overwriteProps.push(i);
            return !0
        }, set: function (t) {
            this._super.setRatio.call(this, t);
            for (var e, i = this._overwriteProps, n = i.length, r = 1 === t ? this._end : t ? this._proxy : this._start; --n > -1;) e = i[n], this._target.setAttribute(e, r[e] + "")
        }
    }), _gsScope._gsDefine.plugin({
        propName: "directionalRotation", version: "0.2.1", API: 2, init: function (t, e) {
            "object" != typeof e && (e = {rotation: e}), this.finals = {};
            var i, n, r, o, a, s, l = e.useRadians === !0 ? 2 * Math.PI : 360, h = 1e-6;
            for (i in e) "useRadians" !== i && (s = (e[i] + "").split("_"), n = s[0], r = parseFloat("function" != typeof t[i] ? t[i] : t[i.indexOf("set") || "function" != typeof t["get" + i.substr(3)] ? i : "get" + i.substr(3)]()), o = this.finals[i] = "string" == typeof n && "=" === n.charAt(1) ? r + parseInt(n.charAt(0) + "1", 10) * Number(n.substr(2)) : Number(n) || 0, a = o - r, s.length && (n = s.join("_"), -1 !== n.indexOf("short") && (a %= l, a !== a % (l / 2) && (a = 0 > a ? a + l : a - l)), -1 !== n.indexOf("_cw") && 0 > a ? a = (a + 9999999999 * l) % l - (0 | a / l) * l : -1 !== n.indexOf("ccw") && a > 0 && (a = (a - 9999999999 * l) % l - (0 | a / l) * l)), (a > h || -h > a) && (this._addTween(t, i, r, r + a, i), this._overwriteProps.push(i)));
            return !0
        }, set: function (t) {
            var e;
            if (1 !== t) this._super.setRatio.call(this, t); else for (e = this._firstPT; e;) e.f ? e.t[e.p](this.finals[e.p]) : e.t[e.p] = this.finals[e.p], e = e._next
        }
    })._autoCSS = !0, _gsScope._gsDefine("easing.Back", ["easing.Ease"], function (t) {
        var e, i, n, r = _gsScope.GreenSockGlobals || _gsScope, o = r.com.greensock, a = 2 * Math.PI, s = Math.PI / 2, l = o._class,
            h = function (e, i) {
                var n = l("easing." + e, function () {
                }, !0), r = n.prototype = new t;
                return r.constructor = n, r.getRatio = i, n
            }, u = t.register || function () {
            }, c = function (t, e, i, n) {
                var r = l("easing." + t, {easeOut: new e, easeIn: new i, easeInOut: new n}, !0);
                return u(r, t), r
            }, p = function (t, e, i) {
                this.t = t, this.v = e, i && (this.next = i, i.prev = this, this.c = i.v - e, this.gap = i.t - t)
            }, d = function (e, i) {
                var n = l("easing." + e, function (t) {
                    this._p1 = t || 0 === t ? t : 1.70158, this._p2 = 1.525 * this._p1
                }, !0), r = n.prototype = new t;
                return r.constructor = n, r.getRatio = i, r.config = function (t) {
                    return new n(t)
                }, n
            }, f = c("Back", d("BackOut", function (t) {
                return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1
            }), d("BackIn", function (t) {
                return t * t * ((this._p1 + 1) * t - this._p1)
            }), d("BackInOut", function (t) {
                return 1 > (t *= 2) ? .5 * t * t * ((this._p2 + 1) * t - this._p2) : .5 * ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2)
            })), m = l("easing.SlowMo", function (t, e, i) {
                e = e || 0 === e ? e : .7, null == t ? t = .7 : t > 1 && (t = 1), this._p = 1 !== t ? e : 0, this._p1 = (1 - t) / 2, this._p2 = t, this._p3 = this._p1 + this._p2, this._calcEnd = i === !0
            }, !0), g = m.prototype = new t;
        return g.constructor = m, g.getRatio = function (t) {
            var e = t + (.5 - t) * this._p;
            return this._p1 > t ? this._calcEnd ? 1 - (t = 1 - t / this._p1) * t : e - (t = 1 - t / this._p1) * t * t * t * e : t > this._p3 ? this._calcEnd ? 1 - (t = (t - this._p3) / this._p1) * t : e + (t - e) * (t = (t - this._p3) / this._p1) * t * t * t : this._calcEnd ? 1 : e
        }, m.ease = new m(.7, .7), g.config = m.config = function (t, e, i) {
            return new m(t, e, i)
        }, e = l("easing.SteppedEase", function (t) {
            t = t || 1, this._p1 = 1 / t, this._p2 = t + 1
        }, !0), g = e.prototype = new t, g.constructor = e, g.getRatio = function (t) {
            return 0 > t ? t = 0 : t >= 1 && (t = .999999999), (this._p2 * t >> 0) * this._p1
        }, g.config = e.config = function (t) {
            return new e(t)
        }, i = l("easing.RoughEase", function (e) {
            e = e || {};
            for (var i, n, r, o, a, s, l = e.taper || "none", h = [], u = 0, c = 0 | (e.points || 20), d = c, f = e.randomize !== !1, m = e.clamp === !0, g = e.template instanceof t ? e.template : null, E = "number" == typeof e.strength ? .4 * e.strength : .4; --d > -1;) i = f ? Math.random() : 1 / c * d, n = g ? g.getRatio(i) : i, "none" === l ? r = E : "out" === l ? (o = 1 - i, r = o * o * E) : "in" === l ? r = i * i * E : .5 > i ? (o = 2 * i, r = .5 * o * o * E) : (o = 2 * (1 - i), r = .5 * o * o * E), f ? n += Math.random() * r - .5 * r : d % 2 ? n += .5 * r : n -= .5 * r, m && (n > 1 ? n = 1 : 0 > n && (n = 0)), h[u++] = {
                x: i,
                y: n
            };
            for (h.sort(function (t, e) {
                return t.x - e.x
            }), s = new p(1, 1, null), d = c; --d > -1;) a = h[d], s = new p(a.x, a.y, s);
            this._prev = new p(0, 0, 0 !== s.t ? s : s.next)
        }, !0), g = i.prototype = new t, g.constructor = i, g.getRatio = function (t) {
            var e = this._prev;
            if (t > e.t) {
                for (; e.next && t >= e.t;) e = e.next;
                e = e.prev
            } else for (; e.prev && e.t >= t;) e = e.prev;
            return this._prev = e, e.v + (t - e.t) / e.gap * e.c
        }, g.config = function (t) {
            return new i(t)
        }, i.ease = new i, c("Bounce", h("BounceOut", function (t) {
            return 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
        }), h("BounceIn", function (t) {
            return 1 / 2.75 > (t = 1 - t) ? 1 - 7.5625 * t * t : 2 / 2.75 > t ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + .75) : 2.5 / 2.75 > t ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + .984375)
        }), h("BounceInOut", function (t) {
            var e = .5 > t;
            return t = e ? 1 - 2 * t : 2 * t - 1, t = 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375, e ? .5 * (1 - t) : .5 * t + .5
        })), c("Circ", h("CircOut", function (t) {
            return Math.sqrt(1 - (t -= 1) * t)
        }), h("CircIn", function (t) {
            return -(Math.sqrt(1 - t * t) - 1)
        }), h("CircInOut", function (t) {
            return 1 > (t *= 2) ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
        })), n = function (e, i, n) {
            var r = l("easing." + e, function (t, e) {
                this._p1 = t || 1, this._p2 = e || n, this._p3 = this._p2 / a * (Math.asin(1 / this._p1) || 0)
            }, !0), o = r.prototype = new t;
            return o.constructor = r, o.getRatio = i, o.config = function (t, e) {
                return new r(t, e)
            }, r
        }, c("Elastic", n("ElasticOut", function (t) {
            return this._p1 * Math.pow(2, -10 * t) * Math.sin((t - this._p3) * a / this._p2) + 1
        }, .3), n("ElasticIn", function (t) {
            return -(this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2))
        }, .3), n("ElasticInOut", function (t) {
            return 1 > (t *= 2) ? -.5 * this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2) : .5 * this._p1 * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2) + 1
        }, .45)), c("Expo", h("ExpoOut", function (t) {
            return 1 - Math.pow(2, -10 * t)
        }), h("ExpoIn", function (t) {
            return Math.pow(2, 10 * (t - 1)) - .001
        }), h("ExpoInOut", function (t) {
            return 1 > (t *= 2) ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * (t - 1)))
        })), c("Sine", h("SineOut", function (t) {
            return Math.sin(t * s)
        }), h("SineIn", function (t) {
            return -Math.cos(t * s) + 1
        }), h("SineInOut", function (t) {
            return -.5 * (Math.cos(Math.PI * t) - 1)
        })), l("easing.EaseLookup", {
            find: function (e) {
                return t.map[e]
            }
        }, !0), u(r.SlowMo, "SlowMo", "ease,"), u(i, "RoughEase", "ease,"), u(e, "SteppedEase", "ease,"), f
    }, !0)
}), _gsScope._gsDefine && _gsScope._gsQueue.pop()(), function (t, e) {
    "use strict";
    var i = t.GreenSockGlobals = t.GreenSockGlobals || t;
    if (!i.TweenLite) {
        var n, r, o, a, s, l = function (t) {
            var e, n = t.split("."), r = i;
            for (e = 0; n.length > e; e++) r[n[e]] = r = r[n[e]] || {};
            return r
        }, h = l("com.greensock"), u = 1e-10, c = function (t) {
            var e, i = [], n = t.length;
            for (e = 0; e !== n; i.push(t[e++])) ;
            return i
        }, p = function () {
        }, d = function () {
            var t = Object.prototype.toString, e = t.call([]);
            return function (i) {
                return null != i && (i instanceof Array || "object" == typeof i && !!i.push && t.call(i) === e)
            }
        }(), f = {}, m = function (n, r, o, a) {
            this.sc = f[n] ? f[n].sc : [], f[n] = this, this.gsClass = null, this.func = o;
            var s = [];
            this.check = function (h) {
                for (var u, c, p, d, g = r.length, E = g; --g > -1;) (u = f[r[g]] || new m(r[g], [])).gsClass ? (s[g] = u.gsClass, E--) : h && u.sc.push(this);
                if (0 === E && o) for (c = ("com.greensock." + n).split("."), p = c.pop(), d = l(c.join("."))[p] = this.gsClass = o.apply(o, s), a && (i[p] = d, "function" == typeof define && define.amd ? define((t.GreenSockAMDPath ? t.GreenSockAMDPath + "/" : "") + n.split(".").pop(), [], function () {
                    return d
                }) : n === e && "undefined" != typeof module && module.exports && (module.exports = d)), g = 0; this.sc.length > g; g++) this.sc[g].check()
            }, this.check(!0)
        }, g = t._gsDefine = function (t, e, i, n) {
            return new m(t, e, i, n)
        }, E = h._class = function (t, e, i) {
            return e = e || function () {
            }, g(t, [], function () {
                return e
            }, i), e
        };
        g.globals = i;
        var v = [0, 0, 1, 1], y = [], T = E("easing.Ease", function (t, e, i, n) {
            this._func = t, this._type = i || 0, this._power = n || 0, this._params = e ? v.concat(e) : v
        }, !0), _ = T.map = {}, x = T.register = function (t, e, i, n) {
            for (var r, o, a, s, l = e.split(","), u = l.length, c = (i || "easeIn,easeOut,easeInOut").split(","); --u > -1;) for (o = l[u], r = n ? E("easing." + o, null, !0) : h.easing[o] || {}, a = c.length; --a > -1;) s = c[a], _[o + "." + s] = _[s + o] = r[s] = t.getRatio ? t : t[s] || new t
        };
        for (o = T.prototype, o._calcEnd = !1, o.getRatio = function (t) {
            if (this._func) return this._params[0] = t, this._func.apply(null, this._params);
            var e = this._type, i = this._power, n = 1 === e ? 1 - t : 2 === e ? t : .5 > t ? 2 * t : 2 * (1 - t);
            return 1 === i ? n *= n : 2 === i ? n *= n * n : 3 === i ? n *= n * n * n : 4 === i && (n *= n * n * n * n), 1 === e ? 1 - n : 2 === e ? n : .5 > t ? n / 2 : 1 - n / 2
        }, n = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"], r = n.length; --r > -1;) o = n[r] + ",Power" + r, x(new T(null, null, 1, r), o, "easeOut", !0), x(new T(null, null, 2, r), o, "easeIn" + (0 === r ? ",easeNone" : "")), x(new T(null, null, 3, r), o, "easeInOut");
        _.linear = h.easing.Linear.easeIn, _.swing = h.easing.Quad.easeInOut;
        var b = E("events.EventDispatcher", function (t) {
            this._listeners = {}, this._eventTarget = t || this
        });
        o = b.prototype, o.addEventListener = function (t, e, i, n, r) {
            r = r || 0;
            var o, l, h = this._listeners[t], u = 0;
            for (null == h && (this._listeners[t] = h = []), l = h.length; --l > -1;) o = h[l], o.c === e && o.s === i ? h.splice(l, 1) : 0 === u && r > o.pr && (u = l + 1);
            h.splice(u, 0, {c: e, s: i, up: n, pr: r}), this !== a || s || a.wake()
        }, o.removeEventListener = function (t, e) {
            var i, n = this._listeners[t];
            if (n) for (i = n.length; --i > -1;) if (n[i].c === e) return void n.splice(i, 1)
        }, o.dispatchEvent = function (t) {
            var e, i, n, r = this._listeners[t];
            if (r) for (e = r.length, i = this._eventTarget; --e > -1;) n = r[e], n.up ? n.c.call(n.s || i, {
                type: t,
                target: i
            }) : n.c.call(n.s || i)
        };
        var R = t.requestAnimationFrame, w = t.cancelAnimationFrame, H = Date.now || function () {
            return (new Date).getTime()
        }, M = H();
        for (n = ["ms", "moz", "webkit", "o"], r = n.length; --r > -1 && !R;) R = t[n[r] + "RequestAnimationFrame"], w = t[n[r] + "CancelAnimationFrame"] || t[n[r] + "CancelRequestAnimationFrame"];
        E("Ticker", function (t, e) {
            var i, n, r, o, l, h = this, c = H(), d = e !== !1 && R, f = 500, m = 33, g = function (t) {
                var e, a, s = H() - M;
                s > f && (c += s - m), M += s, h.time = (M - c) / 1e3, e = h.time - l, (!i || e > 0 || t === !0) && (h.frame++, l += e + (e >= o ? .004 : o - e), a = !0), t !== !0 && (r = n(g)), a && h.dispatchEvent("tick")
            };
            b.call(h), h.time = h.frame = 0, h.tick = function () {
                g(!0)
            }, h.lagSmoothing = function (t, e) {
                f = t || 1 / u, m = Math.min(e, f, 0)
            }, h.sleep = function () {
                null != r && (d && w ? w(r) : clearTimeout(r), n = p, r = null, h === a && (s = !1))
            }, h.wake = function () {
                null !== r ? h.sleep() : h.frame > 10 && (M = H() - f + 5), n = 0 === i ? p : d && R ? R : function (t) {
                    return setTimeout(t, 0 | 1e3 * (l - h.time) + 1)
                }, h === a && (s = !0), g(2)
            }, h.fps = function (t) {
                return arguments.length ? (i = t, o = 1 / (i || 60), l = this.time + o, void h.wake()) : i
            }, h.useRAF = function (t) {
                return arguments.length ? (h.sleep(), d = t, void h.fps(i)) : d
            }, h.fps(t), setTimeout(function () {
                d && (!r || 5 > h.frame) && h.useRAF(!1)
            }, 1500)
        }), o = h.Ticker.prototype = new h.events.EventDispatcher, o.constructor = h.Ticker;
        var S = E("core.Animation", function (t, e) {
            if (this.vars = e = e || {}, this._duration = this._totalDuration = t || 0, this._delay = Number(e.delay) || 0, this._timeScale = 1, this._active = e.immediateRender === !0, this.data = e.data, this._reversed = e.reversed === !0, G) {
                s || a.wake();
                var i = this.vars.useFrames ? z : G;
                i.add(this, i._time), this.vars.paused && this.paused(!0)
            }
        });
        a = S.ticker = new h.Ticker, o = S.prototype, o._dirty = o._gc = o._initted = o._paused = !1, o._totalTime = o._time = 0, o._rawPrevTime = -1, o._next = o._last = o._onUpdate = o._timeline = o.timeline = null, o._paused = !1;
        var C = function () {
            s && H() - M > 2e3 && a.wake(), setTimeout(C, 2e3)
        };
        C(), o.play = function (t, e) {
            return null != t && this.seek(t, e), this.reversed(!1).paused(!1)
        }, o.pause = function (t, e) {
            return null != t && this.seek(t, e), this.paused(!0)
        }, o.resume = function (t, e) {
            return null != t && this.seek(t, e), this.paused(!1)
        }, o.seek = function (t, e) {
            return this.totalTime(Number(t), e !== !1)
        }, o.restart = function (t, e) {
            return this.reversed(!1).paused(!1).totalTime(t ? -this._delay : 0, e !== !1, !0)
        }, o.reverse = function (t, e) {
            return null != t && this.seek(t || this.totalDuration(), e), this.reversed(!0).paused(!1)
        }, o.render = function () {
        }, o.invalidate = function () {
            return this
        }, o.isActive = function () {
            var t, e = this._timeline, i = this._startTime;
            return !e || !this._gc && !this._paused && e.isActive() && (t = e.rawTime()) >= i && i + this.totalDuration() / this._timeScale > t
        }, o._enabled = function (t, e) {
            return s || a.wake(), this._gc = !t, this._active = this.isActive(), e !== !0 && (t && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !t && this.timeline && this._timeline._remove(this, !0)), !1
        }, o._kill = function () {
            return this._enabled(!1, !1)
        }, o.kill = function (t, e) {
            return this._kill(t, e), this
        }, o._uncache = function (t) {
            for (var e = t ? this : this.timeline; e;) e._dirty = !0, e = e.timeline;
            return this
        }, o._swapSelfInParams = function (t) {
            for (var e = t.length, i = t.concat(); --e > -1;) "{self}" === t[e] && (i[e] = this);
            return i
        }, o.eventCallback = function (t, e, i, n) {
            if ("on" === (t || "").substr(0, 2)) {
                var r = this.vars;
                if (1 === arguments.length) return r[t];
                null == e ? delete r[t] : (r[t] = e, r[t + "Params"] = d(i) && -1 !== i.join("").indexOf("{self}") ? this._swapSelfInParams(i) : i, r[t + "Scope"] = n), "onUpdate" === t && (this._onUpdate = e)
            }
            return this
        }, o.delay = function (t) {
            return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + t - this._delay), this._delay = t, this) : this._delay
        }, o.duration = function (t) {
            return arguments.length ? (this._duration = this._totalDuration = t, this._uncache(!0), this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== t && this.totalTime(this._totalTime * (t / this._duration), !0), this) : (this._dirty = !1, this._duration)
        }, o.totalDuration = function (t) {
            return this._dirty = !1, arguments.length ? this.duration(t) : this._totalDuration
        }, o.time = function (t, e) {
            return arguments.length ? (this._dirty && this.totalDuration(), this.totalTime(t > this._duration ? this._duration : t, e)) : this._time
        }, o.totalTime = function (t, e, i) {
            if (s || a.wake(), !arguments.length) return this._totalTime;
            if (this._timeline) {
                if (0 > t && !i && (t += this.totalDuration()), this._timeline.smoothChildTiming) {
                    this._dirty && this.totalDuration();
                    var n = this._totalDuration, r = this._timeline;
                    if (t > n && !i && (t = n), this._startTime = (this._paused ? this._pauseTime : r._time) - (this._reversed ? n - t : t) / this._timeScale, r._dirty || this._uncache(!1), r._timeline) for (; r._timeline;) r._timeline._time !== (r._startTime + r._totalTime) / r._timeScale && r.totalTime(r._totalTime, !0), r = r._timeline
                }
                this._gc && this._enabled(!0, !1), (this._totalTime !== t || 0 === this._duration) && (this.render(t, e, !1), D.length && j())
            }
            return this
        }, o.progress = o.totalProgress = function (t, e) {
            return arguments.length ? this.totalTime(this.duration() * t, e) : this._time / this.duration()
        }, o.startTime = function (t) {
            return arguments.length ? (t !== this._startTime && (this._startTime = t, this.timeline && this.timeline._sortChildren && this.timeline.add(this, t - this._delay)), this) : this._startTime
        }, o.timeScale = function (t) {
            if (!arguments.length) return this._timeScale;
            if (t = t || u, this._timeline && this._timeline.smoothChildTiming) {
                var e = this._pauseTime, i = e || 0 === e ? e : this._timeline.totalTime();
                this._startTime = i - (i - this._startTime) * this._timeScale / t
            }
            return this._timeScale = t, this._uncache(!1)
        }, o.reversed = function (t) {
            return arguments.length ? (t != this._reversed && (this._reversed = t, this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)), this) : this._reversed
        }, o.paused = function (t) {
            if (!arguments.length) return this._paused;
            if (t != this._paused && this._timeline) {
                s || t || a.wake();
                var e = this._timeline, i = e.rawTime(), n = i - this._pauseTime;
                !t && e.smoothChildTiming && (this._startTime += n, this._uncache(!1)), this._pauseTime = t ? i : null, this._paused = t, this._active = this.isActive(), !t && 0 !== n && this._initted && this.duration() && this.render(e.smoothChildTiming ? this._totalTime : (i - this._startTime) / this._timeScale, !0, !0)
            }
            return this._gc && !t && this._enabled(!0, !1), this
        };
        var A = E("core.SimpleTimeline", function (t) {
            S.call(this, 0, t), this.autoRemoveChildren = this.smoothChildTiming = !0
        });
        o = A.prototype = new S, o.constructor = A, o.kill()._gc = !1, o._first = o._last = null, o._sortChildren = !1, o.add = o.insert = function (t, e) {
            var i, n;
            if (t._startTime = Number(e || 0) + t._delay, t._paused && this !== t._timeline && (t._pauseTime = t._startTime + (this.rawTime() - t._startTime) / t._timeScale), t.timeline && t.timeline._remove(t, !0), t.timeline = t._timeline = this, t._gc && t._enabled(!0, !0), i = this._last, this._sortChildren) for (n = t._startTime; i && i._startTime > n;) i = i._prev;
            return i ? (t._next = i._next, i._next = t) : (t._next = this._first, this._first = t), t._next ? t._next._prev = t : this._last = t, t._prev = i, this._timeline && this._uncache(!0), this
        }, o._remove = function (t, e) {
            return t.timeline === this && (e || t._enabled(!1, !0), t._prev ? t._prev._next = t._next : this._first === t && (this._first = t._next), t._next ? t._next._prev = t._prev : this._last === t && (this._last = t._prev), t._next = t._prev = t.timeline = null, this._timeline && this._uncache(!0)), this
        }, o.render = function (t, e, i) {
            var n, r = this._first;
            for (this._totalTime = this._time = this._rawPrevTime = t; r;) n = r._next, (r._active || t >= r._startTime && !r._paused) && (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, i) : r.render((t - r._startTime) * r._timeScale, e, i)), r = n
        }, o.rawTime = function () {
            return s || a.wake(), this._totalTime
        };
        var P = E("TweenLite", function (e, i, n) {
            if (S.call(this, i, n), this.render = P.prototype.render, null == e) throw"Cannot tween a null target.";
            this.target = e = "string" != typeof e ? e : P.selector(e) || e;
            var r, o, a, s = e.jquery || e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType),
                l = this.vars.overwrite;
            if (this._overwrite = l = null == l ? V[P.defaultOverwrite] : "number" == typeof l ? l >> 0 : V[l], (s || e instanceof Array || e.push && d(e)) && "number" != typeof e[0]) for (this._targets = a = c(e), this._propLookup = [], this._siblings = [], r = 0; a.length > r; r++) o = a[r], o ? "string" != typeof o ? o.length && o !== t && o[0] && (o[0] === t || o[0].nodeType && o[0].style && !o.nodeType) ? (a.splice(r--, 1), this._targets = a = a.concat(c(o))) : (this._siblings[r] = W(o, this, !1), 1 === l && this._siblings[r].length > 1 && X(o, this, null, 1, this._siblings[r])) : (o = a[r--] = P.selector(o), "string" == typeof o && a.splice(r + 1, 1)) : a.splice(r--, 1); else this._propLookup = {}, this._siblings = W(e, this, !1), 1 === l && this._siblings.length > 1 && X(e, this, null, 1, this._siblings);
            (this.vars.immediateRender || 0 === i && 0 === this._delay && this.vars.immediateRender !== !1) && (this._time = -u, this.render(-this._delay))
        }, !0), L = function (e) {
            return e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType)
        }, O = function (t, e) {
            var i, n = {};
            for (i in t) U[i] || i in e && "transform" !== i && "x" !== i && "y" !== i && "width" !== i && "height" !== i && "className" !== i && "border" !== i || !(!k[i] || k[i] && k[i]._autoCSS) || (n[i] = t[i], delete t[i]);
            t.css = n
        };
        o = P.prototype = new S, o.constructor = P, o.kill()._gc = !1, o.ratio = 0, o._firstPT = o._targets = o._overwrittenProps = o._startAt = null, o._notifyPluginsOfEnabled = o._lazy = !1, P.version = "1.13.1", P.defaultEase = o._ease = new T(null, null, 1, 1), P.defaultOverwrite = "auto", P.ticker = a, P.autoSleep = !0, P.lagSmoothing = function (t, e) {
            a.lagSmoothing(t, e)
        }, P.selector = t.$ || t.jQuery || function (e) {
            var i = t.$ || t.jQuery;
            return i ? (P.selector = i, i(e)) : "undefined" == typeof document ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById("#" === e.charAt(0) ? e.substr(1) : e)
        };
        var D = [], I = {}, N = P._internals = {isArray: d, isSelector: L, lazyTweens: D}, k = P._plugins = {}, B = N.tweenLookup = {},
            F = 0, U = N.reservedProps = {
                ease: 1,
                delay: 1,
                overwrite: 1,
                onComplete: 1,
                onCompleteParams: 1,
                onCompleteScope: 1,
                useFrames: 1,
                runBackwards: 1,
                startAt: 1,
                onUpdate: 1,
                onUpdateParams: 1,
                onUpdateScope: 1,
                onStart: 1,
                onStartParams: 1,
                onStartScope: 1,
                onReverseComplete: 1,
                onReverseCompleteParams: 1,
                onReverseCompleteScope: 1,
                onRepeat: 1,
                onRepeatParams: 1,
                onRepeatScope: 1,
                easeParams: 1,
                yoyo: 1,
                immediateRender: 1,
                repeat: 1,
                repeatDelay: 1,
                data: 1,
                paused: 1,
                reversed: 1,
                autoCSS: 1,
                lazy: 1
            }, V = {none: 0, all: 1, auto: 2, concurrent: 3, allOnStart: 4, preexisting: 5, "true": 1, "false": 0},
            z = S._rootFramesTimeline = new A, G = S._rootTimeline = new A, j = N.lazyRender = function () {
                var t = D.length;
                for (I = {}; --t > -1;) n = D[t], n && n._lazy !== !1 && (n.render(n._lazy, !1, !0), n._lazy = !1);
                D.length = 0
            };
        G._startTime = a.time, z._startTime = a.frame, G._active = z._active = !0, setTimeout(j, 1), S._updateRoot = P.render = function () {
            var t, e, i;
            if (D.length && j(), G.render((a.time - G._startTime) * G._timeScale, !1, !1), z.render((a.frame - z._startTime) * z._timeScale, !1, !1), D.length && j(), !(a.frame % 120)) {
                for (i in B) {
                    for (e = B[i].tweens, t = e.length; --t > -1;) e[t]._gc && e.splice(t, 1);
                    0 === e.length && delete B[i]
                }
                if (i = G._first, (!i || i._paused) && P.autoSleep && !z._first && 1 === a._listeners.tick.length) {
                    for (; i && i._paused;) i = i._next;
                    i || a.sleep()
                }
            }
        }, a.addEventListener("tick", S._updateRoot);
        var W = function (t, e, i) {
            var n, r, o = t._gsTweenID;
            if (B[o || (t._gsTweenID = o = "t" + F++)] || (B[o] = {
                    target: t,
                    tweens: []
                }), e && (n = B[o].tweens, n[r = n.length] = e, i)) for (; --r > -1;) n[r] === e && n.splice(r, 1);
            return B[o].tweens
        }, X = function (t, e, i, n, r) {
            var o, a, s, l;
            if (1 === n || n >= 4) {
                for (l = r.length, o = 0; l > o; o++) if ((s = r[o]) !== e) s._gc || s._enabled(!1, !1) && (a = !0); else if (5 === n) break;
                return a
            }
            var h, c = e._startTime + u, p = [], d = 0, f = 0 === e._duration;
            for (o = r.length; --o > -1;) (s = r[o]) === e || s._gc || s._paused || (s._timeline !== e._timeline ? (h = h || q(e, 0, f), 0 === q(s, h, f) && (p[d++] = s)) : c >= s._startTime && s._startTime + s.totalDuration() / s._timeScale > c && ((f || !s._initted) && 2e-10 >= c - s._startTime || (p[d++] = s)));
            for (o = d; --o > -1;) s = p[o], 2 === n && s._kill(i, t) && (a = !0), (2 !== n || !s._firstPT && s._initted) && s._enabled(!1, !1) && (a = !0);
            return a
        }, q = function (t, e, i) {
            for (var n = t._timeline, r = n._timeScale, o = t._startTime; n._timeline;) {
                if (o += n._startTime, r *= n._timeScale, n._paused) return -100;
                n = n._timeline
            }
            return o /= r, o > e ? o - e : i && o === e || !t._initted && 2 * u > o - e ? u : (o += t.totalDuration() / t._timeScale / r) > e + u ? 0 : o - e - u
        };
        o._init = function () {
            var t, e, i, n, r, o = this.vars, a = this._overwrittenProps, s = this._duration, l = !!o.immediateRender, h = o.ease;
            if (o.startAt) {
                this._startAt && (this._startAt.render(-1, !0), this._startAt.kill()), r = {};
                for (n in o.startAt) r[n] = o.startAt[n];
                if (r.overwrite = !1, r.immediateRender = !0, r.lazy = l && o.lazy !== !1, r.startAt = r.delay = null, this._startAt = P.to(this.target, 0, r), l) if (this._time > 0) this._startAt = null; else if (0 !== s) return
            } else if (o.runBackwards && 0 !== s) if (this._startAt) this._startAt.render(-1, !0), this._startAt.kill(), this._startAt = null; else {
                i = {};
                for (n in o) U[n] && "autoCSS" !== n || (i[n] = o[n]);
                if (i.overwrite = 0, i.data = "isFromStart", i.lazy = l && o.lazy !== !1, i.immediateRender = l, this._startAt = P.to(this.target, 0, i), l) {
                    if (0 === this._time) return
                } else this._startAt._init(), this._startAt._enabled(!1)
            }
            if (this._ease = h = h ? h instanceof T ? h : "function" == typeof h ? new T(h, o.easeParams) : _[h] || P.defaultEase : P.defaultEase, o.easeParams instanceof Array && h.config && (this._ease = h.config.apply(h, o.easeParams)), this._easeType = this._ease._type, this._easePower = this._ease._power, this._firstPT = null, this._targets) for (t = this._targets.length; --t > -1;) this._initProps(this._targets[t], this._propLookup[t] = {}, this._siblings[t], a ? a[t] : null) && (e = !0); else e = this._initProps(this.target, this._propLookup, this._siblings, a);
            if (e && P._onPluginEvent("_onInitAllProps", this), a && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)), o.runBackwards) for (i = this._firstPT; i;) i.s += i.c, i.c = -i.c, i = i._next;
            this._onUpdate = o.onUpdate, this._initted = !0
        }, o._initProps = function (e, i, n, r) {
            var o, a, s, l, h, u;
            if (null == e) return !1;
            I[e._gsTweenID] && j(), this.vars.css || e.style && e !== t && e.nodeType && k.css && this.vars.autoCSS !== !1 && O(this.vars, e);
            for (o in this.vars) {
                if (u = this.vars[o], U[o]) u && (u instanceof Array || u.push && d(u)) && -1 !== u.join("").indexOf("{self}") && (this.vars[o] = u = this._swapSelfInParams(u, this)); else if (k[o] && (l = new k[o])._onInitTween(e, this.vars[o], this)) {
                    for (this._firstPT = h = {
                        _next: this._firstPT,
                        t: l,
                        p: "setRatio",
                        s: 0,
                        c: 1,
                        f: !0,
                        n: o,
                        pg: !0,
                        pr: l._priority
                    }, a = l._overwriteProps.length; --a > -1;) i[l._overwriteProps[a]] = this._firstPT;
                    (l._priority || l._onInitAllProps) && (s = !0), (l._onDisable || l._onEnable) && (this._notifyPluginsOfEnabled = !0)
                } else this._firstPT = i[o] = h = {
                    _next: this._firstPT,
                    t: e,
                    p: o,
                    f: "function" == typeof e[o],
                    n: o,
                    pg: !1,
                    pr: 0
                }, h.s = h.f ? e[o.indexOf("set") || "function" != typeof e["get" + o.substr(3)] ? o : "get" + o.substr(3)]() : parseFloat(e[o]), h.c = "string" == typeof u && "=" === u.charAt(1) ? parseInt(u.charAt(0) + "1", 10) * Number(u.substr(2)) : Number(u) - h.s || 0;
                h && h._next && (h._next._prev = h)
            }
            return r && this._kill(r, e) ? this._initProps(e, i, n, r) : this._overwrite > 1 && this._firstPT && n.length > 1 && X(e, this, i, this._overwrite, n) ? (this._kill(i, e), this._initProps(e, i, n, r)) : (this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration) && (I[e._gsTweenID] = !0), s)
        }, o.render = function (t, e, i) {
            var n, r, o, a, s = this._time, l = this._duration, h = this._rawPrevTime;
            if (t >= l) this._totalTime = this._time = l, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1, this._reversed || (n = !0, r = "onComplete"), 0 === l && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (t = 0), (0 === t || 0 > h || h === u) && h !== t && (i = !0, h > u && (r = "onReverseComplete")), this._rawPrevTime = a = !e || t || h === t ? t : u); else if (1e-7 > t) this._totalTime = this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== s || 0 === l && h > 0 && h !== u) && (r = "onReverseComplete", n = this._reversed), 0 > t ? (this._active = !1, 0 === l && (this._initted || !this.vars.lazy || i) && (h >= 0 && (i = !0), this._rawPrevTime = a = !e || t || h === t ? t : u)) : this._initted || (i = !0); else if (this._totalTime = this._time = t, this._easeType) {
                var c = t / l, p = this._easeType, d = this._easePower;
                (1 === p || 3 === p && c >= .5) && (c = 1 - c), 3 === p && (c *= 2), 1 === d ? c *= c : 2 === d ? c *= c * c : 3 === d ? c *= c * c * c : 4 === d && (c *= c * c * c * c), this.ratio = 1 === p ? 1 - c : 2 === p ? c : .5 > t / l ? c / 2 : 1 - c / 2
            } else this.ratio = this._ease.getRatio(t / l);
            if (this._time !== s || i) {
                if (!this._initted) {
                    if (this._init(), !this._initted || this._gc) return;
                    if (!i && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration)) return this._time = this._totalTime = s, this._rawPrevTime = h, D.push(this), void(this._lazy = t);
                    this._time && !n ? this.ratio = this._ease.getRatio(this._time / l) : n && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1))
                }
                for (this._lazy !== !1 && (this._lazy = !1), this._active || !this._paused && this._time !== s && t >= 0 && (this._active = !0), 0 === s && (this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : r || (r = "_dummyGS")), this.vars.onStart && (0 !== this._time || 0 === l) && (e || this.vars.onStart.apply(this.vars.onStartScope || this, this.vars.onStartParams || y))), o = this._firstPT; o;) o.f ? o.t[o.p](o.c * this.ratio + o.s) : o.t[o.p] = o.c * this.ratio + o.s, o = o._next;
                this._onUpdate && (0 > t && this._startAt && this._startTime && this._startAt.render(t, e, i), e || (this._time !== s || n) && this._onUpdate.apply(this.vars.onUpdateScope || this, this.vars.onUpdateParams || y)), r && (!this._gc || i) && (0 > t && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, e, i), n && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[r] && this.vars[r].apply(this.vars[r + "Scope"] || this, this.vars[r + "Params"] || y), 0 === l && this._rawPrevTime === u && a !== u && (this._rawPrevTime = 0))
            }
        }, o._kill = function (t, e) {
            if ("all" === t && (t = null),
                null == t && (null == e || e === this.target)) return this._lazy = !1, this._enabled(!1, !1);
            e = "string" != typeof e ? e || this._targets || this.target : P.selector(e) || e;
            var i, n, r, o, a, s, l, h;
            if ((d(e) || L(e)) && "number" != typeof e[0]) for (i = e.length; --i > -1;) this._kill(t, e[i]) && (s = !0); else {
                if (this._targets) {
                    for (i = this._targets.length; --i > -1;) if (e === this._targets[i]) {
                        a = this._propLookup[i] || {}, this._overwrittenProps = this._overwrittenProps || [], n = this._overwrittenProps[i] = t ? this._overwrittenProps[i] || {} : "all";
                        break
                    }
                } else {
                    if (e !== this.target) return !1;
                    a = this._propLookup, n = this._overwrittenProps = t ? this._overwrittenProps || {} : "all"
                }
                if (a) {
                    l = t || a, h = t !== n && "all" !== n && t !== a && ("object" != typeof t || !t._tempKill);
                    for (r in l) (o = a[r]) && (o.pg && o.t._kill(l) && (s = !0), o.pg && 0 !== o.t._overwriteProps.length || (o._prev ? o._prev._next = o._next : o === this._firstPT && (this._firstPT = o._next), o._next && (o._next._prev = o._prev), o._next = o._prev = null), delete a[r]), h && (n[r] = 1);
                    !this._firstPT && this._initted && this._enabled(!1, !1)
                }
            }
            return s
        }, o.invalidate = function () {
            return this._notifyPluginsOfEnabled && P._onPluginEvent("_onDisable", this), this._firstPT = null, this._overwrittenProps = null, this._onUpdate = null, this._startAt = null, this._initted = this._active = this._notifyPluginsOfEnabled = this._lazy = !1, this._propLookup = this._targets ? {} : [], this
        }, o._enabled = function (t, e) {
            if (s || a.wake(), t && this._gc) {
                var i, n = this._targets;
                if (n) for (i = n.length; --i > -1;) this._siblings[i] = W(n[i], this, !0); else this._siblings = W(this.target, this, !0)
            }
            return S.prototype._enabled.call(this, t, e), this._notifyPluginsOfEnabled && this._firstPT ? P._onPluginEvent(t ? "_onEnable" : "_onDisable", this) : !1
        }, P.to = function (t, e, i) {
            return new P(t, e, i)
        }, P.from = function (t, e, i) {
            return i.runBackwards = !0, i.immediateRender = 0 != i.immediateRender, new P(t, e, i)
        }, P.fromTo = function (t, e, i, n) {
            return n.startAt = i, n.immediateRender = 0 != n.immediateRender && 0 != i.immediateRender, new P(t, e, n)
        }, P.delayedCall = function (t, e, i, n, r) {
            return new P(e, 0, {
                delay: t,
                onComplete: e,
                onCompleteParams: i,
                onCompleteScope: n,
                onReverseComplete: e,
                onReverseCompleteParams: i,
                onReverseCompleteScope: n,
                immediateRender: !1,
                useFrames: r,
                overwrite: 0
            })
        }, P.set = function (t, e) {
            return new P(t, 0, e)
        }, P.getTweensOf = function (t, e) {
            if (null == t) return [];
            t = "string" != typeof t ? t : P.selector(t) || t;
            var i, n, r, o;
            if ((d(t) || L(t)) && "number" != typeof t[0]) {
                for (i = t.length, n = []; --i > -1;) n = n.concat(P.getTweensOf(t[i], e));
                for (i = n.length; --i > -1;) for (o = n[i], r = i; --r > -1;) o === n[r] && n.splice(i, 1)
            } else for (n = W(t).concat(), i = n.length; --i > -1;) (n[i]._gc || e && !n[i].isActive()) && n.splice(i, 1);
            return n
        }, P.killTweensOf = P.killDelayedCallsTo = function (t, e, i) {
            "object" == typeof e && (i = e, e = !1);
            for (var n = P.getTweensOf(t, e), r = n.length; --r > -1;) n[r]._kill(i, t)
        };
        var Y = E("plugins.TweenPlugin", function (t, e) {
            this._overwriteProps = (t || "").split(","), this._propName = this._overwriteProps[0], this._priority = e || 0, this._super = Y.prototype
        }, !0);
        if (o = Y.prototype, Y.version = "1.10.1", Y.API = 2, o._firstPT = null, o._addTween = function (t, e, i, n, r, o) {
                var a, s;
                return null != n && (a = "number" == typeof n || "=" !== n.charAt(1) ? Number(n) - i : parseInt(n.charAt(0) + "1", 10) * Number(n.substr(2))) ? (this._firstPT = s = {
                    _next: this._firstPT,
                    t: t,
                    p: e,
                    s: i,
                    c: a,
                    f: "function" == typeof t[e],
                    n: r || e,
                    r: o
                }, s._next && (s._next._prev = s), s) : void 0
            }, o.setRatio = function (t) {
                for (var e, i = this._firstPT, n = 1e-6; i;) e = i.c * t + i.s, i.r ? e = Math.round(e) : n > e && e > -n && (e = 0), i.f ? i.t[i.p](e) : i.t[i.p] = e, i = i._next
            }, o._kill = function (t) {
                var e, i = this._overwriteProps, n = this._firstPT;
                if (null != t[this._propName]) this._overwriteProps = []; else for (e = i.length; --e > -1;) null != t[i[e]] && i.splice(e, 1);
                for (; n;) null != t[n.n] && (n._next && (n._next._prev = n._prev), n._prev ? (n._prev._next = n._next, n._prev = null) : this._firstPT === n && (this._firstPT = n._next)), n = n._next;
                return !1
            }, o._roundProps = function (t, e) {
                for (var i = this._firstPT; i;) (t[this._propName] || null != i.n && t[i.n.split(this._propName + "_").join("")]) && (i.r = e), i = i._next
            }, P._onPluginEvent = function (t, e) {
                var i, n, r, o, a, s = e._firstPT;
                if ("_onInitAllProps" === t) {
                    for (; s;) {
                        for (a = s._next, n = r; n && n.pr > s.pr;) n = n._next;
                        (s._prev = n ? n._prev : o) ? s._prev._next = s : r = s, (s._next = n) ? n._prev = s : o = s, s = a
                    }
                    s = e._firstPT = r
                }
                for (; s;) s.pg && "function" == typeof s.t[t] && s.t[t]() && (i = !0), s = s._next;
                return i
            }, Y.activate = function (t) {
                for (var e = t.length; --e > -1;) t[e].API === Y.API && (k[(new t[e])._propName] = t[e]);
                return !0
            }, g.plugin = function (t) {
                if (!(t && t.propName && t.init && t.API)) throw"illegal plugin definition.";
                var e, i = t.propName, n = t.priority || 0, r = t.overwriteProps,
                    o = {init: "_onInitTween", set: "setRatio", kill: "_kill", round: "_roundProps", initAll: "_onInitAllProps"},
                    a = E("plugins." + i.charAt(0).toUpperCase() + i.substr(1) + "Plugin", function () {
                        Y.call(this, i, n), this._overwriteProps = r || []
                    }, t.global === !0), s = a.prototype = new Y(i);
                s.constructor = a, a.API = t.API;
                for (e in o) "function" == typeof t[e] && (s[o[e]] = t[e]);
                return a.version = t.version, Y.activate([a]), a
            }, n = t._gsQueue) {
            for (r = 0; n.length > r; r++) n[r]();
            for (o in f) f[o].func || t.console.log("GSAP encountered missing dependency: com.greensock." + o)
        }
        s = !1
    }
}("undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window, "TweenMax");
var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function () {
    "use strict";
    _gsScope._gsDefine("easing.Back", ["easing.Ease"], function (t) {
        var e, i, n, r = _gsScope.GreenSockGlobals || _gsScope, o = r.com.greensock, a = 2 * Math.PI, s = Math.PI / 2, l = o._class,
            h = function (e, i) {
                var n = l("easing." + e, function () {
                }, !0), r = n.prototype = new t;
                return r.constructor = n, r.getRatio = i, n
            }, u = t.register || function () {
            }, c = function (t, e, i, n) {
                var r = l("easing." + t, {easeOut: new e, easeIn: new i, easeInOut: new n}, !0);
                return u(r, t), r
            }, p = function (t, e, i) {
                this.t = t, this.v = e, i && (this.next = i, i.prev = this, this.c = i.v - e, this.gap = i.t - t)
            }, d = function (e, i) {
                var n = l("easing." + e, function (t) {
                    this._p1 = t || 0 === t ? t : 1.70158, this._p2 = 1.525 * this._p1
                }, !0), r = n.prototype = new t;
                return r.constructor = n, r.getRatio = i, r.config = function (t) {
                    return new n(t)
                }, n
            }, f = c("Back", d("BackOut", function (t) {
                return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1
            }), d("BackIn", function (t) {
                return t * t * ((this._p1 + 1) * t - this._p1)
            }), d("BackInOut", function (t) {
                return 1 > (t *= 2) ? .5 * t * t * ((this._p2 + 1) * t - this._p2) : .5 * ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2)
            })), m = l("easing.SlowMo", function (t, e, i) {
                e = e || 0 === e ? e : .7, null == t ? t = .7 : t > 1 && (t = 1), this._p = 1 !== t ? e : 0, this._p1 = (1 - t) / 2, this._p2 = t, this._p3 = this._p1 + this._p2, this._calcEnd = i === !0
            }, !0), g = m.prototype = new t;
        return g.constructor = m, g.getRatio = function (t) {
            var e = t + (.5 - t) * this._p;
            return this._p1 > t ? this._calcEnd ? 1 - (t = 1 - t / this._p1) * t : e - (t = 1 - t / this._p1) * t * t * t * e : t > this._p3 ? this._calcEnd ? 1 - (t = (t - this._p3) / this._p1) * t : e + (t - e) * (t = (t - this._p3) / this._p1) * t * t * t : this._calcEnd ? 1 : e
        }, m.ease = new m(.7, .7), g.config = m.config = function (t, e, i) {
            return new m(t, e, i)
        }, e = l("easing.SteppedEase", function (t) {
            t = t || 1, this._p1 = 1 / t, this._p2 = t + 1
        }, !0), g = e.prototype = new t, g.constructor = e, g.getRatio = function (t) {
            return 0 > t ? t = 0 : t >= 1 && (t = .999999999), (this._p2 * t >> 0) * this._p1
        }, g.config = e.config = function (t) {
            return new e(t)
        }, i = l("easing.RoughEase", function (e) {
            e = e || {};
            for (var i, n, r, o, a, s, l = e.taper || "none", h = [], u = 0, c = 0 | (e.points || 20), d = c, f = e.randomize !== !1, m = e.clamp === !0, g = e.template instanceof t ? e.template : null, E = "number" == typeof e.strength ? .4 * e.strength : .4; --d > -1;) i = f ? Math.random() : 1 / c * d, n = g ? g.getRatio(i) : i, "none" === l ? r = E : "out" === l ? (o = 1 - i, r = o * o * E) : "in" === l ? r = i * i * E : .5 > i ? (o = 2 * i, r = .5 * o * o * E) : (o = 2 * (1 - i), r = .5 * o * o * E), f ? n += Math.random() * r - .5 * r : d % 2 ? n += .5 * r : n -= .5 * r, m && (n > 1 ? n = 1 : 0 > n && (n = 0)), h[u++] = {
                x: i,
                y: n
            };
            for (h.sort(function (t, e) {
                return t.x - e.x
            }), s = new p(1, 1, null), d = c; --d > -1;) a = h[d], s = new p(a.x, a.y, s);
            this._prev = new p(0, 0, 0 !== s.t ? s : s.next)
        }, !0), g = i.prototype = new t, g.constructor = i, g.getRatio = function (t) {
            var e = this._prev;
            if (t > e.t) {
                for (; e.next && t >= e.t;) e = e.next;
                e = e.prev
            } else for (; e.prev && e.t >= t;) e = e.prev;
            return this._prev = e, e.v + (t - e.t) / e.gap * e.c
        }, g.config = function (t) {
            return new i(t)
        }, i.ease = new i, c("Bounce", h("BounceOut", function (t) {
            return 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375
        }), h("BounceIn", function (t) {
            return 1 / 2.75 > (t = 1 - t) ? 1 - 7.5625 * t * t : 2 / 2.75 > t ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + .75) : 2.5 / 2.75 > t ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + .984375)
        }), h("BounceInOut", function (t) {
            var e = .5 > t;
            return t = e ? 1 - 2 * t : 2 * t - 1, t = 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375, e ? .5 * (1 - t) : .5 * t + .5
        })), c("Circ", h("CircOut", function (t) {
            return Math.sqrt(1 - (t -= 1) * t)
        }), h("CircIn", function (t) {
            return -(Math.sqrt(1 - t * t) - 1)
        }), h("CircInOut", function (t) {
            return 1 > (t *= 2) ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1)
        })), n = function (e, i, n) {
            var r = l("easing." + e, function (t, e) {
                this._p1 = t || 1, this._p2 = e || n, this._p3 = this._p2 / a * (Math.asin(1 / this._p1) || 0)
            }, !0), o = r.prototype = new t;
            return o.constructor = r, o.getRatio = i, o.config = function (t, e) {
                return new r(t, e)
            }, r
        }, c("Elastic", n("ElasticOut", function (t) {
            return this._p1 * Math.pow(2, -10 * t) * Math.sin((t - this._p3) * a / this._p2) + 1
        }, .3), n("ElasticIn", function (t) {
            return -(this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2))
        }, .3), n("ElasticInOut", function (t) {
            return 1 > (t *= 2) ? -.5 * this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2) : .5 * this._p1 * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - this._p3) * a / this._p2) + 1
        }, .45)), c("Expo", h("ExpoOut", function (t) {
            return 1 - Math.pow(2, -10 * t)
        }), h("ExpoIn", function (t) {
            return Math.pow(2, 10 * (t - 1)) - .001
        }), h("ExpoInOut", function (t) {
            return 1 > (t *= 2) ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * (t - 1)))
        })), c("Sine", h("SineOut", function (t) {
            return Math.sin(t * s)
        }), h("SineIn", function (t) {
            return -Math.cos(t * s) + 1
        }), h("SineInOut", function (t) {
            return -.5 * (Math.cos(Math.PI * t) - 1)
        })), l("easing.EaseLookup", {
            find: function (e) {
                return t.map[e]
            }
        }, !0), u(r.SlowMo, "SlowMo", "ease,"), u(i, "RoughEase", "ease,"), u(e, "SteppedEase", "ease,"), f
    }, !0)
}), _gsScope._gsDefine && _gsScope._gsQueue.pop()(), function (t, e) {
    "function" == typeof define && define.amd ? define(e) : "object" == typeof exports ? module.exports = e() : t.SVG = e()
}(this, function () {
    function t(t, e) {
        e = e || {bubbles: !1, cancelable: !1, detail: void 0};
        var i = document.createEvent("CustomEvent");
        return i.initCustomEvent(t, e.bubbles, e.cancelable, e.detail), i
    }

    function e(t) {
        return t.toLowerCase().replace(/-(.)/g, function (t, e) {
            return e.toUpperCase()
        })
    }

    function i(t) {
        return 4 == t.length ? ["#", t.substring(1, 2), t.substring(1, 2), t.substring(2, 3), t.substring(2, 3), t.substring(3, 4), t.substring(3, 4)].join("") : t
    }

    function n(t) {
        var e = t.toString(16);
        return 1 == e.length ? "0" + e : e
    }

    function r(t, e, i) {
        return (null == e || null == i) && (null == i ? i = t.height / t.width * e : null == e && (e = t.width / t.height * i)), {
            width: e,
            height: i
        }
    }

    function o(t, e) {
        return "number" == typeof t.from ? t.from + (t.to - t.from) * e : t instanceof u.Color || t instanceof u.Number ? t.at(e) : 1 > e ? t.from : t.to
    }

    function a(t) {
        for (var e = 0, i = t.length, n = ""; i > e; e++) n += t[e][0], null != t[e][1] && (n += t[e][1], null != t[e][2] && (n += " ", n += t[e][2], null != t[e][3] && (n += " ", n += t[e][3], n += " ", n += t[e][4], null != t[e][5] && (n += " ", n += t[e][5], n += " ", n += t[e][6], null != t[e][7] && (n += " ", n += t[e][7])))));
        return n + " "
    }

    function s(t) {
        t.x2 = t.x + t.width, t.y2 = t.y + t.height, t.cx = t.x + t.width / 2, t.cy = t.y + t.height / 2
    }

    function l(t) {
        if (t.matrix) {
            var e = t.matrix.replace(/\s/g, "").split(",");
            6 == e.length && (t.a = parseFloat(e[0]), t.b = parseFloat(e[1]), t.c = parseFloat(e[2]), t.d = parseFloat(e[3]), t.e = parseFloat(e[4]), t.f = parseFloat(e[5]))
        }
        return t
    }

    function h(t) {
        var e = t.toString().match(u.regex.reference);
        return e ? e[1] : void 0
    }

    var u = this.SVG = function (t) {
        return u.supported ? (t = new u.Doc(t), u.parser || u.prepare(t), t) : void 0
    };
    if (u.ns = "http://www.w3.org/2000/svg", u.xmlns = "http://www.w3.org/2000/xmlns/", u.xlink = "http://www.w3.org/1999/xlink", u.did = 1e3, u.eid = function (t) {
            return "Svgjs" + t.charAt(0).toUpperCase() + t.slice(1) + u.did++
        }, u.create = function (t) {
            var e = document.createElementNS(this.ns, t);
            return e.setAttribute("id", this.eid(t)), e
        }, u.extend = function () {
            var t, e, i, n;
            for (t = [].slice.call(arguments), e = t.pop(), n = t.length - 1; n >= 0; n--) if (t[n]) for (i in e) t[n].prototype[i] = e[i];
            u.Set && u.Set.inherit && u.Set.inherit()
        }, u.prepare = function (t) {
            var e = document.getElementsByTagName("body")[0], i = (e ? new u.Doc(e) : t.nested()).size(2, 0), n = u.create("path");
            i.node.appendChild(n), u.parser = {
                body: e || t.parent,
                draw: i.style("opacity:0;position:fixed;left:100%;top:100%;overflow:hidden"),
                poly: i.polyline().node,
                path: n
            }
        }, u.supported = function () {
            return !!document.createElementNS && !!document.createElementNS(u.ns, "svg").createSVGRect
        }(), !u.supported) return !1;
    u.get = function (t) {
        var e = document.getElementById(h(t) || t);
        return e ? e.instance : void 0
    }, u.invent = function (t) {
        var e = "function" == typeof t.create ? t.create : function () {
            this.constructor.call(this, u.create(t.create))
        };
        return t.inherit && (e.prototype = new t.inherit), t.extend && u.extend(e, t.extend), t.construct && u.extend(t.parent || u.Container, t.construct), e
    }, "function" != typeof t && (t.prototype = window.Event.prototype, window.CustomEvent = t), function (t) {
        for (var e = 0, i = ["moz", "webkit"], n = 0; n < i.length && !window.requestAnimationFrame; ++n) t.requestAnimationFrame = t[i[n] + "RequestAnimationFrame"], t.cancelAnimationFrame = t[i[n] + "CancelAnimationFrame"] || t[i[n] + "CancelRequestAnimationFrame"];
        t.requestAnimationFrame = t.requestAnimationFrame || function (i) {
            var n = (new Date).getTime(), r = Math.max(0, 16 - (n - e)), o = t.setTimeout(function () {
                i(n + r)
            }, r);
            return e = n + r, o
        }, t.cancelAnimationFrame = t.cancelAnimationFrame || t.clearTimeout
    }(window), u.regex = {
        unit: /^(-?[\d\.]+)([a-z%]{0,2})$/,
        hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
        rgb: /rgb\((\d+),(\d+),(\d+)\)/,
        reference: /#([a-z0-9\-_]+)/i,
        isHex: /^#[a-f0-9]{3,6}$/i,
        isRgb: /^rgb\(/,
        isCss: /[^:]+:[^;]+;?/,
        isBlank: /^(\s+)?$/,
        isNumber: /^-?[\d\.]+$/,
        isPercent: /^-?[\d\.]+%$/,
        isImage: /\.(jpg|jpeg|png|gif)(\?[^=]+.*)?/i,
        isEvent: /^[\w]+:[\w]+$/
    }, u.defaults = {
        matrix: "1 0 0 1 0 0",
        attrs: {
            "fill-opacity": 1,
            "stroke-opacity": 1,
            "stroke-width": 0,
            "stroke-linejoin": "miter",
            "stroke-linecap": "butt",
            fill: "#000000",
            stroke: "#000000",
            opacity: 1,
            x: 0,
            y: 0,
            cx: 0,
            cy: 0,
            width: 0,
            height: 0,
            r: 0,
            rx: 0,
            ry: 0,
            offset: 0,
            "stop-opacity": 1,
            "stop-color": "#000000",
            "font-size": 16,
            "font-family": "Helvetica, Arial, sans-serif",
            "text-anchor": "start"
        },
        trans: function () {
            return {
                x: 0,
                y: 0,
                scaleX: 1,
                scaleY: 1,
                rotation: 0,
                skewX: 0,
                skewY: 0,
                matrix: this.matrix,
                a: 1,
                b: 0,
                c: 0,
                d: 1,
                e: 0,
                f: 0
            }
        }
    }, u.Color = function (t) {
        var e;
        this.r = 0, this.g = 0, this.b = 0, "string" == typeof t ? u.regex.isRgb.test(t) ? (e = u.regex.rgb.exec(t.replace(/\s/g, "")), this.r = parseInt(e[1]), this.g = parseInt(e[2]), this.b = parseInt(e[3])) : u.regex.isHex.test(t) && (e = u.regex.hex.exec(i(t)), this.r = parseInt(e[1], 16), this.g = parseInt(e[2], 16), this.b = parseInt(e[3], 16)) : "object" == typeof t && (this.r = t.r, this.g = t.g, this.b = t.b)
    }, u.extend(u.Color, {
        toString: function () {
            return this.toHex()
        }, toHex: function () {
            return "#" + n(this.r) + n(this.g) + n(this.b)
        }, toRgb: function () {
            return "rgb(" + [this.r, this.g, this.b].join() + ")"
        }, brightness: function () {
            return this.r / 255 * .3 + this.g / 255 * .59 + this.b / 255 * .11
        }, morph: function (t) {
            return this.destination = new u.Color(t), this
        }, at: function (t) {
            return this.destination ? (t = 0 > t ? 0 : t > 1 ? 1 : t, new u.Color({
                r: ~~(this.r + (this.destination.r - this.r) * t),
                g: ~~(this.g + (this.destination.g - this.g) * t),
                b: ~~(this.b + (this.destination.b - this.b) * t)
            })) : this
        }
    }), u.Color.test = function (t) {
        return t += "", u.regex.isHex.test(t) || u.regex.isRgb.test(t)
    }, u.Color.isRgb = function (t) {
        return t && "number" == typeof t.r && "number" == typeof t.g && "number" == typeof t.b
    }, u.Color.isColor = function (t) {
        return u.Color.isRgb(t) || u.Color.test(t)
    }, u.Array = function (t, e) {
        t = (t || []).valueOf(), 0 == t.length && e && (t = e.valueOf()), this.value = this.parse(t)
    }, u.extend(u.Array, {
        morph: function (t) {
            if (this.destination = this.parse(t), this.value.length != this.destination.length) {
                for (var e = this.value[this.value.length - 1], i = this.destination[this.destination.length - 1]; this.value.length > this.destination.length;) this.destination.push(i);
                for (; this.value.length < this.destination.length;) this.value.push(e)
            }
            return this
        }, settle: function () {
            for (var t = 0, e = this.value.length, i = []; e > t; t++) -1 == i.indexOf(this.value[t]) && i.push(this.value[t]);
            return this.value = i
        }, at: function (t) {
            if (!this.destination) return this;
            for (var e = 0, i = this.value.length, n = []; i > e; e++) n.push(this.value[e] + (this.destination[e] - this.value[e]) * t);
            return new u.Array(n)
        }, toString: function () {
            return this.value.join(" ")
        }, valueOf: function () {
            return this.value
        }, parse: function (t) {
            return t = t.valueOf(), Array.isArray(t) ? t : this.split(t)
        }, split: function (t) {
            return t.replace(/\s+/g, " ").replace(/^\s+|\s+$/g, "").split(" ")
        }, reverse: function () {
            return this.value.reverse(), this
        }
    }), u.PointArray = function () {
        this.constructor.apply(this, arguments)
    }, u.PointArray.prototype = new u.Array, u.extend(u.PointArray, {
        toString: function () {
            for (var t = 0, e = this.value.length, i = []; e > t; t++) i.push(this.value[t].join(","));
            return i.join(" ")
        }, at: function (t) {
            if (!this.destination) return this;
            for (var e = 0, i = this.value.length, n = []; i > e; e++) n.push([this.value[e][0] + (this.destination[e][0] - this.value[e][0]) * t, this.value[e][1] + (this.destination[e][1] - this.value[e][1]) * t]);
            return new u.PointArray(n)
        }, parse: function (t) {
            if (t = t.valueOf(), Array.isArray(t)) return t;
            t = this.split(t);
            for (var e, i = 0, n = t.length, r = []; n > i; i++) e = t[i].split(","), r.push([parseFloat(e[0]), parseFloat(e[1])]);
            return r
        }, move: function (t, e) {
            var i = this.bbox();
            if (t -= i.x, e -= i.y, !isNaN(t) && !isNaN(e)) for (var n = this.value.length - 1; n >= 0; n--) this.value[n] = [this.value[n][0] + t, this.value[n][1] + e];
            return this
        }, size: function (t, e) {
            var i, n = this.bbox();
            for (i = this.value.length - 1; i >= 0; i--) this.value[i][0] = (this.value[i][0] - n.x) * t / n.width + n.x, this.value[i][1] = (this.value[i][1] - n.y) * e / n.height + n.y;
            return this
        }, bbox: function () {
            return u.parser.poly.setAttribute("points", this.toString()), u.parser.poly.getBBox()
        }
    }), u.PathArray = function (t, e) {
        this.constructor.call(this, t, e)
    }, u.PathArray.prototype = new u.Array, u.extend(u.PathArray, {
        toString: function () {
            return a(this.value)
        }, move: function (t, e) {
            var i = this.bbox();
            if (t -= i.x, e -= i.y, !isNaN(t) && !isNaN(e)) for (var n, r = this.value.length - 1; r >= 0; r--) n = this.value[r][0], "M" == n || "L" == n || "T" == n ? (this.value[r][1] += t, this.value[r][2] += e) : "H" == n ? this.value[r][1] += t : "V" == n ? this.value[r][1] += e : "C" == n || "S" == n || "Q" == n ? (this.value[r][1] += t, this.value[r][2] += e, this.value[r][3] += t, this.value[r][4] += e, "C" == n && (this.value[r][5] += t, this.value[r][6] += e)) : "A" == n && (this.value[r][6] += t, this.value[r][7] += e);
            return this
        }, size: function (t, e) {
            var i, n, r = this.bbox();
            for (i = this.value.length - 1; i >= 0; i--) n = this.value[i][0], "M" == n || "L" == n || "T" == n ? (this.value[i][1] = (this.value[i][1] - r.x) * t / r.width + r.x, this.value[i][2] = (this.value[i][2] - r.y) * e / r.height + r.y) : "H" == n ? this.value[i][1] = (this.value[i][1] - r.x) * t / r.width + r.x : "V" == n ? this.value[i][1] = (this.value[i][1] - r.y) * e / r.height + r.y : "C" == n || "S" == n || "Q" == n ? (this.value[i][1] = (this.value[i][1] - r.x) * t / r.width + r.x, this.value[i][2] = (this.value[i][2] - r.y) * e / r.height + r.y, this.value[i][3] = (this.value[i][3] - r.x) * t / r.width + r.x, this.value[i][4] = (this.value[i][4] - r.y) * e / r.height + r.y, "C" == n && (this.value[i][5] = (this.value[i][5] - r.x) * t / r.width + r.x, this.value[i][6] = (this.value[i][6] - r.y) * e / r.height + r.y)) : "A" == n && (this.value[i][1] = this.value[i][1] * t / r.width, this.value[i][2] = this.value[i][2] * e / r.height, this.value[i][6] = (this.value[i][6] - r.x) * t / r.width + r.x, this.value[i][7] = (this.value[i][7] - r.y) * e / r.height + r.y);
            return this
        }, parse: function (t) {
            if (t instanceof u.PathArray) return t.valueOf();
            var e, i, n, r, o, s, l, h, c, p, d, f = 0, m = 0;
            for (u.parser.path.setAttribute("d", "string" == typeof t ? t : a(t)), d = u.parser.path.pathSegList, e = 0, i = d.numberOfItems; i > e; ++e) p = d.getItem(e), c = p.pathSegTypeAsLetter, "M" == c || "L" == c || "H" == c || "V" == c || "C" == c || "S" == c || "Q" == c || "T" == c || "A" == c ? ("x" in p && (f = p.x), "y" in p && (m = p.y)) : ("x1" in p && (o = f + p.x1), "x2" in p && (l = f + p.x2), "y1" in p && (s = m + p.y1), "y2" in p && (h = m + p.y2), "x" in p && (f += p.x), "y" in p && (m += p.y), "m" == c ? d.replaceItem(u.parser.path.createSVGPathSegMovetoAbs(f, m), e) : "l" == c ? d.replaceItem(u.parser.path.createSVGPathSegLinetoAbs(f, m), e) : "h" == c ? d.replaceItem(u.parser.path.createSVGPathSegLinetoHorizontalAbs(f), e) : "v" == c ? d.replaceItem(u.parser.path.createSVGPathSegLinetoVerticalAbs(m), e) : "c" == c ? d.replaceItem(u.parser.path.createSVGPathSegCurvetoCubicAbs(f, m, o, s, l, h), e) : "s" == c ? d.replaceItem(u.parser.path.createSVGPathSegCurvetoCubicSmoothAbs(f, m, l, h), e) : "q" == c ? d.replaceItem(u.parser.path.createSVGPathSegCurvetoQuadraticAbs(f, m, o, s), e) : "t" == c ? d.replaceItem(u.parser.path.createSVGPathSegCurvetoQuadraticSmoothAbs(f, m), e) : "a" == c ? d.replaceItem(u.parser.path.createSVGPathSegArcAbs(f, m, p.r1, p.r2, p.angle, p.largeArcFlag, p.sweepFlag), e) : ("z" == c || "Z" == c) && (f = n, m = r)), ("M" == c || "m" == c) && (n = f, r = m);
            for (t = [], d = u.parser.path.pathSegList, e = 0, i = d.numberOfItems; i > e; ++e) p = d.getItem(e), c = p.pathSegTypeAsLetter, f = [c], "M" == c || "L" == c || "T" == c ? f.push(p.x, p.y) : "H" == c ? f.push(p.x) : "V" == c ? f.push(p.y) : "C" == c ? f.push(p.x1, p.y1, p.x2, p.y2, p.x, p.y) : "S" == c ? f.push(p.x2, p.y2, p.x, p.y) : "Q" == c ? f.push(p.x1, p.y1, p.x, p.y) : "A" == c && f.push(p.r1, p.r2, p.angle, 0 | p.largeArcFlag, 0 | p.sweepFlag, p.x, p.y), t.push(f);
            return t
        }, bbox: function () {
            return u.parser.path.setAttribute("d", this.toString()), u.parser.path.getBBox()
        }
    }), u.Number = function (t) {
        if (this.value = 0, this.unit = "", "number" == typeof t) this.value = isNaN(t) ? 0 : isFinite(t) ? t : 0 > t ? -3.4e38 : 3.4e38; else if ("string" == typeof t) {
            var e = t.match(u.regex.unit);
            e && (this.value = parseFloat(e[1]), "%" == e[2] ? this.value /= 100 : "s" == e[2] && (this.value *= 1e3), this.unit = e[2])
        } else t instanceof u.Number && (this.value = t.value, this.unit = t.unit)
    }, u.extend(u.Number, {
        toString: function () {
            return ("%" == this.unit ? ~~(1e8 * this.value) / 1e6 : "s" == this.unit ? this.value / 1e3 : this.value) + this.unit
        }, valueOf: function () {
            return this.value
        }, plus: function (t) {
            return this.value = this + new u.Number(t), this
        }, minus: function (t) {
            return this.plus(-new u.Number(t))
        }, times: function (t) {
            return this.value = this * new u.Number(t), this
        }, divide: function (t) {
            return this.value = this / new u.Number(t), this
        }, to: function (t) {
            return "string" == typeof t && (this.unit = t), this
        }, morph: function (t) {
            return this.destination = new u.Number(t), this
        }, at: function (t) {
            return this.destination ? new u.Number(this.destination).minus(this).times(t).plus(this) : this
        }
    }), u.ViewBox = function (t) {
        var e, i, n, r, o = 1, a = 1, s = t.bbox(), l = (t.attr("viewBox") || "").match(/-?[\d\.]+/g), h = t, c = t;
        for (n = new u.Number(t.width()), r = new u.Number(t.height()); "%" == n.unit;) o *= n.value, n = new u.Number(h instanceof u.Doc ? h.parent.offsetWidth : h.parent.width()), h = h.parent;
        for (; "%" == r.unit;) a *= r.value, r = new u.Number(c instanceof u.Doc ? c.parent.offsetHeight : c.parent.height()), c = c.parent;
        this.x = s.x, this.y = s.y, this.width = n * o, this.height = r * a, this.zoom = 1, l && (e = parseFloat(l[0]), i = parseFloat(l[1]), n = parseFloat(l[2]), r = parseFloat(l[3]), this.zoom = this.width / this.height > n / r ? this.height / r : this.width / n, this.x = e, this.y = i, this.width = n, this.height = r)
    }, u.extend(u.ViewBox, {
        toString: function () {
            return this.x + " " + this.y + " " + this.width + " " + this.height
        }
    }), u.BBox = function (t) {
        var e;
        if (this.x = 0, this.y = 0, this.width = 0, this.height = 0, t) {
            try {
                e = t.node.getBBox()
            } catch (i) {
                e = {x: t.node.clientLeft, y: t.node.clientTop, width: t.node.clientWidth, height: t.node.clientHeight}
            }
            this.x = e.x + t.trans.x, this.y = e.y + t.trans.y, this.width = e.width * t.trans.scaleX, this.height = e.height * t.trans.scaleY
        }
        s(this)
    }, u.extend(u.BBox, {
        merge: function (t) {
            var e = new u.BBox;
            return e.x = Math.min(this.x, t.x), e.y = Math.min(this.y, t.y), e.width = Math.max(this.x + this.width, t.x + t.width) - e.x, e.height = Math.max(this.y + this.height, t.y + t.height) - e.y, s(e), e
        }
    }), u.RBox = function (t) {
        var e, i, n = {};
        if (this.x = 0, this.y = 0, this.width = 0, this.height = 0, t) {
            for (e = t.doc().parent, i = t.doc().viewbox().zoom, n = t.node.getBoundingClientRect(), this.x = n.left, this.y = n.top, this.x -= e.offsetLeft, this.y -= e.offsetTop; e = e.offsetParent;) this.x -= e.offsetLeft, this.y -= e.offsetTop;
            for (e = t; e = e.parent;) "svg" == e.type && e.viewbox && (i *= e.viewbox().zoom, this.x -= e.x() || 0, this.y -= e.y() || 0)
        }
        this.x /= i, this.y /= i, this.width = n.width /= i, this.height = n.height /= i, this.x += "number" == typeof window.scrollX ? window.scrollX : window.pageXOffset, this.y += "number" == typeof window.scrollY ? window.scrollY : window.pageYOffset, s(this)
    }, u.extend(u.RBox, {
        merge: function (t) {
            var e = new u.RBox;
            return e.x = Math.min(this.x, t.x), e.y = Math.min(this.y, t.y), e.width = Math.max(this.x + this.width, t.x + t.width) - e.x, e.height = Math.max(this.y + this.height, t.y + t.height) - e.y, s(e), e
        }
    }), u.Element = u.invent({
        create: function (t) {
            this._stroke = u.defaults.attrs.stroke, this.trans = u.defaults.trans(), (this.node = t) && (this.type = t.nodeName, this.node.instance = this)
        }, extend: {
            x: function (t) {
                return null != t && (t = new u.Number(t), t.value /= this.trans.scaleX), this.attr("x", t)
            }, y: function (t) {
                return null != t && (t = new u.Number(t), t.value /= this.trans.scaleY), this.attr("y", t)
            }, cx: function (t) {
                return null == t ? this.x() + this.width() / 2 : this.x(t - this.width() / 2)
            }, cy: function (t) {
                return null == t ? this.y() + this.height() / 2 : this.y(t - this.height() / 2)
            }, move: function (t, e) {
                return this.x(t).y(e)
            }, center: function (t, e) {
                return this.cx(t).cy(e)
            }, width: function (t) {
                return this.attr("width", t)
            }, height: function (t) {
                return this.attr("height", t)
            }, size: function (t, e) {
                var i = r(this.bbox(), t, e);
                return this.width(new u.Number(i.width)).height(new u.Number(i.height))
            }, clone: function () {
                var t, e, i = this.type;
                return t = "rect" == i || "ellipse" == i ? this.parent[i](0, 0) : "line" == i ? this.parent[i](0, 0, 0, 0) : "image" == i ? this.parent[i](this.src) : "text" == i ? this.parent[i](this.content) : "path" == i ? this.parent[i](this.attr("d")) : "polyline" == i || "polygon" == i ? this.parent[i](this.attr("points")) : "g" == i ? this.parent.group() : this.parent[i](), e = this.attr(), delete e.id, t.attr(e), t.trans = this.trans, t.transform({})
            }, remove: function () {
                return this.parent && this.parent.removeElement(this), this
            }, replace: function (t) {
                return this.after(t).remove(), t
            }, addTo: function (t) {
                return t.put(this)
            }, putIn: function (t) {
                return t.add(this)
            }, doc: function (t) {
                return this._parent(t || u.Doc)
            }, attr: function (t, e, i) {
                if (null == t) {
                    for (t = {}, e = this.node.attributes, i = e.length - 1; i >= 0; i--) t[e[i].nodeName] = u.regex.isNumber.test(e[i].nodeValue) ? parseFloat(e[i].nodeValue) : e[i].nodeValue;
                    return t
                }
                if ("object" == typeof t) for (e in t) this.attr(e, t[e]); else if (null === e) this.node.removeAttribute(t); else {
                    if (null == e) return e = this.node.attributes[t], null == e ? u.defaults.attrs[t] : u.regex.isNumber.test(e.nodeValue) ? parseFloat(e.nodeValue) : e.nodeValue;
                    if ("style" == t) return this.style(e);
                    "stroke-width" == t ? this.attr("stroke", parseFloat(e) > 0 ? this._stroke : null) : "stroke" == t && (this._stroke = e), ("fill" == t || "stroke" == t) && (u.regex.isImage.test(e) && (e = this.doc().defs().image(e, 0, 0)), e instanceof u.Image && (e = this.doc().defs().pattern(0, 0, function () {
                        this.add(e)
                    }))), "number" == typeof e ? e = new u.Number(e) : u.Color.isColor(e) ? e = new u.Color(e) : Array.isArray(e) && (e = new u.Array(e)), "leading" == t ? this.leading && this.leading(e) : "string" == typeof i ? this.node.setAttributeNS(i, t, e.toString()) : this.node.setAttribute(t, e.toString()), !this.rebuild || "font-size" != t && "x" != t || this.rebuild(t, e)
                }
                return this
            }, transform: function (t, e) {
                if (0 == arguments.length) return this.trans;
                if ("string" == typeof t) {
                    if (arguments.length < 2) return this.trans[t];
                    var i = {};
                    return i[t] = e, this.transform(i)
                }
                var i = [];
                t = l(t);
                for (e in t) null != t[e] && (this.trans[e] = t[e]);
                return this.trans.matrix = this.trans.a + " " + this.trans.b + " " + this.trans.c + " " + this.trans.d + " " + this.trans.e + " " + this.trans.f, t = this.trans, t.matrix != u.defaults.matrix && i.push("matrix(" + t.matrix + ")"), 0 != t.rotation && i.push("rotate(" + t.rotation + " " + (null == t.cx ? this.bbox().cx : t.cx) + " " + (null == t.cy ? this.bbox().cy : t.cy) + ")"), (1 != t.scaleX || 1 != t.scaleY) && i.push("scale(" + t.scaleX + " " + t.scaleY + ")"), 0 != t.skewX && i.push("skewX(" + t.skewX + ")"), 0 != t.skewY && i.push("skewY(" + t.skewY + ")"), (0 != t.x || 0 != t.y) && i.push("translate(" + new u.Number(t.x / t.scaleX) + " " + new u.Number(t.y / t.scaleY) + ")"), 0 == i.length ? this.node.removeAttribute("transform") : this.node.setAttribute("transform", i.join(" ")), this
            }, style: function (t, i) {
                if (0 == arguments.length) return this.node.style.cssText || "";
                if (arguments.length < 2) if ("object" == typeof t) for (i in t) this.style(i, t[i]); else {
                    if (!u.regex.isCss.test(t)) return this.node.style[e(t)];
                    t = t.split(";");
                    for (var n = 0; n < t.length; n++) i = t[n].split(":"), this.style(i[0].replace(/\s+/g, ""), i[1])
                } else this.node.style[e(t)] = null === i || u.regex.isBlank.test(i) ? "" : i;
                return this
            }, id: function (t) {
                return this.attr("id", t)
            }, bbox: function () {
                return new u.BBox(this)
            }, rbox: function () {
                return new u.RBox(this)
            }, inside: function (t, e) {
                var i = this.bbox();
                return t > i.x && e > i.y && t < i.x + i.width && e < i.y + i.height
            }, show: function () {
                return this.style("display", "")
            }, hide: function () {
                return this.style("display", "none")
            }, visible: function () {
                return "none" != this.style("display")
            }, toString: function () {
                return this.attr("id")
            }, classes: function () {
                var t = this.node.getAttribute("class");
                return null === t ? [] : t.trim().split(/\s+/)
            }, hasClass: function (t) {
                return -1 != this.classes().indexOf(t)
            }, addClass: function (t) {
                var e;
                return this.hasClass(t) || (e = this.classes(), e.push(t), this.node.setAttribute("class", e.join(" "))), this
            }, removeClass: function (t) {
                var e;
                return this.hasClass(t) && (e = this.classes().filter(function (e) {
                    return e != t
                }), this.node.setAttribute("class", e.join(" "))), this
            }, toggleClass: function (t) {
                return this.hasClass(t) ? this.removeClass(t) : this.addClass(t), this
            }, reference: function (t) {
                return u.get(this.attr()[t])
            }, _parent: function (t) {
                for (var e = this; null != e && !(e instanceof t);) e = e.parent;
                return e
            }
        }
    }), u.Parent = u.invent({
        create: function (t) {
            this.constructor.call(this, t)
        }, inherit: u.Element, extend: {
            children: function () {
                return this._children || (this._children = [])
            }, add: function (t, e) {
                return this.has(t) || (e = null == e ? this.children().length : e, t.parent && t.parent.children().splice(t.parent.index(t), 1), this.children().splice(e, 0, t), this.node.insertBefore(t.node, this.node.childNodes[e] || null), t.parent = this), this._defs && (this.node.removeChild(this._defs.node), this.node.appendChild(this._defs.node)), this
            }, put: function (t, e) {
                return this.add(t, e), t
            }, has: function (t) {
                return this.index(t) >= 0
            }, index: function (t) {
                return this.children().indexOf(t)
            }, get: function (t) {
                return this.children()[t]
            }, first: function () {
                return this.children()[0]
            }, last: function () {
                return this.children()[this.children().length - 1]
            }, each: function (t, e) {
                var i, n, r = this.children();
                for (i = 0, n = r.length; n > i; i++) r[i] instanceof u.Element && t.apply(r[i], [i, r]), e && r[i] instanceof u.Container && r[i].each(t, e);
                return this
            }, removeElement: function (t) {
                return this.children().splice(this.index(t), 1), this.node.removeChild(t.node), t.parent = null, this
            }, clear: function () {
                for (var t = this.children().length - 1; t >= 0; t--) this.removeElement(this.children()[t]);
                return this._defs && this._defs.clear(), this
            }, defs: function () {
                return this.doc().defs()
            }
        }
    }), u.Container = u.invent({
        create: function (t) {
            this.constructor.call(this, t)
        }, inherit: u.Parent, extend: {
            viewbox: function (t) {
                return 0 == arguments.length ? new u.ViewBox(this) : (t = 1 == arguments.length ? [t.x, t.y, t.width, t.height] : [].slice.call(arguments), this.attr("viewBox", t))
            }
        }
    }), u.FX = u.invent({
        create: function (t) {
            this.target = t
        }, extend: {
            animate: function (t, e, i) {
                var n, r, a, s, l = this.target, h = this;
                return "object" == typeof t && (i = t.delay, e = t.ease, t = t.duration), t = "=" == t ? t : null == t ? 1e3 : new u.Number(t).valueOf(), e = e || "<>", h.to = function (t) {
                    var i;
                    if (t = 0 > t ? 0 : t > 1 ? 1 : t, null == n) {
                        n = [];
                        for (s in h.attrs) n.push(s);
                        if (l.morphArray && (h._plot || n.indexOf("points") > -1)) {
                            var u, c = new l.morphArray(h._plot || h.attrs.points || l.array);
                            h._size && c.size(h._size.width.to, h._size.height.to), u = c.bbox(), h._x ? c.move(h._x.to, u.y) : h._cx && c.move(h._cx.to - u.width / 2, u.y), u = c.bbox(), h._y ? c.move(u.x, h._y.to) : h._cy && c.move(u.x, h._cy.to - u.height / 2), delete h._x, delete h._y, delete h._cx, delete h._cy, delete h._size, h._plot = l.array.morph(c)
                        }
                    }
                    if (null == r) {
                        r = [];
                        for (s in h.trans) r.push(s)
                    }
                    if (null == a) {
                        a = [];
                        for (s in h.styles) a.push(s)
                    }
                    for (t = "<>" == e ? -Math.cos(t * Math.PI) / 2 + .5 : ">" == e ? Math.sin(t * Math.PI / 2) : "<" == e ? -Math.cos(t * Math.PI / 2) + 1 : "-" == e ? t : "function" == typeof e ? e(t) : t, h._plot ? l.plot(h._plot.at(t)) : (h._x ? l.x(h._x.at(t)) : h._cx && l.cx(h._cx.at(t)), h._y ? l.y(h._y.at(t)) : h._cy && l.cy(h._cy.at(t)), h._size && l.size(h._size.width.at(t), h._size.height.at(t))), h._viewbox && l.viewbox(h._viewbox.x.at(t), h._viewbox.y.at(t), h._viewbox.width.at(t), h._viewbox.height.at(t)), h._leading && l.leading(h._leading.at(t)), i = n.length - 1; i >= 0; i--) l.attr(n[i], o(h.attrs[n[i]], t));
                    for (i = r.length - 1; i >= 0; i--) l.transform(r[i], o(h.trans[r[i]], t));
                    for (i = a.length - 1; i >= 0; i--) l.style(a[i], o(h.styles[a[i]], t));
                    h._during && h._during.call(l, t, function (e, i) {
                        return o({from: e, to: i}, t)
                    })
                }, "number" == typeof t && (this.timeout = setTimeout(function () {
                    var n = (new Date).getTime();
                    h.situation = {interval: 1e3 / 60, start: n, play: !0, finish: n + t, duration: t}, h.render = function () {
                        if (h.situation.play === !0) {
                            var n = (new Date).getTime(), r = n > h.situation.finish ? 1 : (n - h.situation.start) / t;
                            h.to(r), n > h.situation.finish ? (h._plot && l.plot(new u.PointArray(h._plot.destination).settle()), h._loop === !0 || "number" == typeof h._loop && h._loop > 1 ? ("number" == typeof h._loop && --h._loop, h.animate(t, e, i)) : h._after ? h._after.apply(l, [h]) : h.stop()) : h.animationFrame = requestAnimationFrame(h.render)
                        } else h.animationFrame = requestAnimationFrame(h.render)
                    }, h.render()
                }, new u.Number(i).valueOf())), this
            }, bbox: function () {
                return this.target.bbox()
            }, attr: function (t, e) {
                if ("object" == typeof t) for (var i in t) this.attr(i, t[i]); else {
                    var n = this.target.attr(t);
                    this.attrs[t] = u.Color.isColor(n) ? new u.Color(n).morph(e) : u.regex.unit.test(n) ? new u.Number(n).morph(e) : {
                        from: n,
                        to: e
                    }
                }
                return this
            }, transform: function (t, e) {
                if (1 == arguments.length) {
                    t = l(t), delete t.matrix, this.target.trans.cx = t.cx || null, this.target.trans.cy = t.cy || null, delete t.cx, delete t.cy;
                    for (e in t) this.trans[e] = {from: this.target.trans[e], to: t[e]}
                } else {
                    var i = {};
                    i[t] = e, this.transform(i)
                }
                return this
            }, style: function (t, e) {
                if ("object" == typeof t) for (var i in t) this.style(i, t[i]); else this.styles[t] = {from: this.target.style(t), to: e};
                return this
            }, x: function (t) {
                return this._x = new u.Number(this.target.x()).morph(t), this
            }, y: function (t) {
                return this._y = new u.Number(this.target.y()).morph(t), this
            }, cx: function (t) {
                return this._cx = new u.Number(this.target.cx()).morph(t), this
            }, cy: function (t) {
                return this._cy = new u.Number(this.target.cy()).morph(t), this
            }, move: function (t, e) {
                return this.x(t).y(e)
            }, center: function (t, e) {
                return this.cx(t).cy(e)
            }, size: function (t, e) {
                if (this.target instanceof u.Text) this.attr("font-size", t); else {
                    var i = this.target.bbox();
                    this._size = {width: new u.Number(i.width).morph(t), height: new u.Number(i.height).morph(e)}
                }
                return this
            }, plot: function (t) {
                return this._plot = t, this
            }, leading: function (t) {
                return this.target._leading && (this._leading = new u.Number(this.target._leading).morph(t)), this
            }, viewbox: function (t, e, i, n) {
                if (this.target instanceof u.Container) {
                    var r = this.target.viewbox();
                    this._viewbox = {
                        x: new u.Number(r.x).morph(t),
                        y: new u.Number(r.y).morph(e),
                        width: new u.Number(r.width).morph(i),
                        height: new u.Number(r.height).morph(n)
                    }
                }
                return this
            }, update: function (t) {
                return this.target instanceof u.Stop && (null != t.opacity && this.attr("stop-opacity", t.opacity), null != t.color && this.attr("stop-color", t.color), null != t.offset && this.attr("offset", new u.Number(t.offset))), this
            }, during: function (t) {
                return this._during = t, this
            }, after: function (t) {
                return this._after = t, this
            }, loop: function (t) {
                return this._loop = t || !0, this
            }, stop: function (t) {
                return t === !0 ? (this.animate(0), this._after && this._after.apply(this.target, [this])) : (clearTimeout(this.timeout), cancelAnimationFrame(this.animationFrame), this.attrs = {}, this.trans = {}, this.styles = {}, this.situation = {}, delete this._x, delete this._y, delete this._cx, delete this._cy, delete this._size, delete this._plot, delete this._loop, delete this._after, delete this._during, delete this._leading, delete this._viewbox), this
            }, pause: function () {
                return this.situation.play === !0 && (this.situation.play = !1, this.situation.pause = (new Date).getTime()), this
            }, play: function () {
                if (this.situation.play === !1) {
                    var t = (new Date).getTime() - this.situation.pause;
                    this.situation.finish += t, this.situation.start += t, this.situation.play = !0
                }
                return this
            }
        }, parent: u.Element, construct: {
            animate: function (t, e, i) {
                return (this.fx || (this.fx = new u.FX(this))).stop().animate(t, e, i)
            }, stop: function (t) {
                return this.fx && this.fx.stop(t), this
            }, pause: function () {
                return this.fx && this.fx.pause(), this
            }, play: function () {
                return this.fx && this.fx.play(), this
            }
        }
    }), u.extend(u.Element, u.FX, {
        dx: function (t) {
            return this.x((this.target || this).x() + t)
        }, dy: function (t) {
            return this.y((this.target || this).y() + t)
        }, dmove: function (t, e) {
            return this.dx(t).dy(e)
        }
    }), ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach(function (t) {
        u.Element.prototype[t] = function (e) {
            var i = this;
            return this.node["on" + t] = "function" == typeof e ? function () {
                return e.apply(i, arguments)
            } : null, this
        }
    }), u.listeners = [], u.handlerMap = [], u.registerEvent = function () {
    }, u.on = function (t, e, i) {
        var n = i.bind(t.instance || t), r = (u.handlerMap.indexOf(t) + 1 || u.handlerMap.push(t)) - 1, o = e.split(".")[0],
            a = e.split(".")[1] || "*";
        u.listeners[r] = u.listeners[r] || {}, u.listeners[r][o] = u.listeners[r][o] || {}, u.listeners[r][o][a] = u.listeners[r][o][a] || {}, u.listeners[r][o][a][i] = n, t.addEventListener(o, n, !1)
    }, u.off = function (t, e, i) {
        var n = u.handlerMap.indexOf(t), r = e && e.split(".")[0], o = e && e.split(".")[1];
        if (-1 != n) if (i) u.listeners[n][r] && u.listeners[n][r][o || "*"] && (t.removeEventListener(r, u.listeners[n][r][o || "*"][i], !1), delete u.listeners[n][r][o || "*"][i]); else if (o) {
            if (u.listeners[n][r] && u.listeners[n][r][o]) {
                for (i in u.listeners[n][r][o]) u.off(t, [r, o].join("."), i);
                delete u.listeners[n][r][o]
            }
        } else if (r) {
            if (u.listeners[n][r]) {
                for (namespace in u.listeners[n][r]) u.off(t, [r, namespace].join("."));
                delete u.listeners[n][r]
            }
        } else {
            for (e in u.listeners[n]) u.off(t, e);
            delete u.listeners[n]
        }
    }, u.extend(u.Element, {
        on: function (t, e) {
            return u.on(this.node, t, e), this
        }, off: function (t, e) {
            return u.off(this.node, t, e), this
        }, fire: function (e, i) {
            return this.node.dispatchEvent(new t(e, {detail: i})), this
        }
    }), u.Defs = u.invent({create: "defs", inherit: u.Container}), u.G = u.invent({
        create: "g",
        inherit: u.Container,
        extend: {
            x: function (t) {
                return null == t ? this.trans.x : this.transform("x", t)
            }, y: function (t) {
                return null == t ? this.trans.y : this.transform("y", t)
            }, cx: function (t) {
                return null == t ? this.bbox().cx : this.x(t - this.bbox().width / 2)
            }, cy: function (t) {
                return null == t ? this.bbox().cy : this.y(t - this.bbox().height / 2)
            }
        },
        construct: {
            group: function () {
                return this.put(new u.G)
            }
        }
    }), u.extend(u.Element, {
        siblings: function () {
            return this.parent.children()
        }, position: function () {
            return this.parent.index(this)
        }, next: function () {
            return this.siblings()[this.position() + 1]
        }, previous: function () {
            return this.siblings()[this.position() - 1]
        }, forward: function () {
            var t = this.position();
            return this.parent.removeElement(this).put(this, t + 1)
        }, backward: function () {
            var t = this.position();
            return t > 0 && this.parent.removeElement(this).add(this, t - 1), this
        }, front: function () {
            return this.parent.removeElement(this).put(this)
        }, back: function () {
            return this.position() > 0 && this.parent.removeElement(this).add(this, 0), this
        }, before: function (t) {
            t.remove();
            var e = this.position();
            return this.parent.add(t, e), this
        }, after: function (t) {
            t.remove();
            var e = this.position();
            return this.parent.add(t, e + 1), this
        }
    }), u.Mask = u.invent({
        create: function () {
            this.constructor.call(this, u.create("mask")), this.targets = []
        }, inherit: u.Container, extend: {
            remove: function () {
                for (var t = this.targets.length - 1; t >= 0; t--) this.targets[t] && this.targets[t].unmask();
                return delete this.targets, this.parent.removeElement(this), this
            }
        }, construct: {
            mask: function () {
                return this.defs().put(new u.Mask)
            }
        }
    }), u.extend(u.Element, {
        maskWith: function (t) {
            return this.masker = t instanceof u.Mask ? t : this.parent.mask().add(t), this.masker.targets.push(this), this.attr("mask", 'url("#' + this.masker.attr("id") + '")')
        }, unmask: function () {
            return delete this.masker, this.attr("mask", null)
        }
    }), u.Clip = u.invent({
        create: function () {
            this.constructor.call(this, u.create("clipPath")), this.targets = []
        }, inherit: u.Container, extend: {
            remove: function () {
                for (var t = this.targets.length - 1; t >= 0; t--) this.targets[t] && this.targets[t].unclip();
                return delete this.targets, this.parent.removeElement(this), this
            }
        }, construct: {
            clip: function () {
                return this.defs().put(new u.Clip)
            }
        }
    }), u.extend(u.Element, {
        clipWith: function (t) {
            return this.clipper = t instanceof u.Clip ? t : this.parent.clip().add(t), this.clipper.targets.push(this), this.attr("clip-path", 'url("#' + this.clipper.attr("id") + '")')
        }, unclip: function () {
            return delete this.clipper, this.attr("clip-path", null)
        }
    }), u.Gradient = u.invent({
        create: function (t) {
            this.constructor.call(this, u.create(t + "Gradient")), this.type = t
        }, inherit: u.Container, extend: {
            from: function (t, e) {
                return "radial" == this.type ? this.attr({fx: new u.Number(t), fy: new u.Number(e)}) : this.attr({
                    x1: new u.Number(t),
                    y1: new u.Number(e)
                })
            }, to: function (t, e) {
                return "radial" == this.type ? this.attr({cx: new u.Number(t), cy: new u.Number(e)}) : this.attr({
                    x2: new u.Number(t),
                    y2: new u.Number(e)
                })
            }, radius: function (t) {
                return "radial" == this.type ? this.attr({r: new u.Number(t)}) : this
            }, at: function (t, e, i) {
                return this.put(new u.Stop).update(t, e, i)
            }, update: function (t) {
                return this.clear(), "function" == typeof t && t.call(this, this), this
            }, fill: function () {
                return "url(#" + this.id() + ")"
            }, toString: function () {
                return this.fill()
            }
        }, construct: {
            gradient: function (t, e) {
                return this.defs().gradient(t, e)
            }
        }
    }), u.extend(u.Defs, {
        gradient: function (t, e) {
            return this.put(new u.Gradient(t)).update(e)
        }
    }), u.Stop = u.invent({
        create: "stop", inherit: u.Element, extend: {
            update: function (t) {
                return ("number" == typeof t || t instanceof u.Number) && (t = {
                    offset: arguments[0],
                    color: arguments[1],
                    opacity: arguments[2]
                }), null != t.opacity && this.attr("stop-opacity", t.opacity), null != t.color && this.attr("stop-color", t.color), null != t.offset && this.attr("offset", new u.Number(t.offset)), this
            }
        }
    }), u.Pattern = u.invent({
        create: "pattern", inherit: u.Container, extend: {
            fill: function () {
                return "url(#" + this.id() + ")"
            }, update: function (t) {
                return this.clear(), "function" == typeof t && t.call(this, this), this
            }, toString: function () {
                return this.fill()
            }
        }, construct: {
            pattern: function (t, e, i) {
                return this.defs().pattern(t, e, i)
            }
        }
    }), u.extend(u.Defs, {
        pattern: function (t, e, i) {
            return this.put(new u.Pattern).update(i).attr({x: 0, y: 0, width: t, height: e, patternUnits: "userSpaceOnUse"})
        }
    }), u.Doc = u.invent({
        create: function (t) {
            this.parent = "string" == typeof t ? document.getElementById(t) : t, this.constructor.call(this, "svg" == this.parent.nodeName ? this.parent : u.create("svg")), this.attr({
                xmlns: u.ns,
                version: "1.1",
                width: "100%",
                height: "100%"
            }).attr("xmlns:xlink", u.xlink, u.xmlns), this._defs = new u.Defs, this._defs.parent = this, this.node.appendChild(this._defs.node), this.doSpof = !1, this.parent != this.node && this.stage()
        }, inherit: u.Container, extend: {
            stage: function () {
                var t = this;
                return this.parent.appendChild(this.node), t.spof(), u.on(window, "resize", function () {
                    t.spof()
                }), this
            }, defs: function () {
                return this._defs
            }, spof: function () {
                if (this.doSpof) {
                    var t = this.node.getScreenCTM();
                    t && this.style("left", -t.e % 1 + "px").style("top", -t.f % 1 + "px")
                }
                return this
            }, fixSubPixelOffset: function () {
                return this.doSpof = !0, this
            }, remove: function () {
                return this.parent && (this.parent.removeChild(this.node), this.parent = null), this
            }
        }
    }), u.Shape = u.invent({
        create: function (t) {
            this.constructor.call(this, t)
        }, inherit: u.Element
    }), u.Symbol = u.invent({
        create: "symbol", inherit: u.Container, construct: {
            symbol: function () {
                return this.defs().put(new u.Symbol)
            }
        }
    }), u.Use = u.invent({
        create: "use", inherit: u.Shape, extend: {
            element: function (t) {
                return this.target = t, this.attr("href", "#" + t, u.xlink)
            }
        }, construct: {
            use: function (t) {
                return this.put(new u.Use).element(t)
            }
        }
    }), u.Rect = u.invent({
        create: "rect", inherit: u.Shape, construct: {
            rect: function (t, e) {
                return this.put((new u.Rect).size(t, e))
            }
        }
    }), u.Ellipse = u.invent({
        create: "ellipse", inherit: u.Shape, extend: {
            x: function (t) {
                return null == t ? this.cx() - this.attr("rx") : this.cx(t + this.attr("rx"))
            }, y: function (t) {
                return null == t ? this.cy() - this.attr("ry") : this.cy(t + this.attr("ry"))
            }, cx: function (t) {
                return null == t ? this.attr("cx") : this.attr("cx", new u.Number(t).divide(this.trans.scaleX))
            }, cy: function (t) {
                return null == t ? this.attr("cy") : this.attr("cy", new u.Number(t).divide(this.trans.scaleY))
            }, width: function (t) {
                return null == t ? 2 * this.attr("rx") : this.attr("rx", new u.Number(t).divide(2))
            }, height: function (t) {
                return null == t ? 2 * this.attr("ry") : this.attr("ry", new u.Number(t).divide(2))
            }, size: function (t, e) {
                var i = r(this.bbox(), t, e);
                return this.attr({rx: new u.Number(i.width).divide(2), ry: new u.Number(i.height).divide(2)})
            }
        }, construct: {
            circle: function (t) {
                return this.ellipse(t, t)
            }, ellipse: function (t, e) {
                return this.put(new u.Ellipse).size(t, e).move(0, 0)
            }
        }
    }), u.Line = u.invent({
        create: "line", inherit: u.Shape, extend: {
            x: function (t) {
                var e = this.bbox();
                return null == t ? e.x : this.attr({x1: this.attr("x1") - e.x + t, x2: this.attr("x2") - e.x + t})
            }, y: function (t) {
                var e = this.bbox();
                return null == t ? e.y : this.attr({y1: this.attr("y1") - e.y + t, y2: this.attr("y2") - e.y + t})
            }, cx: function (t) {
                var e = this.bbox().width / 2;
                return null == t ? this.x() + e : this.x(t - e)
            }, cy: function (t) {
                var e = this.bbox().height / 2;
                return null == t ? this.y() + e : this.y(t - e)
            }, width: function (t) {
                var e = this.bbox();
                return null == t ? e.width : this.attr(this.attr("x1") < this.attr("x2") ? "x2" : "x1", e.x + t)
            }, height: function (t) {
                var e = this.bbox();
                return null == t ? e.height : this.attr(this.attr("y1") < this.attr("y2") ? "y2" : "y1", e.y + t)
            }, size: function (t, e) {
                var i = r(this.bbox(), t, e);
                return this.width(i.width).height(i.height)
            }, plot: function (t, e, i, n) {
                return this.attr({x1: t, y1: e, x2: i, y2: n})
            }
        }, construct: {
            line: function (t, e, i, n) {
                return this.put((new u.Line).plot(t, e, i, n))
            }
        }
    }), u.Polyline = u.invent({
        create: "polyline", inherit: u.Shape, construct: {
            polyline: function (t) {
                return this.put(new u.Polyline).plot(t)
            }
        }
    }), u.Polygon = u.invent({
        create: "polygon", inherit: u.Shape, construct: {
            polygon: function (t) {
                return this.put(new u.Polygon).plot(t)
            }
        }
    }), u.extend(u.Polyline, u.Polygon, {
        morphArray: u.PointArray, plot: function (t) {
            return this.attr("points", this.array = new u.PointArray(t, [[0, 0]]))
        }, move: function (t, e) {
            return this.attr("points", this.array.move(t, e))
        }, x: function (t) {
            return null == t ? this.bbox().x : this.move(t, this.bbox().y)
        }, y: function (t) {
            return null == t ? this.bbox().y : this.move(this.bbox().x, t)
        }, width: function (t) {
            var e = this.bbox();
            return null == t ? e.width : this.size(t, e.height)
        }, height: function (t) {
            var e = this.bbox();
            return null == t ? e.height : this.size(e.width, t)
        }, size: function (t, e) {
            var i = r(this.bbox(), t, e);
            return this.attr("points", this.array.size(i.width, i.height))
        }
    }), u.Path = u.invent({
        create: "path", inherit: u.Shape, extend: {
            plot: function (t) {
                return this.attr("d", this.array = new u.PathArray(t, [["M", 0, 0]]))
            }, move: function (t, e) {
                return this.attr("d", this.array.move(t, e))
            }, x: function (t) {
                return null == t ? this.bbox().x : this.move(t, this.bbox().y)
            }, y: function (t) {
                return null == t ? this.bbox().y : this.move(this.bbox().x, t)
            }, size: function (t, e) {
                var i = r(this.bbox(), t, e);
                return this.attr("d", this.array.size(i.width, i.height))
            }, width: function (t) {
                return null == t ? this.bbox().width : this.size(t, this.bbox().height)
            }, height: function (t) {
                return null == t ? this.bbox().height : this.size(this.bbox().width, t)
            }
        }, construct: {
            path: function (t) {
                return this.put(new u.Path).plot(t)
            }
        }
    }), u.Image = u.invent({
        create: "image", inherit: u.Shape, extend: {
            load: function (t) {
                if (!t) return this;
                var e = this, i = document.createElement("img");
                return i.onload = function () {
                    var n = e.doc(u.Pattern);
                    0 == e.width() && 0 == e.height() && e.size(i.width, i.height), n && 0 == n.width() && 0 == n.height() && n.size(e.width(), e.height()), "function" == typeof e._loaded && e._loaded.call(e, {
                        width: i.width,
                        height: i.height,
                        ratio: i.width / i.height,
                        url: t
                    })
                }, this.attr("href", i.src = this.src = t, u.xlink)
            }, loaded: function (t) {
                return this._loaded = t, this
            }
        }, construct: {
            image: function (t, e, i) {
                return this.put(new u.Image).load(t).size(e || 0, i || e || 0)
            }
        }
    }), u.Text = u.invent({
        create: function () {
            this.constructor.call(this, u.create("text")), this._leading = new u.Number(1.3), this._rebuild = !0, this._build = !1, this.attr("font-family", u.defaults.attrs["font-family"])
        }, inherit: u.Shape, extend: {
            x: function (t) {
                return null == t ? this.attr("x") : (this.textPath || this.lines.each(function () {
                    this.newLined && this.x(t)
                }), this.attr("x", t))
            }, y: function (t) {
                var e = this.attr("y"), i = "number" == typeof e ? e - this.bbox().y : 0;
                return null == t ? "number" == typeof e ? e - i : e : this.attr("y", "number" == typeof t ? t + i : t)
            }, cx: function (t) {
                return null == t ? this.bbox().cx : this.x(t - this.bbox().width / 2)
            }, cy: function (t) {
                return null == t ? this.bbox().cy : this.y(t - this.bbox().height / 2)
            }, text: function (t) {
                if ("undefined" == typeof t) return this.content;
                if (this.clear().build(!0), "function" == typeof t) t.call(this, this); else {
                    t = (this.content = t).split("\n");
                    for (var e = 0, i = t.length; i > e; e++) this.tspan(t[e]).newLine()
                }
                return this.build(!1).rebuild()
            }, size: function (t) {
                return this.attr("font-size", t).rebuild()
            }, leading: function (t) {
                return null == t ? this._leading : (this._leading = new u.Number(t), this.rebuild())
            }, rebuild: function (t) {
                if ("boolean" == typeof t && (this._rebuild = t), this._rebuild) {
                    var e = this;
                    this.lines.each(function () {
                        this.newLined && (this.textPath || this.attr("x", e.attr("x")), this.attr("dy", e._leading * new u.Number(e.attr("font-size"))))
                    }), this.fire("rebuild")
                }
                return this
            }, build: function (t) {
                return this._build = !!t, this
            }
        }, construct: {
            text: function (t) {
                return this.put(new u.Text).text(t)
            }, plain: function (t) {
                return this.put(new u.Text).plain(t)
            }
        }
    }), u.TSpan = u.invent({
        create: "tspan", inherit: u.Shape, extend: {
            text: function (t) {
                return "function" == typeof t ? t.call(this, this) : this.plain(t), this
            }, dx: function (t) {
                return this.attr("dx", t)
            }, dy: function (t) {
                return this.attr("dy", t)
            }, newLine: function () {
                var t = this.doc(u.Text);
                return this.newLined = !0, this.dy(t._leading * t.attr("font-size")).attr("x", t.x())
            }
        }
    }), u.extend(u.Text, u.TSpan, {
        plain: function (t) {
            return this._build === !1 && this.clear(), this.node.appendChild(document.createTextNode(this.content = t)), this
        }, tspan: function (t) {
            var e = (this.textPath || this).node, i = new u.TSpan;
            return this._build === !1 && this.clear(), e.appendChild(i.node), i.parent = this, this instanceof u.Text && this.lines.add(i), i.text(t)
        }, clear: function () {
            for (var t = (this.textPath || this).node; t.hasChildNodes();) t.removeChild(t.lastChild);
            return this instanceof u.Text && (delete this.lines, this.lines = new u.Set, this.content = ""), this
        }, length: function () {
            return this.node.getComputedTextLength()
        }
    }), u.TextPath = u.invent({
        create: "textPath", inherit: u.Element, parent: u.Text, construct: {
            path: function (t) {
                for (this.textPath = new u.TextPath; this.node.hasChildNodes();) this.textPath.node.appendChild(this.node.firstChild);
                return this.node.appendChild(this.textPath.node), this.track = this.doc().defs().path(t), this.textPath.parent = this, this.textPath.attr("href", "#" + this.track, u.xlink), this
            }, plot: function (t) {
                return this.track && this.track.plot(t), this
            }
        }
    }), u.Nested = u.invent({
        create: function () {
            this.constructor.call(this, u.create("svg")), this.style("overflow", "visible")
        }, inherit: u.Container, construct: {
            nested: function () {
                return this.put(new u.Nested)
            }
        }
    }), u.A = u.invent({
        create: "a", inherit: u.Container, extend: {
            to: function (t) {
                return this.attr("href", t, u.xlink)
            }, show: function (t) {
                return this.attr("show", t, u.xlink)
            }, target: function (t) {
                return this.attr("target", t)
            }
        }, construct: {
            link: function (t) {
                return this.put(new u.A).to(t)
            }
        }
    }), u.extend(u.Element, {
        linkTo: function (t) {
            var e = new u.A;
            return "function" == typeof t ? t.call(e, e) : e.to(t), this.parent.put(e).put(this)
        }
    }), u.Marker = u.invent({
        create: "marker", inherit: u.Container, extend: {
            width: function (t) {
                return this.attr("markerWidth", t)
            }, height: function (t) {
                return this.attr("markerHeight", t)
            }, ref: function (t, e) {
                return this.attr("refX", t).attr("refY", e)
            }, update: function (t) {
                return this.clear(), "function" == typeof t && t.call(this, this), this
            }, toString: function () {
                return "url(#" + this.id() + ")"
            }
        }, construct: {
            marker: function (t, e, i) {
                return this.defs().marker(t, e, i)
            }
        }
    }), u.extend(u.Defs, {
        marker: function (t, e, i) {
            return this.put(new u.Marker).size(t, e).ref(t / 2, e / 2).viewbox(0, 0, t, e).attr("orient", "auto").update(i)
        }
    }), u.extend(u.Line, u.Polyline, u.Polygon, u.Path, {
        marker: function (t, e, i, n) {
            var r = ["marker"];
            return "all" != t && r.push(t), r = r.join("-"), t = arguments[1] instanceof u.Marker ? arguments[1] : this.doc().marker(e, i, n), this.attr(r, t)
        }
    });
    var c = {
        stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"],
        fill: ["color", "opacity", "rule"],
        prefix: function (t, e) {
            return "color" == e ? t : t + "-" + e
        }
    };
    return ["fill", "stroke"].forEach(function (t) {
        var e, i = {};
        i[t] = function (i) {
            if ("string" == typeof i || u.Color.isRgb(i) || i && "function" == typeof i.fill) this.attr(t, i); else for (e = c[t].length - 1; e >= 0; e--) null != i[c[t][e]] && this.attr(c.prefix(t, c[t][e]), i[c[t][e]]);
            return this
        }, u.extend(u.Element, u.FX, i)
    }), u.extend(u.Element, u.FX, {
        rotate: function (t, e, i) {
            return this.transform({rotation: t || 0, cx: e, cy: i})
        }, skew: function (t, e) {
            return this.transform({skewX: t || 0, skewY: e || 0})
        }, scale: function (t, e) {
            return this.transform({scaleX: t, scaleY: null == e ? t : e})
        }, translate: function (t, e) {
            return this.transform({x: t, y: e})
        }, matrix: function (t) {
            return this.transform({matrix: t})
        }, opacity: function (t) {
            return this.attr("opacity", t)
        }
    }), u.extend(u.Rect, u.Ellipse, u.FX, {
        radius: function (t, e) {
            return this.attr({rx: t, ry: e || t})
        }
    }), u.extend(u.Path, {
        length: function () {
            return this.node.getTotalLength()
        }, pointAt: function (t) {
            return this.node.getPointAtLength(t)
        }
    }), u.extend(u.Parent, u.Text, u.FX, {
        font: function (t) {
            for (var e in t) "leading" == e ? this.leading(t[e]) : "anchor" == e ? this.attr("text-anchor", t[e]) : "size" == e || "family" == e || "weight" == e || "stretch" == e || "variant" == e || "style" == e ? this.attr("font-" + e, t[e]) : this.attr(e, t[e]);
            return this
        }
    }), u.Set = u.invent({
        create: function () {
            this.clear()
        }, extend: {
            add: function () {
                var t, e, i = [].slice.call(arguments);
                for (t = 0, e = i.length; e > t; t++) this.members.push(i[t]);
                return this
            }, remove: function (t) {
                var e = this.index(t);
                return e > -1 && this.members.splice(e, 1), this
            }, each: function (t) {
                for (var e = 0, i = this.members.length; i > e; e++) t.apply(this.members[e], [e, this.members]);
                return this
            }, clear: function () {
                return this.members = [], this
            }, has: function (t) {
                return this.index(t) >= 0
            }, index: function (t) {
                return this.members.indexOf(t)
            }, get: function (t) {
                return this.members[t]
            }, first: function () {
                return this.get(0)
            }, last: function () {
                return this.get(this.members.length - 1)
            }, valueOf: function () {
                return this.members
            }, bbox: function () {
                var t = new u.BBox;
                if (0 == this.members.length) return t;
                var e = this.members[0].rbox();
                return t.x = e.x, t.y = e.y, t.width = e.width, t.height = e.height, this.each(function () {
                    t = t.merge(this.rbox())
                }), t
            }
        }, construct: {
            set: function () {
                return new u.Set
            }
        }
    }), u.SetFX = u.invent({
        create: function (t) {
            this.set = t
        }
    }), u.Set.inherit = function () {
        var t, e = [];
        for (var t in u.Shape.prototype) "function" == typeof u.Shape.prototype[t] && "function" != typeof u.Set.prototype[t] && e.push(t);
        e.forEach(function (t) {
            u.Set.prototype[t] = function () {
                for (var e = 0, i = this.members.length; i > e; e++) this.members[e] && "function" == typeof this.members[e][t] && this.members[e][t].apply(this.members[e], arguments);
                return "animate" == t ? this.fx || (this.fx = new u.SetFX(this)) : this
            }
        }), e = [];
        for (var t in u.FX.prototype) "function" == typeof u.FX.prototype[t] && "function" != typeof u.SetFX.prototype[t] && e.push(t);
        e.forEach(function (t) {
            u.SetFX.prototype[t] = function () {
                for (var e = 0, i = this.set.members.length; i > e; e++) this.set.members[e].fx[t].apply(this.set.members[e].fx, arguments);
                return this
            }
        })
    }, u.extend(u.Element, {
        data: function (t, e, i) {
            if ("object" == typeof t) for (e in t) this.data(e, t[e]); else if (arguments.length < 2) try {
                return JSON.parse(this.attr("data-" + t))
            } catch (n) {
                return this.attr("data-" + t)
            } else this.attr("data-" + t, null === e ? null : i === !0 || "string" == typeof e || "number" == typeof e ? e : JSON.stringify(e));
            return this
        }
    }), u.extend(u.Element, {
        remember: function (t, e) {
            if ("object" == typeof arguments[0]) for (var e in t) this.remember(e, t[e]); else {
                if (1 == arguments.length) return this.memory()[t];
                this.memory()[t] = e
            }
            return this
        }, forget: function () {
            if (0 == arguments.length) this._memory = {}; else for (var t = arguments.length - 1; t >= 0; t--) delete this.memory()[arguments[t]];
            return this
        }, memory: function () {
            return this._memory || (this._memory = {})
        }
    }), u
}), function (t, e) {
    "use strict";
    "undefined" != typeof module && module.exports ? module.exports = e() : "function" == typeof define && define.amd ? define([], e) : t.buzz = e()
}(this, function () {
    "use strict";
    var t = window.AudioContext || window.webkitAudioContext, e = {
        defaults: {
            autoplay: !1,
            duration: 5e3,
            formats: [],
            loop: !1,
            placeholder: "--",
            preload: "metadata",
            volume: 80,
            webAudioApi: !1,
            document: window.document
        },
        types: {mp3: "audio/mpeg", ogg: "audio/ogg", wav: "audio/wav", aac: "audio/aac", m4a: "audio/x-m4a"},
        sounds: [],
        el: document.createElement("audio"),
        getAudioContext: function () {
            if (void 0 === this.audioCtx) try {
                this.audioCtx = t ? new t : null
            } catch (e) {
                this.audioCtx = null
            }
            return this.audioCtx
        },
        sound: function (t, i) {
            function n(t) {
                for (var e = [], i = t.length - 1, n = 0; i >= n; n++) e.push({start: t.start(n), end: t.end(n)});
                return e
            }

            function r(t) {
                return t.split(".").pop()
            }

            i = i || {};
            var o = i.document || e.defaults.document, a = 0, s = [], l = {}, h = e.isSupported();
            if (this.load = function () {
                    return h ? (this.sound.load(), this) : this
                }, this.play = function () {
                    return h ? (this.sound.play(), this) : this
                }, this.togglePlay = function () {
                    return h ? (this.sound.paused ? this.sound.play() : this.sound.pause(), this) : this
                }, this.pause = function () {
                    return h ? (this.sound.pause(), this) : this
                }, this.isPaused = function () {
                    return h ? this.sound.paused : null
                }, this.stop = function () {
                    return h ? (this.setTime(0), this.sound.pause(), this) : this
                }, this.isEnded = function () {
                    return h ? this.sound.ended : null
                }, this.loop = function () {
                    try {
                        if (!h) return this;
                        this.sound.loop = "loop", this.bind("ended.buzzloop", function () {
                            this.currentTime = 0, this.play()
                        })
                    } catch (t) {
                    }
                    return this
                }, this.unloop = function () {
                    return h ? (this.sound.removeAttribute("loop"), this.unbind("ended.buzzloop"), this) : this
                }, this.mute = function () {
                    return h ? (this.sound.muted = !0, this) : this
                }, this.unmute = function () {
                    return h ? (this.sound.muted = !1, this) : this
                }, this.toggleMute = function () {
                    return h ? (this.sound.muted = !this.sound.muted, this) : this
                }, this.isMuted = function () {
                    return h ? this.sound.muted : null
                }, this.setVolume = function (t) {
                    return h ? (0 > t && (t = 0), t > 100 && (t = 100), this.volume = t, this.sound.volume = t / 100, this) : this
                }, this.getVolume = function () {
                    return h ? this.volume : this
                }, this.increaseVolume = function (t) {
                    return this.setVolume(this.volume + (t || 1))
                }, this.decreaseVolume = function (t) {
                    return this.setVolume(this.volume - (t || 1))
                }, this.setTime = function (t) {
                    try {
                        if (!h) return this;
                        var e = !0;
                        this.whenReady(function () {
                            e === !0 && (e = !1, isFinite(t) && (this.sound.currentTime = Number(t)))
                        })
                    } catch (i) {
                    }
                    return this
                }, this.getTime = function () {
                    try {
                        if (!h) return null;
                        var t = Math.round(100 * this.sound.currentTime) / 100;
                        return isNaN(t) ? e.defaults.placeholder : t
                    } catch (i) {
                    }
                    return 0
                }, this.setPercent = function (t) {
                    return h ? this.setTime(e.fromPercent(t, this.sound.duration)) : this
                }, this.getPercent = function () {
                    try {
                        if (!h) return null;
                        var t = Math.round(e.toPercent(this.sound.currentTime, this.sound.duration));
                        return isNaN(t) ? e.defaults.placeholder : t
                    } catch (i) {
                    }
                    return 0
                }, this.setSpeed = function (t) {
                    return h ? (this.sound.playbackRate = t, this) : this
                }, this.getSpeed = function () {
                    return h ? this.sound.playbackRate : null
                }, this.getDuration = function () {
                    if (!h) return null;
                    var t = Math.round(100 * this.sound.duration) / 100;
                    return isNaN(t) ? e.defaults.placeholder : t
                }, this.getPlayed = function () {
                    return h ? n(this.sound.played) : null
                }, this.getBuffered = function () {
                    return h ? n(this.sound.buffered) : null
                }, this.getSeekable = function () {
                    return h ? n(this.sound.seekable) : null
                }, this.getErrorCode = function () {
                    return h && this.sound.error ? this.sound.error.code : 0
                }, this.getErrorMessage = function () {
                    if (!h) return null;
                    switch (this.getErrorCode()) {
                        case 1:
                            return "MEDIA_ERR_ABORTED";
                        case 2:
                            return "MEDIA_ERR_NETWORK";
                        case 3:
                            return "MEDIA_ERR_DECODE";
                        case 4:
                            return "MEDIA_ERR_SRC_NOT_SUPPORTED";
                        default:
                            return null
                    }
                }, this.getStateCode = function () {
                    return h ? this.sound.readyState : null
                }, this.getStateMessage = function () {
                    if (!h) return null;
                    switch (this.getStateCode()) {
                        case 0:
                            return "HAVE_NOTHING";
                        case 1:
                            return "HAVE_METADATA";
                        case 2:
                            return "HAVE_CURRENT_DATA";
                        case 3:
                            return "HAVE_FUTURE_DATA";
                        case 4:
                            return "HAVE_ENOUGH_DATA";
                        default:
                            return null
                    }
                }, this.getNetworkStateCode = function () {
                    return h ? this.sound.networkState : null
                }, this.getNetworkStateMessage = function () {
                    if (!h) return null;
                    switch (this.getNetworkStateCode()) {
                        case 0:
                            return "NETWORK_EMPTY";
                        case 1:
                            return "NETWORK_IDLE";
                        case 2:
                            return "NETWORK_LOADING";
                        case 3:
                            return "NETWORK_NO_SOURCE";
                        default:
                            return null
                    }
                }, this.set = function (t, e) {
                    return h ? (this.sound[t] = e, this) : this
                }, this.get = function (t) {
                    return h ? t ? this.sound[t] : this.sound : null
                }, this.bind = function (t, e) {
                    if (!h) return this;
                    t = t.split(" ");
                    for (var i = this, n = function (t) {
                        e.call(i, t)
                    }, r = 0; r < t.length; r++) {
                        var o = t[r], a = o;
                        o = a.split(".")[0], s.push({idx: a, func: n}), this.sound.addEventListener(o, n, !0)
                    }
                    return this
                }, this.unbind = function (t) {
                    if (!h) return this;
                    t = t.split(" ");
                    for (var e = 0; e < t.length; e++) for (var i = t[e], n = i.split(".")[0], r = 0; r < s.length; r++) {
                        var o = s[r].idx.split(".");
                        (s[r].idx === i || o[1] && o[1] === i.replace(".", "")) && (this.sound.removeEventListener(n, s[r].func, !0), s.splice(r, 1))
                    }
                    return this
                }, this.bindOnce = function (t, e) {
                    if (!h) return this;
                    var i = this;
                    return l[a++] = !1, this.bind(t + "." + a, function () {
                        l[a] || (l[a] = !0, e.call(i)), i.unbind(t + "." + a)
                    }), this
                }, this.trigger = function (t, e) {
                    if (!h) return this;
                    t = t.split(" ");
                    for (var i = 0; i < t.length; i++) for (var n = t[i], r = 0; r < s.length; r++) {
                        var a = s[r].idx.split(".");
                        if (s[r].idx === n || a[0] && a[0] === n.replace(".", "")) {
                            var l = o.createEvent("HTMLEvents");
                            l.initEvent(a[0], !1, !0), l.originalEvent = e, this.sound.dispatchEvent(l)
                        }
                    }
                    return this
                }, this.fadeTo = function (t, i, n) {
                    function r() {
                        setTimeout(function () {
                            t > o && s.volume < t ? (s.setVolume(s.volume += 1), r()) : o > t && s.volume > t ? (s.setVolume(s.volume -= 1), r()) : n instanceof Function && n.apply(s)
                        }, a)
                    }

                    if (!h) return this;
                    i instanceof Function ? (n = i, i = e.defaults.duration) : i = i || e.defaults.duration;
                    var o = this.volume, a = i / Math.abs(o - t), s = this;
                    return this.play(), this.whenReady(function () {
                        r()
                    }), this
                }, this.fadeIn = function (t, e) {
                    return h ? this.setVolume(0).fadeTo(100, t, e) : this
                }, this.fadeOut = function (t, e) {
                    return h ? this.fadeTo(0, t, e) : this
                }, this.fadeWith = function (t, e) {
                    return h ? (this.fadeOut(e, function () {
                        this.stop()
                    }), t.play().fadeIn(e), this) : this
                }, this.whenReady = function (t) {
                    if (!h) return null;
                    var e = this;
                    0 === this.sound.readyState ? this.bind("canplay.buzzwhenready", function () {
                        t.call(e)
                    }) : t.call(e)
                }, this.addSource = function (t) {
                    var i = this, n = o.createElement("source");
                    return n.src = t, e.types[r(t)] && (n.type = e.types[r(t)]), this.sound.appendChild(n), n.addEventListener("error", function (t) {
                        i.sound.networkState = 3, i.trigger("sourceerror", t)
                    }), n
                }, h && t) {
                for (var u in e.defaults) e.defaults.hasOwnProperty(u) && void 0 === i[u] && (i[u] = e.defaults[u]);
                if (this.sound = o.createElement("audio"), i.webAudioApi) {
                    var c = e.getAudioContext();
                    c && (this.source = c.createMediaElementSource(this.sound), this.source.connect(c.destination))
                }
                if (t instanceof Array) for (var p in t) t.hasOwnProperty(p) && this.addSource(t[p]); else if (i.formats.length) for (var d in i.formats) i.formats.hasOwnProperty(d) && this.addSource(t + "." + i.formats[d]); else this.addSource(t);
                i.loop && this.loop(), i.autoplay && (this.sound.autoplay = "autoplay"), i.preload === !0 ? this.sound.preload = "auto" : i.preload === !1 ? this.sound.preload = "none" : this.sound.preload = i.preload, this.setVolume(i.volume), e.sounds.push(this)
            }
        },
        group: function (t) {
            function e() {
                for (var e = i(null, arguments), n = e.shift(), r = 0; r < t.length; r++) t[r][n].apply(t[r], e)
            }

            function i(t, e) {
                return t instanceof Array ? t : Array.prototype.slice.call(e)
            }

            t = i(t, arguments), this.getSounds = function () {
                return t
            }, this.add = function (e) {
                e = i(e, arguments);
                for (var n = 0; n < e.length; n++) t.push(e[n])
            }, this.remove = function (e) {
                e = i(e, arguments);
                for (var n = 0; n < e.length; n++) for (var r = 0; r < t.length; r++) if (t[r] === e[n]) {
                    t.splice(r, 1);
                    break
                }
            }, this.load = function () {
                return e("load"), this
            }, this.play = function () {
                return e("play"), this
            }, this.togglePlay = function () {
                return e("togglePlay"), this
            }, this.pause = function (t) {
                return e("pause", t), this
            }, this.stop = function () {
                return e("stop"), this
            }, this.mute = function () {
                return e("mute"), this
            }, this.unmute = function () {
                return e("unmute"), this
            }, this.toggleMute = function () {
                return e("toggleMute"), this
            }, this.setVolume = function (t) {
                return e("setVolume", t), this
            }, this.increaseVolume = function (t) {
                return e("increaseVolume", t), this
            }, this.decreaseVolume = function (t) {
                return e("decreaseVolume", t), this
            }, this.loop = function () {
                return e("loop"), this
            }, this.unloop = function () {
                return e("unloop"), this
            }, this.setSpeed = function (t) {
                return e("setSpeed", t), this
            }, this.setTime = function (t) {
                return e("setTime", t), this
            }, this.set = function (t, i) {
                return e("set", t, i), this
            }, this.bind = function (t, i) {
                return e("bind", t, i), this
            }, this.unbind = function (t) {
                return e("unbind", t), this
            }, this.bindOnce = function (t, i) {
                return e("bindOnce", t, i), this
            }, this.trigger = function (t) {
                return e("trigger", t), this
            }, this.fade = function (t, i, n, r) {
                return e("fade", t, i, n, r), this
            }, this.fadeIn = function (t, i) {
                return e("fadeIn", t, i), this
            }, this.fadeOut = function (t, i) {
                return e("fadeOut", t, i), this
            }
        },
        all: function () {
            return new e.group(e.sounds)
        },
        isSupported: function () {
            return !!e.el.canPlayType
        },
        isOGGSupported: function () {
            return !!e.el.canPlayType && e.el.canPlayType('audio/ogg; codecs="vorbis"');
        },
        isWAVSupported: function () {
            return !!e.el.canPlayType && e.el.canPlayType('audio/wav; codecs="1"')
        },
        isMP3Supported: function () {
            return !!e.el.canPlayType && e.el.canPlayType("audio/mpeg;")
        },
        isAACSupported: function () {
            return !!e.el.canPlayType && (e.el.canPlayType("audio/x-m4a;") || e.el.canPlayType("audio/aac;"))
        },
        toTimer: function (t, e) {
            var i, n, r;
            return i = Math.floor(t / 3600), i = isNaN(i) ? "--" : i >= 10 ? i : "0" + i, n = e ? Math.floor(t / 60 % 60) : Math.floor(t / 60), n = isNaN(n) ? "--" : n >= 10 ? n : "0" + n, r = Math.floor(t % 60), r = isNaN(r) ? "--" : r >= 10 ? r : "0" + r, e ? i + ":" + n + ":" + r : n + ":" + r
        },
        fromTimer: function (t) {
            var e = t.toString().split(":");
            return e && 3 === e.length && (t = 3600 * parseInt(e[0], 10) + 60 * parseInt(e[1], 10) + parseInt(e[2], 10)), e && 2 === e.length && (t = 60 * parseInt(e[0], 10) + parseInt(e[1], 10)), t
        },
        toPercent: function (t, e, i) {
            var n = Math.pow(10, i || 0);
            return Math.round(100 * t / e * n) / n
        },
        fromPercent: function (t, e, i) {
            var n = Math.pow(10, i || 0);
            return Math.round(e / 100 * t * n) / n
        }
    };
    return e
});
var THREE = {REVISION: "79"};
"function" == typeof define && define.amd ? define("three", THREE) : "undefined" != typeof exports && "undefined" != typeof module && (module.exports = THREE), void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)), void 0 === Math.sign && (Math.sign = function (t) {
    return 0 > t ? -1 : t > 0 ? 1 : +t
}), void 0 === Function.prototype.name && Object.defineProperty(Function.prototype, "name", {
    get: function () {
        return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]
    }
}), void 0 === Object.assign && function () {
    Object.assign = function (t) {
        if (void 0 === t || null === t) throw new TypeError("Cannot convert undefined or null to object");
        for (var e = Object(t), i = 1; i < arguments.length; i++) {
            var n = arguments[i];
            if (void 0 !== n && null !== n) for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
        }
        return e
    }
}(), Object.assign(THREE, {
    MOUSE: {LEFT: 0, MIDDLE: 1, RIGHT: 2},
    CullFaceNone: 0,
    CullFaceBack: 1,
    CullFaceFront: 2,
    CullFaceFrontBack: 3,
    FrontFaceDirectionCW: 0,
    FrontFaceDirectionCCW: 1,
    BasicShadowMap: 0,
    PCFShadowMap: 1,
    PCFSoftShadowMap: 2,
    FrontSide: 0,
    BackSide: 1,
    DoubleSide: 2,
    FlatShading: 1,
    SmoothShading: 2,
    NoColors: 0,
    FaceColors: 1,
    VertexColors: 2,
    NoBlending: 0,
    NormalBlending: 1,
    AdditiveBlending: 2,
    SubtractiveBlending: 3,
    MultiplyBlending: 4,
    CustomBlending: 5,
    AddEquation: 100,
    SubtractEquation: 101,
    ReverseSubtractEquation: 102,
    MinEquation: 103,
    MaxEquation: 104,
    ZeroFactor: 200,
    OneFactor: 201,
    SrcColorFactor: 202,
    OneMinusSrcColorFactor: 203,
    SrcAlphaFactor: 204,
    OneMinusSrcAlphaFactor: 205,
    DstAlphaFactor: 206,
    OneMinusDstAlphaFactor: 207,
    DstColorFactor: 208,
    OneMinusDstColorFactor: 209,
    SrcAlphaSaturateFactor: 210,
    NeverDepth: 0,
    AlwaysDepth: 1,
    LessDepth: 2,
    LessEqualDepth: 3,
    EqualDepth: 4,
    GreaterEqualDepth: 5,
    GreaterDepth: 6,
    NotEqualDepth: 7,
    MultiplyOperation: 0,
    MixOperation: 1,
    AddOperation: 2,
    NoToneMapping: 0,
    LinearToneMapping: 1,
    ReinhardToneMapping: 2,
    Uncharted2ToneMapping: 3,
    CineonToneMapping: 4,
    UVMapping: 300,
    CubeReflectionMapping: 301,
    CubeRefractionMapping: 302,
    EquirectangularReflectionMapping: 303,
    EquirectangularRefractionMapping: 304,
    SphericalReflectionMapping: 305,
    CubeUVReflectionMapping: 306,
    CubeUVRefractionMapping: 307,
    RepeatWrapping: 1e3,
    ClampToEdgeWrapping: 1001,
    MirroredRepeatWrapping: 1002,
    NearestFilter: 1003,
    NearestMipMapNearestFilter: 1004,
    NearestMipMapLinearFilter: 1005,
    LinearFilter: 1006,
    LinearMipMapNearestFilter: 1007,
    LinearMipMapLinearFilter: 1008,
    UnsignedByteType: 1009,
    ByteType: 1010,
    ShortType: 1011,
    UnsignedShortType: 1012,
    IntType: 1013,
    UnsignedIntType: 1014,
    FloatType: 1015,
    HalfFloatType: 1025,
    UnsignedShort4444Type: 1016,
    UnsignedShort5551Type: 1017,
    UnsignedShort565Type: 1018,
    AlphaFormat: 1019,
    RGBFormat: 1020,
    RGBAFormat: 1021,
    LuminanceFormat: 1022,
    LuminanceAlphaFormat: 1023,
    RGBEFormat: THREE.RGBAFormat,
    DepthFormat: 1026,
    RGB_S3TC_DXT1_Format: 2001,
    RGBA_S3TC_DXT1_Format: 2002,
    RGBA_S3TC_DXT3_Format: 2003,
    RGBA_S3TC_DXT5_Format: 2004,
    RGB_PVRTC_4BPPV1_Format: 2100,
    RGB_PVRTC_2BPPV1_Format: 2101,
    RGBA_PVRTC_4BPPV1_Format: 2102,
    RGBA_PVRTC_2BPPV1_Format: 2103,
    RGB_ETC1_Format: 2151,
    LoopOnce: 2200,
    LoopRepeat: 2201,
    LoopPingPong: 2202,
    InterpolateDiscrete: 2300,
    InterpolateLinear: 2301,
    InterpolateSmooth: 2302,
    ZeroCurvatureEnding: 2400,
    ZeroSlopeEnding: 2401,
    WrapAroundEnding: 2402,
    TrianglesDrawMode: 0,
    TriangleStripDrawMode: 1,
    TriangleFanDrawMode: 2,
    LinearEncoding: 3e3,
    sRGBEncoding: 3001,
    GammaEncoding: 3007,
    RGBEEncoding: 3002,
    LogLuvEncoding: 3003,
    RGBM7Encoding: 3004,
    RGBM16Encoding: 3005,
    RGBDEncoding: 3006,
    BasicDepthPacking: 3200,
    RGBADepthPacking: 3201
}), THREE.Color = function (t, e, i) {
    return void 0 === e && void 0 === i ? this.set(t) : this.setRGB(t, e, i)
}, THREE.Color.prototype = {
    constructor: THREE.Color, r: 1, g: 1, b: 1, set: function (t) {
        return t instanceof THREE.Color ? this.copy(t) : "number" == typeof t ? this.setHex(t) : "string" == typeof t && this.setStyle(t), this
    }, setScalar: function (t) {
        this.b = this.g = this.r = t
    }, setHex: function (t) {
        return t = Math.floor(t), this.r = (t >> 16 & 255) / 255, this.g = (t >> 8 & 255) / 255, this.b = (255 & t) / 255, this
    }, setRGB: function (t, e, i) {
        return this.r = t, this.g = e, this.b = i, this
    }, setHSL: function () {
        function t(t, e, i) {
            return 0 > i && (i += 1), i > 1 && (i -= 1), 1 / 6 > i ? t + 6 * (e - t) * i : .5 > i ? e : 2 / 3 > i ? t + 6 * (e - t) * (2 / 3 - i) : t
        }

        return function (e, i, n) {
            return e = THREE.Math.euclideanModulo(e, 1), i = THREE.Math.clamp(i, 0, 1), n = THREE.Math.clamp(n, 0, 1), 0 === i ? this.r = this.g = this.b = n : (i = .5 >= n ? n * (1 + i) : n + i - n * i, n = 2 * n - i, this.r = t(n, i, e + 1 / 3), this.g = t(n, i, e), this.b = t(n, i, e - 1 / 3)), this
        }
    }(), setStyle: function (t) {
        function e(e) {
            void 0 !== e && 1 > parseFloat(e) && console.warn("THREE.Color: Alpha component of " + t + " will be ignored.")
        }

        var i;
        if (i = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)) {
            var n = i[2];
            switch (i[1]) {
                case"rgb":
                case"rgba":
                    if (i = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(n)) return this.r = Math.min(255, parseInt(i[1], 10)) / 255, this.g = Math.min(255, parseInt(i[2], 10)) / 255, this.b = Math.min(255, parseInt(i[3], 10)) / 255, e(i[5]), this;
                    if (i = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(n)) return this.r = Math.min(100, parseInt(i[1], 10)) / 100, this.g = Math.min(100, parseInt(i[2], 10)) / 100, this.b = Math.min(100, parseInt(i[3], 10)) / 100, e(i[5]), this;
                    break;
                case"hsl":
                case"hsla":
                    if (i = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(n)) {
                        var n = parseFloat(i[1]) / 360, r = parseInt(i[2], 10) / 100, o = parseInt(i[3], 10) / 100;
                        return e(i[5]), this.setHSL(n, r, o)
                    }
            }
        } else if (i = /^\#([A-Fa-f0-9]+)$/.exec(t)) {
            if (i = i[1], n = i.length, 3 === n) return this.r = parseInt(i.charAt(0) + i.charAt(0), 16) / 255, this.g = parseInt(i.charAt(1) + i.charAt(1), 16) / 255, this.b = parseInt(i.charAt(2) + i.charAt(2), 16) / 255, this;
            if (6 === n) return this.r = parseInt(i.charAt(0) + i.charAt(1), 16) / 255, this.g = parseInt(i.charAt(2) + i.charAt(3), 16) / 255, this.b = parseInt(i.charAt(4) + i.charAt(5), 16) / 255, this
        }
        return t && 0 < t.length && (i = THREE.ColorKeywords[t], void 0 !== i ? this.setHex(i) : console.warn("THREE.Color: Unknown color " + t)), this
    }, clone: function () {
        return new this.constructor(this.r, this.g, this.b)
    }, copy: function (t) {
        return this.r = t.r, this.g = t.g, this.b = t.b, this
    }, copyGammaToLinear: function (t, e) {
        return void 0 === e && (e = 2), this.r = Math.pow(t.r, e), this.g = Math.pow(t.g, e), this.b = Math.pow(t.b, e), this
    }, copyLinearToGamma: function (t, e) {
        void 0 === e && (e = 2);
        var i = e > 0 ? 1 / e : 1;
        return this.r = Math.pow(t.r, i), this.g = Math.pow(t.g, i), this.b = Math.pow(t.b, i), this
    }, convertGammaToLinear: function () {
        var t = this.r, e = this.g, i = this.b;
        return this.r = t * t, this.g = e * e, this.b = i * i, this
    }, convertLinearToGamma: function () {
        return this.r = Math.sqrt(this.r), this.g = Math.sqrt(this.g), this.b = Math.sqrt(this.b), this
    }, getHex: function () {
        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
    }, getHexString: function () {
        return ("000000" + this.getHex().toString(16)).slice(-6)
    }, getHSL: function (t) {
        t = t || {h: 0, s: 0, l: 0};
        var e, i = this.r, n = this.g, r = this.b, o = Math.max(i, n, r), a = Math.min(i, n, r), s = (a + o) / 2;
        if (a === o) a = e = 0; else {
            var l = o - a, a = .5 >= s ? l / (o + a) : l / (2 - o - a);
            switch (o) {
                case i:
                    e = (n - r) / l + (r > n ? 6 : 0);
                    break;
                case n:
                    e = (r - i) / l + 2;
                    break;
                case r:
                    e = (i - n) / l + 4
            }
            e /= 6
        }
        return t.h = e, t.s = a, t.l = s, t
    }, getStyle: function () {
        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
    }, offsetHSL: function (t, e, i) {
        var n = this.getHSL();
        return n.h += t, n.s += e, n.l += i, this.setHSL(n.h, n.s, n.l), this
    }, add: function (t) {
        return this.r += t.r, this.g += t.g, this.b += t.b, this
    }, addColors: function (t, e) {
        return this.r = t.r + e.r, this.g = t.g + e.g, this.b = t.b + e.b, this
    }, addScalar: function (t) {
        return this.r += t, this.g += t, this.b += t, this
    }, sub: function (t) {
        return this.r = Math.max(0, this.r - t.r), this.g = Math.max(0, this.g - t.g), this.b = Math.max(0, this.b - t.b), this
    }, multiply: function (t) {
        return this.r *= t.r, this.g *= t.g, this.b *= t.b, this
    }, multiplyScalar: function (t) {
        return this.r *= t, this.g *= t, this.b *= t, this
    }, lerp: function (t, e) {
        return this.r += (t.r - this.r) * e, this.g += (t.g - this.g) * e, this.b += (t.b - this.b) * e, this
    }, equals: function (t) {
        return t.r === this.r && t.g === this.g && t.b === this.b
    }, fromArray: function (t, e) {
        return void 0 === e && (e = 0), this.r = t[e], this.g = t[e + 1], this.b = t[e + 2], this
    }, toArray: function (t, e) {
        return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this.r, t[e + 1] = this.g, t[e + 2] = this.b, t
    }
}, THREE.ColorKeywords = {
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
}, THREE.Quaternion = function (t, e, i, n) {
    this._x = t || 0, this._y = e || 0, this._z = i || 0, this._w = void 0 !== n ? n : 1
}, THREE.Quaternion.prototype = {
    constructor: THREE.Quaternion, get x() {
        return this._x
    }, set x(t) {
        this._x = t, this.onChangeCallback()
    }, get y() {
        return this._y
    }, set y(t) {
        this._y = t, this.onChangeCallback()
    }, get z() {
        return this._z
    }, set z(t) {
        this._z = t, this.onChangeCallback()
    }, get w() {
        return this._w
    }, set w(t) {
        this._w = t, this.onChangeCallback()
    }, set: function (t, e, i, n) {
        return this._x = t, this._y = e, this._z = i, this._w = n, this.onChangeCallback(), this
    }, clone: function () {
        return new this.constructor(this._x, this._y, this._z, this._w)
    }, copy: function (t) {
        return this._x = t.x, this._y = t.y, this._z = t.z, this._w = t.w, this.onChangeCallback(), this
    }, setFromEuler: function (t, e) {
        if (!1 == t instanceof THREE.Euler) throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var i = Math.cos(t._x / 2), n = Math.cos(t._y / 2), r = Math.cos(t._z / 2), o = Math.sin(t._x / 2), a = Math.sin(t._y / 2),
            s = Math.sin(t._z / 2), l = t.order;
        return "XYZ" === l ? (this._x = o * n * r + i * a * s, this._y = i * a * r - o * n * s, this._z = i * n * s + o * a * r, this._w = i * n * r - o * a * s) : "YXZ" === l ? (this._x = o * n * r + i * a * s, this._y = i * a * r - o * n * s, this._z = i * n * s - o * a * r, this._w = i * n * r + o * a * s) : "ZXY" === l ? (this._x = o * n * r - i * a * s, this._y = i * a * r + o * n * s, this._z = i * n * s + o * a * r, this._w = i * n * r - o * a * s) : "ZYX" === l ? (this._x = o * n * r - i * a * s, this._y = i * a * r + o * n * s, this._z = i * n * s - o * a * r, this._w = i * n * r + o * a * s) : "YZX" === l ? (this._x = o * n * r + i * a * s, this._y = i * a * r + o * n * s, this._z = i * n * s - o * a * r, this._w = i * n * r - o * a * s) : "XZY" === l && (this._x = o * n * r - i * a * s, this._y = i * a * r - o * n * s, this._z = i * n * s + o * a * r, this._w = i * n * r + o * a * s), !1 !== e && this.onChangeCallback(), this
    }, setFromAxisAngle: function (t, e) {
        var i = e / 2, n = Math.sin(i);
        return this._x = t.x * n, this._y = t.y * n, this._z = t.z * n, this._w = Math.cos(i), this.onChangeCallback(), this
    }, setFromRotationMatrix: function (t) {
        var e = t.elements, i = e[0];
        t = e[4];
        var n = e[8], r = e[1], o = e[5], a = e[9], s = e[2], l = e[6], e = e[10], h = i + o + e;
        return h > 0 ? (i = .5 / Math.sqrt(h + 1), this._w = .25 / i, this._x = (l - a) * i, this._y = (n - s) * i, this._z = (r - t) * i) : i > o && i > e ? (i = 2 * Math.sqrt(1 + i - o - e), this._w = (l - a) / i, this._x = .25 * i, this._y = (t + r) / i, this._z = (n + s) / i) : o > e ? (i = 2 * Math.sqrt(1 + o - i - e), this._w = (n - s) / i, this._x = (t + r) / i, this._y = .25 * i, this._z = (a + l) / i) : (i = 2 * Math.sqrt(1 + e - i - o), this._w = (r - t) / i, this._x = (n + s) / i, this._y = (a + l) / i, this._z = .25 * i), this.onChangeCallback(), this
    }, setFromUnitVectors: function () {
        var t, e;
        return function (i, n) {
            return void 0 === t && (t = new THREE.Vector3), e = i.dot(n) + 1, 1e-6 > e ? (e = 0, Math.abs(i.x) > Math.abs(i.z) ? t.set(-i.y, i.x, 0) : t.set(0, -i.z, i.y)) : t.crossVectors(i, n), this._x = t.x, this._y = t.y, this._z = t.z, this._w = e, this.normalize()
        }
    }(), inverse: function () {
        return this.conjugate().normalize()
    }, conjugate: function () {
        return this._x *= -1, this._y *= -1, this._z *= -1, this.onChangeCallback(), this
    }, dot: function (t) {
        return this._x * t._x + this._y * t._y + this._z * t._z + this._w * t._w
    }, lengthSq: function () {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
    }, length: function () {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
    }, normalize: function () {
        var t = this.length();
        return 0 === t ? (this._z = this._y = this._x = 0, this._w = 1) : (t = 1 / t, this._x *= t, this._y *= t, this._z *= t, this._w *= t), this.onChangeCallback(), this
    }, multiply: function (t, e) {
        return void 0 !== e ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(t, e)) : this.multiplyQuaternions(this, t)
    }, premultiply: function (t) {
        return this.multiplyQuaternions(t, this)
    }, multiplyQuaternions: function (t, e) {
        var i = t._x, n = t._y, r = t._z, o = t._w, a = e._x, s = e._y, l = e._z, h = e._w;
        return this._x = i * h + o * a + n * l - r * s, this._y = n * h + o * s + r * a - i * l, this._z = r * h + o * l + i * s - n * a, this._w = o * h - i * a - n * s - r * l, this.onChangeCallback(), this
    }, slerp: function (t, e) {
        if (0 === e) return this;
        if (1 === e) return this.copy(t);
        var i = this._x, n = this._y, r = this._z, o = this._w, a = o * t._w + i * t._x + n * t._y + r * t._z;
        if (0 > a ? (this._w = -t._w, this._x = -t._x, this._y = -t._y, this._z = -t._z, a = -a) : this.copy(t), a >= 1) return this._w = o, this._x = i, this._y = n, this._z = r, this;
        var s = Math.sqrt(1 - a * a);
        if (.001 > Math.abs(s)) return this._w = .5 * (o + this._w), this._x = .5 * (i + this._x), this._y = .5 * (n + this._y), this._z = .5 * (r + this._z), this;
        var l = Math.atan2(s, a), a = Math.sin((1 - e) * l) / s, s = Math.sin(e * l) / s;
        return this._w = o * a + this._w * s, this._x = i * a + this._x * s, this._y = n * a + this._y * s, this._z = r * a + this._z * s, this.onChangeCallback(), this
    }, equals: function (t) {
        return t._x === this._x && t._y === this._y && t._z === this._z && t._w === this._w
    }, fromArray: function (t, e) {
        return void 0 === e && (e = 0), this._x = t[e], this._y = t[e + 1], this._z = t[e + 2], this._w = t[e + 3], this.onChangeCallback(), this
    }, toArray: function (t, e) {
        return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this._x, t[e + 1] = this._y, t[e + 2] = this._z, t[e + 3] = this._w, t
    }, onChange: function (t) {
        return this.onChangeCallback = t, this
    }, onChangeCallback: function () {
    }
}, Object.assign(THREE.Quaternion, {
    slerp: function (t, e, i, n) {
        return i.copy(t).slerp(e, n)
    }, slerpFlat: function (t, e, i, n, r, o, a) {
        var s = i[n + 0], l = i[n + 1], h = i[n + 2];
        i = i[n + 3], n = r[o + 0];
        var u = r[o + 1], c = r[o + 2];
        if (r = r[o + 3], i !== r || s !== n || l !== u || h !== c) {
            o = 1 - a;
            var p = s * n + l * u + h * c + i * r, d = p >= 0 ? 1 : -1, f = 1 - p * p;
            f > Number.EPSILON && (f = Math.sqrt(f), p = Math.atan2(f, p * d), o = Math.sin(o * p) / f, a = Math.sin(a * p) / f), d *= a, s = s * o + n * d, l = l * o + u * d, h = h * o + c * d, i = i * o + r * d, o === 1 - a && (a = 1 / Math.sqrt(s * s + l * l + h * h + i * i), s *= a, l *= a, h *= a, i *= a)
        }
        t[e] = s, t[e + 1] = l, t[e + 2] = h, t[e + 3] = i
    }
}), THREE.Vector2 = function (t, e) {
    this.x = t || 0, this.y = e || 0
}, THREE.Vector2.prototype = {
    constructor: THREE.Vector2, get width() {
        return this.x
    }, set width(t) {
        this.x = t
    }, get height() {
        return this.y
    }, set height(t) {
        this.y = t
    }, set: function (t, e) {
        return this.x = t, this.y = e, this
    }, setScalar: function (t) {
        return this.y = this.x = t, this
    }, setX: function (t) {
        return this.x = t, this
    }, setY: function (t) {
        return this.y = t, this
    }, setComponent: function (t, e) {
        switch (t) {
            case 0:
                this.x = e;
                break;
            case 1:
                this.y = e;
                break;
            default:
                throw Error("index is out of range: " + t)
        }
    }, getComponent: function (t) {
        switch (t) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw Error("index is out of range: " + t)
        }
    }, clone: function () {
        return new this.constructor(this.x, this.y)
    }, copy: function (t) {
        return this.x = t.x, this.y = t.y, this
    }, add: function (t, e) {
        return void 0 !== e ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, e)) : (this.x += t.x, this.y += t.y, this)
    }, addScalar: function (t) {
        return this.x += t, this.y += t, this
    }, addVectors: function (t, e) {
        return this.x = t.x + e.x, this.y = t.y + e.y, this
    }, addScaledVector: function (t, e) {
        return this.x += t.x * e, this.y += t.y * e, this
    }, sub: function (t, e) {
        return void 0 !== e ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, e)) : (this.x -= t.x, this.y -= t.y, this)
    }, subScalar: function (t) {
        return this.x -= t, this.y -= t, this
    }, subVectors: function (t, e) {
        return this.x = t.x - e.x, this.y = t.y - e.y, this
    }, multiply: function (t) {
        return this.x *= t.x, this.y *= t.y, this
    }, multiplyScalar: function (t) {
        return isFinite(t) ? (this.x *= t, this.y *= t) : this.y = this.x = 0, this
    }, divide: function (t) {
        return this.x /= t.x, this.y /= t.y, this
    }, divideScalar: function (t) {
        return this.multiplyScalar(1 / t)
    }, min: function (t) {
        return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this
    }, max: function (t) {
        return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this
    }, clamp: function (t, e) {
        return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this
    }, clampScalar: function () {
        var t, e;
        return function (i, n) {
            return void 0 === t && (t = new THREE.Vector2, e = new THREE.Vector2), t.set(i, i), e.set(n, n), this.clamp(t, e)
        }
    }(), clampLength: function (t, e) {
        var i = this.length();
        return this.multiplyScalar(Math.max(t, Math.min(e, i)) / i)
    }, floor: function () {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this
    }, ceil: function () {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this
    }, round: function () {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this
    }, roundToZero: function () {
        return this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x), this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y), this
    }, negate: function () {
        return this.x = -this.x, this.y = -this.y, this
    }, dot: function (t) {
        return this.x * t.x + this.y * t.y
    }, lengthSq: function () {
        return this.x * this.x + this.y * this.y
    }, length: function () {
        return Math.sqrt(this.x * this.x + this.y * this.y)
    }, lengthManhattan: function () {
        return Math.abs(this.x) + Math.abs(this.y)
    }, normalize: function () {
        return this.divideScalar(this.length())
    }, angle: function () {
        var t = Math.atan2(this.y, this.x);
        return 0 > t && (t += 2 * Math.PI), t
    }, distanceTo: function (t) {
        return Math.sqrt(this.distanceToSquared(t))
    }, distanceToSquared: function (t) {
        var e = this.x - t.x;
        return t = this.y - t.y, e * e + t * t
    }, distanceToManhattan: function (t) {
        return Math.abs(this.x - t.x) + Math.abs(this.y - t.y)
    }, setLength: function (t) {
        return this.multiplyScalar(t / this.length())
    }, lerp: function (t, e) {
        return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this
    }, lerpVectors: function (t, e, i) {
        return this.subVectors(e, t).multiplyScalar(i).add(t)
    }, equals: function (t) {
        return t.x === this.x && t.y === this.y
    }, fromArray: function (t, e) {
        return void 0 === e && (e = 0), this.x = t[e], this.y = t[e + 1], this
    }, toArray: function (t, e) {
        return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this.x, t[e + 1] = this.y, t
    }, fromAttribute: function (t, e, i) {
        return void 0 === i && (i = 0), e = e * t.itemSize + i, this.x = t.array[e], this.y = t.array[e + 1], this
    }, rotateAround: function (t, e) {
        var i = Math.cos(e), n = Math.sin(e), r = this.x - t.x, o = this.y - t.y;
        return this.x = r * i - o * n + t.x, this.y = r * n + o * i + t.y, this
    }
}, THREE.Vector3 = function (t, e, i) {
    this.x = t || 0, this.y = e || 0, this.z = i || 0
}, THREE.Vector3.prototype = {
    constructor: THREE.Vector3, set: function (t, e, i) {
        return this.x = t, this.y = e, this.z = i, this
    }, setScalar: function (t) {
        return this.z = this.y = this.x = t, this
    }, setX: function (t) {
        return this.x = t, this
    }, setY: function (t) {
        return this.y = t, this
    }, setZ: function (t) {
        return this.z = t, this
    }, setComponent: function (t, e) {
        switch (t) {
            case 0:
                this.x = e;
                break;
            case 1:
                this.y = e;
                break;
            case 2:
                this.z = e;
                break;
            default:
                throw Error("index is out of range: " + t)
        }
    }, getComponent: function (t) {
        switch (t) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw Error("index is out of range: " + t)
        }
    }, clone: function () {
        return new this.constructor(this.x, this.y, this.z)
    }, copy: function (t) {
        return this.x = t.x, this.y = t.y, this.z = t.z, this
    }, add: function (t, e) {
        return void 0 !== e ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, e)) : (this.x += t.x, this.y += t.y, this.z += t.z, this)
    }, addScalar: function (t) {
        return this.x += t, this.y += t, this.z += t, this
    }, addVectors: function (t, e) {
        return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this
    }, addScaledVector: function (t, e) {
        return this.x += t.x * e, this.y += t.y * e, this.z += t.z * e, this
    }, sub: function (t, e) {
        return void 0 !== e ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, e)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this)
    }, subScalar: function (t) {
        return this.x -= t, this.y -= t, this.z -= t, this
    }, subVectors: function (t, e) {
        return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this
    }, multiply: function (t, e) {
        return void 0 !== e ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(t, e)) : (this.x *= t.x, this.y *= t.y, this.z *= t.z, this)
    }, multiplyScalar: function (t) {
        return isFinite(t) ? (this.x *= t, this.y *= t, this.z *= t) : this.z = this.y = this.x = 0, this
    }, multiplyVectors: function (t, e) {
        return this.x = t.x * e.x, this.y = t.y * e.y, this.z = t.z * e.z, this
    }, applyEuler: function () {
        var t;
        return function (e) {
            return !1 == e instanceof THREE.Euler && console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), void 0 === t && (t = new THREE.Quaternion), this.applyQuaternion(t.setFromEuler(e))
        }
    }(), applyAxisAngle: function () {
        var t;
        return function (e, i) {
            return void 0 === t && (t = new THREE.Quaternion), this.applyQuaternion(t.setFromAxisAngle(e, i))
        }
    }(), applyMatrix3: function (t) {
        var e = this.x, i = this.y, n = this.z;
        return t = t.elements, this.x = t[0] * e + t[3] * i + t[6] * n, this.y = t[1] * e + t[4] * i + t[7] * n, this.z = t[2] * e + t[5] * i + t[8] * n, this
    }, applyMatrix4: function (t) {
        var e = this.x, i = this.y, n = this.z;
        return t = t.elements, this.x = t[0] * e + t[4] * i + t[8] * n + t[12], this.y = t[1] * e + t[5] * i + t[9] * n + t[13], this.z = t[2] * e + t[6] * i + t[10] * n + t[14], this
    }, applyProjection: function (t) {
        var e = this.x, i = this.y, n = this.z;
        t = t.elements;
        var r = 1 / (t[3] * e + t[7] * i + t[11] * n + t[15]);
        return this.x = (t[0] * e + t[4] * i + t[8] * n + t[12]) * r, this.y = (t[1] * e + t[5] * i + t[9] * n + t[13]) * r, this.z = (t[2] * e + t[6] * i + t[10] * n + t[14]) * r, this
    }, applyQuaternion: function (t) {
        var e = this.x, i = this.y, n = this.z, r = t.x, o = t.y, a = t.z;
        t = t.w;
        var s = t * e + o * n - a * i, l = t * i + a * e - r * n, h = t * n + r * i - o * e, e = -r * e - o * i - a * n;
        return this.x = s * t + e * -r + l * -a - h * -o, this.y = l * t + e * -o + h * -r - s * -a, this.z = h * t + e * -a + s * -o - l * -r, this
    }, project: function () {
        var t;
        return function (e) {
            return void 0 === t && (t = new THREE.Matrix4), t.multiplyMatrices(e.projectionMatrix, t.getInverse(e.matrixWorld)), this.applyProjection(t)
        }
    }(), unproject: function () {
        var t;
        return function (e) {
            return void 0 === t && (t = new THREE.Matrix4), t.multiplyMatrices(e.matrixWorld, t.getInverse(e.projectionMatrix)), this.applyProjection(t)
        }
    }(), transformDirection: function (t) {
        var e = this.x, i = this.y, n = this.z;
        return t = t.elements, this.x = t[0] * e + t[4] * i + t[8] * n, this.y = t[1] * e + t[5] * i + t[9] * n, this.z = t[2] * e + t[6] * i + t[10] * n, this.normalize()
    }, divide: function (t) {
        return this.x /= t.x, this.y /= t.y, this.z /= t.z, this
    }, divideScalar: function (t) {
        return this.multiplyScalar(1 / t)
    }, min: function (t) {
        return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this
    }, max: function (t) {
        return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z), this
    }, clamp: function (t, e) {
        return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this.z = Math.max(t.z, Math.min(e.z, this.z)), this
    }, clampScalar: function () {
        var t, e;
        return function (i, n) {
            return void 0 === t && (t = new THREE.Vector3, e = new THREE.Vector3), t.set(i, i, i), e.set(n, n, n), this.clamp(t, e)
        }
    }(), clampLength: function (t, e) {
        var i = this.length();
        return this.multiplyScalar(Math.max(t, Math.min(e, i)) / i)
    }, floor: function () {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this
    }, ceil: function () {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this
    }, round: function () {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this
    }, roundToZero: function () {
        return this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x), this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y), this.z = 0 > this.z ? Math.ceil(this.z) : Math.floor(this.z), this
    }, negate: function () {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this
    }, dot: function (t) {
        return this.x * t.x + this.y * t.y + this.z * t.z
    }, lengthSq: function () {
        return this.x * this.x + this.y * this.y + this.z * this.z
    }, length: function () {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
    }, lengthManhattan: function () {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
    }, normalize: function () {
        return this.divideScalar(this.length())
    }, setLength: function (t) {
        return this.multiplyScalar(t / this.length())
    }, lerp: function (t, e) {
        return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this
    }, lerpVectors: function (t, e, i) {
        return this.subVectors(e, t).multiplyScalar(i).add(t)
    }, cross: function (t, e) {
        if (void 0 !== e) return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(t, e);
        var i = this.x, n = this.y, r = this.z;
        return this.x = n * t.z - r * t.y, this.y = r * t.x - i * t.z, this.z = i * t.y - n * t.x, this
    }, crossVectors: function (t, e) {
        var i = t.x, n = t.y, r = t.z, o = e.x, a = e.y, s = e.z;
        return this.x = n * s - r * a, this.y = r * o - i * s, this.z = i * a - n * o, this
    }, projectOnVector: function (t) {
        var e = t.dot(this) / t.lengthSq();
        return this.copy(t).multiplyScalar(e)
    }, projectOnPlane: function () {
        var t;
        return function (e) {
            return void 0 === t && (t = new THREE.Vector3), t.copy(this).projectOnVector(e), this.sub(t)
        }
    }(), reflect: function () {
        var t;
        return function (e) {
            return void 0 === t && (t = new THREE.Vector3), this.sub(t.copy(e).multiplyScalar(2 * this.dot(e)))
        }
    }(), angleTo: function (t) {
        return t = this.dot(t) / Math.sqrt(this.lengthSq() * t.lengthSq()), Math.acos(THREE.Math.clamp(t, -1, 1))
    }, distanceTo: function (t) {
        return Math.sqrt(this.distanceToSquared(t))
    }, distanceToSquared: function (t) {
        var e = this.x - t.x, i = this.y - t.y;
        return t = this.z - t.z, e * e + i * i + t * t
    }, distanceToManhattan: function (t) {
        return Math.abs(this.x - t.x) + Math.abs(this.y - t.y) + Math.abs(this.z - t.z)
    }, setFromSpherical: function (t) {
        var e = Math.sin(t.phi) * t.radius;
        return this.x = e * Math.sin(t.theta), this.y = Math.cos(t.phi) * t.radius, this.z = e * Math.cos(t.theta), this
    }, setFromMatrixPosition: function (t) {
        return this.setFromMatrixColumn(t, 3)
    }, setFromMatrixScale: function (t) {
        var e = this.setFromMatrixColumn(t, 0).length(), i = this.setFromMatrixColumn(t, 1).length();
        return t = this.setFromMatrixColumn(t, 2).length(), this.x = e, this.y = i, this.z = t, this
    }, setFromMatrixColumn: function (t, e) {
        if ("number" == typeof t) {
            console.warn("THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).");
            var i = t;
            t = e, e = i
        }
        return this.fromArray(t.elements, 4 * e)
    }, equals: function (t) {
        return t.x === this.x && t.y === this.y && t.z === this.z
    }, fromArray: function (t, e) {
        return void 0 === e && (e = 0), this.x = t[e], this.y = t[e + 1], this.z = t[e + 2], this
    }, toArray: function (t, e) {
        return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this.x, t[e + 1] = this.y, t[e + 2] = this.z, t
    }, fromAttribute: function (t, e, i) {
        return void 0 === i && (i = 0), e = e * t.itemSize + i, this.x = t.array[e], this.y = t.array[e + 1], this.z = t.array[e + 2], this
    }
}, THREE.Vector4 = function (t, e, i, n) {
    this.x = t || 0, this.y = e || 0, this.z = i || 0, this.w = void 0 !== n ? n : 1
}, THREE.Vector4.prototype = {
    constructor: THREE.Vector4, set: function (t, e, i, n) {
        return this.x = t, this.y = e, this.z = i, this.w = n, this
    }, setScalar: function (t) {
        return this.w = this.z = this.y = this.x = t, this
    }, setX: function (t) {
        return this.x = t, this
    }, setY: function (t) {
        return this.y = t, this
    }, setZ: function (t) {
        return this.z = t, this
    }, setW: function (t) {
        return this.w = t, this
    }, setComponent: function (t, e) {
        switch (t) {
            case 0:
                this.x = e;
                break;
            case 1:
                this.y = e;
                break;
            case 2:
                this.z = e;
                break;
            case 3:
                this.w = e;
                break;
            default:
                throw Error("index is out of range: " + t)
        }
    }, getComponent: function (t) {
        switch (t) {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw Error("index is out of range: " + t)
        }
    }, clone: function () {
        return new this.constructor(this.x, this.y, this.z, this.w)
    }, copy: function (t) {
        return this.x = t.x, this.y = t.y, this.z = t.z, this.w = void 0 !== t.w ? t.w : 1, this
    }, add: function (t, e) {
        return void 0 !== e ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(t, e)) : (this.x += t.x, this.y += t.y, this.z += t.z, this.w += t.w, this)
    }, addScalar: function (t) {
        return this.x += t, this.y += t, this.z += t, this.w += t, this
    }, addVectors: function (t, e) {
        return this.x = t.x + e.x, this.y = t.y + e.y, this.z = t.z + e.z, this.w = t.w + e.w, this
    }, addScaledVector: function (t, e) {
        return this.x += t.x * e, this.y += t.y * e, this.z += t.z * e, this.w += t.w * e, this
    }, sub: function (t, e) {
        return void 0 !== e ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(t, e)) : (this.x -= t.x, this.y -= t.y, this.z -= t.z, this.w -= t.w, this)
    }, subScalar: function (t) {
        return this.x -= t, this.y -= t, this.z -= t, this.w -= t, this
    }, subVectors: function (t, e) {
        return this.x = t.x - e.x, this.y = t.y - e.y, this.z = t.z - e.z, this.w = t.w - e.w, this
    }, multiplyScalar: function (t) {
        return isFinite(t) ? (this.x *= t, this.y *= t, this.z *= t, this.w *= t) : this.w = this.z = this.y = this.x = 0, this
    }, applyMatrix4: function (t) {
        var e = this.x, i = this.y, n = this.z, r = this.w;
        return t = t.elements, this.x = t[0] * e + t[4] * i + t[8] * n + t[12] * r, this.y = t[1] * e + t[5] * i + t[9] * n + t[13] * r, this.z = t[2] * e + t[6] * i + t[10] * n + t[14] * r, this.w = t[3] * e + t[7] * i + t[11] * n + t[15] * r, this
    }, divideScalar: function (t) {
        return this.multiplyScalar(1 / t)
    }, setAxisAngleFromQuaternion: function (t) {
        this.w = 2 * Math.acos(t.w);
        var e = Math.sqrt(1 - t.w * t.w);
        return 1e-4 > e ? (this.x = 1, this.z = this.y = 0) : (this.x = t.x / e, this.y = t.y / e, this.z = t.z / e), this
    }, setAxisAngleFromRotationMatrix: function (t) {
        var e, i, n;
        t = t.elements;
        var r = t[0];
        n = t[4];
        var o = t[8], a = t[1], s = t[5], l = t[9];
        i = t[2], e = t[6];
        var h = t[10];
        return .01 > Math.abs(n - a) && .01 > Math.abs(o - i) && .01 > Math.abs(l - e) ? .1 > Math.abs(n + a) && .1 > Math.abs(o + i) && .1 > Math.abs(l + e) && .1 > Math.abs(r + s + h - 3) ? (this.set(1, 0, 0, 0), this) : (t = Math.PI, r = (r + 1) / 2, s = (s + 1) / 2, h = (h + 1) / 2, n = (n + a) / 4, o = (o + i) / 4, l = (l + e) / 4, r > s && r > h ? .01 > r ? (e = 0, n = i = .707106781) : (e = Math.sqrt(r), i = n / e, n = o / e) : s > h ? .01 > s ? (e = .707106781, i = 0, n = .707106781) : (i = Math.sqrt(s), e = n / i, n = l / i) : .01 > h ? (i = e = .707106781, n = 0) : (n = Math.sqrt(h), e = o / n, i = l / n), this.set(e, i, n, t), this) : (t = Math.sqrt((e - l) * (e - l) + (o - i) * (o - i) + (a - n) * (a - n)), .001 > Math.abs(t) && (t = 1), this.x = (e - l) / t, this.y = (o - i) / t, this.z = (a - n) / t, this.w = Math.acos((r + s + h - 1) / 2), this)
    }, min: function (t) {
        return this.x = Math.min(this.x, t.x), this.y = Math.min(this.y, t.y), this.z = Math.min(this.z, t.z), this.w = Math.min(this.w, t.w), this
    }, max: function (t) {
        return this.x = Math.max(this.x, t.x), this.y = Math.max(this.y, t.y), this.z = Math.max(this.z, t.z),
            this.w = Math.max(this.w, t.w), this
    }, clamp: function (t, e) {
        return this.x = Math.max(t.x, Math.min(e.x, this.x)), this.y = Math.max(t.y, Math.min(e.y, this.y)), this.z = Math.max(t.z, Math.min(e.z, this.z)), this.w = Math.max(t.w, Math.min(e.w, this.w)), this
    }, clampScalar: function () {
        var t, e;
        return function (i, n) {
            return void 0 === t && (t = new THREE.Vector4, e = new THREE.Vector4), t.set(i, i, i, i), e.set(n, n, n, n), this.clamp(t, e)
        }
    }(), floor: function () {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this
    }, ceil: function () {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this
    }, round: function () {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this
    }, roundToZero: function () {
        return this.x = 0 > this.x ? Math.ceil(this.x) : Math.floor(this.x), this.y = 0 > this.y ? Math.ceil(this.y) : Math.floor(this.y), this.z = 0 > this.z ? Math.ceil(this.z) : Math.floor(this.z), this.w = 0 > this.w ? Math.ceil(this.w) : Math.floor(this.w), this
    }, negate: function () {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this
    }, dot: function (t) {
        return this.x * t.x + this.y * t.y + this.z * t.z + this.w * t.w
    }, lengthSq: function () {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    }, length: function () {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
    }, lengthManhattan: function () {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
    }, normalize: function () {
        return this.divideScalar(this.length())
    }, setLength: function (t) {
        return this.multiplyScalar(t / this.length())
    }, lerp: function (t, e) {
        return this.x += (t.x - this.x) * e, this.y += (t.y - this.y) * e, this.z += (t.z - this.z) * e, this.w += (t.w - this.w) * e, this
    }, lerpVectors: function (t, e, i) {
        return this.subVectors(e, t).multiplyScalar(i).add(t)
    }, equals: function (t) {
        return t.x === this.x && t.y === this.y && t.z === this.z && t.w === this.w
    }, fromArray: function (t, e) {
        return void 0 === e && (e = 0), this.x = t[e], this.y = t[e + 1], this.z = t[e + 2], this.w = t[e + 3], this
    }, toArray: function (t, e) {
        return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this.x, t[e + 1] = this.y, t[e + 2] = this.z, t[e + 3] = this.w, t
    }, fromAttribute: function (t, e, i) {
        return void 0 === i && (i = 0), e = e * t.itemSize + i, this.x = t.array[e], this.y = t.array[e + 1], this.z = t.array[e + 2], this.w = t.array[e + 3], this
    }
}, THREE.Euler = function (t, e, i, n) {
    this._x = t || 0, this._y = e || 0, this._z = i || 0, this._order = n || THREE.Euler.DefaultOrder
}, THREE.Euler.RotationOrders = "XYZ YZX ZXY XZY YXZ ZYX".split(" "), THREE.Euler.DefaultOrder = "XYZ", THREE.Euler.prototype = {
    constructor: THREE.Euler,
    get x() {
        return this._x
    },
    set x(t) {
        this._x = t, this.onChangeCallback()
    },
    get y() {
        return this._y
    },
    set y(t) {
        this._y = t, this.onChangeCallback()
    },
    get z() {
        return this._z
    },
    set z(t) {
        this._z = t, this.onChangeCallback()
    },
    get order() {
        return this._order
    },
    set order(t) {
        this._order = t, this.onChangeCallback()
    },
    set: function (t, e, i, n) {
        return this._x = t, this._y = e, this._z = i, this._order = n || this._order, this.onChangeCallback(), this
    },
    clone: function () {
        return new this.constructor(this._x, this._y, this._z, this._order)
    },
    copy: function (t) {
        return this._x = t._x, this._y = t._y, this._z = t._z, this._order = t._order, this.onChangeCallback(), this
    },
    setFromRotationMatrix: function (t, e, i) {
        var n = THREE.Math.clamp, r = t.elements;
        t = r[0];
        var o = r[4], a = r[8], s = r[1], l = r[5], h = r[9], u = r[2], c = r[6], r = r[10];
        return e = e || this._order, "XYZ" === e ? (this._y = Math.asin(n(a, -1, 1)), .99999 > Math.abs(a) ? (this._x = Math.atan2(-h, r), this._z = Math.atan2(-o, t)) : (this._x = Math.atan2(c, l), this._z = 0)) : "YXZ" === e ? (this._x = Math.asin(-n(h, -1, 1)), .99999 > Math.abs(h) ? (this._y = Math.atan2(a, r), this._z = Math.atan2(s, l)) : (this._y = Math.atan2(-u, t), this._z = 0)) : "ZXY" === e ? (this._x = Math.asin(n(c, -1, 1)), .99999 > Math.abs(c) ? (this._y = Math.atan2(-u, r), this._z = Math.atan2(-o, l)) : (this._y = 0, this._z = Math.atan2(s, t))) : "ZYX" === e ? (this._y = Math.asin(-n(u, -1, 1)), .99999 > Math.abs(u) ? (this._x = Math.atan2(c, r), this._z = Math.atan2(s, t)) : (this._x = 0, this._z = Math.atan2(-o, l))) : "YZX" === e ? (this._z = Math.asin(n(s, -1, 1)), .99999 > Math.abs(s) ? (this._x = Math.atan2(-h, l), this._y = Math.atan2(-u, t)) : (this._x = 0, this._y = Math.atan2(a, r))) : "XZY" === e ? (this._z = Math.asin(-n(o, -1, 1)), .99999 > Math.abs(o) ? (this._x = Math.atan2(c, l), this._y = Math.atan2(a, t)) : (this._x = Math.atan2(-h, r), this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + e), this._order = e, !1 !== i && this.onChangeCallback(), this
    },
    setFromQuaternion: function () {
        var t;
        return function (e, i, n) {
            return void 0 === t && (t = new THREE.Matrix4), t.makeRotationFromQuaternion(e), this.setFromRotationMatrix(t, i, n)
        }
    }(),
    setFromVector3: function (t, e) {
        return this.set(t.x, t.y, t.z, e || this._order)
    },
    reorder: function () {
        var t = new THREE.Quaternion;
        return function (e) {
            return t.setFromEuler(this), this.setFromQuaternion(t, e)
        }
    }(),
    equals: function (t) {
        return t._x === this._x && t._y === this._y && t._z === this._z && t._order === this._order
    },
    fromArray: function (t) {
        return this._x = t[0], this._y = t[1], this._z = t[2], void 0 !== t[3] && (this._order = t[3]), this.onChangeCallback(), this
    },
    toArray: function (t, e) {
        return void 0 === t && (t = []), void 0 === e && (e = 0), t[e] = this._x, t[e + 1] = this._y, t[e + 2] = this._z, t[e + 3] = this._order, t
    },
    toVector3: function (t) {
        return t ? t.set(this._x, this._y, this._z) : new THREE.Vector3(this._x, this._y, this._z)
    },
    onChange: function (t) {
        return this.onChangeCallback = t, this
    },
    onChangeCallback: function () {
    }
}, THREE.Line3 = function (t, e) {
    this.start = void 0 !== t ? t : new THREE.Vector3, this.end = void 0 !== e ? e : new THREE.Vector3
}, THREE.Line3.prototype = {
    constructor: THREE.Line3, set: function (t, e) {
        return this.start.copy(t), this.end.copy(e), this
    }, clone: function () {
        return (new this.constructor).copy(this)
    }, copy: function (t) {
        return this.start.copy(t.start), this.end.copy(t.end), this
    }, center: function (t) {
        return (t || new THREE.Vector3).addVectors(this.start, this.end).multiplyScalar(.5)
    }, delta: function (t) {
        return (t || new THREE.Vector3).subVectors(this.end, this.start)
    }, distanceSq: function () {
        return this.start.distanceToSquared(this.end)
    }, distance: function () {
        return this.start.distanceTo(this.end)
    }, at: function (t, e) {
        var i = e || new THREE.Vector3;
        return this.delta(i).multiplyScalar(t).add(this.start)
    }, closestPointToPointParameter: function () {
        var t = new THREE.Vector3, e = new THREE.Vector3;
        return function (i, n) {
            t.subVectors(i, this.start), e.subVectors(this.end, this.start);
            var r = e.dot(e), r = e.dot(t) / r;
            return n && (r = THREE.Math.clamp(r, 0, 1)), r
        }
    }(), closestPointToPoint: function (t, e, i) {
        return t = this.closestPointToPointParameter(t, e), i = i || new THREE.Vector3, this.delta(i).multiplyScalar(t).add(this.start)
    }, applyMatrix4: function (t) {
        return this.start.applyMatrix4(t), this.end.applyMatrix4(t), this
    }, equals: function (t) {
        return t.start.equals(this.start) && t.end.equals(this.end)
    }
}, THREE.Box2 = function (t, e) {
    this.min = void 0 !== t ? t : new THREE.Vector2(1 / 0, 1 / 0), this.max = void 0 !== e ? e : new THREE.Vector2(-(1 / 0), -(1 / 0))
}, THREE.Box2.prototype = {
    constructor: THREE.Box2, set: function (t, e) {
        return this.min.copy(t), this.max.copy(e), this
    }, setFromPoints: function (t) {
        this.makeEmpty();
        for (var e = 0, i = t.length; i > e; e++) this.expandByPoint(t[e]);
        return this
    }, setFromCenterAndSize: function () {
        var t = new THREE.Vector2;
        return function (e, i) {
            var n = t.copy(i).multiplyScalar(.5);
            return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
        }
    }(), clone: function () {
        return (new this.constructor).copy(this)
    }, copy: function (t) {
        return this.min.copy(t.min), this.max.copy(t.max), this
    }, makeEmpty: function () {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -(1 / 0), this
    }, isEmpty: function () {
        return this.max.x < this.min.x || this.max.y < this.min.y
    }, center: function (t) {
        return (t || new THREE.Vector2).addVectors(this.min, this.max).multiplyScalar(.5)
    }, size: function (t) {
        return (t || new THREE.Vector2).subVectors(this.max, this.min)
    }, expandByPoint: function (t) {
        return this.min.min(t), this.max.max(t), this
    }, expandByVector: function (t) {
        return this.min.sub(t), this.max.add(t), this
    }, expandByScalar: function (t) {
        return this.min.addScalar(-t), this.max.addScalar(t), this
    }, containsPoint: function (t) {
        return t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y ? !1 : !0
    }, containsBox: function (t) {
        return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y ? !0 : !1
    }, getParameter: function (t, e) {
        return (e || new THREE.Vector2).set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y))
    }, intersectsBox: function (t) {
        return t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y ? !1 : !0
    }, clampPoint: function (t, e) {
        return (e || new THREE.Vector2).copy(t).clamp(this.min, this.max)
    }, distanceToPoint: function () {
        var t = new THREE.Vector2;
        return function (e) {
            return t.copy(e).clamp(this.min, this.max).sub(e).length()
        }
    }(), intersect: function (t) {
        return this.min.max(t.min), this.max.min(t.max), this
    }, union: function (t) {
        return this.min.min(t.min), this.max.max(t.max), this
    }, translate: function (t) {
        return this.min.add(t), this.max.add(t), this
    }, equals: function (t) {
        return t.min.equals(this.min) && t.max.equals(this.max)
    }
}, THREE.Box3 = function (t, e) {
    this.min = void 0 !== t ? t : new THREE.Vector3(1 / 0, 1 / 0, 1 / 0), this.max = void 0 !== e ? e : new THREE.Vector3(-(1 / 0), -(1 / 0), -(1 / 0))
}, THREE.Box3.prototype = {
    constructor: THREE.Box3, set: function (t, e) {
        return this.min.copy(t), this.max.copy(e), this
    }, setFromArray: function (t) {
        for (var e = 1 / 0, i = 1 / 0, n = 1 / 0, r = -(1 / 0), o = -(1 / 0), a = -(1 / 0), s = 0, l = t.length; l > s; s += 3) {
            var h = t[s], u = t[s + 1], c = t[s + 2];
            e > h && (e = h), i > u && (i = u), n > c && (n = c), h > r && (r = h), u > o && (o = u), c > a && (a = c)
        }
        this.min.set(e, i, n), this.max.set(r, o, a)
    }, setFromPoints: function (t) {
        this.makeEmpty();
        for (var e = 0, i = t.length; i > e; e++) this.expandByPoint(t[e]);
        return this
    }, setFromCenterAndSize: function () {
        var t = new THREE.Vector3;
        return function (e, i) {
            var n = t.copy(i).multiplyScalar(.5);
            return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
        }
    }(), setFromObject: function () {
        var t = new THREE.Vector3;
        return function (e) {
            var i = this;
            return e.updateMatrixWorld(!0), this.makeEmpty(), e.traverse(function (e) {
                var n = e.geometry;
                if (void 0 !== n) if (n instanceof THREE.Geometry) for (var n = n.vertices, r = 0, o = n.length; o > r; r++) t.copy(n[r]), t.applyMatrix4(e.matrixWorld), i.expandByPoint(t); else if (n instanceof THREE.BufferGeometry && (o = n.attributes.position, void 0 !== o)) {
                    var a;
                    for (o instanceof THREE.InterleavedBufferAttribute ? (n = o.data.array, r = o.offset, a = o.data.stride) : (n = o.array, r = 0, a = 3), o = n.length; o > r; r += a) t.fromArray(n, r), t.applyMatrix4(e.matrixWorld), i.expandByPoint(t)
                }
            }), this
        }
    }(), clone: function () {
        return (new this.constructor).copy(this)
    }, copy: function (t) {
        return this.min.copy(t.min), this.max.copy(t.max), this
    }, makeEmpty: function () {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -(1 / 0), this
    }, isEmpty: function () {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
    }, center: function (t) {
        return (t || new THREE.Vector3).addVectors(this.min, this.max).multiplyScalar(.5)
    }, size: function (t) {
        return (t || new THREE.Vector3).subVectors(this.max, this.min)
    }, expandByPoint: function (t) {
        return this.min.min(t), this.max.max(t), this
    }, expandByVector: function (t) {
        return this.min.sub(t), this.max.add(t), this
    }, expandByScalar: function (t) {
        return this.min.addScalar(-t), this.max.addScalar(t), this
    }, containsPoint: function (t) {
        return t.x < this.min.x || t.x > this.max.x || t.y < this.min.y || t.y > this.max.y || t.z < this.min.z || t.z > this.max.z ? !1 : !0
    }, containsBox: function (t) {
        return this.min.x <= t.min.x && t.max.x <= this.max.x && this.min.y <= t.min.y && t.max.y <= this.max.y && this.min.z <= t.min.z && t.max.z <= this.max.z ? !0 : !1
    }, getParameter: function (t, e) {
        return (e || new THREE.Vector3).set((t.x - this.min.x) / (this.max.x - this.min.x), (t.y - this.min.y) / (this.max.y - this.min.y), (t.z - this.min.z) / (this.max.z - this.min.z))
    }, intersectsBox: function (t) {
        return t.max.x < this.min.x || t.min.x > this.max.x || t.max.y < this.min.y || t.min.y > this.max.y || t.max.z < this.min.z || t.min.z > this.max.z ? !1 : !0
    }, intersectsSphere: function () {
        var t;
        return function (e) {
            return void 0 === t && (t = new THREE.Vector3), this.clampPoint(e.center, t), t.distanceToSquared(e.center) <= e.radius * e.radius
        }
    }(), intersectsPlane: function (t) {
        var e, i;
        return 0 < t.normal.x ? (e = t.normal.x * this.min.x, i = t.normal.x * this.max.x) : (e = t.normal.x * this.max.x, i = t.normal.x * this.min.x), 0 < t.normal.y ? (e += t.normal.y * this.min.y, i += t.normal.y * this.max.y) : (e += t.normal.y * this.max.y, i += t.normal.y * this.min.y), 0 < t.normal.z ? (e += t.normal.z * this.min.z, i += t.normal.z * this.max.z) : (e += t.normal.z * this.max.z, i += t.normal.z * this.min.z), e <= t.constant && i >= t.constant
    }, clampPoint: function (t, e) {
        return (e || new THREE.Vector3).copy(t).clamp(this.min, this.max)
    }, distanceToPoint: function () {
        var t = new THREE.Vector3;
        return function (e) {
            return t.copy(e).clamp(this.min, this.max).sub(e).length()
        }
    }(), getBoundingSphere: function () {
        var t = new THREE.Vector3;
        return function (e) {
            return e = e || new THREE.Sphere, e.center = this.center(), e.radius = .5 * this.size(t).length(), e
        }
    }(), intersect: function (t) {
        return this.min.max(t.min), this.max.min(t.max), this.isEmpty() && this.makeEmpty(), this
    }, union: function (t) {
        return this.min.min(t.min), this.max.max(t.max), this
    }, applyMatrix4: function () {
        var t = [new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3, new THREE.Vector3];
        return function (e) {
            return this.isEmpty() ? this : (t[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), t[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), t[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), t[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), t[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), t[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), t[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), t[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(t), this)
        }
    }(), translate: function (t) {
        return this.min.add(t), this.max.add(t), this
    }, equals: function (t) {
        return t.min.equals(this.min) && t.max.equals(this.max)
    }
}, THREE.Matrix3 = function () {
    this.elements = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]), 0 < arguments.length && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
}, THREE.Matrix3.prototype = {
    constructor: THREE.Matrix3, set: function (t, e, i, n, r, o, a, s, l) {
        var h = this.elements;
        return h[0] = t, h[1] = n, h[2] = a, h[3] = e, h[4] = r, h[5] = s, h[6] = i, h[7] = o, h[8] = l, this
    }, identity: function () {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this
    }, clone: function () {
        return (new this.constructor).fromArray(this.elements)
    }, copy: function (t) {
        return t = t.elements, this.set(t[0], t[3], t[6], t[1], t[4], t[7], t[2], t[5], t[8]), this
    }, setFromMatrix4: function (t) {
        return t = t.elements, this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this
    }, applyToVector3Array: function () {
        var t;
        return function (e, i, n) {
            void 0 === t && (t = new THREE.Vector3), void 0 === i && (i = 0), void 0 === n && (n = e.length);
            for (var r = 0; n > r; r += 3, i += 3) t.fromArray(e, i), t.applyMatrix3(this), t.toArray(e, i);
            return e
        }
    }(), applyToBuffer: function () {
        var t;
        return function (e, i, n) {
            void 0 === t && (t = new THREE.Vector3), void 0 === i && (i = 0), void 0 === n && (n = e.length / e.itemSize);
            for (var r = 0; n > r; r++, i++) t.x = e.getX(i), t.y = e.getY(i), t.z = e.getZ(i), t.applyMatrix3(this), e.setXYZ(t.x, t.y, t.z);
            return e
        }
    }(), multiplyScalar: function (t) {
        var e = this.elements;
        return e[0] *= t, e[3] *= t, e[6] *= t, e[1] *= t, e[4] *= t, e[7] *= t, e[2] *= t, e[5] *= t, e[8] *= t, this
    }, determinant: function () {
        var t = this.elements, e = t[0], i = t[1], n = t[2], r = t[3], o = t[4], a = t[5], s = t[6], l = t[7], t = t[8];
        return e * o * t - e * a * l - i * r * t + i * a * s + n * r * l - n * o * s
    }, getInverse: function (t, e) {
        t instanceof THREE.Matrix4 && console.error("THREE.Matrix3.getInverse no longer takes a Matrix4 argument.");
        var i = t.elements, n = this.elements, r = i[0], o = i[1], a = i[2], s = i[3], l = i[4], h = i[5], u = i[6], c = i[7], i = i[8],
            p = i * l - h * c, d = h * u - i * s, f = c * s - l * u, m = r * p + o * d + a * f;
        if (0 === m) {
            if (e) throw Error("THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0");
            return console.warn("THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0"), this.identity()
        }
        return m = 1 / m, n[0] = p * m, n[1] = (a * c - i * o) * m, n[2] = (h * o - a * l) * m, n[3] = d * m, n[4] = (i * r - a * u) * m, n[5] = (a * s - h * r) * m, n[6] = f * m, n[7] = (o * u - c * r) * m, n[8] = (l * r - o * s) * m, this
    }, transpose: function () {
        var t, e = this.elements;
        return t = e[1], e[1] = e[3], e[3] = t, t = e[2], e[2] = e[6], e[6] = t, t = e[5], e[5] = e[7], e[7] = t, this
    }, flattenToArrayOffset: function (t, e) {
        return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."), this.toArray(t, e)
    }, getNormalMatrix: function (t) {
        return this.setFromMatrix4(t).getInverse(this).transpose()
    }, transposeIntoArray: function (t) {
        var e = this.elements;
        return t[0] = e[0], t[1] = e[3], t[2] = e[6], t[3] = e[1], t[4] = e[4], t[5] = e[7], t[6] = e[2], t[7] = e[5], t[8] = e[8], this
    }, fromArray: function (t) {
        return this.elements.set(t), this
    }, toArray: function (t, e) {
        void 0 === t && (t = []), void 0 === e && (e = 0);
        var i = this.elements;
        return t[e] = i[0], t[e + 1] = i[1], t[e + 2] = i[2], t[e + 3] = i[3], t[e + 4] = i[4], t[e + 5] = i[5], t[e + 6] = i[6], t[e + 7] = i[7], t[e + 8] = i[8], t
    }
}, THREE.Matrix4 = function () {
    this.elements = new Float32Array([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), 0 < arguments.length && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
}, THREE.Matrix4.prototype = {
    constructor: THREE.Matrix4, set: function (t, e, i, n, r, o, a, s, l, h, u, c, p, d, f, m) {
        var g = this.elements;
        return g[0] = t, g[4] = e, g[8] = i, g[12] = n, g[1] = r, g[5] = o, g[9] = a, g[13] = s, g[2] = l, g[6] = h, g[10] = u, g[14] = c, g[3] = p, g[7] = d, g[11] = f, g[15] = m, this
    }, identity: function () {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
    }, clone: function () {
        return (new THREE.Matrix4).fromArray(this.elements)
    }, copy: function (t) {
        return this.elements.set(t.elements), this
    }, copyPosition: function (t) {
        var e = this.elements;
        return t = t.elements, e[12] = t[12], e[13] = t[13], e[14] = t[14], this
    }, extractBasis: function (t, e, i) {
        return t.setFromMatrixColumn(this, 0), e.setFromMatrixColumn(this, 1), i.setFromMatrixColumn(this, 2), this
    }, makeBasis: function (t, e, i) {
        return this.set(t.x, e.x, i.x, 0, t.y, e.y, i.y, 0, t.z, e.z, i.z, 0, 0, 0, 0, 1), this
    }, extractRotation: function () {
        var t;
        return function (e) {
            void 0 === t && (t = new THREE.Vector3);
            var i = this.elements, n = e.elements, r = 1 / t.setFromMatrixColumn(e, 0).length(),
                o = 1 / t.setFromMatrixColumn(e, 1).length();
            return e = 1 / t.setFromMatrixColumn(e, 2).length(), i[0] = n[0] * r, i[1] = n[1] * r, i[2] = n[2] * r, i[4] = n[4] * o, i[5] = n[5] * o, i[6] = n[6] * o, i[8] = n[8] * e, i[9] = n[9] * e, i[10] = n[10] * e, this
        }
    }(), makeRotationFromEuler: function (t) {
        !1 == t instanceof THREE.Euler && console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var e = this.elements, i = t.x, n = t.y, r = t.z, o = Math.cos(i), i = Math.sin(i), a = Math.cos(n), n = Math.sin(n),
            s = Math.cos(r), r = Math.sin(r);
        if ("XYZ" === t.order) {
            t = o * s;
            var l = o * r, h = i * s, u = i * r;
            e[0] = a * s, e[4] = -a * r, e[8] = n, e[1] = l + h * n, e[5] = t - u * n, e[9] = -i * a, e[2] = u - t * n, e[6] = h + l * n, e[10] = o * a
        } else "YXZ" === t.order ? (t = a * s, l = a * r, h = n * s, u = n * r, e[0] = t + u * i, e[4] = h * i - l, e[8] = o * n, e[1] = o * r, e[5] = o * s, e[9] = -i, e[2] = l * i - h, e[6] = u + t * i, e[10] = o * a) : "ZXY" === t.order ? (t = a * s, l = a * r, h = n * s, u = n * r, e[0] = t - u * i, e[4] = -o * r, e[8] = h + l * i, e[1] = l + h * i, e[5] = o * s, e[9] = u - t * i, e[2] = -o * n, e[6] = i, e[10] = o * a) : "ZYX" === t.order ? (t = o * s, l = o * r, h = i * s, u = i * r, e[0] = a * s, e[4] = h * n - l, e[8] = t * n + u, e[1] = a * r, e[5] = u * n + t, e[9] = l * n - h, e[2] = -n, e[6] = i * a, e[10] = o * a) : "YZX" === t.order ? (t = o * a, l = o * n, h = i * a, u = i * n, e[0] = a * s, e[4] = u - t * r, e[8] = h * r + l, e[1] = r, e[5] = o * s, e[9] = -i * s, e[2] = -n * s, e[6] = l * r + h, e[10] = t - u * r) : "XZY" === t.order && (t = o * a, l = o * n, h = i * a, u = i * n, e[0] = a * s, e[4] = -r, e[8] = n * s, e[1] = t * r + u, e[5] = o * s, e[9] = l * r - h, e[2] = h * r - l, e[6] = i * s, e[10] = u * r + t);
        return e[3] = 0, e[7] = 0, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this
    }, makeRotationFromQuaternion: function (t) {
        var e = this.elements, i = t.x, n = t.y, r = t.z, o = t.w, a = i + i, s = n + n, l = r + r;
        t = i * a;
        var h = i * s, i = i * l, u = n * s, n = n * l, r = r * l, a = o * a, s = o * s, o = o * l;
        return e[0] = 1 - (u + r), e[4] = h - o, e[8] = i + s, e[1] = h + o, e[5] = 1 - (t + r), e[9] = n - a, e[2] = i - s, e[6] = n + a, e[10] = 1 - (t + u), e[3] = 0, e[7] = 0, e[11] = 0, e[12] = 0, e[13] = 0, e[14] = 0, e[15] = 1, this
    }, lookAt: function () {
        var t, e, i;
        return function (n, r, o) {
            void 0 === t && (t = new THREE.Vector3, e = new THREE.Vector3, i = new THREE.Vector3);
            var a = this.elements;
            return i.subVectors(n, r).normalize(), 0 === i.lengthSq() && (i.z = 1), t.crossVectors(o, i).normalize(), 0 === t.lengthSq() && (i.z += 1e-4, t.crossVectors(o, i).normalize()), e.crossVectors(i, t), a[0] = t.x, a[4] = e.x, a[8] = i.x, a[1] = t.y, a[5] = e.y, a[9] = i.y, a[2] = t.z, a[6] = e.z, a[10] = i.z, this
        }
    }(), multiply: function (t, e) {
        return void 0 !== e ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(t, e)) : this.multiplyMatrices(this, t)
    }, premultiply: function (t) {
        return this.multiplyMatrices(t, this)
    }, multiplyMatrices: function (t, e) {
        var i = t.elements, n = e.elements, r = this.elements, o = i[0], a = i[4], s = i[8], l = i[12], h = i[1], u = i[5], c = i[9],
            p = i[13], d = i[2], f = i[6], m = i[10], g = i[14], E = i[3], v = i[7], y = i[11], i = i[15], T = n[0], _ = n[4], x = n[8],
            b = n[12], R = n[1], w = n[5], H = n[9], M = n[13], S = n[2], C = n[6], A = n[10], P = n[14], L = n[3], O = n[7], D = n[11],
            n = n[15];
        return r[0] = o * T + a * R + s * S + l * L, r[4] = o * _ + a * w + s * C + l * O, r[8] = o * x + a * H + s * A + l * D, r[12] = o * b + a * M + s * P + l * n, r[1] = h * T + u * R + c * S + p * L, r[5] = h * _ + u * w + c * C + p * O, r[9] = h * x + u * H + c * A + p * D, r[13] = h * b + u * M + c * P + p * n, r[2] = d * T + f * R + m * S + g * L, r[6] = d * _ + f * w + m * C + g * O, r[10] = d * x + f * H + m * A + g * D, r[14] = d * b + f * M + m * P + g * n, r[3] = E * T + v * R + y * S + i * L, r[7] = E * _ + v * w + y * C + i * O, r[11] = E * x + v * H + y * A + i * D, r[15] = E * b + v * M + y * P + i * n, this
    }, multiplyToArray: function (t, e, i) {
        var n = this.elements;
        return this.multiplyMatrices(t, e), i[0] = n[0], i[1] = n[1], i[2] = n[2], i[3] = n[3], i[4] = n[4], i[5] = n[5], i[6] = n[6], i[7] = n[7], i[8] = n[8], i[9] = n[9], i[10] = n[10], i[11] = n[11], i[12] = n[12], i[13] = n[13], i[14] = n[14], i[15] = n[15], this
    }, multiplyScalar: function (t) {
        var e = this.elements;
        return e[0] *= t, e[4] *= t, e[8] *= t, e[12] *= t, e[1] *= t, e[5] *= t, e[9] *= t, e[13] *= t, e[2] *= t, e[6] *= t, e[10] *= t, e[14] *= t, e[3] *= t, e[7] *= t, e[11] *= t, e[15] *= t, this
    }, applyToVector3Array: function () {
        var t;
        return function (e, i, n) {
            void 0 === t && (t = new THREE.Vector3), void 0 === i && (i = 0), void 0 === n && (n = e.length);
            for (var r = 0; n > r; r += 3, i += 3) t.fromArray(e, i), t.applyMatrix4(this), t.toArray(e, i);
            return e
        }
    }(), applyToBuffer: function () {
        var t;
        return function (e, i, n) {
            void 0 === t && (t = new THREE.Vector3), void 0 === i && (i = 0), void 0 === n && (n = e.length / e.itemSize);
            for (var r = 0; n > r; r++, i++) t.x = e.getX(i), t.y = e.getY(i), t.z = e.getZ(i), t.applyMatrix4(this), e.setXYZ(t.x, t.y, t.z);
            return e
        }
    }(), determinant: function () {
        var t = this.elements, e = t[0], i = t[4], n = t[8], r = t[12], o = t[1], a = t[5], s = t[9], l = t[13], h = t[2], u = t[6],
            c = t[10], p = t[14];
        return t[3] * (+r * s * u - n * l * u - r * a * c + i * l * c + n * a * p - i * s * p) + t[7] * (+e * s * p - e * l * c + r * o * c - n * o * p + n * l * h - r * s * h) + t[11] * (+e * l * u - e * a * p - r * o * u + i * o * p + r * a * h - i * l * h) + t[15] * (-n * a * h - e * s * u + e * a * c + n * o * u - i * o * c + i * s * h)
    }, transpose: function () {
        var t, e = this.elements;
        return t = e[1], e[1] = e[4], e[4] = t, t = e[2], e[2] = e[8], e[8] = t, t = e[6], e[6] = e[9], e[9] = t, t = e[3], e[3] = e[12], e[12] = t, t = e[7], e[7] = e[13], e[13] = t, t = e[11], e[11] = e[14], e[14] = t, this
    }, flattenToArrayOffset: function (t, e) {
        return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."), this.toArray(t, e)
    }, getPosition: function () {
        var t;
        return function () {
            return void 0 === t && (t = new THREE.Vector3), console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), t.setFromMatrixColumn(this, 3)
        }
    }(), setPosition: function (t) {
        var e = this.elements;
        return e[12] = t.x, e[13] = t.y, e[14] = t.z, this
    }, getInverse: function (t, e) {
        var i = this.elements, n = t.elements, r = n[0], o = n[1], a = n[2], s = n[3], l = n[4], h = n[5], u = n[6], c = n[7], p = n[8],
            d = n[9], f = n[10], m = n[11], g = n[12], E = n[13], v = n[14], n = n[15],
            y = d * v * c - E * f * c + E * u * m - h * v * m - d * u * n + h * f * n,
            T = g * f * c - p * v * c - g * u * m + l * v * m + p * u * n - l * f * n,
            _ = p * E * c - g * d * c + g * h * m - l * E * m - p * h * n + l * d * n,
            x = g * d * u - p * E * u - g * h * f + l * E * f + p * h * v - l * d * v, b = r * y + o * T + a * _ + s * x;
        if (0 === b) {
            if (e) throw Error("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0");
            return console.warn("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0"), this.identity()
        }
        return b = 1 / b, i[0] = y * b, i[1] = (E * f * s - d * v * s - E * a * m + o * v * m + d * a * n - o * f * n) * b, i[2] = (h * v * s - E * u * s + E * a * c - o * v * c - h * a * n + o * u * n) * b, i[3] = (d * u * s - h * f * s - d * a * c + o * f * c + h * a * m - o * u * m) * b, i[4] = T * b, i[5] = (p * v * s - g * f * s + g * a * m - r * v * m - p * a * n + r * f * n) * b, i[6] = (g * u * s - l * v * s - g * a * c + r * v * c + l * a * n - r * u * n) * b, i[7] = (l * f * s - p * u * s + p * a * c - r * f * c - l * a * m + r * u * m) * b, i[8] = _ * b, i[9] = (g * d * s - p * E * s - g * o * m + r * E * m + p * o * n - r * d * n) * b, i[10] = (l * E * s - g * h * s + g * o * c - r * E * c - l * o * n + r * h * n) * b, i[11] = (p * h * s - l * d * s - p * o * c + r * d * c + l * o * m - r * h * m) * b, i[12] = x * b, i[13] = (p * E * a - g * d * a + g * o * f - r * E * f - p * o * v + r * d * v) * b, i[14] = (g * h * a - l * E * a - g * o * u + r * E * u + l * o * v - r * h * v) * b, i[15] = (l * d * a - p * h * a + p * o * u - r * d * u - l * o * f + r * h * f) * b, this
    }, scale: function (t) {
        var e = this.elements, i = t.x, n = t.y;
        return t = t.z, e[0] *= i, e[4] *= n, e[8] *= t, e[1] *= i, e[5] *= n, e[9] *= t, e[2] *= i, e[6] *= n, e[10] *= t, e[3] *= i, e[7] *= n, e[11] *= t, this
    }, getMaxScaleOnAxis: function () {
        var t = this.elements;
        return Math.sqrt(Math.max(t[0] * t[0] + t[1] * t[1] + t[2] * t[2], t[4] * t[4] + t[5] * t[5] + t[6] * t[6], t[8] * t[8] + t[9] * t[9] + t[10] * t[10]))
    }, makeTranslation: function (t, e, i) {
        return this.set(1, 0, 0, t, 0, 1, 0, e, 0, 0, 1, i, 0, 0, 0, 1), this
    }, makeRotationX: function (t) {
        var e = Math.cos(t);
        return t = Math.sin(t), this.set(1, 0, 0, 0, 0, e, -t, 0, 0, t, e, 0, 0, 0, 0, 1), this
    }, makeRotationY: function (t) {
        var e = Math.cos(t);
        return t = Math.sin(t), this.set(e, 0, t, 0, 0, 1, 0, 0, -t, 0, e, 0, 0, 0, 0, 1), this
    }, makeRotationZ: function (t) {
        var e = Math.cos(t);
        return t = Math.sin(t), this.set(e, -t, 0, 0, t, e, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
    }, makeRotationAxis: function (t, e) {
        var i = Math.cos(e), n = Math.sin(e), r = 1 - i, o = t.x, a = t.y, s = t.z, l = r * o, h = r * a;
        return this.set(l * o + i, l * a - n * s, l * s + n * a, 0, l * a + n * s, h * a + i, h * s - n * o, 0, l * s - n * a, h * s + n * o, r * s * s + i, 0, 0, 0, 0, 1), this
    }, makeScale: function (t, e, i) {
        return this.set(t, 0, 0, 0, 0, e, 0, 0, 0, 0, i, 0, 0, 0, 0, 1), this
    }, compose: function (t, e, i) {
        return this.makeRotationFromQuaternion(e), this.scale(i), this.setPosition(t), this
    }, decompose: function () {
        var t, e;
        return function (i, n, r) {
            void 0 === t && (t = new THREE.Vector3, e = new THREE.Matrix4);
            var o = this.elements, a = t.set(o[0], o[1], o[2]).length(), s = t.set(o[4], o[5], o[6]).length(),
                l = t.set(o[8], o[9], o[10]).length();
            0 > this.determinant() && (a = -a), i.x = o[12], i.y = o[13], i.z = o[14], e.elements.set(this.elements), i = 1 / a;
            var o = 1 / s, h = 1 / l;
            return e.elements[0] *= i, e.elements[1] *= i, e.elements[2] *= i, e.elements[4] *= o, e.elements[5] *= o, e.elements[6] *= o, e.elements[8] *= h, e.elements[9] *= h, e.elements[10] *= h, n.setFromRotationMatrix(e), r.x = a, r.y = s, r.z = l, this
        }
    }(), makeFrustum: function (t, e, i, n, r, o) {
        var a = this.elements;
        return a[0] = 2 * r / (e - t), a[4] = 0, a[8] = (e + t) / (e - t), a[12] = 0, a[1] = 0, a[5] = 2 * r / (n - i), a[9] = (n + i) / (n - i), a[13] = 0, a[2] = 0, a[6] = 0, a[10] = -(o + r) / (o - r), a[14] = -2 * o * r / (o - r), a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this
    }, makePerspective: function (t, e, i, n) {
        t = i * Math.tan(THREE.Math.DEG2RAD * t * .5);
        var r = -t;
        return this.makeFrustum(r * e, t * e, r, t, i, n)
    }, makeOrthographic: function (t, e, i, n, r, o) {
        var a = this.elements, s = 1 / (e - t), l = 1 / (i - n), h = 1 / (o - r);
        return a[0] = 2 * s, a[4] = 0, a[8] = 0, a[12] = -((e + t) * s), a[1] = 0, a[5] = 2 * l, a[9] = 0, a[13] = -((i + n) * l), a[2] = 0, a[6] = 0, a[10] = -2 * h, a[14] = -((o + r) * h), a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this
    }, equals: function (t) {
        var e = this.elements;
        t = t.elements;
        for (var i = 0; 16 > i; i++) if (e[i] !== t[i]) return !1;
        return !0
    }, fromArray: function (t) {
        return this.elements.set(t), this
    }, toArray: function (t, e) {
        void 0 === t && (t = []), void 0 === e && (e = 0);
        var i = this.elements;
        return t[e] = i[0], t[e + 1] = i[1], t[e + 2] = i[2], t[e + 3] = i[3], t[e + 4] = i[4], t[e + 5] = i[5], t[e + 6] = i[6], t[e + 7] = i[7], t[e + 8] = i[8], t[e + 9] = i[9], t[e + 10] = i[10], t[e + 11] = i[11], t[e + 12] = i[12], t[e + 13] = i[13], t[e + 14] = i[14], t[e + 15] = i[15], t
    }
}, THREE.Ray = function (t, e) {
    this.origin = void 0 !== t ? t : new THREE.Vector3, this.direction = void 0 !== e ? e : new THREE.Vector3
}, THREE.Ray.prototype = {
    constructor: THREE.Ray, set: function (t, e) {
        return this.origin.copy(t), this.direction.copy(e), this
    }, clone: function () {
        return (new this.constructor).copy(this)
    }, copy: function (t) {
        return this.origin.copy(t.origin), this.direction.copy(t.direction), this
    }, at: function (t, e) {
        return (e || new THREE.Vector3).copy(this.direction).multiplyScalar(t).add(this.origin)
    }, lookAt: function (t) {
        return this.direction.copy(t).sub(this.origin).normalize(), this
    }, recast: function () {
        var t = new THREE.Vector3;
        return function (e) {
            return this.origin.copy(this.at(e, t)), this
        }
    }(), closestPointToPoint: function (t, e) {
        var i = e || new THREE.Vector3;
        i.subVectors(t, this.origin);
        var n = i.dot(this.direction);
        return 0 > n ? i.copy(this.origin) : i.copy(this.direction).multiplyScalar(n).add(this.origin)
    }, distanceToPoint: function (t) {
        return Math.sqrt(this.distanceSqToPoint(t))
    }, distanceSqToPoint: function () {
        var t = new THREE.Vector3;
        return function (e) {
            var i = t.subVectors(e, this.origin).dot(this.direction);
            return 0 > i ? this.origin.distanceToSquared(e) : (t.copy(this.direction).multiplyScalar(i).add(this.origin), t.distanceToSquared(e))
        }
    }(), distanceSqToSegment: function () {
        var t = new THREE.Vector3, e = new THREE.Vector3, i = new THREE.Vector3;
        return function (n, r, o, a) {
            t.copy(n).add(r).multiplyScalar(.5), e.copy(r).sub(n).normalize(), i.copy(this.origin).sub(t);
            var s, l = .5 * n.distanceTo(r), h = -this.direction.dot(e), u = i.dot(this.direction), c = -i.dot(e), p = i.lengthSq(),
                d = Math.abs(1 - h * h);
            return d > 0 ? (n = h * c - u, r = h * u - c, s = l * d, n >= 0 ? r >= -s ? s >= r ? (l = 1 / d, n *= l, r *= l, h = n * (n + h * r + 2 * u) + r * (h * n + r + 2 * c) + p) : (r = l, n = Math.max(0, -(h * r + u)), h = -n * n + r * (r + 2 * c) + p) : (r = -l, n = Math.max(0, -(h * r + u)), h = -n * n + r * (r + 2 * c) + p) : -s >= r ? (n = Math.max(0, -(-h * l + u)), r = n > 0 ? -l : Math.min(Math.max(-l, -c), l), h = -n * n + r * (r + 2 * c) + p) : s >= r ? (n = 0, r = Math.min(Math.max(-l, -c), l), h = r * (r + 2 * c) + p) : (n = Math.max(0, -(h * l + u)), r = n > 0 ? l : Math.min(Math.max(-l, -c), l), h = -n * n + r * (r + 2 * c) + p)) : (r = h > 0 ? -l : l, n = Math.max(0, -(h * r + u)), h = -n * n + r * (r + 2 * c) + p), o && o.copy(this.direction).multiplyScalar(n).add(this.origin), a && a.copy(e).multiplyScalar(r).add(t), h
        }
    }(), intersectSphere: function () {
        var t = new THREE.Vector3;
        return function (e, i) {
            t.subVectors(e.center, this.origin);
            var n = t.dot(this.direction), r = t.dot(t) - n * n, o = e.radius * e.radius;
            return r > o ? null : (o = Math.sqrt(o - r), r = n - o, n += o, 0 > r && 0 > n ? null : 0 > r ? this.at(n, i) : this.at(r, i))
        }
    }(), intersectsSphere: function (t) {
        return this.distanceToPoint(t.center) <= t.radius
    }, distanceToPlane: function (t) {
        var e = t.normal.dot(this.direction);
        return 0 === e ? 0 === t.distanceToPoint(this.origin) ? 0 : null : (t = -(this.origin.dot(t.normal) + t.constant) / e, t >= 0 ? t : null)
    }, intersectPlane: function (t, e) {
        var i = this.distanceToPlane(t);
        return null === i ? null : this.at(i, e)
    }, intersectsPlane: function (t) {
        var e = t.distanceToPoint(this.origin);
        return 0 === e || 0 > t.normal.dot(this.direction) * e ? !0 : !1
    }, intersectBox: function (t, e) {
        var i, n, r, o, a;
        n = 1 / this.direction.x, o = 1 / this.direction.y, a = 1 / this.direction.z;
        var s = this.origin;
        return n >= 0 ? (i = (t.min.x - s.x) * n, n *= t.max.x - s.x) : (i = (t.max.x - s.x) * n, n *= t.min.x - s.x), o >= 0 ? (r = (t.min.y - s.y) * o, o *= t.max.y - s.y) : (r = (t.max.y - s.y) * o, o *= t.min.y - s.y), i > o || r > n ? null : ((r > i || i !== i) && (i = r), (n > o || n !== n) && (n = o), a >= 0 ? (r = (t.min.z - s.z) * a, a *= t.max.z - s.z) : (r = (t.max.z - s.z) * a, a *= t.min.z - s.z), i > a || r > n ? null : ((r > i || i !== i) && (i = r), (n > a || n !== n) && (n = a), 0 > n ? null : this.at(i >= 0 ? i : n, e)))
    }, intersectsBox: function () {
        var t = new THREE.Vector3;
        return function (e) {
            return null !== this.intersectBox(e, t)
        }
    }(), intersectTriangle: function () {
        var t = new THREE.Vector3, e = new THREE.Vector3, i = new THREE.Vector3, n = new THREE.Vector3;
        return function (r, o, a, s, l) {
            if (e.subVectors(o, r), i.subVectors(a, r), n.crossVectors(e, i), o = this.direction.dot(n), o > 0) {
                if (s) return null;
                s = 1
            } else {
                if (!(0 > o)) return null;
                s = -1, o = -o
            }
            return t.subVectors(this.origin, r), r = s * this.direction.dot(i.crossVectors(t, i)), 0 > r ? null : (a = s * this.direction.dot(e.cross(t)), 0 > a || r + a > o ? null : (r = -s * t.dot(n), 0 > r ? null : this.at(r / o, l)))
        }
    }(), applyMatrix4: function (t) {
        return this.direction.add(this.origin).applyMatrix4(t), this.origin.applyMatrix4(t), this.direction.sub(this.origin), this.direction.normalize(), this
    }, equals: function (t) {
        return t.origin.equals(this.origin) && t.direction.equals(this.direction)
    }
}, THREE.Sphere = function (t, e) {
    this.center = void 0 !== t ? t : new THREE.Vector3, this.radius = void 0 !== e ? e : 0
}, THREE.Sphere.prototype = {
    constructor: THREE.Sphere, set: function (t, e) {
        return this.center.copy(t), this.radius = e, this
    }, setFromPoints: function () {
        var t = new THREE.Box3;
        return function (e, i) {
            var n = this.center;
            void 0 !== i ? n.copy(i) : t.setFromPoints(e).center(n);
            for (var r = 0, o = 0, a = e.length; a > o; o++) r = Math.max(r, n.distanceToSquared(e[o]));
            return this.radius = Math.sqrt(r), this
        }
    }(), clone: function () {
        return (new this.constructor).copy(this)
    }, copy: function (t) {
        return this.center.copy(t.center), this.radius = t.radius, this
    }, empty: function () {
        return 0 >= this.radius
    }, containsPoint: function (t) {
        return t.distanceToSquared(this.center) <= this.radius * this.radius
    }, distanceToPoint: function (t) {
        return t.distanceTo(this.center) - this.radius
    }, intersectsSphere: function (t) {
        var e = this.radius + t.radius;
        return t.center.distanceToSquared(this.center) <= e * e
    }, intersectsBox: function (t) {
        return t.intersectsSphere(this)
    }, intersectsPlane: function (t) {
        return Math.abs(this.center.dot(t.normal) - t.constant) <= this.radius
    }, clampPoint: function (t, e) {
        var i = this.center.distanceToSquared(t), n = e || new THREE.Vector3;
        return n.copy(t), i > this.radius * this.radius && (n.sub(this.center).normalize(),
            n.multiplyScalar(this.radius).add(this.center)), n
    }, getBoundingBox: function (t) {
        return t = t || new THREE.Box3, t.set(this.center, this.center), t.expandByScalar(this.radius), t
    }, applyMatrix4: function (t) {
        return this.center.applyMatrix4(t), this.radius *= t.getMaxScaleOnAxis(), this
    }, translate: function (t) {
        return this.center.add(t), this
    }, equals: function (t) {
        return t.center.equals(this.center) && t.radius === this.radius
    }
}, THREE.Frustum = function (t, e, i, n, r, o) {
    this.planes = [void 0 !== t ? t : new THREE.Plane, void 0 !== e ? e : new THREE.Plane, void 0 !== i ? i : new THREE.Plane, void 0 !== n ? n : new THREE.Plane, void 0 !== r ? r : new THREE.Plane, void 0 !== o ? o : new THREE.Plane]
}, THREE.Frustum.prototype = {
    constructor: THREE.Frustum, set: function (t, e, i, n, r, o) {
        var a = this.planes;
        return a[0].copy(t), a[1].copy(e), a[2].copy(i), a[3].copy(n), a[4].copy(r), a[5].copy(o), this
    }, clone: function () {
        return (new this.constructor).copy(this)
    }, copy: function (t) {
        for (var e = this.planes, i = 0; 6 > i; i++) e[i].copy(t.planes[i]);
        return this
    }, setFromMatrix: function (t) {
        var e = this.planes, i = t.elements;
        t = i[0];
        var n = i[1], r = i[2], o = i[3], a = i[4], s = i[5], l = i[6], h = i[7], u = i[8], c = i[9], p = i[10], d = i[11], f = i[12],
            m = i[13], g = i[14], i = i[15];
        return e[0].setComponents(o - t, h - a, d - u, i - f).normalize(), e[1].setComponents(o + t, h + a, d + u, i + f).normalize(), e[2].setComponents(o + n, h + s, d + c, i + m).normalize(), e[3].setComponents(o - n, h - s, d - c, i - m).normalize(), e[4].setComponents(o - r, h - l, d - p, i - g).normalize(), e[5].setComponents(o + r, h + l, d + p, i + g).normalize(), this
    }, intersectsObject: function () {
        var t = new THREE.Sphere;
        return function (e) {
            var i = e.geometry;
            return null === i.boundingSphere && i.computeBoundingSphere(), t.copy(i.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(t)
        }
    }(), intersectsSprite: function () {
        var t = new THREE.Sphere;
        return function (e) {
            return t.center.set(0, 0, 0), t.radius = .7071067811865476, t.applyMatrix4(e.matrixWorld), this.intersectsSphere(t)
        }
    }(), intersectsSphere: function (t) {
        var e = this.planes, i = t.center;
        t = -t.radius;
        for (var n = 0; 6 > n; n++) if (e[n].distanceToPoint(i) < t) return !1;
        return !0
    }, intersectsBox: function () {
        var t = new THREE.Vector3, e = new THREE.Vector3;
        return function (i) {
            for (var n = this.planes, r = 0; 6 > r; r++) {
                var o = n[r];
                t.x = 0 < o.normal.x ? i.min.x : i.max.x, e.x = 0 < o.normal.x ? i.max.x : i.min.x, t.y = 0 < o.normal.y ? i.min.y : i.max.y, e.y = 0 < o.normal.y ? i.max.y : i.min.y, t.z = 0 < o.normal.z ? i.min.z : i.max.z, e.z = 0 < o.normal.z ? i.max.z : i.min.z;
                var a = o.distanceToPoint(t), o = o.distanceToPoint(e);
                if (0 > a && 0 > o) return !1
            }
            return !0
        }
    }(), containsPoint: function (t) {
        for (var e = this.planes, i = 0; 6 > i; i++) if (0 > e[i].distanceToPoint(t)) return !1;
        return !0
    }
}, THREE.Plane = function (t, e) {
    this.normal = void 0 !== t ? t : new THREE.Vector3(1, 0, 0), this.constant = void 0 !== e ? e : 0
}, THREE.Plane.prototype = {
    constructor: THREE.Plane, set: function (t, e) {
        return this.normal.copy(t), this.constant = e, this
    }, setComponents: function (t, e, i, n) {
        return this.normal.set(t, e, i), this.constant = n, this
    }, setFromNormalAndCoplanarPoint: function (t, e) {
        return this.normal.copy(t), this.constant = -e.dot(this.normal), this
    }, setFromCoplanarPoints: function () {
        var t = new THREE.Vector3, e = new THREE.Vector3;
        return function (i, n, r) {
            return n = t.subVectors(r, n).cross(e.subVectors(i, n)).normalize(), this.setFromNormalAndCoplanarPoint(n, i), this
        }
    }(), clone: function () {
        return (new this.constructor).copy(this)
    }, copy: function (t) {
        return this.normal.copy(t.normal), this.constant = t.constant, this
    }, normalize: function () {
        var t = 1 / this.normal.length();
        return this.normal.multiplyScalar(t), this.constant *= t, this
    }, negate: function () {
        return this.constant *= -1, this.normal.negate(), this
    }, distanceToPoint: function (t) {
        return this.normal.dot(t) + this.constant
    }, distanceToSphere: function (t) {
        return this.distanceToPoint(t.center) - t.radius
    }, projectPoint: function (t, e) {
        return this.orthoPoint(t, e).sub(t).negate()
    }, orthoPoint: function (t, e) {
        var i = this.distanceToPoint(t);
        return (e || new THREE.Vector3).copy(this.normal).multiplyScalar(i)
    }, intersectLine: function () {
        var t = new THREE.Vector3;
        return function (e, i) {
            var n = i || new THREE.Vector3, r = e.delta(t), o = this.normal.dot(r);
            return 0 !== o ? (o = -(e.start.dot(this.normal) + this.constant) / o, 0 > o || o > 1 ? void 0 : n.copy(r).multiplyScalar(o).add(e.start)) : 0 === this.distanceToPoint(e.start) ? n.copy(e.start) : void 0
        }
    }(), intersectsLine: function (t) {
        var e = this.distanceToPoint(t.start);
        return t = this.distanceToPoint(t.end), 0 > e && t > 0 || 0 > t && e > 0
    }, intersectsBox: function (t) {
        return t.intersectsPlane(this)
    }, intersectsSphere: function (t) {
        return t.intersectsPlane(this)
    }, coplanarPoint: function (t) {
        return (t || new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)
    }, applyMatrix4: function () {
        var t = new THREE.Vector3, e = new THREE.Matrix3;
        return function (i, n) {
            var r = this.coplanarPoint(t).applyMatrix4(i), o = n || e.getNormalMatrix(i), o = this.normal.applyMatrix3(o).normalize();
            return this.constant = -r.dot(o), this
        }
    }(), translate: function (t) {
        return this.constant -= t.dot(this.normal), this
    }, equals: function (t) {
        return t.normal.equals(this.normal) && t.constant === this.constant
    }
}, THREE.Spherical = function (t, e, i) {
    return this.radius = void 0 !== t ? t : 1, this.phi = void 0 !== e ? e : 0, this.theta = void 0 !== i ? i : 0, this
}, THREE.Spherical.prototype = {
    constructor: THREE.Spherical, set: function (t, e, i) {
        return this.radius = t, this.phi = e, this.theta = i, this
    }, clone: function () {
        return (new this.constructor).copy(this)
    }, copy: function (t) {
        return this.radius.copy(t.radius), this.phi.copy(t.phi), this.theta.copy(t.theta), this
    }, makeSafe: function () {
        return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this
    }, setFromVector3: function (t) {
        return this.radius = t.length(), 0 === this.radius ? this.phi = this.theta = 0 : (this.theta = Math.atan2(t.x, t.z), this.phi = Math.acos(THREE.Math.clamp(t.y / this.radius, -1, 1))), this
    }
}, THREE.Math = {
    DEG2RAD: Math.PI / 180, RAD2DEG: 180 / Math.PI, generateUUID: function () {
        var t, e = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""), i = Array(36), n = 0;
        return function () {
            for (var r = 0; 36 > r; r++) 8 === r || 13 === r || 18 === r || 23 === r ? i[r] = "-" : 14 === r ? i[r] = "4" : (2 >= n && (n = 33554432 + 16777216 * Math.random() | 0), t = 15 & n, n >>= 4, i[r] = e[19 === r ? 3 & t | 8 : t]);
            return i.join("")
        }
    }(), clamp: function (t, e, i) {
        return Math.max(e, Math.min(i, t))
    }, euclideanModulo: function (t, e) {
        return (t % e + e) % e
    }, mapLinear: function (t, e, i, n, r) {
        return n + (t - e) * (r - n) / (i - e)
    }, smoothstep: function (t, e, i) {
        return e >= t ? 0 : t >= i ? 1 : (t = (t - e) / (i - e), t * t * (3 - 2 * t))
    }, smootherstep: function (t, e, i) {
        return e >= t ? 0 : t >= i ? 1 : (t = (t - e) / (i - e), t * t * t * (t * (6 * t - 15) + 10))
    }, random16: function () {
        return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."), Math.random()
    }, randInt: function (t, e) {
        return t + Math.floor(Math.random() * (e - t + 1))
    }, randFloat: function (t, e) {
        return t + Math.random() * (e - t)
    }, randFloatSpread: function (t) {
        return t * (.5 - Math.random())
    }, degToRad: function (t) {
        return t * THREE.Math.DEG2RAD
    }, radToDeg: function (t) {
        return t * THREE.Math.RAD2DEG
    }, isPowerOfTwo: function (t) {
        return 0 === (t & t - 1) && 0 !== t
    }, nearestPowerOfTwo: function (t) {
        return Math.pow(2, Math.round(Math.log(t) / Math.LN2))
    }, nextPowerOfTwo: function (t) {
        return t--, t |= t >> 1, t |= t >> 2, t |= t >> 4, t |= t >> 8, t |= t >> 16, t++, t
    }
}, THREE.Spline = function (t) {
    function e(t, e, i, n, r, o, a) {
        return t = .5 * (i - t), n = .5 * (n - e), (2 * (e - i) + t + n) * a + (-3 * (e - i) - 2 * t - n) * o + t * r + e
    }

    this.points = t;
    var i, n, r, o, a, s, l, h, u, c = [], p = {x: 0, y: 0, z: 0};
    this.initFromArray = function (t) {
        this.points = [];
        for (var e = 0; e < t.length; e++) this.points[e] = {x: t[e][0], y: t[e][1], z: t[e][2]}
    }, this.getPoint = function (t) {
        return i = (this.points.length - 1) * t, n = Math.floor(i), r = i - n, c[0] = 0 === n ? n : n - 1, c[1] = n, c[2] = n > this.points.length - 2 ? this.points.length - 1 : n + 1, c[3] = n > this.points.length - 3 ? this.points.length - 1 : n + 2, s = this.points[c[0]], l = this.points[c[1]], h = this.points[c[2]], u = this.points[c[3]], o = r * r, a = r * o, p.x = e(s.x, l.x, h.x, u.x, r, o, a), p.y = e(s.y, l.y, h.y, u.y, r, o, a), p.z = e(s.z, l.z, h.z, u.z, r, o, a), p
    }, this.getControlPointsArray = function () {
        var t, e, i = this.points.length, n = [];
        for (t = 0; i > t; t++) e = this.points[t], n[t] = [e.x, e.y, e.z];
        return n
    }, this.getLength = function (t) {
        var e, i, n, r = e = e = 0, o = new THREE.Vector3, a = new THREE.Vector3, s = [], l = 0;
        for (s[0] = 0, t || (t = 100), i = this.points.length * t, o.copy(this.points[0]), t = 1; i > t; t++) e = t / i, n = this.getPoint(e), a.copy(n), l += a.distanceTo(o), o.copy(n), e *= this.points.length - 1, e = Math.floor(e), e !== r && (s[e] = l, r = e);
        return s[s.length] = l, {chunks: s, total: l}
    }, this.reparametrizeByArcLength = function (t) {
        var e, i, n, r, o, a, s = [], l = new THREE.Vector3, h = this.getLength();
        for (s.push(l.copy(this.points[0]).clone()), e = 1; e < this.points.length; e++) {
            for (i = h.chunks[e] - h.chunks[e - 1], a = Math.ceil(t * i / h.total), r = (e - 1) / (this.points.length - 1), o = e / (this.points.length - 1), i = 1; a - 1 > i; i++) n = r + 1 / a * i * (o - r), n = this.getPoint(n), s.push(l.copy(n).clone());
            s.push(l.copy(this.points[e]).clone())
        }
        this.points = s
    }
}, THREE.Triangle = function (t, e, i) {
    this.a = void 0 !== t ? t : new THREE.Vector3, this.b = void 0 !== e ? e : new THREE.Vector3, this.c = void 0 !== i ? i : new THREE.Vector3
}, THREE.Triangle.normal = function () {
    var t = new THREE.Vector3;
    return function (e, i, n, r) {
        return r = r || new THREE.Vector3, r.subVectors(n, i), t.subVectors(e, i), r.cross(t), e = r.lengthSq(), e > 0 ? r.multiplyScalar(1 / Math.sqrt(e)) : r.set(0, 0, 0)
    }
}(), THREE.Triangle.barycoordFromPoint = function () {
    var t = new THREE.Vector3, e = new THREE.Vector3, i = new THREE.Vector3;
    return function (n, r, o, a, s) {
        t.subVectors(a, r), e.subVectors(o, r), i.subVectors(n, r), n = t.dot(t), r = t.dot(e), o = t.dot(i);
        var l = e.dot(e);
        a = e.dot(i);
        var h = n * l - r * r;
        return s = s || new THREE.Vector3, 0 === h ? s.set(-2, -1, -1) : (h = 1 / h, l = (l * o - r * a) * h, n = (n * a - r * o) * h, s.set(1 - l - n, n, l))
    }
}(), THREE.Triangle.containsPoint = function () {
    var t = new THREE.Vector3;
    return function (e, i, n, r) {
        return e = THREE.Triangle.barycoordFromPoint(e, i, n, r, t), 0 <= e.x && 0 <= e.y && 1 >= e.x + e.y
    }
}(), THREE.Triangle.prototype = {
    constructor: THREE.Triangle, set: function (t, e, i) {
        return this.a.copy(t), this.b.copy(e), this.c.copy(i), this
    }, setFromPointsAndIndices: function (t, e, i, n) {
        return this.a.copy(t[e]), this.b.copy(t[i]), this.c.copy(t[n]), this
    }, clone: function () {
        return (new this.constructor).copy(this)
    }, copy: function (t) {
        return this.a.copy(t.a), this.b.copy(t.b), this.c.copy(t.c), this
    }, area: function () {
        var t = new THREE.Vector3, e = new THREE.Vector3;
        return function () {
            return t.subVectors(this.c, this.b), e.subVectors(this.a, this.b), .5 * t.cross(e).length()
        }
    }(), midpoint: function (t) {
        return (t || new THREE.Vector3).addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
    }, normal: function (t) {
        return THREE.Triangle.normal(this.a, this.b, this.c, t)
    }, plane: function (t) {
        return (t || new THREE.Plane).setFromCoplanarPoints(this.a, this.b, this.c)
    }, barycoordFromPoint: function (t, e) {
        return THREE.Triangle.barycoordFromPoint(t, this.a, this.b, this.c, e)
    }, containsPoint: function (t) {
        return THREE.Triangle.containsPoint(t, this.a, this.b, this.c)
    }, closestPointToPoint: function () {
        var t, e, i, n;
        return function (r, o) {
            void 0 === t && (t = new THREE.Plane, e = [new THREE.Line3, new THREE.Line3, new THREE.Line3], i = new THREE.Vector3, n = new THREE.Vector3);
            var a = o || new THREE.Vector3, s = 1 / 0;
            if (t.setFromCoplanarPoints(this.a, this.b, this.c), t.projectPoint(r, i), !0 === this.containsPoint(i)) a.copy(i); else {
                e[0].set(this.a, this.b), e[1].set(this.b, this.c), e[2].set(this.c, this.a);
                for (var l = 0; l < e.length; l++) {
                    e[l].closestPointToPoint(i, !0, n);
                    var h = i.distanceToSquared(n);
                    s > h && (s = h, a.copy(n))
                }
            }
            return a
        }
    }(), equals: function (t) {
        return t.a.equals(this.a) && t.b.equals(this.b) && t.c.equals(this.c)
    }
}, THREE.Interpolant = function (t, e, i, n) {
    this.parameterPositions = t, this._cachedIndex = 0, this.resultBuffer = void 0 !== n ? n : new e.constructor(i), this.sampleValues = e, this.valueSize = i
}, THREE.Interpolant.prototype = {
    constructor: THREE.Interpolant, evaluate: function (t) {
        var e = this.parameterPositions, i = this._cachedIndex, n = e[i], r = e[i - 1];
        t:{
            e:{
                i:{
                    n:if (!(n > t)) {
                        for (var o = i + 2; ;) {
                            if (void 0 === n) {
                                if (r > t) break n;
                                return this._cachedIndex = i = e.length, this.afterEnd_(i - 1, t, r)
                            }
                            if (i === o) break;
                            if (r = n, n = e[++i], n > t) break e
                        }
                        n = e.length;
                        break i
                    }
                    if (t >= r) break t;
                    for (o = e[1], o > t && (i = 2, r = o), o = i - 2; ;) {
                        if (void 0 === r) return this._cachedIndex = 0, this.beforeStart_(0, t, n);
                        if (i === o) break;
                        if (n = r, r = e[--i - 1], t >= r) break e
                    }
                    n = i, i = 0
                }
                for (; n > i;) r = i + n >>> 1, t < e[r] ? n = r : i = r + 1;
                if (n = e[i], r = e[i - 1], void 0 === r) return this._cachedIndex = 0, this.beforeStart_(0, t, n);
                if (void 0 === n) return this._cachedIndex = i = e.length, this.afterEnd_(i - 1, r, t)
            }
            this._cachedIndex = i, this.intervalChanged_(i, r, n)
        }
        return this.interpolate_(i, r, t, n)
    }, settings: null, DefaultSettings_: {}, getSettings_: function () {
        return this.settings || this.DefaultSettings_
    }, copySampleValue_: function (t) {
        var e = this.resultBuffer, i = this.sampleValues, n = this.valueSize;
        t *= n;
        for (var r = 0; r !== n; ++r) e[r] = i[t + r];
        return e
    }, interpolate_: function (t, e, i, n) {
        throw Error("call to abstract method")
    }, intervalChanged_: function (t, e, i) {
    }
}, Object.assign(THREE.Interpolant.prototype, {
    beforeStart_: THREE.Interpolant.prototype.copySampleValue_,
    afterEnd_: THREE.Interpolant.prototype.copySampleValue_
}), THREE.CubicInterpolant = function (t, e, i, n) {
    THREE.Interpolant.call(this, t, e, i, n), this._offsetNext = this._weightNext = this._offsetPrev = this._weightPrev = -0
}, THREE.CubicInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {
    constructor: THREE.CubicInterpolant,
    DefaultSettings_: {endingStart: THREE.ZeroCurvatureEnding, endingEnd: THREE.ZeroCurvatureEnding},
    intervalChanged_: function (t, e, i) {
        var n = this.parameterPositions, r = t - 2, o = t + 1, a = n[r], s = n[o];
        if (void 0 === a) switch (this.getSettings_().endingStart) {
            case THREE.ZeroSlopeEnding:
                r = t, a = 2 * e - i;
                break;
            case THREE.WrapAroundEnding:
                r = n.length - 2, a = e + n[r] - n[r + 1];
                break;
            default:
                r = t, a = i
        }
        if (void 0 === s) switch (this.getSettings_().endingEnd) {
            case THREE.ZeroSlopeEnding:
                o = t, s = 2 * i - e;
                break;
            case THREE.WrapAroundEnding:
                o = 1, s = i + n[1] - n[0];
                break;
            default:
                o = t - 1, s = e
        }
        t = .5 * (i - e), n = this.valueSize, this._weightPrev = t / (e - a), this._weightNext = t / (s - i), this._offsetPrev = r * n, this._offsetNext = o * n
    },
    interpolate_: function (t, e, i, n) {
        var r = this.resultBuffer, o = this.sampleValues, a = this.valueSize;
        t *= a;
        var s = t - a, l = this._offsetPrev, h = this._offsetNext, u = this._weightPrev, c = this._weightNext, p = (i - e) / (n - e);
        for (i = p * p, n = i * p, e = -u * n + 2 * u * i - u * p, u = (1 + u) * n + (-1.5 - 2 * u) * i + (-.5 + u) * p + 1, p = (-1 - c) * n + (1.5 + c) * i + .5 * p, c = c * n - c * i, i = 0; i !== a; ++i) r[i] = e * o[l + i] + u * o[s + i] + p * o[t + i] + c * o[h + i];
        return r
    }
}), THREE.DiscreteInterpolant = function (t, e, i, n) {
    THREE.Interpolant.call(this, t, e, i, n)
}, THREE.DiscreteInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {
    constructor: THREE.DiscreteInterpolant,
    interpolate_: function (t, e, i, n) {
        return this.copySampleValue_(t - 1)
    }
}), THREE.LinearInterpolant = function (t, e, i, n) {
    THREE.Interpolant.call(this, t, e, i, n)
}, THREE.LinearInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {
    constructor: THREE.LinearInterpolant,
    interpolate_: function (t, e, i, n) {
        var r = this.resultBuffer, o = this.sampleValues, a = this.valueSize;
        t *= a;
        var s = t - a;
        for (e = (i - e) / (n - e), i = 1 - e, n = 0; n !== a; ++n) r[n] = o[s + n] * i + o[t + n] * e;
        return r
    }
}), THREE.QuaternionLinearInterpolant = function (t, e, i, n) {
    THREE.Interpolant.call(this, t, e, i, n)
}, THREE.QuaternionLinearInterpolant.prototype = Object.assign(Object.create(THREE.Interpolant.prototype), {
    constructor: THREE.QuaternionLinearInterpolant,
    interpolate_: function (t, e, i, n) {
        var r = this.resultBuffer, o = this.sampleValues, a = this.valueSize;
        for (t *= a, e = (i - e) / (n - e), i = t + a; t !== i; t += 4) THREE.Quaternion.slerpFlat(r, 0, o, t - a, o, t, e);
        return r
    }
}), THREE.Clock = function (t) {
    this.autoStart = void 0 !== t ? t : !0, this.elapsedTime = this.oldTime = this.startTime = 0, this.running = !1
}, THREE.Clock.prototype = {
    constructor: THREE.Clock, start: function () {
        this.oldTime = this.startTime = (performance || Date).now(), this.running = !0
    }, stop: function () {
        this.getElapsedTime(), this.running = !1
    }, getElapsedTime: function () {
        return this.getDelta(), this.elapsedTime
    }, getDelta: function () {
        var t = 0;
        if (this.autoStart && !this.running && this.start(), this.running) {
            var e = (performance || Date).now(), t = (e - this.oldTime) / 1e3;
            this.oldTime = e, this.elapsedTime += t
        }
        return t
    }
}, THREE.EventDispatcher = function () {
}, Object.assign(THREE.EventDispatcher.prototype, {
    addEventListener: function (t, e) {
        void 0 === this._listeners && (this._listeners = {});
        var i = this._listeners;
        void 0 === i[t] && (i[t] = []), -1 === i[t].indexOf(e) && i[t].push(e)
    }, hasEventListener: function (t, e) {
        if (void 0 === this._listeners) return !1;
        var i = this._listeners;
        return void 0 !== i[t] && -1 !== i[t].indexOf(e) ? !0 : !1
    }, removeEventListener: function (t, e) {
        if (void 0 !== this._listeners) {
            var i = this._listeners[t];
            if (void 0 !== i) {
                var n = i.indexOf(e);
                -1 !== n && i.splice(n, 1)
            }
        }
    }, dispatchEvent: function (t) {
        if (void 0 !== this._listeners) {
            var e = this._listeners[t.type];
            if (void 0 !== e) {
                t.target = this;
                for (var i = [], n = 0, r = e.length, n = 0; r > n; n++) i[n] = e[n];
                for (n = 0; r > n; n++) i[n].call(this, t)
            }
        }
    }
}), THREE.Layers = function () {
    this.mask = 1
}, THREE.Layers.prototype = {
    constructor: THREE.Layers, set: function (t) {
        this.mask = 1 << t
    }, enable: function (t) {
        this.mask |= 1 << t
    }, toggle: function (t) {
        this.mask ^= 1 << t
    }, disable: function (t) {
        this.mask &= ~(1 << t)
    }, test: function (t) {
        return 0 !== (this.mask & t.mask)
    }
}, function (t) {
    function e(t, e) {
        return t.distance - e.distance
    }

    function i(t, e, n, r) {
        if (!1 !== t.visible && (t.raycast(e, n), !0 === r)) {
            t = t.children, r = 0;
            for (var o = t.length; o > r; r++) i(t[r], e, n, !0)
        }
    }

    t.Raycaster = function (e, i, n, r) {
        this.ray = new t.Ray(e, i), this.near = n || 0, this.far = r || 1 / 0, this.params = {
            Mesh: {},
            Line: {},
            LOD: {},
            Points: {threshold: 1},
            Sprite: {}
        }, Object.defineProperties(this.params, {
            PointCloud: {
                get: function () {
                    return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points
                }
            }
        })
    }, t.Raycaster.prototype = {
        constructor: t.Raycaster, linePrecision: 1, set: function (t, e) {
            this.ray.set(t, e)
        }, setFromCamera: function (e, i) {
            i instanceof t.PerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(i.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(i).sub(this.ray.origin).normalize()) : i instanceof t.OrthographicCamera ? (this.ray.origin.set(e.x, e.y, (i.near + i.far) / (i.near - i.far)).unproject(i), this.ray.direction.set(0, 0, -1).transformDirection(i.matrixWorld)) : console.error("THREE.Raycaster: Unsupported camera type.")
        }, intersectObject: function (t, n) {
            var r = [];
            return i(t, this, r, n), r.sort(e), r
        }, intersectObjects: function (t, n) {
            var r = [];
            if (!1 === Array.isArray(t)) return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), r;
            for (var o = 0, a = t.length; a > o; o++) i(t[o], this, r, n);
            return r.sort(e), r
        }
    }
}(THREE), THREE.Object3D = function () {
    Object.defineProperty(this, "id", {value: THREE.Object3DIdCount++}), this.uuid = THREE.Math.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = THREE.Object3D.DefaultUp.clone();
    var t = new THREE.Vector3, e = new THREE.Euler, i = new THREE.Quaternion, n = new THREE.Vector3(1, 1, 1);
    e.onChange(function () {
        i.setFromEuler(e, !1)
    }), i.onChange(function () {
        e.setFromQuaternion(i, void 0, !1)
    }), Object.defineProperties(this, {
        position: {enumerable: !0, value: t},
        rotation: {enumerable: !0, value: e},
        quaternion: {enumerable: !0, value: i},
        scale: {enumerable: !0, value: n},
        modelViewMatrix: {value: new THREE.Matrix4},
        normalMatrix: {value: new THREE.Matrix3}
    }), this.matrix = new THREE.Matrix4, this.matrixWorld = new THREE.Matrix4, this.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new THREE.Layers, this.visible = !0, this.receiveShadow = this.castShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.userData = {}
}, THREE.Object3D.DefaultUp = new THREE.Vector3(0, 1, 0), THREE.Object3D.DefaultMatrixAutoUpdate = !0, Object.assign(THREE.Object3D.prototype, THREE.EventDispatcher.prototype, {
    applyMatrix: function (t) {
        this.matrix.multiplyMatrices(t, this.matrix), this.matrix.decompose(this.position, this.quaternion, this.scale)
    }, setRotationFromAxisAngle: function (t, e) {
        this.quaternion.setFromAxisAngle(t, e)
    }, setRotationFromEuler: function (t) {
        this.quaternion.setFromEuler(t, !0)
    }, setRotationFromMatrix: function (t) {
        this.quaternion.setFromRotationMatrix(t)
    }, setRotationFromQuaternion: function (t) {
        this.quaternion.copy(t)
    }, rotateOnAxis: function () {
        var t = new THREE.Quaternion;
        return function (e, i) {
            return t.setFromAxisAngle(e, i), this.quaternion.multiply(t), this
        }
    }(), rotateX: function () {
        var t = new THREE.Vector3(1, 0, 0);
        return function (e) {
            return this.rotateOnAxis(t, e)
        }
    }(), rotateY: function () {
        var t = new THREE.Vector3(0, 1, 0);
        return function (e) {
            return this.rotateOnAxis(t, e)
        }
    }(), rotateZ: function () {
        var t = new THREE.Vector3(0, 0, 1);
        return function (e) {
            return this.rotateOnAxis(t, e)
        }
    }(), translateOnAxis: function () {
        var t = new THREE.Vector3;
        return function (e, i) {
            return t.copy(e).applyQuaternion(this.quaternion), this.position.add(t.multiplyScalar(i)), this
        }
    }(), translateX: function () {
        var t = new THREE.Vector3(1, 0, 0);
        return function (e) {
            return this.translateOnAxis(t, e)
        }
    }(), translateY: function () {
        var t = new THREE.Vector3(0, 1, 0);
        return function (e) {
            return this.translateOnAxis(t, e)
        }
    }(), translateZ: function () {
        var t = new THREE.Vector3(0, 0, 1);
        return function (e) {
            return this.translateOnAxis(t, e)
        }
    }(), localToWorld: function (t) {
        return t.applyMatrix4(this.matrixWorld)
    }, worldToLocal: function () {
        var t = new THREE.Matrix4;
        return function (e) {
            return e.applyMatrix4(t.getInverse(this.matrixWorld))
        }
    }(), lookAt: function () {
        var t = new THREE.Matrix4;
        return function (e) {
            t.lookAt(e, this.position, this.up), this.quaternion.setFromRotationMatrix(t)
        }
    }(), add: function (t) {
        if (1 < arguments.length) {
            for (var e = 0; e < arguments.length; e++) this.add(arguments[e]);
            return this
        }
        return t === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", t), this) : (t instanceof THREE.Object3D ? (null !== t.parent && t.parent.remove(t), t.parent = this, t.dispatchEvent({type: "added"}), this.children.push(t)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", t), this)
    }, remove: function (t) {
        if (1 < arguments.length) for (var e = 0; e < arguments.length; e++) this.remove(arguments[e]);
        e = this.children.indexOf(t), -1 !== e && (t.parent = null, t.dispatchEvent({type: "removed"}), this.children.splice(e, 1))
    }, getObjectById: function (t) {
        return this.getObjectByProperty("id", t)
    }, getObjectByName: function (t) {
        return this.getObjectByProperty("name", t)
    }, getObjectByProperty: function (t, e) {
        if (this[t] === e) return this;
        for (var i = 0, n = this.children.length; n > i; i++) {
            var r = this.children[i].getObjectByProperty(t, e);
            if (void 0 !== r) return r
        }
    }, getWorldPosition: function (t) {
        return t = t || new THREE.Vector3, this.updateMatrixWorld(!0), t.setFromMatrixPosition(this.matrixWorld)
    }, getWorldQuaternion: function () {
        var t = new THREE.Vector3, e = new THREE.Vector3;
        return function (i) {
            return i = i || new THREE.Quaternion, this.updateMatrixWorld(!0), this.matrixWorld.decompose(t, i, e), i
        }
    }(), getWorldRotation: function () {
        var t = new THREE.Quaternion;
        return function (e) {
            return e = e || new THREE.Euler, this.getWorldQuaternion(t), e.setFromQuaternion(t, this.rotation.order, !1)
        }
    }(), getWorldScale: function () {
        var t = new THREE.Vector3, e = new THREE.Quaternion;
        return function (i) {
            return i = i || new THREE.Vector3, this.updateMatrixWorld(!0), this.matrixWorld.decompose(t, e, i), i
        }
    }(), getWorldDirection: function () {
        var t = new THREE.Quaternion;
        return function (e) {
            return e = e || new THREE.Vector3, this.getWorldQuaternion(t), e.set(0, 0, 1).applyQuaternion(t)
        }
    }(), raycast: function () {
    }, traverse: function (t) {
        t(this);
        for (var e = this.children, i = 0, n = e.length; n > i; i++) e[i].traverse(t)
    }, traverseVisible: function (t) {
        if (!1 !== this.visible) {
            t(this);
            for (var e = this.children, i = 0, n = e.length; n > i; i++) e[i].traverseVisible(t)
        }
    }, traverseAncestors: function (t) {
        var e = this.parent;
        null !== e && (t(e), e.traverseAncestors(t))
    }, updateMatrix: function () {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
    }, updateMatrixWorld: function (t) {
        !0 === this.matrixAutoUpdate && this.updateMatrix(), (!0 === this.matrixWorldNeedsUpdate || !0 === t) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, t = !0);
        for (var e = 0, i = this.children.length; i > e; e++) this.children[e].updateMatrixWorld(t)
    }, toJSON: function (t) {
        function e(t) {
            var e, i = [];
            for (e in t) {
                var n = t[e];
                delete n.metadata, i.push(n)
            }
            return i
        }

        var i = void 0 === t || "" === t, n = {};
        i && (t = {geometries: {}, materials: {}, textures: {}, images: {}}, n.metadata = {
            version: 4.4,
            type: "Object",
            generator: "Object3D.toJSON"
        });
        var r = {};
        if (r.uuid = this.uuid, r.type = this.type, "" !== this.name && (r.name = this.name), "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData), !0 === this.castShadow && (r.castShadow = !0), !0 === this.receiveShadow && (r.receiveShadow = !0), !1 === this.visible && (r.visible = !1), r.matrix = this.matrix.toArray(), void 0 !== this.geometry && (void 0 === t.geometries[this.geometry.uuid] && (t.geometries[this.geometry.uuid] = this.geometry.toJSON(t)), r.geometry = this.geometry.uuid), void 0 !== this.material && (void 0 === t.materials[this.material.uuid] && (t.materials[this.material.uuid] = this.material.toJSON(t)), r.material = this.material.uuid), 0 < this.children.length) {
            r.children = [];
            for (var o = 0; o < this.children.length; o++) r.children.push(this.children[o].toJSON(t).object)
        }
        if (i) {
            var i = e(t.geometries), o = e(t.materials), a = e(t.textures);
            t = e(t.images), 0 < i.length && (n.geometries = i), 0 < o.length && (n.materials = o), 0 < a.length && (n.textures = a), 0 < t.length && (n.images = t)
        }
        return n.object = r, n
    }, clone: function (t) {
        return (new this.constructor).copy(this, t)
    }, copy: function (t, e) {
        if (void 0 === e && (e = !0), this.name = t.name, this.up.copy(t.up), this.position.copy(t.position), this.quaternion.copy(t.quaternion), this.scale.copy(t.scale), this.matrix.copy(t.matrix), this.matrixWorld.copy(t.matrixWorld), this.matrixAutoUpdate = t.matrixAutoUpdate, this.matrixWorldNeedsUpdate = t.matrixWorldNeedsUpdate, this.visible = t.visible, this.castShadow = t.castShadow, this.receiveShadow = t.receiveShadow, this.frustumCulled = t.frustumCulled, this.renderOrder = t.renderOrder, this.userData = JSON.parse(JSON.stringify(t.userData)), !0 === e) for (var i = 0; i < t.children.length; i++) this.add(t.children[i].clone());
        return this
    }
}), THREE.Object3DIdCount = 0, THREE.Face3 = function (t, e, i, n, r, o) {
    this.a = t, this.b = e, this.c = i, this.normal = n instanceof THREE.Vector3 ? n : new THREE.Vector3, this.vertexNormals = Array.isArray(n) ? n : [], this.color = r instanceof THREE.Color ? r : new THREE.Color, this.vertexColors = Array.isArray(r) ? r : [], this.materialIndex = void 0 !== o ? o : 0
}, THREE.Face3.prototype = {
    constructor: THREE.Face3, clone: function () {
        return (new this.constructor).copy(this)
    }, copy: function (t) {
        this.a = t.a, this.b = t.b, this.c = t.c, this.normal.copy(t.normal), this.color.copy(t.color), this.materialIndex = t.materialIndex;
        for (var e = 0, i = t.vertexNormals.length; i > e; e++) this.vertexNormals[e] = t.vertexNormals[e].clone();
        for (e = 0, i = t.vertexColors.length; i > e; e++) this.vertexColors[e] = t.vertexColors[e].clone();
        return this
    }
}, THREE.BufferAttribute = function (t, e, i) {
    this.uuid = THREE.Math.generateUUID(), this.array = t, this.itemSize = e, this.dynamic = !1, this.updateRange = {
        offset: 0,
        count: -1
    }, this.version = 0, this.normalized = !0 === i
}, THREE.BufferAttribute.prototype = {
    constructor: THREE.BufferAttribute, get count() {
        return this.array.length / this.itemSize
    }, set needsUpdate(t) {
        !0 === t && this.version++
    }, setDynamic: function (t) {
        return this.dynamic = t, this
    }, copy: function (t) {
        return this.array = new t.array.constructor(t.array), this.itemSize = t.itemSize, this.dynamic = t.dynamic, this
    }, copyAt: function (t, e, i) {
        t *= this.itemSize, i *= e.itemSize;
        for (var n = 0, r = this.itemSize; r > n; n++) this.array[t + n] = e.array[i + n];
        return this
    }, copyArray: function (t) {
        return this.array.set(t), this
    }, copyColorsArray: function (t) {
        for (var e = this.array, i = 0, n = 0, r = t.length; r > n; n++) {
            var o = t[n];
            void 0 === o && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", n), o = new THREE.Color), e[i++] = o.r, e[i++] = o.g, e[i++] = o.b
        }
        return this
    }, copyIndicesArray: function (t) {
        for (var e = this.array, i = 0, n = 0, r = t.length; r > n; n++) {
            var o = t[n];
            e[i++] = o.a, e[i++] = o.b, e[i++] = o.c
        }
        return this
    }, copyVector2sArray: function (t) {
        for (var e = this.array, i = 0, n = 0, r = t.length; r > n; n++) {
            var o = t[n];
            void 0 === o && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", n), o = new THREE.Vector2), e[i++] = o.x, e[i++] = o.y
        }
        return this
    }, copyVector3sArray: function (t) {
        for (var e = this.array, i = 0, n = 0, r = t.length; r > n; n++) {
            var o = t[n];
            void 0 === o && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", n), o = new THREE.Vector3), e[i++] = o.x, e[i++] = o.y, e[i++] = o.z
        }
        return this
    }, copyVector4sArray: function (t) {
        for (var e = this.array, i = 0, n = 0, r = t.length; r > n; n++) {
            var o = t[n];
            void 0 === o && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", n), o = new THREE.Vector4), e[i++] = o.x, e[i++] = o.y, e[i++] = o.z, e[i++] = o.w
        }
        return this
    }, set: function (t, e) {
        return void 0 === e && (e = 0), this.array.set(t, e), this
    }, getX: function (t) {
        return this.array[t * this.itemSize]
    }, setX: function (t, e) {
        return this.array[t * this.itemSize] = e, this
    }, getY: function (t) {
        return this.array[t * this.itemSize + 1]
    }, setY: function (t, e) {
        return this.array[t * this.itemSize + 1] = e, this
    }, getZ: function (t) {
        return this.array[t * this.itemSize + 2]
    }, setZ: function (t, e) {
        return this.array[t * this.itemSize + 2] = e, this
    }, getW: function (t) {
        return this.array[t * this.itemSize + 3]
    }, setW: function (t, e) {
        return this.array[t * this.itemSize + 3] = e, this
    }, setXY: function (t, e, i) {
        return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = i, this
    }, setXYZ: function (t, e, i, n) {
        return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = i, this.array[t + 2] = n, this
    }, setXYZW: function (t, e, i, n, r) {
        return t *= this.itemSize, this.array[t + 0] = e, this.array[t + 1] = i, this.array[t + 2] = n, this.array[t + 3] = r, this
    }, clone: function () {
        return (new this.constructor).copy(this)
    }
}, THREE.Int8Attribute = function (t, e) {
    return new THREE.BufferAttribute(new Int8Array(t), e)
}, THREE.Uint8Attribute = function (t, e) {
    return new THREE.BufferAttribute(new Uint8Array(t), e)
}, THREE.Uint8ClampedAttribute = function (t, e) {
    return new THREE.BufferAttribute(new Uint8ClampedArray(t), e)
}, THREE.Int16Attribute = function (t, e) {
    return new THREE.BufferAttribute(new Int16Array(t), e)
}, THREE.Uint16Attribute = function (t, e) {
    return new THREE.BufferAttribute(new Uint16Array(t), e)
}, THREE.Int32Attribute = function (t, e) {
    return new THREE.BufferAttribute(new Int32Array(t), e)
}, THREE.Uint32Attribute = function (t, e) {
    return new THREE.BufferAttribute(new Uint32Array(t), e)
}, THREE.Float32Attribute = function (t, e) {
    return new THREE.BufferAttribute(new Float32Array(t), e)
}, THREE.Float64Attribute = function (t, e) {
    return new THREE.BufferAttribute(new Float64Array(t), e)
}, THREE.DynamicBufferAttribute = function (t, e) {
    return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."), new THREE.BufferAttribute(t, e).setDynamic(!0)
}, THREE.InstancedBufferAttribute = function (t, e, i) {
    THREE.BufferAttribute.call(this, t, e), this.meshPerAttribute = i || 1
}, THREE.InstancedBufferAttribute.prototype = Object.create(THREE.BufferAttribute.prototype), THREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute, THREE.InstancedBufferAttribute.prototype.copy = function (t) {
    return THREE.BufferAttribute.prototype.copy.call(this, t), this.meshPerAttribute = t.meshPerAttribute, this
}, THREE.InterleavedBuffer = function (t, e) {
    this.uuid = THREE.Math.generateUUID(), this.array = t, this.stride = e, this.dynamic = !1, this.updateRange = {
        offset: 0,
        count: -1
    }, this.version = 0
}, THREE.InterleavedBuffer.prototype = {
    constructor: THREE.InterleavedBuffer, get length() {
        return this.array.length
    }, get count() {
        return this.array.length / this.stride
    }, set needsUpdate(t) {
        !0 === t && this.version++
    }, setDynamic: function (t) {
        return this.dynamic = t, this
    }, copy: function (t) {
        return this.array = new t.array.constructor(t.array), this.stride = t.stride, this.dynamic = t.dynamic, this
    }, copyAt: function (t, e, i) {
        t *= this.stride, i *= e.stride;
        for (var n = 0, r = this.stride; r > n; n++) this.array[t + n] = e.array[i + n];
        return this
    }, set: function (t, e) {
        return void 0 === e && (e = 0), this.array.set(t, e), this
    }, clone: function () {
        return (new this.constructor).copy(this)
    }
}, THREE.InstancedInterleavedBuffer = function (t, e, i) {
    THREE.InterleavedBuffer.call(this, t, e), this.meshPerAttribute = i || 1
}, THREE.InstancedInterleavedBuffer.prototype = Object.create(THREE.InterleavedBuffer.prototype), THREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer, THREE.InstancedInterleavedBuffer.prototype.copy = function (t) {
    return THREE.InterleavedBuffer.prototype.copy.call(this, t), this.meshPerAttribute = t.meshPerAttribute, this
}, THREE.InterleavedBufferAttribute = function (t, e, i, n) {
    this.uuid = THREE.Math.generateUUID(), this.data = t, this.itemSize = e, this.offset = i, this.normalized = !0 === n
}, THREE.InterleavedBufferAttribute.prototype = {
    constructor: THREE.InterleavedBufferAttribute, get length() {
        return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."), this.array.length
    }, get count() {
        return this.data.count
    }, get array() {
        return this.data.array
    }, setX: function (t, e) {
        return this.data.array[t * this.data.stride + this.offset] = e, this
    }, setY: function (t, e) {
        return this.data.array[t * this.data.stride + this.offset + 1] = e,
            this
    }, setZ: function (t, e) {
        return this.data.array[t * this.data.stride + this.offset + 2] = e, this
    }, setW: function (t, e) {
        return this.data.array[t * this.data.stride + this.offset + 3] = e, this
    }, getX: function (t) {
        return this.data.array[t * this.data.stride + this.offset]
    }, getY: function (t) {
        return this.data.array[t * this.data.stride + this.offset + 1]
    }, getZ: function (t) {
        return this.data.array[t * this.data.stride + this.offset + 2]
    }, getW: function (t) {
        return this.data.array[t * this.data.stride + this.offset + 3]
    }, setXY: function (t, e, i) {
        return t = t * this.data.stride + this.offset, this.data.array[t + 0] = e, this.data.array[t + 1] = i, this
    }, setXYZ: function (t, e, i, n) {
        return t = t * this.data.stride + this.offset, this.data.array[t + 0] = e, this.data.array[t + 1] = i, this.data.array[t + 2] = n, this
    }, setXYZW: function (t, e, i, n, r) {
        return t = t * this.data.stride + this.offset, this.data.array[t + 0] = e, this.data.array[t + 1] = i, this.data.array[t + 2] = n, this.data.array[t + 3] = r, this
    }
}, THREE.Geometry = function () {
    Object.defineProperty(this, "id", {value: THREE.GeometryIdCount++}), this.uuid = THREE.Math.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [[]], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingSphere = this.boundingBox = null, this.groupsNeedUpdate = this.lineDistancesNeedUpdate = this.colorsNeedUpdate = this.normalsNeedUpdate = this.uvsNeedUpdate = this.verticesNeedUpdate = this.elementsNeedUpdate = !1
}, Object.assign(THREE.Geometry.prototype, THREE.EventDispatcher.prototype, {
    applyMatrix: function (t) {
        for (var e = (new THREE.Matrix3).getNormalMatrix(t), i = 0, n = this.vertices.length; n > i; i++) this.vertices[i].applyMatrix4(t);
        for (i = 0, n = this.faces.length; n > i; i++) {
            t = this.faces[i], t.normal.applyMatrix3(e).normalize();
            for (var r = 0, o = t.vertexNormals.length; o > r; r++) t.vertexNormals[r].applyMatrix3(e).normalize()
        }
        return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this.normalsNeedUpdate = this.verticesNeedUpdate = !0, this
    }, rotateX: function () {
        var t;
        return function (e) {
            return void 0 === t && (t = new THREE.Matrix4), t.makeRotationX(e), this.applyMatrix(t), this
        }
    }(), rotateY: function () {
        var t;
        return function (e) {
            return void 0 === t && (t = new THREE.Matrix4), t.makeRotationY(e), this.applyMatrix(t), this
        }
    }(), rotateZ: function () {
        var t;
        return function (e) {
            return void 0 === t && (t = new THREE.Matrix4), t.makeRotationZ(e), this.applyMatrix(t), this
        }
    }(), translate: function () {
        var t;
        return function (e, i, n) {
            return void 0 === t && (t = new THREE.Matrix4), t.makeTranslation(e, i, n), this.applyMatrix(t), this
        }
    }(), scale: function () {
        var t;
        return function (e, i, n) {
            return void 0 === t && (t = new THREE.Matrix4), t.makeScale(e, i, n), this.applyMatrix(t), this
        }
    }(), lookAt: function () {
        var t;
        return function (e) {
            void 0 === t && (t = new THREE.Object3D), t.lookAt(e), t.updateMatrix(), this.applyMatrix(t.matrix)
        }
    }(), fromBufferGeometry: function (t) {
        function e(t, e, n, r) {
            var o = void 0 !== a ? [u[t].clone(), u[e].clone(), u[n].clone()] : [],
                d = void 0 !== s ? [i.colors[t].clone(), i.colors[e].clone(), i.colors[n].clone()] : [];
            r = new THREE.Face3(t, e, n, o, d, r), i.faces.push(r), void 0 !== l && i.faceVertexUvs[0].push([c[t].clone(), c[e].clone(), c[n].clone()]), void 0 !== h && i.faceVertexUvs[1].push([p[t].clone(), p[e].clone(), p[n].clone()])
        }

        var i = this, n = null !== t.index ? t.index.array : void 0, r = t.attributes, o = r.position.array,
            a = void 0 !== r.normal ? r.normal.array : void 0, s = void 0 !== r.color ? r.color.array : void 0,
            l = void 0 !== r.uv ? r.uv.array : void 0, h = void 0 !== r.uv2 ? r.uv2.array : void 0;
        void 0 !== h && (this.faceVertexUvs[1] = []);
        for (var u = [], c = [], p = [], d = r = 0; r < o.length; r += 3, d += 2) i.vertices.push(new THREE.Vector3(o[r], o[r + 1], o[r + 2])), void 0 !== a && u.push(new THREE.Vector3(a[r], a[r + 1], a[r + 2])), void 0 !== s && i.colors.push(new THREE.Color(s[r], s[r + 1], s[r + 2])), void 0 !== l && c.push(new THREE.Vector2(l[d], l[d + 1])), void 0 !== h && p.push(new THREE.Vector2(h[d], h[d + 1]));
        if (void 0 !== n) if (o = t.groups, 0 < o.length) for (r = 0; r < o.length; r++) for (var f = o[r], m = f.start, g = f.count, d = m, m = m + g; m > d; d += 3) e(n[d], n[d + 1], n[d + 2], f.materialIndex); else for (r = 0; r < n.length; r += 3) e(n[r], n[r + 1], n[r + 2]); else for (r = 0; r < o.length / 3; r += 3) e(r, r + 1, r + 2);
        return this.computeFaceNormals(), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()), null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), this
    }, center: function () {
        this.computeBoundingBox();
        var t = this.boundingBox.center().negate();
        return this.translate(t.x, t.y, t.z), t
    }, normalize: function () {
        this.computeBoundingSphere();
        var t = this.boundingSphere.center, e = this.boundingSphere.radius, e = 0 === e ? 1 : 1 / e, i = new THREE.Matrix4;
        return i.set(e, 0, 0, -e * t.x, 0, e, 0, -e * t.y, 0, 0, e, -e * t.z, 0, 0, 0, 1), this.applyMatrix(i), this
    }, computeFaceNormals: function () {
        for (var t = new THREE.Vector3, e = new THREE.Vector3, i = 0, n = this.faces.length; n > i; i++) {
            var r = this.faces[i], o = this.vertices[r.a], a = this.vertices[r.b];
            t.subVectors(this.vertices[r.c], a), e.subVectors(o, a), t.cross(e), t.normalize(), r.normal.copy(t)
        }
    }, computeVertexNormals: function (t) {
        void 0 === t && (t = !0);
        var e, i, n;
        for (n = Array(this.vertices.length), e = 0, i = this.vertices.length; i > e; e++) n[e] = new THREE.Vector3;
        if (t) {
            var r, o, a, s = new THREE.Vector3, l = new THREE.Vector3;
            for (t = 0, e = this.faces.length; e > t; t++) i = this.faces[t], r = this.vertices[i.a], o = this.vertices[i.b], a = this.vertices[i.c], s.subVectors(a, o), l.subVectors(r, o), s.cross(l), n[i.a].add(s), n[i.b].add(s), n[i.c].add(s)
        } else for (t = 0, e = this.faces.length; e > t; t++) i = this.faces[t], n[i.a].add(i.normal), n[i.b].add(i.normal), n[i.c].add(i.normal);
        for (e = 0, i = this.vertices.length; i > e; e++) n[e].normalize();
        for (t = 0, e = this.faces.length; e > t; t++) i = this.faces[t], r = i.vertexNormals, 3 === r.length ? (r[0].copy(n[i.a]), r[1].copy(n[i.b]), r[2].copy(n[i.c])) : (r[0] = n[i.a].clone(), r[1] = n[i.b].clone(), r[2] = n[i.c].clone());
        0 < this.faces.length && (this.normalsNeedUpdate = !0)
    }, computeMorphNormals: function () {
        var t, e, i, n, r;
        for (i = 0, n = this.faces.length; n > i; i++) for (r = this.faces[i], r.__originalFaceNormal ? r.__originalFaceNormal.copy(r.normal) : r.__originalFaceNormal = r.normal.clone(), r.__originalVertexNormals || (r.__originalVertexNormals = []), t = 0, e = r.vertexNormals.length; e > t; t++) r.__originalVertexNormals[t] ? r.__originalVertexNormals[t].copy(r.vertexNormals[t]) : r.__originalVertexNormals[t] = r.vertexNormals[t].clone();
        var o = new THREE.Geometry;
        for (o.faces = this.faces, t = 0, e = this.morphTargets.length; e > t; t++) {
            if (!this.morphNormals[t]) {
                this.morphNormals[t] = {}, this.morphNormals[t].faceNormals = [], this.morphNormals[t].vertexNormals = [], r = this.morphNormals[t].faceNormals;
                var a, s, l = this.morphNormals[t].vertexNormals;
                for (i = 0, n = this.faces.length; n > i; i++) a = new THREE.Vector3, s = {
                    a: new THREE.Vector3,
                    b: new THREE.Vector3,
                    c: new THREE.Vector3
                }, r.push(a), l.push(s)
            }
            for (l = this.morphNormals[t], o.vertices = this.morphTargets[t].vertices, o.computeFaceNormals(), o.computeVertexNormals(), i = 0, n = this.faces.length; n > i; i++) r = this.faces[i], a = l.faceNormals[i], s = l.vertexNormals[i], a.copy(r.normal), s.a.copy(r.vertexNormals[0]), s.b.copy(r.vertexNormals[1]), s.c.copy(r.vertexNormals[2])
        }
        for (i = 0, n = this.faces.length; n > i; i++) r = this.faces[i], r.normal = r.__originalFaceNormal, r.vertexNormals = r.__originalVertexNormals
    }, computeTangents: function () {
        console.warn("THREE.Geometry: .computeTangents() has been removed.")
    }, computeLineDistances: function () {
        for (var t = 0, e = this.vertices, i = 0, n = e.length; n > i; i++) i > 0 && (t += e[i].distanceTo(e[i - 1])), this.lineDistances[i] = t
    }, computeBoundingBox: function () {
        null === this.boundingBox && (this.boundingBox = new THREE.Box3), this.boundingBox.setFromPoints(this.vertices)
    }, computeBoundingSphere: function () {
        null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere), this.boundingSphere.setFromPoints(this.vertices)
    }, merge: function (t, e, i) {
        if (!1 == t instanceof THREE.Geometry) console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", t); else {
            var n, r = this.vertices.length, o = this.vertices, a = t.vertices, s = this.faces, l = t.faces, h = this.faceVertexUvs[0];
            t = t.faceVertexUvs[0], void 0 === i && (i = 0), void 0 !== e && (n = (new THREE.Matrix3).getNormalMatrix(e));
            for (var u = 0, c = a.length; c > u; u++) {
                var p = a[u].clone();
                void 0 !== e && p.applyMatrix4(e), o.push(p)
            }
            for (u = 0, c = l.length; c > u; u++) {
                var d, a = l[u], f = a.vertexNormals, m = a.vertexColors, p = new THREE.Face3(a.a + r, a.b + r, a.c + r);
                for (p.normal.copy(a.normal), void 0 !== n && p.normal.applyMatrix3(n).normalize(), e = 0, o = f.length; o > e; e++) d = f[e].clone(), void 0 !== n && d.applyMatrix3(n).normalize(), p.vertexNormals.push(d);
                for (p.color.copy(a.color), e = 0, o = m.length; o > e; e++) d = m[e], p.vertexColors.push(d.clone());
                p.materialIndex = a.materialIndex + i, s.push(p)
            }
            for (u = 0, c = t.length; c > u; u++) if (i = t[u], n = [], void 0 !== i) {
                for (e = 0, o = i.length; o > e; e++) n.push(i[e].clone());
                h.push(n)
            }
        }
    }, mergeMesh: function (t) {
        !1 == t instanceof THREE.Mesh ? console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", t) : (t.matrixAutoUpdate && t.updateMatrix(), this.merge(t.geometry, t.matrix))
    }, mergeVertices: function () {
        var t, e, i, n = {}, r = [], o = [], a = Math.pow(10, 4);
        for (e = 0, i = this.vertices.length; i > e; e++) t = this.vertices[e], t = Math.round(t.x * a) + "_" + Math.round(t.y * a) + "_" + Math.round(t.z * a), void 0 === n[t] ? (n[t] = e, r.push(this.vertices[e]), o[e] = r.length - 1) : o[e] = o[n[t]];
        for (n = [], e = 0, i = this.faces.length; i > e; e++) for (a = this.faces[e], a.a = o[a.a], a.b = o[a.b], a.c = o[a.c], a = [a.a, a.b, a.c], t = 0; 3 > t; t++) if (a[t] === a[(t + 1) % 3]) {
            n.push(e);
            break
        }
        for (e = n.length - 1; e >= 0; e--) for (a = n[e], this.faces.splice(a, 1), o = 0, i = this.faceVertexUvs.length; i > o; o++) this.faceVertexUvs[o].splice(a, 1);
        return e = this.vertices.length - r.length, this.vertices = r, e
    }, sortFacesByMaterialIndex: function () {
        for (var t = this.faces, e = t.length, i = 0; e > i; i++) t[i]._id = i;
        t.sort(function (t, e) {
            return t.materialIndex - e.materialIndex
        });
        var n, r, o = this.faceVertexUvs[0], a = this.faceVertexUvs[1];
        for (o && o.length === e && (n = []), a && a.length === e && (r = []), i = 0; e > i; i++) {
            var s = t[i]._id;
            n && n.push(o[s]), r && r.push(a[s])
        }
        n && (this.faceVertexUvs[0] = n), r && (this.faceVertexUvs[1] = r)
    }, toJSON: function () {
        function t(t, e, i) {
            return i ? t | 1 << e : t & ~(1 << e)
        }

        function e(t) {
            var e = t.x.toString() + t.y.toString() + t.z.toString();
            return void 0 !== h[e] ? h[e] : (h[e] = l.length / 3, l.push(t.x, t.y, t.z), h[e])
        }

        function i(t) {
            var e = t.r.toString() + t.g.toString() + t.b.toString();
            return void 0 !== c[e] ? c[e] : (c[e] = u.length, u.push(t.getHex()), c[e])
        }

        function n(t) {
            var e = t.x.toString() + t.y.toString();
            return void 0 !== d[e] ? d[e] : (d[e] = p.length / 2, p.push(t.x, t.y), d[e])
        }

        var r = {metadata: {version: 4.4, type: "Geometry", generator: "Geometry.toJSON"}};
        if (r.uuid = this.uuid, r.type = this.type, "" !== this.name && (r.name = this.name), void 0 !== this.parameters) {
            var o, a = this.parameters;
            for (o in a) void 0 !== a[o] && (r[o] = a[o]);
            return r
        }
        for (a = [], o = 0; o < this.vertices.length; o++) {
            var s = this.vertices[o];
            a.push(s.x, s.y, s.z)
        }
        var s = [], l = [], h = {}, u = [], c = {}, p = [], d = {};
        for (o = 0; o < this.faces.length; o++) {
            var f = this.faces[o], m = void 0 !== this.faceVertexUvs[0][o], g = 0 < f.normal.length(), E = 0 < f.vertexNormals.length,
                v = 1 !== f.color.r || 1 !== f.color.g || 1 !== f.color.b, y = 0 < f.vertexColors.length, T = 0, T = t(T, 0, 0),
                T = t(T, 1, !0), T = t(T, 2, !1), T = t(T, 3, m), T = t(T, 4, g), T = t(T, 5, E), T = t(T, 6, v), T = t(T, 7, y);
            s.push(T), s.push(f.a, f.b, f.c), s.push(f.materialIndex), m && (m = this.faceVertexUvs[0][o], s.push(n(m[0]), n(m[1]), n(m[2]))), g && s.push(e(f.normal)), E && (g = f.vertexNormals, s.push(e(g[0]), e(g[1]), e(g[2]))), v && s.push(i(f.color)), y && (f = f.vertexColors, s.push(i(f[0]), i(f[1]), i(f[2])))
        }
        return r.data = {}, r.data.vertices = a, r.data.normals = l, 0 < u.length && (r.data.colors = u), 0 < p.length && (r.data.uvs = [p]), r.data.faces = s, r
    }, clone: function () {
        return (new THREE.Geometry).copy(this)
    }, copy: function (t) {
        this.vertices = [], this.faces = [], this.faceVertexUvs = [[]];
        for (var e = t.vertices, i = 0, n = e.length; n > i; i++) this.vertices.push(e[i].clone());
        for (e = t.faces, i = 0, n = e.length; n > i; i++) this.faces.push(e[i].clone());
        for (i = 0, n = t.faceVertexUvs.length; n > i; i++) {
            e = t.faceVertexUvs[i], void 0 === this.faceVertexUvs[i] && (this.faceVertexUvs[i] = []);
            for (var r = 0, o = e.length; o > r; r++) {
                for (var a = e[r], s = [], l = 0, h = a.length; h > l; l++) s.push(a[l].clone());
                this.faceVertexUvs[i].push(s)
            }
        }
        return this
    }, dispose: function () {
        this.dispatchEvent({type: "dispose"})
    }
}), THREE.GeometryIdCount = 0,THREE.DirectGeometry = function () {
    Object.defineProperty(this, "id", {value: THREE.GeometryIdCount++}), this.uuid = THREE.Math.generateUUID(), this.name = "", this.type = "DirectGeometry", this.indices = [], this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingSphere = this.boundingBox = null, this.groupsNeedUpdate = this.uvsNeedUpdate = this.colorsNeedUpdate = this.normalsNeedUpdate = this.verticesNeedUpdate = !1
},Object.assign(THREE.DirectGeometry.prototype, THREE.EventDispatcher.prototype, {
    computeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,
    computeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,
    computeFaceNormals: function () {
        console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")
    },
    computeVertexNormals: function () {
        console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")
    },
    computeGroups: function (t) {
        var e, i, n = [];
        t = t.faces;
        for (var r = 0; r < t.length; r++) {
            var o = t[r];
            o.materialIndex !== i && (i = o.materialIndex, void 0 !== e && (e.count = 3 * r - e.start, n.push(e)), e = {
                start: 3 * r,
                materialIndex: i
            })
        }
        void 0 !== e && (e.count = 3 * r - e.start, n.push(e)), this.groups = n
    },
    fromGeometry: function (t) {
        var e, i = t.faces, n = t.vertices, r = t.faceVertexUvs, o = r[0] && 0 < r[0].length, a = r[1] && 0 < r[1].length,
            s = t.morphTargets, l = s.length;
        if (l > 0) {
            e = [];
            for (var h = 0; l > h; h++) e[h] = [];
            this.morphTargets.position = e
        }
        var u, c = t.morphNormals, p = c.length;
        if (p > 0) {
            for (u = [], h = 0; p > h; h++) u[h] = [];
            this.morphTargets.normal = u
        }
        for (var d = t.skinIndices, f = t.skinWeights, m = d.length === n.length, g = f.length === n.length, h = 0; h < i.length; h++) {
            var E = i[h];
            this.vertices.push(n[E.a], n[E.b], n[E.c]);
            var v = E.vertexNormals;
            for (3 === v.length ? this.normals.push(v[0], v[1], v[2]) : (v = E.normal, this.normals.push(v, v, v)), v = E.vertexColors, 3 === v.length ? this.colors.push(v[0], v[1], v[2]) : (v = E.color, this.colors.push(v, v, v)), !0 === o && (v = r[0][h], void 0 !== v ? this.uvs.push(v[0], v[1], v[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", h), this.uvs.push(new THREE.Vector2, new THREE.Vector2, new THREE.Vector2))), !0 === a && (v = r[1][h], void 0 !== v ? this.uvs2.push(v[0], v[1], v[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", h), this.uvs2.push(new THREE.Vector2, new THREE.Vector2, new THREE.Vector2))), v = 0; l > v; v++) {
                var y = s[v].vertices;
                e[v].push(y[E.a], y[E.b], y[E.c])
            }
            for (v = 0; p > v; v++) y = c[v].vertexNormals[h], u[v].push(y.a, y.b, y.c);
            m && this.skinIndices.push(d[E.a], d[E.b], d[E.c]), g && this.skinWeights.push(f[E.a], f[E.b], f[E.c])
        }
        return this.computeGroups(t), this.verticesNeedUpdate = t.verticesNeedUpdate, this.normalsNeedUpdate = t.normalsNeedUpdate, this.colorsNeedUpdate = t.colorsNeedUpdate, this.uvsNeedUpdate = t.uvsNeedUpdate, this.groupsNeedUpdate = t.groupsNeedUpdate, this
    },
    dispose: function () {
        this.dispatchEvent({type: "dispose"})
    }
}),THREE.BufferGeometry = function () {
    Object.defineProperty(this, "id", {value: THREE.GeometryIdCount++}), this.uuid = THREE.Math.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingSphere = this.boundingBox = null, this.drawRange = {
        start: 0,
        count: 1 / 0
    }
},Object.assign(THREE.BufferGeometry.prototype, THREE.EventDispatcher.prototype, {
    getIndex: function () {
        return this.index
    }, setIndex: function (t) {
        this.index = t
    }, addAttribute: function (t, e, i) {
        if (!1 == e instanceof THREE.BufferAttribute && !1 == e instanceof THREE.InterleavedBufferAttribute) console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.addAttribute(t, new THREE.BufferAttribute(e, i)); else {
            if ("index" !== t) return this.attributes[t] = e, this;
            console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(e)
        }
    }, getAttribute: function (t) {
        return this.attributes[t]
    }, removeAttribute: function (t) {
        return delete this.attributes[t], this
    }, addGroup: function (t, e, i) {
        this.groups.push({start: t, count: e, materialIndex: void 0 !== i ? i : 0})
    }, clearGroups: function () {
        this.groups = []
    }, setDrawRange: function (t, e) {
        this.drawRange.start = t, this.drawRange.count = e
    }, applyMatrix: function (t) {
        var e = this.attributes.position;
        return void 0 !== e && (t.applyToVector3Array(e.array), e.needsUpdate = !0), e = this.attributes.normal, void 0 !== e && ((new THREE.Matrix3).getNormalMatrix(t).applyToVector3Array(e.array), e.needsUpdate = !0), null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this
    }, rotateX: function () {
        var t;
        return function (e) {
            return void 0 === t && (t = new THREE.Matrix4), t.makeRotationX(e), this.applyMatrix(t), this
        }
    }(), rotateY: function () {
        var t;
        return function (e) {
            return void 0 === t && (t = new THREE.Matrix4), t.makeRotationY(e), this.applyMatrix(t), this
        }
    }(), rotateZ: function () {
        var t;
        return function (e) {
            return void 0 === t && (t = new THREE.Matrix4), t.makeRotationZ(e), this.applyMatrix(t), this
        }
    }(), translate: function () {
        var t;
        return function (e, i, n) {
            return void 0 === t && (t = new THREE.Matrix4), t.makeTranslation(e, i, n), this.applyMatrix(t), this
        }
    }(), scale: function () {
        var t;
        return function (e, i, n) {
            return void 0 === t && (t = new THREE.Matrix4), t.makeScale(e, i, n), this.applyMatrix(t), this
        }
    }(), lookAt: function () {
        var t;
        return function (e) {
            void 0 === t && (t = new THREE.Object3D), t.lookAt(e), t.updateMatrix(), this.applyMatrix(t.matrix)
        }
    }(), center: function () {
        this.computeBoundingBox();
        var t = this.boundingBox.center().negate();
        return this.translate(t.x, t.y, t.z), t
    }, setFromObject: function (t) {
        var e = t.geometry;
        if (t instanceof THREE.Points || t instanceof THREE.Line) {
            t = new THREE.Float32Attribute(3 * e.vertices.length, 3);
            var i = new THREE.Float32Attribute(3 * e.colors.length, 3);
            this.addAttribute("position", t.copyVector3sArray(e.vertices)), this.addAttribute("color", i.copyColorsArray(e.colors)), e.lineDistances && e.lineDistances.length === e.vertices.length && (t = new THREE.Float32Attribute(e.lineDistances.length, 1), this.addAttribute("lineDistance", t.copyArray(e.lineDistances))), null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone())
        } else t instanceof THREE.Mesh && e instanceof THREE.Geometry && this.fromGeometry(e);
        return this
    }, updateFromObject: function (t) {
        var e = t.geometry;
        if (t instanceof THREE.Mesh) {
            var i = e.__directGeometry;
            if (void 0 === i || !0 === e.elementsNeedUpdate) return this.fromGeometry(e);
            i.verticesNeedUpdate = e.verticesNeedUpdate || e.elementsNeedUpdate, i.normalsNeedUpdate = e.normalsNeedUpdate || e.elementsNeedUpdate, i.colorsNeedUpdate = e.colorsNeedUpdate || e.elementsNeedUpdate, i.uvsNeedUpdate = e.uvsNeedUpdate || e.elementsNeedUpdate, i.groupsNeedUpdate = e.groupsNeedUpdate || e.elementsNeedUpdate, e.elementsNeedUpdate = !1, e.verticesNeedUpdate = !1, e.normalsNeedUpdate = !1, e.colorsNeedUpdate = !1, e.uvsNeedUpdate = !1, e.groupsNeedUpdate = !1, e = i
        }
        return !0 === e.verticesNeedUpdate && (i = this.attributes.position, void 0 !== i && (i.copyVector3sArray(e.vertices), i.needsUpdate = !0), e.verticesNeedUpdate = !1), !0 === e.normalsNeedUpdate && (i = this.attributes.normal, void 0 !== i && (i.copyVector3sArray(e.normals), i.needsUpdate = !0), e.normalsNeedUpdate = !1), !0 === e.colorsNeedUpdate && (i = this.attributes.color, void 0 !== i && (i.copyColorsArray(e.colors), i.needsUpdate = !0), e.colorsNeedUpdate = !1), e.uvsNeedUpdate && (i = this.attributes.uv, void 0 !== i && (i.copyVector2sArray(e.uvs), i.needsUpdate = !0), e.uvsNeedUpdate = !1), e.lineDistancesNeedUpdate && (i = this.attributes.lineDistance, void 0 !== i && (i.copyArray(e.lineDistances), i.needsUpdate = !0), e.lineDistancesNeedUpdate = !1), e.groupsNeedUpdate && (e.computeGroups(t.geometry), this.groups = e.groups, e.groupsNeedUpdate = !1), this
    }, fromGeometry: function (t) {
        return t.__directGeometry = (new THREE.DirectGeometry).fromGeometry(t), this.fromDirectGeometry(t.__directGeometry)
    }, fromDirectGeometry: function (t) {
        var e = new Float32Array(3 * t.vertices.length);
        this.addAttribute("position", new THREE.BufferAttribute(e, 3).copyVector3sArray(t.vertices)), 0 < t.normals.length && (e = new Float32Array(3 * t.normals.length), this.addAttribute("normal", new THREE.BufferAttribute(e, 3).copyVector3sArray(t.normals))), 0 < t.colors.length && (e = new Float32Array(3 * t.colors.length), this.addAttribute("color", new THREE.BufferAttribute(e, 3).copyColorsArray(t.colors))), 0 < t.uvs.length && (e = new Float32Array(2 * t.uvs.length), this.addAttribute("uv", new THREE.BufferAttribute(e, 2).copyVector2sArray(t.uvs))), 0 < t.uvs2.length && (e = new Float32Array(2 * t.uvs2.length), this.addAttribute("uv2", new THREE.BufferAttribute(e, 2).copyVector2sArray(t.uvs2))), 0 < t.indices.length && (e = new (65535 < t.vertices.length ? Uint32Array : Uint16Array)(3 * t.indices.length), this.setIndex(new THREE.BufferAttribute(e, 1).copyIndicesArray(t.indices))), this.groups = t.groups;
        for (var i in t.morphTargets) {
            for (var e = [], n = t.morphTargets[i], r = 0, o = n.length; o > r; r++) {
                var a = n[r], s = new THREE.Float32Attribute(3 * a.length, 3);
                e.push(s.copyVector3sArray(a))
            }
            this.morphAttributes[i] = e
        }
        return 0 < t.skinIndices.length && (i = new THREE.Float32Attribute(4 * t.skinIndices.length, 4), this.addAttribute("skinIndex", i.copyVector4sArray(t.skinIndices))), 0 < t.skinWeights.length && (i = new THREE.Float32Attribute(4 * t.skinWeights.length, 4), this.addAttribute("skinWeight", i.copyVector4sArray(t.skinWeights))), null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone()), this
    }, computeBoundingBox: function () {
        null === this.boundingBox && (this.boundingBox = new THREE.Box3);
        var t = this.attributes.position.array;
        void 0 !== t ? this.boundingBox.setFromArray(t) : this.boundingBox.makeEmpty(), (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
    }, computeBoundingSphere: function () {
        var t = new THREE.Box3, e = new THREE.Vector3;
        return function () {
            null === this.boundingSphere && (this.boundingSphere = new THREE.Sphere);
            var i = this.attributes.position;
            if (i) {
                var i = i.array, n = this.boundingSphere.center;
                t.setFromArray(i), t.center(n);
                for (var r = 0, o = 0, a = i.length; a > o; o += 3) e.fromArray(i, o), r = Math.max(r, n.distanceToSquared(e));
                this.boundingSphere.radius = Math.sqrt(r), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
            }
        }
    }(), computeFaceNormals: function () {
    }, computeVertexNormals: function () {
        var t = this.index, e = this.attributes, i = this.groups;
        if (e.position) {
            var n = e.position.array;
            if (void 0 === e.normal) this.addAttribute("normal", new THREE.BufferAttribute(new Float32Array(n.length), 3)); else for (var r = e.normal.array, o = 0, a = r.length; a > o; o++) r[o] = 0;
            var s, l, h, r = e.normal.array, u = new THREE.Vector3, c = new THREE.Vector3, p = new THREE.Vector3, d = new THREE.Vector3,
                f = new THREE.Vector3;
            if (t) {
                t = t.array, 0 === i.length && this.addGroup(0, t.length);
                for (var m = 0, g = i.length; g > m; ++m) for (o = i[m], a = o.start, s = o.count, o = a, a += s; a > o; o += 3) s = 3 * t[o + 0], l = 3 * t[o + 1], h = 3 * t[o + 2], u.fromArray(n, s), c.fromArray(n, l), p.fromArray(n, h), d.subVectors(p, c), f.subVectors(u, c), d.cross(f), r[s] += d.x, r[s + 1] += d.y, r[s + 2] += d.z, r[l] += d.x, r[l + 1] += d.y, r[l + 2] += d.z, r[h] += d.x, r[h + 1] += d.y, r[h + 2] += d.z
            } else for (o = 0, a = n.length; a > o; o += 9) u.fromArray(n, o), c.fromArray(n, o + 3), p.fromArray(n, o + 6), d.subVectors(p, c), f.subVectors(u, c), d.cross(f), r[o] = d.x, r[o + 1] = d.y, r[o + 2] = d.z, r[o + 3] = d.x, r[o + 4] = d.y, r[o + 5] = d.z, r[o + 6] = d.x, r[o + 7] = d.y, r[o + 8] = d.z;
            this.normalizeNormals(), e.normal.needsUpdate = !0
        }
    }, merge: function (t, e) {
        if (!1 != t instanceof THREE.BufferGeometry) {
            void 0 === e && (e = 0);
            var i, n = this.attributes;
            for (i in n) if (void 0 !== t.attributes[i]) for (var r = n[i].array, o = t.attributes[i], a = o.array, s = 0, o = o.itemSize * e; s < a.length; s++, o++) r[o] = a[s];
            return this
        }
        console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", t)
    }, normalizeNormals: function () {
        for (var t, e, i, n = this.attributes.normal.array, r = 0, o = n.length; o > r; r += 3) t = n[r], e = n[r + 1], i = n[r + 2], t = 1 / Math.sqrt(t * t + e * e + i * i), n[r] *= t, n[r + 1] *= t, n[r + 2] *= t
    }, toNonIndexed: function () {
        if (null === this.index) return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
        var t, e = new THREE.BufferGeometry, i = this.index.array, n = this.attributes;
        for (t in n) {
            for (var r = n[t], o = r.array, r = r.itemSize, a = new o.constructor(i.length * r), s = 0, l = 0, h = 0, u = i.length; u > h; h++) for (var s = i[h] * r, c = 0; r > c; c++) a[l++] = o[s++];
            e.addAttribute(t, new THREE.BufferAttribute(a, r))
        }
        return e
    }, toJSON: function () {
        var t = {metadata: {version: 4.4, type: "BufferGeometry", generator: "BufferGeometry.toJSON"}};
        if (t.uuid = this.uuid, t.type = this.type, "" !== this.name && (t.name = this.name), void 0 !== this.parameters) {
            var e, i = this.parameters;
            for (e in i) void 0 !== i[e] && (t[e] = i[e]);
            return t
        }
        t.data = {attributes: {}};
        var n = this.index;
        null !== n && (i = Array.prototype.slice.call(n.array), t.data.index = {
            type: n.array.constructor.name,
            array: i
        }), n = this.attributes;
        for (e in n) {
            var r = n[e], i = Array.prototype.slice.call(r.array);
            t.data.attributes[e] = {itemSize: r.itemSize, type: r.array.constructor.name, array: i, normalized: r.normalized}
        }
        return e = this.groups, 0 < e.length && (t.data.groups = JSON.parse(JSON.stringify(e))), e = this.boundingSphere, null !== e && (t.data.boundingSphere = {
            center: e.center.toArray(),
            radius: e.radius
        }), t
    }, clone: function () {
        return (new THREE.BufferGeometry).copy(this)
    }, copy: function (t) {
        var e = t.index;
        null !== e && this.setIndex(e.clone());
        var i, e = t.attributes;
        for (i in e) this.addAttribute(i, e[i].clone());
        for (t = t.groups, i = 0, e = t.length; e > i; i++) {
            var n = t[i];
            this.addGroup(n.start, n.count, n.materialIndex)
        }
        return this
    }, dispose: function () {
        this.dispatchEvent({type: "dispose"})
    }
}),THREE.BufferGeometry.MaxIndex = 65535,THREE.InstancedBufferGeometry = function () {
    THREE.BufferGeometry.call(this), this.type = "InstancedBufferGeometry", this.maxInstancedCount = void 0
},THREE.InstancedBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry,THREE.InstancedBufferGeometry.prototype.addGroup = function (t, e, i) {
    this.groups.push({start: t, count: e, instances: i})
},THREE.InstancedBufferGeometry.prototype.copy = function (t) {
    var e = t.index;
    null !== e && this.setIndex(e.clone());
    var i, e = t.attributes;
    for (i in e) this.addAttribute(i, e[i].clone());
    for (t = t.groups, i = 0, e = t.length; e > i; i++) {
        var n = t[i];
        this.addGroup(n.start, n.count, n.instances)
    }
    return this
},THREE.Uniform = function (t, e) {
    "string" == typeof t && (console.warn("THREE.Uniform: Type parameter is no longer needed."), t = e), this.value = t, this.dynamic = !1
},THREE.Uniform.prototype = {
    constructor: THREE.Uniform, onUpdate: function (t) {
        return this.dynamic = !0, this.onUpdateCallback = t, this
    }
},THREE.AnimationAction = function () {
    throw Error("THREE.AnimationAction: Use mixer.clipAction for construction.")
},THREE.AnimationAction._new = function (t, e, i) {
    this._mixer = t, this._clip = e, this._localRoot = i || null, t = e.tracks, e = t.length, i = Array(e);
    for (var n = {endingStart: THREE.ZeroCurvatureEnding, endingEnd: THREE.ZeroCurvatureEnding}, r = 0; r !== e; ++r) {
        var o = t[r].createInterpolant(null);
        i[r] = o, o.settings = n
    }
    this._interpolantSettings = n, this._interpolants = i, this._propertyBindings = Array(e), this._weightInterpolant = this._timeScaleInterpolant = this._byClipCacheIndex = this._cacheIndex = null, this.loop = THREE.LoopRepeat, this._loopCount = -1, this._startTime = null, this.time = 0, this._effectiveWeight = this.weight = this._effectiveTimeScale = this.timeScale = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtEnd = this.zeroSlopeAtStart = !0
},THREE.AnimationAction._new.prototype = {
    constructor: THREE.AnimationAction._new, play: function () {
        return this._mixer._activateAction(this), this
    }, stop: function () {
        return this._mixer._deactivateAction(this), this.reset()
    }, reset: function () {
        return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping()
    }, isRunning: function () {
        return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
    }, isScheduled: function () {
        return this._mixer._isActiveAction(this)
    }, startAt: function (t) {
        return this._startTime = t, this
    }, setLoop: function (t, e) {
        return this.loop = t, this.repetitions = e, this
    }, setEffectiveWeight: function (t) {
        return this.weight = t, this._effectiveWeight = this.enabled ? t : 0, this.stopFading()
    }, getEffectiveWeight: function () {
        return this._effectiveWeight
    }, fadeIn: function (t) {
        return this._scheduleFading(t, 0, 1)
    }, fadeOut: function (t) {
        return this._scheduleFading(t, 1, 0)
    }, crossFadeFrom: function (t, e, i) {
        if (t.fadeOut(e), this.fadeIn(e), i) {
            i = this._clip.duration;
            var n = t._clip.duration, r = i / n;
            t.warp(1, n / i, e), this.warp(r, 1, e)
        }
        return this
    }, crossFadeTo: function (t, e, i) {
        return t.crossFadeFrom(this, e, i)
    }, stopFading: function () {
        var t = this._weightInterpolant;
        return null !== t && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(t)), this
    }, setEffectiveTimeScale: function (t) {
        return this.timeScale = t, this._effectiveTimeScale = this.paused ? 0 : t, this.stopWarping()
    }, getEffectiveTimeScale: function () {
        return this._effectiveTimeScale
    }, setDuration: function (t) {
        return this.timeScale = this._clip.duration / t, this.stopWarping()
    }, syncWith: function (t) {
        return this.time = t.time, this.timeScale = t.timeScale, this.stopWarping()
    }, halt: function (t) {
        return this.warp(this._effectiveTimeScale, 0, t)
    }, warp: function (t, e, i) {
        var n = this._mixer, r = n.time, o = this._timeScaleInterpolant, a = this.timeScale;
        return null === o && (this._timeScaleInterpolant = o = n._lendControlInterpolant()), n = o.parameterPositions, o = o.sampleValues, n[0] = r, n[1] = r + i, o[0] = t / a, o[1] = e / a, this
    }, stopWarping: function () {
        var t = this._timeScaleInterpolant;
        return null !== t && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(t)), this
    }, getMixer: function () {
        return this._mixer
    }, getClip: function () {
        return this._clip
    }, getRoot: function () {
        return this._localRoot || this._mixer._root
    }, _update: function (t, e, i, n) {
        var r = this._startTime;
        if (null !== r) {
            if (e = (t - r) * i, 0 > e || 0 === i) return;
            this._startTime = null, e *= i
        }
        if (e *= this._updateTimeScale(t), i = this._updateTime(e), t = this._updateWeight(t), t > 0) {
            e = this._interpolants;
            for (var r = this._propertyBindings, o = 0, a = e.length; o !== a; ++o) e[o].evaluate(i), r[o].accumulate(n, t)
        }
    }, _updateWeight: function (t) {
        var e = 0;
        if (this.enabled) {
            var e = this.weight, i = this._weightInterpolant;
            if (null !== i) {
                var n = i.evaluate(t)[0], e = e * n;
                t > i.parameterPositions[1] && (this.stopFading(), 0 === n && (this.enabled = !1))
            }
        }
        return this._effectiveWeight = e
    }, _updateTimeScale: function (t) {
        var e = 0;
        if (!this.paused) {
            var e = this.timeScale, i = this._timeScaleInterpolant;
            if (null !== i) {
                var n = i.evaluate(t)[0], e = e * n;
                t > i.parameterPositions[1] && (this.stopWarping(), 0 === e ? this.paused = !0 : this.timeScale = e)
            }
        }
        return this._effectiveTimeScale = e
    }, _updateTime: function (t) {
        var e = this.time + t;
        if (0 === t) return e;
        var i = this._clip.duration, n = this.loop, r = this._loopCount;
        if (n === THREE.LoopOnce) t:{
            if (-1 === r && (this.loopCount = 0, this._setEndings(!0, !0, !1)), e >= i) e = i; else {
                if (!(0 > e)) break t;
                e = 0
            }
            this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, this._mixer.dispatchEvent({
                type: "finished",
                action: this,
                direction: 0 > t ? -1 : 1
            })
        } else {
            if (n = n === THREE.LoopPingPong, -1 === r && (t >= 0 ? (r = 0, this._setEndings(!0, 0 === this.repetitions, n)) : this._setEndings(0 === this.repetitions, !0, n)), e >= i || 0 > e) {
                var o = Math.floor(e / i), e = e - i * o, r = r + Math.abs(o), a = this.repetitions - r;
                0 > a ? (this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, e = t > 0 ? i : 0, this._mixer.dispatchEvent({
                    type: "finished",
                    action: this,
                    direction: t > 0 ? 1 : -1
                })) : (0 === a ? (t = 0 > t, this._setEndings(t, !t, n)) : this._setEndings(!1, !1, n), this._loopCount = r, this._mixer.dispatchEvent({
                    type: "loop",
                    action: this,
                    loopDelta: o
                }))
            }
            if (n && 1 === (1 & r)) return this.time = e, i - e
        }
        return this.time = e
    }, _setEndings: function (t, e, i) {
        var n = this._interpolantSettings;
        i ? (n.endingStart = THREE.ZeroSlopeEnding, n.endingEnd = THREE.ZeroSlopeEnding) : (n.endingStart = t ? this.zeroSlopeAtStart ? THREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding : THREE.WrapAroundEnding, n.endingEnd = e ? this.zeroSlopeAtEnd ? THREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding : THREE.WrapAroundEnding)
    }, _scheduleFading: function (t, e, i) {
        var n = this._mixer, r = n.time, o = this._weightInterpolant;
        return null === o && (this._weightInterpolant = o = n._lendControlInterpolant()), n = o.parameterPositions, o = o.sampleValues, n[0] = r, o[0] = e, n[1] = r + t, o[1] = i, this
    }
},THREE.AnimationClip = function (t, e, i) {
    this.name = t, this.tracks = i, this.duration = void 0 !== e ? e : -1, this.uuid = THREE.Math.generateUUID(), 0 > this.duration && this.resetDuration(), this.trim(), this.optimize()
},THREE.AnimationClip.prototype = {
    constructor: THREE.AnimationClip, resetDuration: function () {
        for (var t = 0, e = 0, i = this.tracks.length; e !== i; ++e) var n = this.tracks[e], t = Math.max(t, n.times[n.times.length - 1]);
        this.duration = t
    }, trim: function () {
        for (var t = 0; t < this.tracks.length; t++) this.tracks[t].trim(0, this.duration);
        return this
    }, optimize: function () {
        for (var t = 0; t < this.tracks.length; t++) this.tracks[t].optimize();
        return this
    }
},Object.assign(THREE.AnimationClip, {
    parse: function (t) {
        for (var e = [], i = t.tracks, n = 1 / (t.fps || 1), r = 0, o = i.length; r !== o; ++r) e.push(THREE.KeyframeTrack.parse(i[r]).scale(n));
        return new THREE.AnimationClip(t.name, t.duration, e)
    }, toJSON: function (t) {
        var e = [], i = t.tracks;
        t = {name: t.name, duration: t.duration, tracks: e};
        for (var n = 0, r = i.length; n !== r; ++n) e.push(THREE.KeyframeTrack.toJSON(i[n]));
        return t
    }, CreateFromMorphTargetSequence: function (t, e, i, n) {
        for (var r = e.length, o = [], a = 0; r > a; a++) {
            var s = [], l = [];
            s.push((a + r - 1) % r, a, (a + 1) % r), l.push(0, 1, 0);
            var h = THREE.AnimationUtils.getKeyframeOrder(s), s = THREE.AnimationUtils.sortedArray(s, 1, h),
                l = THREE.AnimationUtils.sortedArray(l, 1, h);
            n || 0 !== s[0] || (s.push(r), l.push(l[0])), o.push(new THREE.NumberKeyframeTrack(".morphTargetInfluences[" + e[a].name + "]", s, l).scale(1 / i))
        }
        return new THREE.AnimationClip(t, -1, o)
    }, findByName: function (t, e) {
        var i = t;
        Array.isArray(t) || (i = t.geometry && t.geometry.animations || t.animations);
        for (var n = 0; n < i.length; n++) if (i[n].name === e) return i[n];
        return null
    }, CreateClipsFromMorphTargetSequences: function (t, e, i) {
        for (var n = {}, r = /^([\w-]*?)([\d]+)$/, o = 0, a = t.length; a > o; o++) {
            var s = t[o], l = s.name.match(r);
            if (l && 1 < l.length) {
                var h = l[1];
                (l = n[h]) || (n[h] = l = []), l.push(s)
            }
        }
        t = [];
        for (h in n) t.push(THREE.AnimationClip.CreateFromMorphTargetSequence(h, n[h], e, i));
        return t
    }, parseAnimation: function (t, e, i) {
        if (!t) return console.error("  no animation in JSONLoader data"), null;
        i = function (t, e, i, n, r) {
            if (0 !== i.length) {
                var o = [], a = [];
                THREE.AnimationUtils.flattenJSON(i, o, a, n), 0 !== o.length && r.push(new t(e, o, a))
            }
        };
        var n = [], r = t.name || "default", o = t.length || -1, a = t.fps || 30;
        t = t.hierarchy || [];
        for (var s = 0; s < t.length; s++) {
            var l = t[s].keys;
            if (l && 0 !== l.length) if (l[0].morphTargets) {
                for (var o = {}, h = 0; h < l.length; h++) if (l[h].morphTargets) for (var u = 0; u < l[h].morphTargets.length; u++) o[l[h].morphTargets[u]] = -1;
                for (var c in o) {
                    for (var p = [], d = [], u = 0; u !== l[h].morphTargets.length; ++u) {
                        var f = l[h];
                        p.push(f.time), d.push(f.morphTarget === c ? 1 : 0)
                    }
                    n.push(new THREE.NumberKeyframeTrack(".morphTargetInfluence[" + c + "]", p, d))
                }
                o = o.length * (a || 1)
            } else h = ".bones[" + e[s].name + "]", i(THREE.VectorKeyframeTrack, h + ".position", l, "pos", n), i(THREE.QuaternionKeyframeTrack, h + ".quaternion", l, "rot", n), i(THREE.VectorKeyframeTrack, h + ".scale", l, "scl", n)
        }
        return 0 === n.length ? null : new THREE.AnimationClip(r, o, n)
    }
}),THREE.AnimationMixer = function (t) {
    this._root = t, this._initMemoryManager(), this.time = this._accuIndex = 0, this.timeScale = 1
},Object.assign(THREE.AnimationMixer.prototype, THREE.EventDispatcher.prototype, {
    clipAction: function (t, e) {
        var i = e || this._root, n = i.uuid, r = "string" == typeof t ? THREE.AnimationClip.findByName(i, t) : t,
            i = null !== r ? r.uuid : t, o = this._actionsByClip[i], a = null;
        if (void 0 !== o) {
            if (a = o.actionByRoot[n], void 0 !== a) return a;
            a = o.knownActions[0], null === r && (r = a._clip)
        }
        return null === r ? null : (r = new THREE.AnimationMixer._Action(this, r, e), this._bindAction(r, a), this._addInactiveAction(r, i, n), r)
    }, existingAction: function (t, e) {
        var i = e || this._root, n = i.uuid, i = "string" == typeof t ? THREE.AnimationClip.findByName(i, t) : t,
            i = this._actionsByClip[i ? i.uuid : t];
        return void 0 !== i ? i.actionByRoot[n] || null : null
    }, stopAllAction: function () {
        for (var t = this._actions, e = this._nActiveActions, i = this._bindings, n = this._nActiveBindings, r = this._nActiveBindings = this._nActiveActions = 0; r !== e; ++r) t[r].reset();
        for (r = 0; r !== n; ++r) i[r].useCount = 0;
        return this
    }, update: function (t) {
        t *= this.timeScale;
        for (var e = this._actions, i = this._nActiveActions, n = this.time += t, r = Math.sign(t), o = this._accuIndex ^= 1, a = 0; a !== i; ++a) {
            var s = e[a];
            s.enabled && s._update(n, t, r, o)
        }
        for (t = this._bindings, e = this._nActiveBindings, a = 0; a !== e; ++a) t[a].apply(o);
        return this
    }, getRoot: function () {
        return this._root
    }, uncacheClip: function (t) {
        var e = this._actions;
        t = t.uuid;
        var i = this._actionsByClip, n = i[t];
        if (void 0 !== n) {
            for (var n = n.knownActions, r = 0, o = n.length; r !== o; ++r) {
                var a = n[r];
                this._deactivateAction(a);
                var s = a._cacheIndex, l = e[e.length - 1];
                a._cacheIndex = null, a._byClipCacheIndex = null, l._cacheIndex = s, e[s] = l, e.pop(), this._removeInactiveBindingsForAction(a)
            }
            delete i[t]
        }
    }, uncacheRoot: function (t) {
        t = t.uuid;
        var e, i = this._actionsByClip;
        for (e in i) {
            var n = i[e].actionByRoot[t];
            void 0 !== n && (this._deactivateAction(n), this._removeInactiveAction(n))
        }
        if (e = this._bindingsByRootAndName[t], void 0 !== e) for (var r in e) t = e[r], t.restoreOriginalState(), this._removeInactiveBinding(t)
    }, uncacheAction: function (t, e) {
        var i = this.existingAction(t, e);
        null !== i && (this._deactivateAction(i), this._removeInactiveAction(i))
    }
}),THREE.AnimationMixer._Action = THREE.AnimationAction._new,Object.assign(THREE.AnimationMixer.prototype, {
    _bindAction: function (t, e) {
        var i = t._localRoot || this._root, n = t._clip.tracks, r = n.length, o = t._propertyBindings, a = t._interpolants, s = i.uuid,
            l = this._bindingsByRootAndName, h = l[s];
        for (void 0 === h && (h = {}, l[s] = h), l = 0; l !== r; ++l) {
            var u = n[l], c = u.name, p = h[c];
            if (void 0 === p) {
                if (p = o[l], void 0 !== p) {
                    null === p._cacheIndex && (++p.referenceCount, this._addInactiveBinding(p, s, c));
                    continue
                }
                p = new THREE.PropertyMixer(THREE.PropertyBinding.create(i, c, e && e._propertyBindings[l].binding.parsedPath), u.ValueTypeName, u.getValueSize()), ++p.referenceCount, this._addInactiveBinding(p, s, c)
            }
            o[l] = p, a[l].resultBuffer = p.buffer
        }
    }, _activateAction: function (t) {
        if (!this._isActiveAction(t)) {
            if (null === t._cacheIndex) {
                var e = (t._localRoot || this._root).uuid, i = t._clip.uuid, n = this._actionsByClip[i];
                this._bindAction(t, n && n.knownActions[0]), this._addInactiveAction(t, i, e)
            }
            for (e = t._propertyBindings, i = 0, n = e.length; i !== n; ++i) {
                var r = e[i];
                0 === r.useCount++ && (this._lendBinding(r), r.saveOriginalState())
            }
            this._lendAction(t)
        }
    }, _deactivateAction: function (t) {
        if (this._isActiveAction(t)) {
            for (var e = t._propertyBindings, i = 0, n = e.length; i !== n; ++i) {
                var r = e[i];
                0 === --r.useCount && (r.restoreOriginalState(), this._takeBackBinding(r))
            }
            this._takeBackAction(t)
        }
    }, _initMemoryManager: function () {
        this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
        var t = this;
        this.stats = {
            actions: {
                get total() {
                    return t._actions.length
                }, get inUse() {
                    return t._nActiveActions
                }
            }, bindings: {
                get total() {
                    return t._bindings.length
                }, get inUse() {
                    return t._nActiveBindings
                }
            }, controlInterpolants: {
                get total() {
                    return t._controlInterpolants.length
                }, get inUse() {
                    return t._nActiveControlInterpolants
                }
            }
        }
    }, _isActiveAction: function (t) {
        return t = t._cacheIndex, null !== t && t < this._nActiveActions
    }, _addInactiveAction: function (t, e, i) {
        var n = this._actions, r = this._actionsByClip, o = r[e];
        void 0 === o ? (o = {
            knownActions: [t],
            actionByRoot: {}
        }, t._byClipCacheIndex = 0, r[e] = o) : (e = o.knownActions, t._byClipCacheIndex = e.length, e.push(t)), t._cacheIndex = n.length, n.push(t), o.actionByRoot[i] = t
    }, _removeInactiveAction: function (t) {
        var e = this._actions, i = e[e.length - 1], n = t._cacheIndex;
        i._cacheIndex = n, e[n] = i, e.pop(), t._cacheIndex = null;
        var i = t._clip.uuid, n = this._actionsByClip, r = n[i], o = r.knownActions, a = o[o.length - 1], s = t._byClipCacheIndex;
        a._byClipCacheIndex = s, o[s] = a, o.pop(), t._byClipCacheIndex = null, delete r.actionByRoot[(e._localRoot || this._root).uuid], 0 === o.length && delete n[i], this._removeInactiveBindingsForAction(t)
    }, _removeInactiveBindingsForAction: function (t) {
        t = t._propertyBindings;
        for (var e = 0, i = t.length; e !== i; ++e) {
            var n = t[e];
            0 === --n.referenceCount && this._removeInactiveBinding(n)
        }
    }, _lendAction: function (t) {
        var e = this._actions, i = t._cacheIndex, n = this._nActiveActions++, r = e[n];
        t._cacheIndex = n, e[n] = t, r._cacheIndex = i, e[i] = r
    }, _takeBackAction: function (t) {
        var e = this._actions, i = t._cacheIndex, n = --this._nActiveActions, r = e[n];
        t._cacheIndex = n, e[n] = t, r._cacheIndex = i, e[i] = r
    }, _addInactiveBinding: function (t, e, i) {
        var n = this._bindingsByRootAndName, r = n[e], o = this._bindings;
        void 0 === r && (r = {}, n[e] = r), r[i] = t, t._cacheIndex = o.length, o.push(t)
    }, _removeInactiveBinding: function (t) {
        var e = this._bindings, i = t.binding, n = i.rootNode.uuid, i = i.path, r = this._bindingsByRootAndName, o = r[n],
            a = e[e.length - 1];
        t = t._cacheIndex, a._cacheIndex = t, e[t] = a, e.pop(), delete o[i];
        t:{
            for (var s in o) break t;
            delete r[n]
        }
    }, _lendBinding: function (t) {
        var e = this._bindings, i = t._cacheIndex, n = this._nActiveBindings++, r = e[n];
        t._cacheIndex = n, e[n] = t, r._cacheIndex = i, e[i] = r
    }, _takeBackBinding: function (t) {
        var e = this._bindings, i = t._cacheIndex, n = --this._nActiveBindings, r = e[n];
        t._cacheIndex = n, e[n] = t, r._cacheIndex = i, e[i] = r
    }, _lendControlInterpolant: function () {
        var t = this._controlInterpolants, e = this._nActiveControlInterpolants++, i = t[e];
        return void 0 === i && (i = new THREE.LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer), i.__cacheIndex = e, t[e] = i), i
    }, _takeBackControlInterpolant: function (t) {
        var e = this._controlInterpolants, i = t.__cacheIndex, n = --this._nActiveControlInterpolants, r = e[n];
        t.__cacheIndex = n, e[n] = t, r.__cacheIndex = i, e[i] = r
    }, _controlInterpolantsResultBuffer: new Float32Array(1)
}),THREE.AnimationObjectGroup = function (t) {
    this.uuid = THREE.Math.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
    var e = {};
    this._indicesByUUID = e;
    for (var i = 0, n = arguments.length; i !== n; ++i) e[arguments[i].uuid] = i;
    this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
    var r = this;
    this.stats = {
        objects: {
            get total() {
                return r._objects.length
            }, get inUse() {
                return this.total - r.nCachedObjects_
            }
        }, get bindingsPerObject() {
            return r._bindings.length
        }
    }
},THREE.AnimationObjectGroup.prototype = {
    constructor: THREE.AnimationObjectGroup, add: function (t) {
        for (var e = this._objects, i = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, o = this._paths, a = this._parsedPaths, s = this._bindings, l = s.length, h = 0, u = arguments.length; h !== u; ++h) {
            var c = arguments[h], p = c.uuid, d = r[p];
            if (void 0 === d) {
                d = i++, r[p] = d, e.push(c);
                for (var p = 0, f = l; p !== f; ++p) s[p].push(new THREE.PropertyBinding(c, o[p], a[p]))
            } else if (n > d) {
                var m = e[d], g = --n, f = e[g];
                for (r[f.uuid] = d, e[d] = f, r[p] = g, e[g] = c, p = 0, f = l; p !== f; ++p) {
                    var E = s[p], v = E[d];
                    E[d] = E[g], void 0 === v && (v = new THREE.PropertyBinding(c, o[p], a[p])), E[g] = v
                }
            } else e[d] !== m && console.error("Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...")
        }
        this.nCachedObjects_ = n
    }, remove: function (t) {
        for (var e = this._objects, i = this.nCachedObjects_, n = this._indicesByUUID, r = this._bindings, o = r.length, a = 0, s = arguments.length; a !== s; ++a) {
            var l = arguments[a], h = l.uuid, u = n[h];
            if (void 0 !== u && u >= i) {
                var c = i++, p = e[c];
                for (n[p.uuid] = u, e[u] = p, n[h] = c, e[c] = l, l = 0, h = o; l !== h; ++l) {
                    var p = r[l], d = p[u];
                    p[u] = p[c], p[c] = d
                }
            }
        }
        this.nCachedObjects_ = i
    }, uncache: function (t) {
        for (var e = this._objects, i = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, o = this._bindings, a = o.length, s = 0, l = arguments.length; s !== l; ++s) {
            var h = arguments[s].uuid, u = r[h];
            if (void 0 !== u) if (delete r[h], n > u) {
                var h = --n, c = e[h], p = --i, d = e[p];
                for (r[c.uuid] = u, e[u] = c, r[d.uuid] = h, e[h] = d, e.pop(), c = 0, d = a; c !== d; ++c) {
                    var f = o[c], m = f[p];
                    f[u] = f[h], f[h] = m, f.pop()
                }
            } else for (p = --i, d = e[p], r[d.uuid] = u, e[u] = d, e.pop(), c = 0, d = a; c !== d; ++c) f = o[c], f[u] = f[p], f.pop()
        }
        this.nCachedObjects_ = n
    }, subscribe_: function (t, e) {
        var i = this._bindingsIndicesByPath, n = i[t], r = this._bindings;
        if (void 0 !== n) return r[n];
        var o = this._paths, a = this._parsedPaths, s = this._objects, l = this.nCachedObjects_, h = Array(s.length), n = r.length;
        for (i[t] = n, o.push(t), a.push(e), r.push(h), i = l, n = s.length; i !== n; ++i) h[i] = new THREE.PropertyBinding(s[i], t, e);
        return h
    }, unsubscribe_: function (t) {
        var e = this._bindingsIndicesByPath, i = e[t];
        if (void 0 !== i) {
            var n = this._paths, r = this._parsedPaths, o = this._bindings, a = o.length - 1, s = o[a];
            e[t[a]] = i, o[i] = s, o.pop(), r[i] = r[a], r.pop(), n[i] = n[a], n.pop()
        }
    }
},THREE.AnimationUtils = {
    arraySlice: function (t, e, i) {
        return THREE.AnimationUtils.isTypedArray(t) ? new t.constructor(t.subarray(e, i)) : t.slice(e, i)
    }, convertArray: function (t, e, i) {
        return !t || !i && t.constructor === e ? t : "number" == typeof e.BYTES_PER_ELEMENT ? new e(t) : Array.prototype.slice.call(t)
    }, isTypedArray: function (t) {
        return ArrayBuffer.isView(t) && !(t instanceof DataView)
    }, getKeyframeOrder: function (t) {
        for (var e = t.length, i = Array(e), n = 0; n !== e; ++n) i[n] = n;
        return i.sort(function (e, i) {
            return t[e] - t[i]
        }), i
    }, sortedArray: function (t, e, i) {
        for (var n = t.length, r = new t.constructor(n), o = 0, a = 0; a !== n; ++o) for (var s = i[o] * e, l = 0; l !== e; ++l) r[a++] = t[s + l];
        return r
    }, flattenJSON: function (t, e, i, n) {
        for (var r = 1, o = t[0]; void 0 !== o && void 0 === o[n];) o = t[r++];
        if (void 0 !== o) {
            var a = o[n];
            if (void 0 !== a) if (Array.isArray(a)) {
                do a = o[n], void 0 !== a && (e.push(o.time), i.push.apply(i, a)), o = t[r++]; while (void 0 !== o)
            } else if (void 0 !== a.toArray) {
                do a = o[n], void 0 !== a && (e.push(o.time), a.toArray(i, i.length)), o = t[r++]; while (void 0 !== o)
            } else do a = o[n], void 0 !== a && (e.push(o.time), i.push(a)), o = t[r++]; while (void 0 !== o)
        }
    }
},THREE.KeyframeTrack = function (t, e, i, n) {
    if (void 0 === t) throw Error("track name is undefined");
    if (void 0 === e || 0 === e.length) throw Error("no keyframes in track named " + t);
    this.name = t, this.times = THREE.AnimationUtils.convertArray(e, this.TimeBufferType), this.values = THREE.AnimationUtils.convertArray(i, this.ValueBufferType), this.setInterpolation(n || this.DefaultInterpolation), this.validate(), this.optimize()
},THREE.KeyframeTrack.prototype = {
    constructor: THREE.KeyframeTrack,
    TimeBufferType: Float32Array,
    ValueBufferType: Float32Array,
    DefaultInterpolation: THREE.InterpolateLinear,
    InterpolantFactoryMethodDiscrete: function (t) {
        return new THREE.DiscreteInterpolant(this.times, this.values, this.getValueSize(), t)
    },
    InterpolantFactoryMethodLinear: function (t) {
        return new THREE.LinearInterpolant(this.times, this.values, this.getValueSize(), t)
    },
    InterpolantFactoryMethodSmooth: function (t) {
        return new THREE.CubicInterpolant(this.times, this.values, this.getValueSize(), t)
    },
    setInterpolation: function (t) {
        var e;
        switch (t) {
            case THREE.InterpolateDiscrete:
                e = this.InterpolantFactoryMethodDiscrete;
                break;
            case THREE.InterpolateLinear:
                e = this.InterpolantFactoryMethodLinear;
                break;
            case THREE.InterpolateSmooth:
                e = this.InterpolantFactoryMethodSmooth
        }
        if (void 0 === e) {
            if (e = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name, void 0 === this.createInterpolant) {
                if (t === this.DefaultInterpolation) throw Error(e);
                this.setInterpolation(this.DefaultInterpolation)
            }
            console.warn(e)
        } else this.createInterpolant = e
    },
    getInterpolation: function () {
        switch (this.createInterpolant) {
            case this.InterpolantFactoryMethodDiscrete:
                return THREE.InterpolateDiscrete;
            case this.InterpolantFactoryMethodLinear:
                return THREE.InterpolateLinear;
            case this.InterpolantFactoryMethodSmooth:
                return THREE.InterpolateSmooth
        }
    },
    getValueSize: function () {
        return this.values.length / this.times.length
    },
    shift: function (t) {
        if (0 !== t) for (var e = this.times, i = 0, n = e.length; i !== n; ++i) e[i] += t;
        return this
    },
    scale: function (t) {
        if (1 !== t) for (var e = this.times, i = 0, n = e.length; i !== n; ++i) e[i] *= t;
        return this
    },
    trim: function (t, e) {
        for (var i = this.times, n = i.length, r = 0, o = n - 1; r !== n && i[r] < t;) ++r;
        for (; -1 !== o && i[o] > e;) --o;
        return ++o, (0 !== r || o !== n) && (r >= o && (o = Math.max(o, 1), r = o - 1), n = this.getValueSize(), this.times = THREE.AnimationUtils.arraySlice(i, r, o), this.values = THREE.AnimationUtils.arraySlice(this.values, r * n, o * n)), this
    },
    validate: function () {
        var t = !0, e = this.getValueSize();
        0 !== e - Math.floor(e) && (console.error("invalid value size in track", this), t = !1);
        var i = this.times, e = this.values, n = i.length;
        0 === n && (console.error("track is empty", this), t = !1);
        for (var r = null, o = 0; o !== n; o++) {
            var a = i[o];
            if ("number" == typeof a && isNaN(a)) {
                console.error("time is not a valid number", this, o, a), t = !1;
                break
            }
            if (null !== r && r > a) {
                console.error("out of order keys", this, o, a, r), t = !1;
                break
            }
            r = a
        }
        if (void 0 !== e && THREE.AnimationUtils.isTypedArray(e)) for (o = 0, i = e.length; o !== i; ++o) if (n = e[o], isNaN(n)) {
            console.error("value is not a valid number", this, o, n), t = !1;
            break
        }
        return t
    },
    optimize: function () {
        for (var t = this.times, e = this.values, i = this.getValueSize(), n = 1, r = 1, o = t.length - 1; o >= r; ++r) {
            var a = !1, s = t[r];
            if (s !== t[r + 1] && (1 !== r || s !== s[0])) for (var l = r * i, h = l - i, u = l + i, s = 0; s !== i; ++s) {
                var c = e[l + s];
                if (c !== e[h + s] || c !== e[u + s]) {
                    a = !0;
                    break
                }
            }
            if (a) {
                if (r !== n) for (t[n] = t[r], a = r * i, l = n * i, s = 0; s !== i; ++s) e[l + s] = e[a + s];
                ++n
            }
        }
        return n !== t.length && (this.times = THREE.AnimationUtils.arraySlice(t, 0, n), this.values = THREE.AnimationUtils.arraySlice(e, 0, n * i)), this
    }
},Object.assign(THREE.KeyframeTrack, {
    parse: function (t) {
        if (void 0 === t.type) throw Error("track type undefined, can not parse");
        var e = THREE.KeyframeTrack._getTrackTypeForValueTypeName(t.type);
        if (void 0 === t.times) {
            var i = [], n = [];
            THREE.AnimationUtils.flattenJSON(t.keys, i, n, "value"), t.times = i, t.values = n
        }
        return void 0 !== e.parse ? e.parse(t) : new e(t.name, t.times, t.values, t.interpolation)
    }, toJSON: function (t) {
        var e = t.constructor;
        if (void 0 !== e.toJSON) e = e.toJSON(t); else {
            var e = {
                name: t.name,
                times: THREE.AnimationUtils.convertArray(t.times, Array),
                values: THREE.AnimationUtils.convertArray(t.values, Array)
            }, i = t.getInterpolation();
            i !== t.DefaultInterpolation && (e.interpolation = i)
        }
        return e.type = t.ValueTypeName, e
    }, _getTrackTypeForValueTypeName: function (t) {
        switch (t.toLowerCase()) {
            case"scalar":
            case"double":
            case"float":
            case"number":
            case"integer":
                return THREE.NumberKeyframeTrack;
            case"vector":
            case"vector2":
            case"vector3":
            case"vector4":
                return THREE.VectorKeyframeTrack;
            case"color":
                return THREE.ColorKeyframeTrack;
            case"quaternion":
                return THREE.QuaternionKeyframeTrack;
            case"bool":
            case"boolean":
                return THREE.BooleanKeyframeTrack;
            case"string":
                return THREE.StringKeyframeTrack
        }
        throw Error("Unsupported typeName: " + t)
    }
}),THREE.PropertyBinding = function (t, e, i) {
    this.path = e, this.parsedPath = i || THREE.PropertyBinding.parseTrackName(e), this.node = THREE.PropertyBinding.findNode(t, this.parsedPath.nodeName) || t, this.rootNode = t
},THREE.PropertyBinding.prototype = {
    constructor: THREE.PropertyBinding, getValue: function (t, e) {
        this.bind(), this.getValue(t, e)
    }, setValue: function (t, e) {
        this.bind(), this.setValue(t, e)
    }, bind: function () {
        var t = this.node, e = this.parsedPath, i = e.objectName, n = e.propertyName, r = e.propertyIndex;
        if (t || (this.node = t = THREE.PropertyBinding.findNode(this.rootNode, e.nodeName) || this.rootNode), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, t) {
            if (i) {
                var o = e.objectIndex;
                switch (i) {
                    case"materials":
                        if (!t.material) return void console.error("  can not bind to material as node does not have a material", this);
                        if (!t.material.materials) return void console.error("  can not bind to material.materials as node.material does not have a materials array", this);
                        t = t.material.materials;
                        break;
                    case"bones":
                        if (!t.skeleton) return void console.error("  can not bind to bones as node does not have a skeleton", this);
                        for (t = t.skeleton.bones, i = 0; i < t.length; i++) if (t[i].name === o) {
                            o = i;
                            break
                        }
                        break;
                    default:
                        if (void 0 === t[i]) return void console.error("  can not bind to objectName of node, undefined", this);
                        t = t[i]
                }
                if (void 0 !== o) {
                    if (void 0 === t[o]) return void console.error("  trying to bind to objectIndex of objectName, but is undefined:", this, t);
                    t = t[o]
                }
            }
            if (o = t[n], void 0 === o) console.error("  trying to update property for track: " + e.nodeName + "." + n + " but it wasn't found.", t); else {
                if (e = this.Versioning.None, void 0 !== t.needsUpdate ? (e = this.Versioning.NeedsUpdate, this.targetObject = t) : void 0 !== t.matrixWorldNeedsUpdate && (e = this.Versioning.MatrixWorldNeedsUpdate, this.targetObject = t), i = this.BindingType.Direct, void 0 !== r) {
                    if ("morphTargetInfluences" === n) {
                        if (!t.geometry) return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry", this);
                        if (!t.geometry.morphTargets) return void console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets", this);
                        for (i = 0; i < this.node.geometry.morphTargets.length; i++) if (t.geometry.morphTargets[i].name === r) {
                            r = i;
                            break
                        }
                    }
                    i = this.BindingType.ArrayElement, this.resolvedProperty = o, this.propertyIndex = r
                } else void 0 !== o.fromArray && void 0 !== o.toArray ? (i = this.BindingType.HasFromToArray, this.resolvedProperty = o) : void 0 !== o.length ? (i = this.BindingType.EntireArray, this.resolvedProperty = o) : this.propertyName = n;
                this.getValue = this.GetterByBindingType[i], this.setValue = this.SetterByBindingTypeAndVersioning[i][e]
            }
        } else console.error("  trying to update node for track: " + this.path + " but it wasn't found.")
    }, unbind: function () {
        this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound
    }
},Object.assign(THREE.PropertyBinding.prototype, {
    _getValue_unavailable: function () {
    },
    _setValue_unavailable: function () {
    },
    _getValue_unbound: THREE.PropertyBinding.prototype.getValue,
    _setValue_unbound: THREE.PropertyBinding.prototype.setValue,
    BindingType: {Direct: 0, EntireArray: 1, ArrayElement: 2, HasFromToArray: 3},
    Versioning: {None: 0, NeedsUpdate: 1, MatrixWorldNeedsUpdate: 2},
    GetterByBindingType: [function (t, e) {
        t[e] = this.node[this.propertyName]
    }, function (t, e) {
        for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) t[e++] = i[n]
    }, function (t, e) {
        t[e] = this.resolvedProperty[this.propertyIndex]
    }, function (t, e) {
        this.resolvedProperty.toArray(t, e)
    }],
    SetterByBindingTypeAndVersioning: [[function (t, e) {
        this.node[this.propertyName] = t[e]
    }, function (t, e) {
        this.node[this.propertyName] = t[e], this.targetObject.needsUpdate = !0
    }, function (t, e) {
        this.node[this.propertyName] = t[e], this.targetObject.matrixWorldNeedsUpdate = !0
    }], [function (t, e) {
        for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) i[n] = t[e++]
    }, function (t, e) {
        for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) i[n] = t[e++];
        this.targetObject.needsUpdate = !0
    }, function (t, e) {
        for (var i = this.resolvedProperty, n = 0, r = i.length; n !== r; ++n) i[n] = t[e++];
        this.targetObject.matrixWorldNeedsUpdate = !0
    }], [function (t, e) {
        this.resolvedProperty[this.propertyIndex] = t[e]
    }, function (t, e) {
        this.resolvedProperty[this.propertyIndex] = t[e], this.targetObject.needsUpdate = !0
    }, function (t, e) {
        this.resolvedProperty[this.propertyIndex] = t[e], this.targetObject.matrixWorldNeedsUpdate = !0
    }], [function (t, e) {
        this.resolvedProperty.fromArray(t, e)
    }, function (t, e) {
        this.resolvedProperty.fromArray(t, e), this.targetObject.needsUpdate = !0
    }, function (t, e) {
        this.resolvedProperty.fromArray(t, e), this.targetObject.matrixWorldNeedsUpdate = !0
    }]]
}),THREE.PropertyBinding.Composite = function (t, e, i) {
    i = i || THREE.PropertyBinding.parseTrackName(e), this._targetGroup = t, this._bindings = t.subscribe_(e, i)
},THREE.PropertyBinding.Composite.prototype = {
    constructor: THREE.PropertyBinding.Composite, getValue: function (t, e) {
        this.bind();
        var i = this._bindings[this._targetGroup.nCachedObjects_];
        void 0 !== i && i.getValue(t, e)
    }, setValue: function (t, e) {
        for (var i = this._bindings, n = this._targetGroup.nCachedObjects_, r = i.length; n !== r; ++n) i[n].setValue(t, e)
    }, bind: function () {
        for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, i = t.length; e !== i; ++e) t[e].bind()
    }, unbind: function () {
        for (var t = this._bindings, e = this._targetGroup.nCachedObjects_, i = t.length; e !== i; ++e) t[e].unbind()
    }
},THREE.PropertyBinding.create = function (t, e, i) {
    return t instanceof THREE.AnimationObjectGroup ? new THREE.PropertyBinding.Composite(t, e, i) : new THREE.PropertyBinding(t, e, i)
},THREE.PropertyBinding.parseTrackName = function (t) {
    var e = /^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_.:\- ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/, i = e.exec(t);
    if (!i) throw Error("cannot parse trackName at all: " + t);
    if (i.index === e.lastIndex && e.lastIndex++, e = {
            nodeName: i[3],
            objectName: i[5],
            objectIndex: i[7],
            propertyName: i[9],
            propertyIndex: i[11]
        }, null === e.propertyName || 0 === e.propertyName.length) throw Error("can not parse propertyName from trackName: " + t);
    return e
},THREE.PropertyBinding.findNode = function (t, e) {
    if (!e || "" === e || "root" === e || "." === e || -1 === e || e === t.name || e === t.uuid) return t;
    if (t.skeleton) {
        var i = function (t) {
            for (var i = 0; i < t.bones.length; i++) {
                var n = t.bones[i];
                if (n.name === e) return n
            }
            return null
        }(t.skeleton);
        if (i) return i
    }
    if (t.children) {
        var n = function (t) {
            for (var i = 0; i < t.length; i++) {
                var r = t[i];
                if (r.name === e || r.uuid === e || (r = n(r.children))) return r
            }
            return null
        };
        if (i = n(t.children)) return i
    }
    return null
},THREE.PropertyMixer = function (t, e, i) {
    switch (this.binding = t, this.valueSize = i, t = Float64Array, e) {
        case"quaternion":
            e = this._slerp;
            break;
        case"string":
        case"bool":
            t = Array, e = this._select;
            break;
        default:
            e = this._lerp
    }
    this.buffer = new t(4 * i), this._mixBufferRegion = e, this.referenceCount = this.useCount = this.cumulativeWeight = 0
},THREE.PropertyMixer.prototype = {
    constructor: THREE.PropertyMixer, accumulate: function (t, e) {
        var i = this.buffer, n = this.valueSize, r = t * n + n, o = this.cumulativeWeight;
        if (0 === o) {
            for (o = 0; o !== n; ++o) i[r + o] = i[o];
            o = e
        } else o += e, this._mixBufferRegion(i, r, 0, e / o, n);
        this.cumulativeWeight = o
    }, apply: function (t) {
        var e = this.valueSize, i = this.buffer;
        t = t * e + e;
        var n = this.cumulativeWeight, r = this.binding;
        this.cumulativeWeight = 0, 1 > n && this._mixBufferRegion(i, t, 3 * e, 1 - n, e);
        for (var n = e, o = e + e; n !== o; ++n) if (i[n] !== i[n + e]) {
            r.setValue(i, t);
            break
        }
    }, saveOriginalState: function () {
        var t = this.buffer, e = this.valueSize, i = 3 * e;
        this.binding.getValue(t, i);
        for (var n = e; n !== i; ++n) t[n] = t[i + n % e];
        this.cumulativeWeight = 0
    }, restoreOriginalState: function () {
        this.binding.setValue(this.buffer, 3 * this.valueSize)
    }, _select: function (t, e, i, n, r) {
        if (n >= .5) for (n = 0; n !== r; ++n) t[e + n] = t[i + n]
    }, _slerp: function (t, e, i, n, r) {
        THREE.Quaternion.slerpFlat(t, e, t, e, t, i, n)
    }, _lerp: function (t, e, i, n, r) {
        for (var o = 1 - n, a = 0; a !== r; ++a) {
            var s = e + a;
            t[s] = t[s] * o + t[i + a] * n
        }
    }
},THREE.BooleanKeyframeTrack = function (t, e, i) {
    THREE.KeyframeTrack.call(this, t, e, i)
},THREE.BooleanKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {
    constructor: THREE.BooleanKeyframeTrack,
    ValueTypeName: "bool",
    ValueBufferType: Array,
    DefaultInterpolation: THREE.InterpolateDiscrete,
    InterpolantFactoryMethodLinear: void 0,
    InterpolantFactoryMethodSmooth: void 0
}),THREE.ColorKeyframeTrack = function (t, e, i, n) {
    THREE.KeyframeTrack.call(this, t, e, i, n)
},THREE.ColorKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {
    constructor: THREE.ColorKeyframeTrack,
    ValueTypeName: "color"
}),THREE.NumberKeyframeTrack = function (t, e, i, n) {
    THREE.KeyframeTrack.call(this, t, e, i, n)
},THREE.NumberKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {
    constructor: THREE.NumberKeyframeTrack,
    ValueTypeName: "number"
}),THREE.QuaternionKeyframeTrack = function (t, e, i, n) {
    THREE.KeyframeTrack.call(this, t, e, i, n)
},THREE.QuaternionKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {
    constructor: THREE.QuaternionKeyframeTrack,
    ValueTypeName: "quaternion",
    DefaultInterpolation: THREE.InterpolateLinear,
    InterpolantFactoryMethodLinear: function (t) {
        return new THREE.QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), t)
    },
    InterpolantFactoryMethodSmooth: void 0
}),THREE.StringKeyframeTrack = function (t, e, i, n) {
    THREE.KeyframeTrack.call(this, t, e, i, n)
},THREE.StringKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {
    constructor: THREE.StringKeyframeTrack,
    ValueTypeName: "string",
    ValueBufferType: Array,
    DefaultInterpolation: THREE.InterpolateDiscrete,
    InterpolantFactoryMethodLinear: void 0,
    InterpolantFactoryMethodSmooth: void 0
}),THREE.VectorKeyframeTrack = function (t, e, i, n) {
    THREE.KeyframeTrack.call(this, t, e, i, n)
},THREE.VectorKeyframeTrack.prototype = Object.assign(Object.create(THREE.KeyframeTrack.prototype), {
    constructor: THREE.VectorKeyframeTrack,
    ValueTypeName: "vector"
}),THREE.Audio = function (t) {
    THREE.Object3D.call(this), this.type = "Audio", this.context = t.context, this.source = this.context.createBufferSource(), this.source.onended = this.onEnded.bind(this), this.gain = this.context.createGain(), this.gain.connect(t.getInput()), this.autoplay = !1, this.startTime = 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.sourceType = "empty", this.filters = []
},THREE.Audio.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Audio, getOutput: function () {
        return this.gain
    }, setNodeSource: function (t) {
        return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = t, this.connect(), this
    }, setBuffer: function (t) {
        return this.source.buffer = t, this.sourceType = "buffer", this.autoplay && this.play(), this
    }, play: function () {
        if (!0 === this.isPlaying) console.warn("THREE.Audio: Audio is already playing."); else {
            if (!1 !== this.hasPlaybackControl) {
                var t = this.context.createBufferSource();
                return t.buffer = this.source.buffer, t.loop = this.source.loop, t.onended = this.source.onended, t.start(0, this.startTime), t.playbackRate.value = this.playbackRate, this.isPlaying = !0, this.source = t, this.connect()
            }
            console.warn("THREE.Audio: this Audio has no playback control.")
        }
    }, pause: function () {
        return !1 !== this.hasPlaybackControl ? (this.source.stop(), this.startTime = this.context.currentTime, this.isPlaying = !1, this) : void console.warn("THREE.Audio: this Audio has no playback control.")
    }, stop: function () {
        return !1 !== this.hasPlaybackControl ? (this.source.stop(), this.startTime = 0, this.isPlaying = !1, this) : void console.warn("THREE.Audio: this Audio has no playback control.")
    }, connect: function () {
        if (0 < this.filters.length) {
            this.source.connect(this.filters[0]);
            for (var t = 1, e = this.filters.length; e > t; t++) this.filters[t - 1].connect(this.filters[t]);
            this.filters[this.filters.length - 1].connect(this.getOutput())
        } else this.source.connect(this.getOutput());
        return this
    }, disconnect: function () {
        if (0 < this.filters.length) {
            this.source.disconnect(this.filters[0]);
            for (var t = 1, e = this.filters.length; e > t; t++) this.filters[t - 1].disconnect(this.filters[t]);
            this.filters[this.filters.length - 1].disconnect(this.getOutput())
        } else this.source.disconnect(this.getOutput());
        return this
    }, getFilters: function () {
        return this.filters
    }, setFilters: function (t) {
        return t || (t = []), !0 === this.isPlaying ? (this.disconnect(), this.filters = t, this.connect()) : this.filters = t, this
    }, getFilter: function () {
        return this.getFilters()[0]
    }, setFilter: function (t) {
        return this.setFilters(t ? [t] : [])
    }, setPlaybackRate: function (t) {
        return !1 !== this.hasPlaybackControl ? (this.playbackRate = t, !0 === this.isPlaying && (this.source.playbackRate.value = this.playbackRate), this) : void console.warn("THREE.Audio: this Audio has no playback control.")
    }, getPlaybackRate: function () {
        return this.playbackRate
    }, onEnded: function () {
        this.isPlaying = !1
    }, getLoop: function () {
        return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.source.loop
    }, setLoop: function (t) {
        !1 === this.hasPlaybackControl ? console.warn("THREE.Audio: this Audio has no playback control.") : this.source.loop = t
    }, getVolume: function () {
        return this.gain.gain.value
    }, setVolume: function (t) {
        return this.gain.gain.value = t, this
    }
}),THREE.AudioAnalyser = function (t, e) {
    this.analyser = t.context.createAnalyser(), this.analyser.fftSize = void 0 !== e ? e : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), t.getOutput().connect(this.analyser)
},Object.assign(THREE.AudioAnalyser.prototype, {
    getFrequencyData: function () {
        return this.analyser.getByteFrequencyData(this.data), this.data
    }, getAverageFrequency: function () {
        for (var t = 0, e = this.getFrequencyData(), i = 0; i < e.length; i++) t += e[i];
        return t / e.length
    }
}),Object.defineProperty(THREE, "AudioContext", {
    get: function () {
        var t;
        return function () {
            return void 0 === t && (t = new (window.AudioContext || window.webkitAudioContext)), t
        }
    }()
}),THREE.PositionalAudio = function (t) {
    THREE.Audio.call(this, t), this.panner = this.context.createPanner(), this.panner.connect(this.gain)
},THREE.PositionalAudio.prototype = Object.assign(Object.create(THREE.Audio.prototype), {
    constructor: THREE.PositionalAudio,
    getOutput: function () {
        return this.panner
    },
    getRefDistance: function () {
        return this.panner.refDistance
    },
    setRefDistance: function (t) {
        this.panner.refDistance = t
    },
    getRolloffFactor: function () {
        return this.panner.rolloffFactor
    },
    setRolloffFactor: function (t) {
        this.panner.rolloffFactor = t
    },
    getDistanceModel: function () {
        return this.panner.distanceModel
    },
    setDistanceModel: function (t) {
        this.panner.distanceModel = t
    },
    getMaxDistance: function () {
        return this.panner.maxDistance
    },
    setMaxDistance: function (t) {
        this.panner.maxDistance = t
    },
    updateMatrixWorld: function () {
        var t = new THREE.Vector3;
        return function (e) {
            THREE.Object3D.prototype.updateMatrixWorld.call(this, e), t.setFromMatrixPosition(this.matrixWorld), this.panner.setPosition(t.x, t.y, t.z)
        }
    }()
}),THREE.AudioListener = function () {
    THREE.Object3D.call(this), this.type = "AudioListener", this.context = THREE.AudioContext, this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null
},THREE.AudioListener.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.AudioListener, getInput: function () {
        return this.gain
    }, removeFilter: function () {
        null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null)
    }, getFilter: function () {
        return this.filter
    }, setFilter: function (t) {
        null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = t, this.gain.connect(this.filter), this.filter.connect(this.context.destination)
    }, getMasterVolume: function () {
        return this.gain.gain.value
    }, setMasterVolume: function (t) {
        this.gain.gain.value = t
    }, updateMatrixWorld: function () {
        var t = new THREE.Vector3, e = new THREE.Quaternion, i = new THREE.Vector3, n = new THREE.Vector3;
        return function (r) {
            THREE.Object3D.prototype.updateMatrixWorld.call(this, r), r = this.context.listener;
            var o = this.up;
            this.matrixWorld.decompose(t, e, i), n.set(0, 0, -1).applyQuaternion(e), r.setPosition(t.x, t.y, t.z), r.setOrientation(n.x, n.y, n.z, o.x, o.y, o.z)
        }
    }()
}),THREE.Camera = function () {
    THREE.Object3D.call(this), this.type = "Camera", this.matrixWorldInverse = new THREE.Matrix4, this.projectionMatrix = new THREE.Matrix4
},THREE.Camera.prototype = Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.constructor = THREE.Camera,THREE.Camera.prototype.getWorldDirection = function () {
    var t = new THREE.Quaternion;
    return function (e) {
        return e = e || new THREE.Vector3, this.getWorldQuaternion(t), e.set(0, 0, -1).applyQuaternion(t)
    }
}(),THREE.Camera.prototype.lookAt = function () {
    var t = new THREE.Matrix4;
    return function (e) {
        t.lookAt(this.position, e, this.up), this.quaternion.setFromRotationMatrix(t)
    }
}(),THREE.Camera.prototype.clone = function () {
    return (new this.constructor).copy(this)
},THREE.Camera.prototype.copy = function (t) {
    return THREE.Object3D.prototype.copy.call(this, t), this.matrixWorldInverse.copy(t.matrixWorldInverse), this.projectionMatrix.copy(t.projectionMatrix), this
},THREE.CubeCamera = function (t, e, i) {
    THREE.Object3D.call(this), this.type = "CubeCamera";
    var n = new THREE.PerspectiveCamera(90, 1, t, e);
    n.up.set(0, -1, 0), n.lookAt(new THREE.Vector3(1, 0, 0)), this.add(n);
    var r = new THREE.PerspectiveCamera(90, 1, t, e);
    r.up.set(0, -1, 0), r.lookAt(new THREE.Vector3(-1, 0, 0)), this.add(r);
    var o = new THREE.PerspectiveCamera(90, 1, t, e);
    o.up.set(0, 0, 1), o.lookAt(new THREE.Vector3(0, 1, 0)), this.add(o);
    var a = new THREE.PerspectiveCamera(90, 1, t, e);
    a.up.set(0, 0, -1), a.lookAt(new THREE.Vector3(0, -1, 0)), this.add(a);
    var s = new THREE.PerspectiveCamera(90, 1, t, e);
    s.up.set(0, -1, 0), s.lookAt(new THREE.Vector3(0, 0, 1)), this.add(s);
    var l = new THREE.PerspectiveCamera(90, 1, t, e);
    l.up.set(0, -1, 0), l.lookAt(new THREE.Vector3(0, 0, -1)), this.add(l), this.renderTarget = new THREE.WebGLRenderTargetCube(i, i, {
        format: THREE.RGBFormat,
        magFilter: THREE.LinearFilter,
        minFilter: THREE.LinearFilter
    }), this.updateCubeMap = function (t, e) {
        null === this.parent && this.updateMatrixWorld();
        var i = this.renderTarget, h = i.texture.generateMipmaps;
        i.texture.generateMipmaps = !1, i.activeCubeFace = 0, t.render(e, n, i), i.activeCubeFace = 1, t.render(e, r, i), i.activeCubeFace = 2, t.render(e, o, i), i.activeCubeFace = 3, t.render(e, a, i), i.activeCubeFace = 4, t.render(e, s, i), i.texture.generateMipmaps = h, i.activeCubeFace = 5, t.render(e, l, i), t.setRenderTarget(null)
    }
},THREE.CubeCamera.prototype = Object.create(THREE.Object3D.prototype),THREE.CubeCamera.prototype.constructor = THREE.CubeCamera,THREE.OrthographicCamera = function (t, e, i, n, r, o) {
    THREE.Camera.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = t, this.right = e, this.top = i, this.bottom = n, this.near = void 0 !== r ? r : .1, this.far = void 0 !== o ? o : 2e3, this.updateProjectionMatrix()
},THREE.OrthographicCamera.prototype = Object.assign(Object.create(THREE.Camera.prototype), {
    constructor: THREE.OrthographicCamera,
    copy: function (t) {
        return THREE.Camera.prototype.copy.call(this, t), this.left = t.left, this.right = t.right, this.top = t.top, this.bottom = t.bottom, this.near = t.near, this.far = t.far, this.zoom = t.zoom, this.view = null === t.view ? null : Object.assign({}, t.view), this
    },
    setViewOffset: function (t, e, i, n, r, o) {
        this.view = {fullWidth: t, fullHeight: e, offsetX: i, offsetY: n, width: r, height: o}, this.updateProjectionMatrix()
    },
    clearViewOffset: function () {
        this.view = null, this.updateProjectionMatrix()
    },
    updateProjectionMatrix: function () {
        var t = (this.right - this.left) / (2 * this.zoom), e = (this.top - this.bottom) / (2 * this.zoom),
            i = (this.right + this.left) / 2, n = (this.top + this.bottom) / 2, r = i - t, i = i + t, t = n + e, e = n - e;
        if (null !== this.view) var i = this.zoom / (this.view.width / this.view.fullWidth),
            e = this.zoom / (this.view.height / this.view.fullHeight), o = (this.right - this.left) / this.view.width,
            n = (this.top - this.bottom) / this.view.height, r = r + this.view.offsetX / i * o, i = r + this.view.width / i * o,
            t = t - this.view.offsetY / e * n, e = t - this.view.height / e * n;
        this.projectionMatrix.makeOrthographic(r, i, t, e, this.near, this.far)
    },
    toJSON: function (t) {
        return t = THREE.Object3D.prototype.toJSON.call(this, t), t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, null !== this.view && (t.object.view = Object.assign({}, this.view)), t
    }
}),THREE.PerspectiveCamera = function (t, e, i, n) {
    THREE.Camera.call(this), this.type = "PerspectiveCamera", this.fov = void 0 !== t ? t : 50, this.zoom = 1, this.near = void 0 !== i ? i : .1, this.far = void 0 !== n ? n : 2e3, this.focus = 10, this.aspect = void 0 !== e ? e : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix()
},THREE.PerspectiveCamera.prototype = Object.assign(Object.create(THREE.Camera.prototype), {
    constructor: THREE.PerspectiveCamera,
    copy: function (t) {
        return THREE.Camera.prototype.copy.call(this, t), this.fov = t.fov, this.zoom = t.zoom, this.near = t.near, this.far = t.far, this.focus = t.focus, this.aspect = t.aspect, this.view = null === t.view ? null : Object.assign({}, t.view), this.filmGauge = t.filmGauge, this.filmOffset = t.filmOffset, this
    },
    setFocalLength: function (t) {
        t = .5 * this.getFilmHeight() / t, this.fov = 2 * THREE.Math.RAD2DEG * Math.atan(t), this.updateProjectionMatrix()
    },
    getFocalLength: function () {
        var t = Math.tan(.5 * THREE.Math.DEG2RAD * this.fov);
        return .5 * this.getFilmHeight() / t
    },
    getEffectiveFOV: function () {
        return 2 * THREE.Math.RAD2DEG * Math.atan(Math.tan(.5 * THREE.Math.DEG2RAD * this.fov) / this.zoom)
    },
    getFilmWidth: function () {
        return this.filmGauge * Math.min(this.aspect, 1)
    },
    getFilmHeight: function () {
        return this.filmGauge / Math.max(this.aspect, 1)
    },
    setViewOffset: function (t, e, i, n, r, o) {
        this.aspect = t / e, this.view = {
            fullWidth: t,
            fullHeight: e,
            offsetX: i,
            offsetY: n,
            width: r,
            height: o
        }, this.updateProjectionMatrix()
    },
    clearViewOffset: function () {
        this.view = null, this.updateProjectionMatrix()
    },
    updateProjectionMatrix: function () {
        var t = this.near, e = t * Math.tan(.5 * THREE.Math.DEG2RAD * this.fov) / this.zoom, i = 2 * e, n = this.aspect * i, r = -.5 * n,
            o = this.view;
        if (null !== o) var a = o.fullWidth, s = o.fullHeight, r = r + o.offsetX * n / a, e = e - o.offsetY * i / s, n = o.width / a * n,
            i = o.height / s * i;
        o = this.filmOffset, 0 !== o && (r += t * o / this.getFilmWidth()), this.projectionMatrix.makeFrustum(r, r + n, e - i, e, t, this.far)
    },
    toJSON: function (t) {
        return t = THREE.Object3D.prototype.toJSON.call(this, t), t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, null !== this.view && (t.object.view = Object.assign({}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t
    }
}),THREE.StereoCamera = function () {
    this.type = "StereoCamera", this.aspect = 1, this.cameraL = new THREE.PerspectiveCamera, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new THREE.PerspectiveCamera, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1
},Object.assign(THREE.StereoCamera.prototype, {
    update: function () {
        var t, e, i, n, r, o = new THREE.Matrix4, a = new THREE.Matrix4;
        return function (s) {
            if (t !== s.focus || e !== s.fov || i !== s.aspect * this.aspect || n !== s.near || r !== s.far) {
                t = s.focus, e = s.fov, i = s.aspect * this.aspect, n = s.near, r = s.far;
                var l, h, u = s.projectionMatrix.clone(), c = .032 * n / t, p = n * Math.tan(THREE.Math.DEG2RAD * e * .5);
                a.elements[12] = -.032, o.elements[12] = .032, l = -p * i + c, h = p * i + c, u.elements[0] = 2 * n / (h - l), u.elements[8] = (h + l) / (h - l), this.cameraL.projectionMatrix.copy(u), l = -p * i - c, h = p * i - c, u.elements[0] = 2 * n / (h - l), u.elements[8] = (h + l) / (h - l), this.cameraR.projectionMatrix.copy(u)
            }
            this.cameraL.matrixWorld.copy(s.matrixWorld).multiply(a), this.cameraR.matrixWorld.copy(s.matrixWorld).multiply(o)
        }
    }()
}),THREE.Light = function (t, e) {
    THREE.Object3D.call(this), this.type = "Light", this.color = new THREE.Color(t), this.intensity = void 0 !== e ? e : 1, this.receiveShadow = void 0
},THREE.Light.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Light, copy: function (t) {
        return THREE.Object3D.prototype.copy.call(this, t), this.color.copy(t.color), this.intensity = t.intensity, this
    }, toJSON: function (t) {
        return t = THREE.Object3D.prototype.toJSON.call(this, t), t.object.color = this.color.getHex(), t.object.intensity = this.intensity, void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()), void 0 !== this.distance && (t.object.distance = this.distance), void 0 !== this.angle && (t.object.angle = this.angle), void 0 !== this.decay && (t.object.decay = this.decay), void 0 !== this.penumbra && (t.object.penumbra = this.penumbra), t
    }
}),THREE.LightShadow = function (t) {
    this.camera = t, this.bias = 0, this.radius = 1, this.mapSize = new THREE.Vector2(512, 512), this.map = null, this.matrix = new THREE.Matrix4
},Object.assign(THREE.LightShadow.prototype, {
    copy: function (t) {
        return this.camera = t.camera.clone(), this.bias = t.bias, this.radius = t.radius, this.mapSize.copy(t.mapSize), this
    }, clone: function () {
        return (new this.constructor).copy(this)
    }
}),THREE.AmbientLight = function (t, e) {
    THREE.Light.call(this, t, e), this.type = "AmbientLight", this.castShadow = void 0
},THREE.AmbientLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {constructor: THREE.AmbientLight}),THREE.DirectionalLight = function (t, e) {
    THREE.Light.call(this, t, e), this.type = "DirectionalLight", this.position.copy(THREE.Object3D.DefaultUp), this.updateMatrix(), this.target = new THREE.Object3D, this.shadow = new THREE.DirectionalLightShadow
},THREE.DirectionalLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {
    constructor: THREE.DirectionalLight,
    copy: function (t) {
        return THREE.Light.prototype.copy.call(this, t), this.target = t.target.clone(), this.shadow = t.shadow.clone(), this
    }
}),THREE.DirectionalLightShadow = function (t) {
    THREE.LightShadow.call(this, new THREE.OrthographicCamera(-5, 5, 5, -5, .5, 500))
},THREE.DirectionalLightShadow.prototype = Object.assign(Object.create(THREE.LightShadow.prototype), {constructor: THREE.DirectionalLightShadow}),THREE.HemisphereLight = function (t, e, i) {
    THREE.Light.call(this, t, i), this.type = "HemisphereLight", this.castShadow = void 0, this.position.copy(THREE.Object3D.DefaultUp), this.updateMatrix(), this.groundColor = new THREE.Color(e)
},THREE.HemisphereLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {
    constructor: THREE.HemisphereLight,
    copy: function (t) {
        return THREE.Light.prototype.copy.call(this, t), this.groundColor.copy(t.groundColor), this
    }
}),THREE.PointLight = function (t, e, i, n) {
    THREE.Light.call(this, t, e), this.type = "PointLight", Object.defineProperty(this, "power", {
        get: function () {
            return 4 * this.intensity * Math.PI
        }, set: function (t) {
            this.intensity = t / (4 * Math.PI)
        }
    }), this.distance = void 0 !== i ? i : 0, this.decay = void 0 !== n ? n : 1, this.shadow = new THREE.LightShadow(new THREE.PerspectiveCamera(90, 1, .5, 500))
},THREE.PointLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {
    constructor: THREE.PointLight, copy: function (t) {
        return THREE.Light.prototype.copy.call(this, t), this.distance = t.distance, this.decay = t.decay, this.shadow = t.shadow.clone(), this
    }
}),THREE.SpotLight = function (t, e, i, n, r, o) {
    THREE.Light.call(this, t, e), this.type = "SpotLight", this.position.copy(THREE.Object3D.DefaultUp), this.updateMatrix(), this.target = new THREE.Object3D, Object.defineProperty(this, "power", {
        get: function () {
            return this.intensity * Math.PI
        }, set: function (t) {
            this.intensity = t / Math.PI
        }
    }), this.distance = void 0 !== i ? i : 0, this.angle = void 0 !== n ? n : Math.PI / 3, this.penumbra = void 0 !== r ? r : 0, this.decay = void 0 !== o ? o : 1, this.shadow = new THREE.SpotLightShadow
},THREE.SpotLight.prototype = Object.assign(Object.create(THREE.Light.prototype), {
    constructor: THREE.SpotLight, copy: function (t) {
        return THREE.Light.prototype.copy.call(this, t), this.distance = t.distance, this.angle = t.angle, this.penumbra = t.penumbra, this.decay = t.decay, this.target = t.target.clone(), this.shadow = t.shadow.clone(), this
    }
}),THREE.SpotLightShadow = function () {
    THREE.LightShadow.call(this, new THREE.PerspectiveCamera(50, 1, .5, 500))
},THREE.SpotLightShadow.prototype = Object.assign(Object.create(THREE.LightShadow.prototype), {
    constructor: THREE.SpotLightShadow,
    update: function (t) {
        var e = 2 * THREE.Math.RAD2DEG * t.angle, i = this.mapSize.width / this.mapSize.height;
        t = t.distance || 500;
        var n = this.camera;
        (e !== n.fov || i !== n.aspect || t !== n.far) && (n.fov = e, n.aspect = i, n.far = t, n.updateProjectionMatrix())
    }
}),
THREE.AudioLoader = function (t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
},Object.assign(THREE.AudioLoader.prototype, {
    load: function (t, e, i, n) {
        var r = new THREE.XHRLoader(this.manager);
        r.setResponseType("arraybuffer"), r.load(t, function (t) {
            THREE.AudioContext.decodeAudioData(t, function (t) {
                e(t)
            })
        }, i, n)
    }
}),THREE.Cache = {
    enabled: !1, files: {}, add: function (t, e) {
        !1 !== this.enabled && (this.files[t] = e)
    }, get: function (t) {
        return !1 !== this.enabled ? this.files[t] : void 0
    }, remove: function (t) {
        delete this.files[t]
    }, clear: function () {
        this.files = {}
    }
},THREE.Loader = function () {
    this.onLoadStart = function () {
    }, this.onLoadProgress = function () {
    }, this.onLoadComplete = function () {
    }
},THREE.Loader.prototype = {
    constructor: THREE.Loader, crossOrigin: void 0, extractUrlBase: function (t) {
        return t = t.split("/"), 1 === t.length ? "./" : (t.pop(), t.join("/") + "/")
    }, initMaterials: function (t, e, i) {
        for (var n = [], r = 0; r < t.length; ++r) n[r] = this.createMaterial(t[r], e, i);
        return n
    }, createMaterial: function () {
        var t, e, i;
        return function (n, r, o) {
            function a(t, i, n, a, s) {
                t = r + t;
                var h = THREE.Loader.Handlers.get(t);
                return null !== h ? t = h.load(t) : (e.setCrossOrigin(o), t = e.load(t)), void 0 !== i && (t.repeat.fromArray(i), 1 !== i[0] && (t.wrapS = THREE.RepeatWrapping), 1 !== i[1] && (t.wrapT = THREE.RepeatWrapping)), void 0 !== n && t.offset.fromArray(n), void 0 !== a && ("repeat" === a[0] && (t.wrapS = THREE.RepeatWrapping), "mirror" === a[0] && (t.wrapS = THREE.MirroredRepeatWrapping), "repeat" === a[1] && (t.wrapT = THREE.RepeatWrapping), "mirror" === a[1] && (t.wrapT = THREE.MirroredRepeatWrapping)), void 0 !== s && (t.anisotropy = s), i = THREE.Math.generateUUID(), l[i] = t, i
            }

            void 0 === t && (t = new THREE.Color), void 0 === e && (e = new THREE.TextureLoader), void 0 === i && (i = new THREE.MaterialLoader);
            var s, l = {}, h = {uuid: THREE.Math.generateUUID(), type: "MeshLambertMaterial"};
            for (s in n) {
                var u = n[s];
                switch (s) {
                    case"DbgColor":
                    case"DbgIndex":
                    case"opticalDensity":
                    case"illumination":
                        break;
                    case"DbgName":
                        h.name = u;
                        break;
                    case"blending":
                        h.blending = THREE[u];
                        break;
                    case"colorAmbient":
                    case"mapAmbient":
                        console.warn("THREE.Loader.createMaterial:", s, "is no longer supported.");
                        break;
                    case"colorDiffuse":
                        h.color = t.fromArray(u).getHex();
                        break;
                    case"colorSpecular":
                        h.specular = t.fromArray(u).getHex();
                        break;
                    case"colorEmissive":
                        h.emissive = t.fromArray(u).getHex();
                        break;
                    case"specularCoef":
                        h.shininess = u;
                        break;
                    case"shading":
                        "basic" === u.toLowerCase() && (h.type = "MeshBasicMaterial"), "phong" === u.toLowerCase() && (h.type = "MeshPhongMaterial"), "standard" === u.toLowerCase() && (h.type = "MeshStandardMaterial");
                        break;
                    case"mapDiffuse":
                        h.map = a(u, n.mapDiffuseRepeat, n.mapDiffuseOffset, n.mapDiffuseWrap, n.mapDiffuseAnisotropy);
                        break;
                    case"mapDiffuseRepeat":
                    case"mapDiffuseOffset":
                    case"mapDiffuseWrap":
                    case"mapDiffuseAnisotropy":
                        break;
                    case"mapEmissive":
                        h.emissiveMap = a(u, n.mapEmissiveRepeat, n.mapEmissiveOffset, n.mapEmissiveWrap, n.mapEmissiveAnisotropy);
                        break;
                    case"mapEmissiveRepeat":
                    case"mapEmissiveOffset":
                    case"mapEmissiveWrap":
                    case"mapEmissiveAnisotropy":
                        break;
                    case"mapLight":
                        h.lightMap = a(u, n.mapLightRepeat, n.mapLightOffset, n.mapLightWrap, n.mapLightAnisotropy);
                        break;
                    case"mapLightRepeat":
                    case"mapLightOffset":
                    case"mapLightWrap":
                    case"mapLightAnisotropy":
                        break;
                    case"mapAO":
                        h.aoMap = a(u, n.mapAORepeat, n.mapAOOffset, n.mapAOWrap, n.mapAOAnisotropy);
                        break;
                    case"mapAORepeat":
                    case"mapAOOffset":
                    case"mapAOWrap":
                    case"mapAOAnisotropy":
                        break;
                    case"mapBump":
                        h.bumpMap = a(u, n.mapBumpRepeat, n.mapBumpOffset, n.mapBumpWrap, n.mapBumpAnisotropy);
                        break;
                    case"mapBumpScale":
                        h.bumpScale = u;
                        break;
                    case"mapBumpRepeat":
                    case"mapBumpOffset":
                    case"mapBumpWrap":
                    case"mapBumpAnisotropy":
                        break;
                    case"mapNormal":
                        h.normalMap = a(u, n.mapNormalRepeat, n.mapNormalOffset, n.mapNormalWrap, n.mapNormalAnisotropy);
                        break;
                    case"mapNormalFactor":
                        h.normalScale = [u, u];
                        break;
                    case"mapNormalRepeat":
                    case"mapNormalOffset":
                    case"mapNormalWrap":
                    case"mapNormalAnisotropy":
                        break;
                    case"mapSpecular":
                        h.specularMap = a(u, n.mapSpecularRepeat, n.mapSpecularOffset, n.mapSpecularWrap, n.mapSpecularAnisotropy);
                        break;
                    case"mapSpecularRepeat":
                    case"mapSpecularOffset":
                    case"mapSpecularWrap":
                    case"mapSpecularAnisotropy":
                        break;
                    case"mapMetalness":
                        h.metalnessMap = a(u, n.mapMetalnessRepeat, n.mapMetalnessOffset, n.mapMetalnessWrap, n.mapMetalnessAnisotropy);
                        break;
                    case"mapMetalnessRepeat":
                    case"mapMetalnessOffset":
                    case"mapMetalnessWrap":
                    case"mapMetalnessAnisotropy":
                        break;
                    case"mapRoughness":
                        h.roughnessMap = a(u, n.mapRoughnessRepeat, n.mapRoughnessOffset, n.mapRoughnessWrap, n.mapRoughnessAnisotropy);
                        break;
                    case"mapRoughnessRepeat":
                    case"mapRoughnessOffset":
                    case"mapRoughnessWrap":
                    case"mapRoughnessAnisotropy":
                        break;
                    case"mapAlpha":
                        h.alphaMap = a(u, n.mapAlphaRepeat, n.mapAlphaOffset, n.mapAlphaWrap, n.mapAlphaAnisotropy);
                        break;
                    case"mapAlphaRepeat":
                    case"mapAlphaOffset":
                    case"mapAlphaWrap":
                    case"mapAlphaAnisotropy":
                        break;
                    case"flipSided":
                        h.side = THREE.BackSide;
                        break;
                    case"doubleSided":
                        h.side = THREE.DoubleSide;
                        break;
                    case"transparency":
                        console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"), h.opacity = u;
                        break;
                    case"depthTest":
                    case"depthWrite":
                    case"colorWrite":
                    case"opacity":
                    case"reflectivity":
                    case"transparent":
                    case"visible":
                    case"wireframe":
                        h[s] = u;
                        break;
                    case"vertexColors":
                        !0 === u && (h.vertexColors = THREE.VertexColors), "face" === u && (h.vertexColors = THREE.FaceColors);
                        break;
                    default:
                        console.error("THREE.Loader.createMaterial: Unsupported", s, u)
                }
            }
            return "MeshBasicMaterial" === h.type && delete h.emissive, "MeshPhongMaterial" !== h.type && delete h.specular, 1 > h.opacity && (h.transparent = !0), i.setTextures(l), i.parse(h)
        }
    }()
},THREE.Loader.Handlers = {
    handlers: [], add: function (t, e) {
        this.handlers.push(t, e)
    }, get: function (t) {
        for (var e = this.handlers, i = 0, n = e.length; n > i; i += 2) {
            var r = e[i + 1];
            if (e[i].test(t)) return r
        }
        return null
    }
},THREE.XHRLoader = function (t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
},Object.assign(THREE.XHRLoader.prototype, {
    load: function (t, e, i, n) {
        void 0 !== this.path && (t = this.path + t);
        var r = this, o = THREE.Cache.get(t);
        if (void 0 !== o) return r.manager.itemStart(t), setTimeout(function () {
            e && e(o), r.manager.itemEnd(t)
        }, 0), o;
        var a = new XMLHttpRequest;
        return a.overrideMimeType("text/plain"), a.open("GET", t, !0), a.addEventListener("load", function (i) {
            var o = i.target.response;
            THREE.Cache.add(t, o), 200 === this.status ? (e && e(o), r.manager.itemEnd(t)) : 0 === this.status ? (console.warn("THREE.XHRLoader: HTTP Status 0 received."), e && e(o), r.manager.itemEnd(t)) : (n && n(i), r.manager.itemError(t))
        }, !1), void 0 !== i && a.addEventListener("progress", function (t) {
            i(t)
        }, !1), a.addEventListener("error", function (e) {
            n && n(e), r.manager.itemError(t)
        }, !1), void 0 !== this.responseType && (a.responseType = this.responseType), void 0 !== this.withCredentials && (a.withCredentials = this.withCredentials), a.send(null), r.manager.itemStart(t), a
    }, setPath: function (t) {
        return this.path = t, this
    }, setResponseType: function (t) {
        return this.responseType = t, this
    }, setWithCredentials: function (t) {
        return this.withCredentials = t, this
    }
}),THREE.FontLoader = function (t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
},Object.assign(THREE.FontLoader.prototype, {
    load: function (t, e, i, n) {
        var r = this;
        new THREE.XHRLoader(this.manager).load(t, function (t) {
            var i;
            try {
                i = JSON.parse(t)
            } catch (n) {
                console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), i = JSON.parse(t.substring(65, t.length - 2))
            }
            t = r.parse(i), e && e(t)
        }, i, n)
    }, parse: function (t) {
        return new THREE.Font(t)
    }
}),THREE.ImageLoader = function (t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
},Object.assign(THREE.ImageLoader.prototype, {
    load: function (t, e, i, n) {
        var r = this, o = document.createElementNS("http://www.w3.org/1999/xhtml", "img");
        if (o.onload = function () {
                URL.revokeObjectURL(o.src), e && e(o), r.manager.itemEnd(t)
            }, 0 === t.indexOf("data:")) o.src = t; else {
            var a = new THREE.XHRLoader;
            a.setPath(this.path), a.setResponseType("blob"), a.load(t, function (t) {
                o.src = URL.createObjectURL(t)
            }, i, n)
        }
        return r.manager.itemStart(t), o
    }, setCrossOrigin: function (t) {
        return this.crossOrigin = t, this
    }, setPath: function (t) {
        return this.path = t, this
    }
}),THREE.JSONLoader = function (t) {
    "boolean" == typeof t && (console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."), t = void 0), this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager, this.withCredentials = !1
},Object.assign(THREE.JSONLoader.prototype, {
    load: function (t, e, i, n) {
        var r = this,
            o = this.texturePath && "string" == typeof this.texturePath ? this.texturePath : THREE.Loader.prototype.extractUrlBase(t),
            a = new THREE.XHRLoader(this.manager);
        a.setWithCredentials(this.withCredentials), a.load(t, function (i) {
            i = JSON.parse(i);
            var n = i.metadata;
            if (void 0 !== n && (n = n.type, void 0 !== n)) {
                if ("object" === n.toLowerCase()) return void console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.ObjectLoader instead.");
                if ("scene" === n.toLowerCase()) return void console.error("THREE.JSONLoader: " + t + " should be loaded with THREE.SceneLoader instead.")
            }
            i = r.parse(i, o), e(i.geometry, i.materials)
        }, i, n)
    }, setTexturePath: function (t) {
        this.texturePath = t
    }, parse: function (t, e) {
        var i = new THREE.Geometry, n = void 0 !== t.scale ? 1 / t.scale : 1;
        return function (e) {
            var n, r, o, a, s, l, h, u, c, p, d, f, m, g = t.faces;
            l = t.vertices;
            var E = t.normals, v = t.colors, y = 0;
            if (void 0 !== t.uvs) {
                for (n = 0; n < t.uvs.length; n++) t.uvs[n].length && y++;
                for (n = 0; y > n; n++) i.faceVertexUvs[n] = []
            }
            for (a = 0, s = l.length; s > a;) n = new THREE.Vector3, n.x = l[a++] * e, n.y = l[a++] * e, n.z = l[a++] * e, i.vertices.push(n);
            for (a = 0, s = g.length; s > a;) if (e = g[a++], c = 1 & e, o = 2 & e, n = 8 & e, h = 16 & e, p = 32 & e, l = 64 & e, e &= 128, c) {
                if (c = new THREE.Face3, c.a = g[a], c.b = g[a + 1], c.c = g[a + 3], d = new THREE.Face3, d.a = g[a + 1], d.b = g[a + 2], d.c = g[a + 3], a += 4, o && (o = g[a++], c.materialIndex = o, d.materialIndex = o), o = i.faces.length, n) for (n = 0; y > n; n++) for (f = t.uvs[n], i.faceVertexUvs[n][o] = [], i.faceVertexUvs[n][o + 1] = [], r = 0; 4 > r; r++) u = g[a++], m = f[2 * u], u = f[2 * u + 1], m = new THREE.Vector2(m, u), 2 !== r && i.faceVertexUvs[n][o].push(m), 0 !== r && i.faceVertexUvs[n][o + 1].push(m);
                if (h && (h = 3 * g[a++], c.normal.set(E[h++], E[h++], E[h]), d.normal.copy(c.normal)), p) for (n = 0; 4 > n; n++) h = 3 * g[a++], p = new THREE.Vector3(E[h++], E[h++], E[h]), 2 !== n && c.vertexNormals.push(p), 0 !== n && d.vertexNormals.push(p);
                if (l && (l = g[a++], l = v[l], c.color.setHex(l), d.color.setHex(l)), e) for (n = 0; 4 > n; n++) l = g[a++], l = v[l], 2 !== n && c.vertexColors.push(new THREE.Color(l)), 0 !== n && d.vertexColors.push(new THREE.Color(l));
                i.faces.push(c), i.faces.push(d)
            } else {
                if (c = new THREE.Face3, c.a = g[a++], c.b = g[a++], c.c = g[a++], o && (o = g[a++], c.materialIndex = o), o = i.faces.length, n) for (n = 0; y > n; n++) for (f = t.uvs[n], i.faceVertexUvs[n][o] = [], r = 0; 3 > r; r++) u = g[a++], m = f[2 * u], u = f[2 * u + 1], m = new THREE.Vector2(m, u), i.faceVertexUvs[n][o].push(m);
                if (h && (h = 3 * g[a++], c.normal.set(E[h++], E[h++], E[h])), p) for (n = 0; 3 > n; n++) h = 3 * g[a++], p = new THREE.Vector3(E[h++], E[h++], E[h]), c.vertexNormals.push(p);
                if (l && (l = g[a++], c.color.setHex(v[l])), e) for (n = 0; 3 > n; n++) l = g[a++], c.vertexColors.push(new THREE.Color(v[l]));
                i.faces.push(c)
            }
        }(n), function () {
            var e = void 0 !== t.influencesPerVertex ? t.influencesPerVertex : 2;
            if (t.skinWeights) for (var n = 0, r = t.skinWeights.length; r > n; n += e) i.skinWeights.push(new THREE.Vector4(t.skinWeights[n], e > 1 ? t.skinWeights[n + 1] : 0, e > 2 ? t.skinWeights[n + 2] : 0, e > 3 ? t.skinWeights[n + 3] : 0));
            if (t.skinIndices) for (n = 0, r = t.skinIndices.length; r > n; n += e) i.skinIndices.push(new THREE.Vector4(t.skinIndices[n], e > 1 ? t.skinIndices[n + 1] : 0, e > 2 ? t.skinIndices[n + 2] : 0, e > 3 ? t.skinIndices[n + 3] : 0));
            i.bones = t.bones, i.bones && 0 < i.bones.length && (i.skinWeights.length !== i.skinIndices.length || i.skinIndices.length !== i.vertices.length) && console.warn("When skinning, number of vertices (" + i.vertices.length + "), skinIndices (" + i.skinIndices.length + "), and skinWeights (" + i.skinWeights.length + ") should match.")
        }(), function (e) {
            if (void 0 !== t.morphTargets) for (var n = 0, r = t.morphTargets.length; r > n; n++) {
                i.morphTargets[n] = {}, i.morphTargets[n].name = t.morphTargets[n].name, i.morphTargets[n].vertices = [];
                for (var o = i.morphTargets[n].vertices, a = t.morphTargets[n].vertices, s = 0, l = a.length; l > s; s += 3) {
                    var h = new THREE.Vector3;
                    h.x = a[s] * e, h.y = a[s + 1] * e, h.z = a[s + 2] * e, o.push(h)
                }
            }
            if (void 0 !== t.morphColors && 0 < t.morphColors.length) for (console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.'), e = i.faces, o = t.morphColors[0].colors, n = 0, r = e.length; r > n; n++) e[n].color.fromArray(o, 3 * n)
        }(n), function () {
            var e = [], n = [];
            void 0 !== t.animation && n.push(t.animation), void 0 !== t.animations && (t.animations.length ? n = n.concat(t.animations) : n.push(t.animations));
            for (var r = 0; r < n.length; r++) {
                var o = THREE.AnimationClip.parseAnimation(n[r], i.bones);
                o && e.push(o)
            }
            i.morphTargets && (n = THREE.AnimationClip.CreateClipsFromMorphTargetSequences(i.morphTargets, 10), e = e.concat(n)), 0 < e.length && (i.animations = e)
        }(), i.computeFaceNormals(), i.computeBoundingSphere(), void 0 === t.materials || 0 === t.materials.length ? {geometry: i} : (n = THREE.Loader.prototype.initMaterials(t.materials, e, this.crossOrigin), {
            geometry: i,
            materials: n
        })
    }
}),THREE.LoadingManager = function (t, e, i) {
    var n = this, r = !1, o = 0, a = 0;
    this.onStart = void 0, this.onLoad = t, this.onProgress = e, this.onError = i, this.itemStart = function (t) {
        a++, !1 === r && void 0 !== n.onStart && n.onStart(t, o, a), r = !0
    }, this.itemEnd = function (t) {
        o++, void 0 !== n.onProgress && n.onProgress(t, o, a), o === a && (r = !1, void 0 !== n.onLoad) && n.onLoad()
    }, this.itemError = function (t) {
        void 0 !== n.onError && n.onError(t)
    }
},THREE.DefaultLoadingManager = new THREE.LoadingManager,THREE.BufferGeometryLoader = function (t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
},Object.assign(THREE.BufferGeometryLoader.prototype, {
    load: function (t, e, i, n) {
        var r = this;
        new THREE.XHRLoader(r.manager).load(t, function (t) {
            e(r.parse(JSON.parse(t)))
        }, i, n)
    }, parse: function (t) {
        var e = new THREE.BufferGeometry, i = t.data.index, n = {
            Int8Array: Int8Array,
            Uint8Array: Uint8Array,
            Uint8ClampedArray: Uint8ClampedArray,
            Int16Array: Int16Array,
            Uint16Array: Uint16Array,
            Int32Array: Int32Array,
            Uint32Array: Uint32Array,
            Float32Array: Float32Array,
            Float64Array: Float64Array
        };
        void 0 !== i && (i = new n[i.type](i.array), e.setIndex(new THREE.BufferAttribute(i, 1)));
        var r, o = t.data.attributes;
        for (r in o) {
            var a = o[r], i = new n[a.type](a.array);
            e.addAttribute(r, new THREE.BufferAttribute(i, a.itemSize, a.normalized))
        }
        if (n = t.data.groups || t.data.drawcalls || t.data.offsets, void 0 !== n) for (r = 0, i = n.length; r !== i; ++r) o = n[r], e.addGroup(o.start, o.count, o.materialIndex);
        return t = t.data.boundingSphere, void 0 !== t && (n = new THREE.Vector3, void 0 !== t.center && n.fromArray(t.center), e.boundingSphere = new THREE.Sphere(n, t.radius)), e
    }
}),THREE.MaterialLoader = function (t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager, this.textures = {}
},Object.assign(THREE.MaterialLoader.prototype, {
    load: function (t, e, i, n) {
        var r = this;
        new THREE.XHRLoader(r.manager).load(t, function (t) {
            e(r.parse(JSON.parse(t)))
        }, i, n)
    }, setTextures: function (t) {
        this.textures = t
    }, getTexture: function (t) {
        var e = this.textures;
        return void 0 === e[t] && console.warn("THREE.MaterialLoader: Undefined texture", t), e[t]
    }, parse: function (t) {
        var e = new THREE[t.type];
        if (void 0 !== t.uuid && (e.uuid = t.uuid), void 0 !== t.name && (e.name = t.name), void 0 !== t.color && e.color.setHex(t.color), void 0 !== t.roughness && (e.roughness = t.roughness), void 0 !== t.metalness && (e.metalness = t.metalness), void 0 !== t.emissive && e.emissive.setHex(t.emissive), void 0 !== t.specular && e.specular.setHex(t.specular), void 0 !== t.shininess && (e.shininess = t.shininess), void 0 !== t.uniforms && (e.uniforms = t.uniforms), void 0 !== t.vertexShader && (e.vertexShader = t.vertexShader), void 0 !== t.fragmentShader && (e.fragmentShader = t.fragmentShader), void 0 !== t.vertexColors && (e.vertexColors = t.vertexColors), void 0 !== t.shading && (e.shading = t.shading), void 0 !== t.blending && (e.blending = t.blending), void 0 !== t.side && (e.side = t.side), void 0 !== t.opacity && (e.opacity = t.opacity), void 0 !== t.transparent && (e.transparent = t.transparent), void 0 !== t.alphaTest && (e.alphaTest = t.alphaTest), void 0 !== t.depthTest && (e.depthTest = t.depthTest), void 0 !== t.depthWrite && (e.depthWrite = t.depthWrite), void 0 !== t.colorWrite && (e.colorWrite = t.colorWrite), void 0 !== t.wireframe && (e.wireframe = t.wireframe), void 0 !== t.wireframeLinewidth && (e.wireframeLinewidth = t.wireframeLinewidth), void 0 !== t.size && (e.size = t.size), void 0 !== t.sizeAttenuation && (e.sizeAttenuation = t.sizeAttenuation), void 0 !== t.map && (e.map = this.getTexture(t.map)), void 0 !== t.alphaMap && (e.alphaMap = this.getTexture(t.alphaMap), e.transparent = !0), void 0 !== t.bumpMap && (e.bumpMap = this.getTexture(t.bumpMap)), void 0 !== t.bumpScale && (e.bumpScale = t.bumpScale), void 0 !== t.normalMap && (e.normalMap = this.getTexture(t.normalMap)), void 0 !== t.normalScale) {
            var i = t.normalScale;
            !1 === Array.isArray(i) && (i = [i, i]), e.normalScale = (new THREE.Vector2).fromArray(i)
        }
        if (void 0 !== t.displacementMap && (e.displacementMap = this.getTexture(t.displacementMap)), void 0 !== t.displacementScale && (e.displacementScale = t.displacementScale), void 0 !== t.displacementBias && (e.displacementBias = t.displacementBias), void 0 !== t.roughnessMap && (e.roughnessMap = this.getTexture(t.roughnessMap)), void 0 !== t.metalnessMap && (e.metalnessMap = this.getTexture(t.metalnessMap)), void 0 !== t.emissiveMap && (e.emissiveMap = this.getTexture(t.emissiveMap)), void 0 !== t.emissiveIntensity && (e.emissiveIntensity = t.emissiveIntensity), void 0 !== t.specularMap && (e.specularMap = this.getTexture(t.specularMap)), void 0 !== t.envMap && (e.envMap = this.getTexture(t.envMap), e.combine = THREE.MultiplyOperation), void 0 !== t.reflectivity && (e.reflectivity = t.reflectivity), void 0 !== t.lightMap && (e.lightMap = this.getTexture(t.lightMap)), void 0 !== t.lightMapIntensity && (e.lightMapIntensity = t.lightMapIntensity), void 0 !== t.aoMap && (e.aoMap = this.getTexture(t.aoMap)), void 0 !== t.aoMapIntensity && (e.aoMapIntensity = t.aoMapIntensity), void 0 !== t.materials) for (var i = 0, n = t.materials.length; n > i; i++) e.materials.push(this.parse(t.materials[i]));
        return e
    }
}),THREE.ObjectLoader = function (t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager, this.texturePath = ""
},Object.assign(THREE.ObjectLoader.prototype, {
    load: function (t, e, i, n) {
        "" === this.texturePath && (this.texturePath = t.substring(0, t.lastIndexOf("/") + 1));
        var r = this;
        new THREE.XHRLoader(r.manager).load(t, function (t) {
            r.parse(JSON.parse(t), e)
        }, i, n)
    }, setTexturePath: function (t) {
        this.texturePath = t
    }, setCrossOrigin: function (t) {
        this.crossOrigin = t
    }, parse: function (t, e) {
        var i = this.parseGeometries(t.geometries), n = this.parseImages(t.images, function () {
            void 0 !== e && e(r)
        }), n = this.parseTextures(t.textures, n), n = this.parseMaterials(t.materials, n), r = this.parseObject(t.object, i, n);
        return t.animations && (r.animations = this.parseAnimations(t.animations)), void 0 !== t.images && 0 !== t.images.length || void 0 === e || e(r), r
    }, parseGeometries: function (t) {
        var e = {};
        if (void 0 !== t) for (var i = new THREE.JSONLoader, n = new THREE.BufferGeometryLoader, r = 0, o = t.length; o > r; r++) {
            var a, s = t[r];
            switch (s.type) {
                case"PlaneGeometry":
                case"PlaneBufferGeometry":
                    a = new THREE[s.type](s.width, s.height, s.widthSegments, s.heightSegments);
                    break;
                case"BoxGeometry":
                case"BoxBufferGeometry":
                case"CubeGeometry":
                    a = new THREE[s.type](s.width, s.height, s.depth, s.widthSegments, s.heightSegments, s.depthSegments);
                    break;
                case"CircleGeometry":
                case"CircleBufferGeometry":
                    a = new THREE[s.type](s.radius, s.segments, s.thetaStart, s.thetaLength);
                    break;
                case"CylinderGeometry":
                case"CylinderBufferGeometry":
                    a = new THREE[s.type](s.radiusTop, s.radiusBottom, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                    break;
                case"ConeGeometry":
                case"ConeBufferGeometry":
                    a = new THREE[s.type](s.radius, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                    break;
                case"SphereGeometry":
                case"SphereBufferGeometry":
                    a = new THREE[s.type](s.radius, s.widthSegments, s.heightSegments, s.phiStart, s.phiLength, s.thetaStart, s.thetaLength);
                    break;
                case"DodecahedronGeometry":
                case"IcosahedronGeometry":
                case"OctahedronGeometry":
                case"TetrahedronGeometry":
                    a = new THREE[s.type](s.radius, s.detail);
                    break;
                case"RingGeometry":
                case"RingBufferGeometry":
                    a = new THREE[s.type](s.innerRadius, s.outerRadius, s.thetaSegments, s.phiSegments, s.thetaStart, s.thetaLength);
                    break;
                case"TorusGeometry":
                case"TorusBufferGeometry":
                    a = new THREE[s.type](s.radius, s.tube, s.radialSegments, s.tubularSegments, s.arc);
                    break;
                case"TorusKnotGeometry":
                case"TorusKnotBufferGeometry":
                    a = new THREE[s.type](s.radius, s.tube, s.tubularSegments, s.radialSegments, s.p, s.q);
                    break;
                case"LatheGeometry":
                case"LatheBufferGeometry":
                    a = new THREE[s.type](s.points, s.segments, s.phiStart, s.phiLength);
                    break;
                case"BufferGeometry":
                    a = n.parse(s);
                    break;
                case"Geometry":
                    a = i.parse(s.data, this.texturePath).geometry;
                    break;
                default:
                    console.warn('THREE.ObjectLoader: Unsupported geometry type "' + s.type + '"');
                    continue
            }
            a.uuid = s.uuid, void 0 !== s.name && (a.name = s.name), e[s.uuid] = a
        }
        return e
    }, parseMaterials: function (t, e) {
        var i = {};
        if (void 0 !== t) {
            var n = new THREE.MaterialLoader;
            n.setTextures(e);
            for (var r = 0, o = t.length; o > r; r++) {
                var a = n.parse(t[r]);
                i[a.uuid] = a
            }
        }
        return i
    }, parseAnimations: function (t) {
        for (var e = [], i = 0; i < t.length; i++) {
            var n = THREE.AnimationClip.parse(t[i]);
            e.push(n)
        }
        return e
    }, parseImages: function (t, e) {
        function i(t) {
            return n.manager.itemStart(t), a.load(t, function () {
                n.manager.itemEnd(t)
            })
        }

        var n = this, r = {};
        if (void 0 !== t && 0 < t.length) {
            var o = new THREE.LoadingManager(e), a = new THREE.ImageLoader(o);
            a.setCrossOrigin(this.crossOrigin);
            for (var o = 0, s = t.length; s > o; o++) {
                var l = t[o], h = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(l.url) ? l.url : n.texturePath + l.url;
                r[l.uuid] = i(h)
            }
        }
        return r
    }, parseTextures: function (t, e) {
        function i(t) {
            return "number" == typeof t ? t : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", t), THREE[t])
        }

        var n = {};
        if (void 0 !== t) for (var r = 0, o = t.length; o > r; r++) {
            var a = t[r];
            void 0 === a.image && console.warn('THREE.ObjectLoader: No "image" specified for', a.uuid), void 0 === e[a.image] && console.warn("THREE.ObjectLoader: Undefined image", a.image);
            var s = new THREE.Texture(e[a.image]);
            s.needsUpdate = !0, s.uuid = a.uuid, void 0 !== a.name && (s.name = a.name), void 0 !== a.mapping && (s.mapping = i(a.mapping)), void 0 !== a.offset && s.offset.fromArray(a.offset), void 0 !== a.repeat && s.repeat.fromArray(a.repeat), void 0 !== a.wrap && (s.wrapS = i(a.wrap[0]), s.wrapT = i(a.wrap[1])), void 0 !== a.minFilter && (s.minFilter = i(a.minFilter)), void 0 !== a.magFilter && (s.magFilter = i(a.magFilter)), void 0 !== a.anisotropy && (s.anisotropy = a.anisotropy), void 0 !== a.flipY && (s.flipY = a.flipY), n[a.uuid] = s
        }
        return n
    }, parseObject: function () {
        var t = new THREE.Matrix4;
        return function (e, i, n) {
            function r(t) {
                return void 0 === i[t] && console.warn("THREE.ObjectLoader: Undefined geometry", t), i[t]
            }

            function o(t) {
                return void 0 !== t ? (void 0 === n[t] && console.warn("THREE.ObjectLoader: Undefined material", t), n[t]) : void 0
            }

            var a;
            switch (e.type) {
                case"Scene":
                    a = new THREE.Scene;
                    break;
                case"PerspectiveCamera":
                    a = new THREE.PerspectiveCamera(e.fov, e.aspect, e.near, e.far), void 0 !== e.focus && (a.focus = e.focus), void 0 !== e.zoom && (a.zoom = e.zoom), void 0 !== e.filmGauge && (a.filmGauge = e.filmGauge), void 0 !== e.filmOffset && (a.filmOffset = e.filmOffset), void 0 !== e.view && (a.view = Object.assign({}, e.view));
                    break;
                case"OrthographicCamera":
                    a = new THREE.OrthographicCamera(e.left, e.right, e.top, e.bottom, e.near, e.far);
                    break;
                case"AmbientLight":
                    a = new THREE.AmbientLight(e.color, e.intensity);
                    break;
                case"DirectionalLight":
                    a = new THREE.DirectionalLight(e.color, e.intensity);
                    break;
                case"PointLight":
                    a = new THREE.PointLight(e.color, e.intensity, e.distance, e.decay);
                    break;
                case"SpotLight":
                    a = new THREE.SpotLight(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                    break;
                case"HemisphereLight":
                    a = new THREE.HemisphereLight(e.color, e.groundColor, e.intensity);
                    break;
                case"Mesh":
                    a = r(e.geometry);
                    var s = o(e.material);
                    a = a.bones && 0 < a.bones.length ? new THREE.SkinnedMesh(a, s) : new THREE.Mesh(a, s);
                    break;
                case"LOD":
                    a = new THREE.LOD;
                    break;
                case"Line":
                    a = new THREE.Line(r(e.geometry), o(e.material), e.mode);
                    break;
                case"PointCloud":
                case"Points":
                    a = new THREE.Points(r(e.geometry), o(e.material));
                    break;
                case"Sprite":
                    a = new THREE.Sprite(o(e.material));
                    break;
                case"Group":
                    a = new THREE.Group;
                    break;
                default:
                    a = new THREE.Object3D
            }
            if (a.uuid = e.uuid, void 0 !== e.name && (a.name = e.name), void 0 !== e.matrix ? (t.fromArray(e.matrix), t.decompose(a.position, a.quaternion, a.scale)) : (void 0 !== e.position && a.position.fromArray(e.position), void 0 !== e.rotation && a.rotation.fromArray(e.rotation), void 0 !== e.scale && a.scale.fromArray(e.scale)), void 0 !== e.castShadow && (a.castShadow = e.castShadow), void 0 !== e.receiveShadow && (a.receiveShadow = e.receiveShadow), void 0 !== e.visible && (a.visible = e.visible), void 0 !== e.userData && (a.userData = e.userData), void 0 !== e.children) for (var l in e.children) a.add(this.parseObject(e.children[l], i, n));
            if ("LOD" === e.type) for (e = e.levels, s = 0; s < e.length; s++) {
                var h = e[s];
                l = a.getObjectByProperty("uuid", h.object), void 0 !== l && a.addLevel(l, h.distance)
            }
            return a
        }
    }()
}),THREE.TextureLoader = function (t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
},Object.assign(THREE.TextureLoader.prototype, {
    load: function (t, e, i, n) {
        var r = new THREE.Texture, o = new THREE.ImageLoader(this.manager);
        return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(t, function (i) {
            var n = 0 < t.search(/\.(jpg|jpeg)$/) || 0 === t.search(/^data\:image\/jpeg/);
            r.format = n ? THREE.RGBFormat : THREE.RGBAFormat, r.image = i, r.needsUpdate = !0, void 0 !== e && e(r)
        }, i, n), r
    }, setCrossOrigin: function (t) {
        return this.crossOrigin = t, this
    }, setPath: function (t) {
        return this.path = t, this
    }
}),THREE.CubeTextureLoader = function (t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager
},Object.assign(THREE.CubeTextureLoader.prototype, {
    load: function (t, e, i, n) {
        function r(i) {
            a.load(t[i], function (t) {
                o.images[i] = t, s++, 6 === s && (o.needsUpdate = !0, e && e(o))
            }, void 0, n)
        }

        var o = new THREE.CubeTexture, a = new THREE.ImageLoader(this.manager);
        a.setCrossOrigin(this.crossOrigin), a.setPath(this.path);
        var s = 0;
        for (i = 0; i < t.length; ++i) r(i);
        return o
    }, setCrossOrigin: function (t) {
        return this.crossOrigin = t, this
    }, setPath: function (t) {
        return this.path = t, this
    }
}),THREE.DataTextureLoader = THREE.BinaryTextureLoader = function (t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager, this._parser = null
},Object.assign(THREE.BinaryTextureLoader.prototype, {
    load: function (t, e, i, n) {
        var r = this, o = new THREE.DataTexture, a = new THREE.XHRLoader(this.manager);
        return a.setResponseType("arraybuffer"), a.load(t, function (t) {
            (t = r._parser(t)) && (void 0 !== t.image ? o.image = t.image : void 0 !== t.data && (o.image.width = t.width, o.image.height = t.height, o.image.data = t.data), o.wrapS = void 0 !== t.wrapS ? t.wrapS : THREE.ClampToEdgeWrapping, o.wrapT = void 0 !== t.wrapT ? t.wrapT : THREE.ClampToEdgeWrapping, o.magFilter = void 0 !== t.magFilter ? t.magFilter : THREE.LinearFilter, o.minFilter = void 0 !== t.minFilter ? t.minFilter : THREE.LinearMipMapLinearFilter, o.anisotropy = void 0 !== t.anisotropy ? t.anisotropy : 1, void 0 !== t.format && (o.format = t.format), void 0 !== t.type && (o.type = t.type), void 0 !== t.mipmaps && (o.mipmaps = t.mipmaps), 1 === t.mipmapCount && (o.minFilter = THREE.LinearFilter), o.needsUpdate = !0, e && e(o, t))
        }, i, n), o
    }
}),THREE.CompressedTextureLoader = function (t) {
    this.manager = void 0 !== t ? t : THREE.DefaultLoadingManager, this._parser = null
},Object.assign(THREE.CompressedTextureLoader.prototype, {
    load: function (t, e, i, n) {
        function r(r) {
            l.load(t[r], function (t) {
                t = o._parser(t, !0), a[r] = {
                    width: t.width,
                    height: t.height,
                    format: t.format,
                    mipmaps: t.mipmaps
                }, h += 1, 6 === h && (1 === t.mipmapCount && (s.minFilter = THREE.LinearFilter), s.format = t.format, s.needsUpdate = !0, e && e(s))
            }, i, n)
        }

        var o = this, a = [], s = new THREE.CompressedTexture;
        s.image = a;
        var l = new THREE.XHRLoader(this.manager);
        if (l.setPath(this.path), l.setResponseType("arraybuffer"), Array.isArray(t)) for (var h = 0, u = 0, c = t.length; c > u; ++u) r(u); else l.load(t, function (t) {
            if (t = o._parser(t, !0), t.isCubemap) for (var i = t.mipmaps.length / t.mipmapCount, n = 0; i > n; n++) {
                a[n] = {mipmaps: []};
                for (var r = 0; r < t.mipmapCount; r++) a[n].mipmaps.push(t.mipmaps[n * t.mipmapCount + r]), a[n].format = t.format, a[n].width = t.width, a[n].height = t.height
            } else s.image.width = t.width, s.image.height = t.height, s.mipmaps = t.mipmaps;
            1 === t.mipmapCount && (s.minFilter = THREE.LinearFilter), s.format = t.format, s.needsUpdate = !0, e && e(s)
        }, i, n);
        return s
    }, setPath: function (t) {
        return this.path = t, this
    }
}),THREE.Material = function () {
    Object.defineProperty(this, "id", {value: THREE.MaterialIdCount++}), this.uuid = THREE.Math.generateUUID(), this.name = "", this.type = "Material", this.lights = this.fog = !0, this.blending = THREE.NormalBlending, this.side = THREE.FrontSide, this.shading = THREE.SmoothShading, this.vertexColors = THREE.NoColors, this.opacity = 1, this.transparent = !1, this.blendSrc = THREE.SrcAlphaFactor, this.blendDst = THREE.OneMinusSrcAlphaFactor, this.blendEquation = THREE.AddEquation, this.blendEquationAlpha = this.blendDstAlpha = this.blendSrcAlpha = null, this.depthFunc = THREE.LessEqualDepth, this.depthWrite = this.depthTest = !0, this.clippingPlanes = null, this.clipShadows = !1, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.alphaTest = this.polygonOffsetUnits = this.polygonOffsetFactor = 0, this.premultipliedAlpha = !1, this.overdraw = 0, this._needsUpdate = this.visible = !0
},THREE.Material.prototype = {
    constructor: THREE.Material, get needsUpdate() {
        return this._needsUpdate
    }, set needsUpdate(t) {
        !0 === t && this.update(), this._needsUpdate = t
    }, setValues: function (t) {
        if (void 0 !== t) for (var e in t) {
            var i = t[e];
            if (void 0 === i) console.warn("THREE.Material: '" + e + "' parameter is undefined."); else {
                var n = this[e];
                void 0 === n ? console.warn("THREE." + this.type + ": '" + e + "' is not a property of this material.") : n instanceof THREE.Color ? n.set(i) : n instanceof THREE.Vector3 && i instanceof THREE.Vector3 ? n.copy(i) : this[e] = "overdraw" === e ? Number(i) : i
            }
        }
    }, toJSON: function (t) {
        function e(t) {
            var e, i = [];
            for (e in t) {
                var n = t[e];
                delete n.metadata, i.push(n)
            }
            return i
        }

        var i = void 0 === t;
        i && (t = {textures: {}, images: {}});
        var n = {metadata: {version: 4.4, type: "Material", generator: "Material.toJSON"}};
        return n.uuid = this.uuid, n.type = this.type, "" !== this.name && (n.name = this.name), this.color instanceof THREE.Color && (n.color = this.color.getHex()), void 0 !== this.roughness && (n.roughness = this.roughness), void 0 !== this.metalness && (n.metalness = this.metalness), this.emissive instanceof THREE.Color && (n.emissive = this.emissive.getHex()), this.specular instanceof THREE.Color && (n.specular = this.specular.getHex()), void 0 !== this.shininess && (n.shininess = this.shininess), this.map instanceof THREE.Texture && (n.map = this.map.toJSON(t).uuid), this.alphaMap instanceof THREE.Texture && (n.alphaMap = this.alphaMap.toJSON(t).uuid), this.lightMap instanceof THREE.Texture && (n.lightMap = this.lightMap.toJSON(t).uuid), this.bumpMap instanceof THREE.Texture && (n.bumpMap = this.bumpMap.toJSON(t).uuid, n.bumpScale = this.bumpScale), this.normalMap instanceof THREE.Texture && (n.normalMap = this.normalMap.toJSON(t).uuid, n.normalScale = this.normalScale.toArray()), this.displacementMap instanceof THREE.Texture && (n.displacementMap = this.displacementMap.toJSON(t).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap instanceof THREE.Texture && (n.roughnessMap = this.roughnessMap.toJSON(t).uuid), this.metalnessMap instanceof THREE.Texture && (n.metalnessMap = this.metalnessMap.toJSON(t).uuid), this.emissiveMap instanceof THREE.Texture && (n.emissiveMap = this.emissiveMap.toJSON(t).uuid), this.specularMap instanceof THREE.Texture && (n.specularMap = this.specularMap.toJSON(t).uuid), this.envMap instanceof THREE.Texture && (n.envMap = this.envMap.toJSON(t).uuid, n.reflectivity = this.reflectivity), void 0 !== this.size && (n.size = this.size), void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation), this.blending !== THREE.NormalBlending && (n.blending = this.blending), this.shading !== THREE.SmoothShading && (n.shading = this.shading), this.side !== THREE.FrontSide && (n.side = this.side), this.vertexColors !== THREE.NoColors && (n.vertexColors = this.vertexColors), 1 > this.opacity && (n.opacity = this.opacity), !0 === this.transparent && (n.transparent = this.transparent), 0 < this.alphaTest && (n.alphaTest = this.alphaTest), !0 === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha), !0 === this.wireframe && (n.wireframe = this.wireframe), 1 < this.wireframeLinewidth && (n.wireframeLinewidth = this.wireframeLinewidth), i && (i = e(t.textures), t = e(t.images), 0 < i.length && (n.textures = i), 0 < t.length && (n.images = t)), n
    }, clone: function () {
        return (new this.constructor).copy(this)
    }, copy: function (t) {
        this.name = t.name, this.fog = t.fog, this.lights = t.lights, this.blending = t.blending, this.side = t.side, this.shading = t.shading, this.vertexColors = t.vertexColors, this.opacity = t.opacity, this.transparent = t.transparent, this.blendSrc = t.blendSrc, this.blendDst = t.blendDst, this.blendEquation = t.blendEquation, this.blendSrcAlpha = t.blendSrcAlpha, this.blendDstAlpha = t.blendDstAlpha, this.blendEquationAlpha = t.blendEquationAlpha, this.depthFunc = t.depthFunc, this.depthTest = t.depthTest, this.depthWrite = t.depthWrite, this.colorWrite = t.colorWrite, this.precision = t.precision, this.polygonOffset = t.polygonOffset, this.polygonOffsetFactor = t.polygonOffsetFactor, this.polygonOffsetUnits = t.polygonOffsetUnits, this.alphaTest = t.alphaTest, this.premultipliedAlpha = t.premultipliedAlpha, this.overdraw = t.overdraw, this.visible = t.visible, this.clipShadows = t.clipShadows, t = t.clippingPlanes;
        var e = null;
        if (null !== t) for (var i = t.length, e = Array(i), n = 0; n !== i; ++n) e[n] = t[n].clone();
        return this.clippingPlanes = e, this
    }, update: function () {
        this.dispatchEvent({type: "update"})
    }, dispose: function () {
        this.dispatchEvent({type: "dispose"})
    }
},Object.assign(THREE.Material.prototype, THREE.EventDispatcher.prototype),THREE.MaterialIdCount = 0,THREE.LineBasicMaterial = function (t) {
    THREE.Material.call(this), this.type = "LineBasicMaterial", this.color = new THREE.Color(16777215), this.linewidth = 1, this.linejoin = this.linecap = "round", this.lights = !1, this.setValues(t)
},THREE.LineBasicMaterial.prototype = Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial,THREE.LineBasicMaterial.prototype.copy = function (t) {
    return THREE.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.linewidth = t.linewidth, this.linecap = t.linecap, this.linejoin = t.linejoin, this
},THREE.LineDashedMaterial = function (t) {
    THREE.Material.call(this), this.type = "LineDashedMaterial", this.color = new THREE.Color(16777215), this.scale = this.linewidth = 1, this.dashSize = 3, this.gapSize = 1, this.lights = !1, this.setValues(t)
},THREE.LineDashedMaterial.prototype = Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial,THREE.LineDashedMaterial.prototype.copy = function (t) {
    return THREE.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.linewidth = t.linewidth, this.scale = t.scale, this.dashSize = t.dashSize, this.gapSize = t.gapSize, this
},THREE.MeshBasicMaterial = function (t) {
    THREE.Material.call(this), this.type = "MeshBasicMaterial", this.color = new THREE.Color(16777215), this.aoMap = this.map = null, this.aoMapIntensity = 1, this.envMap = this.alphaMap = this.specularMap = null, this.combine = THREE.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinejoin = this.wireframeLinecap = "round", this.lights = this.morphTargets = this.skinning = !1, this.setValues(t)
},THREE.MeshBasicMaterial.prototype = Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial,THREE.MeshBasicMaterial.prototype.copy = function (t) {
    return THREE.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this
},THREE.MeshDepthMaterial = function (t) {
    THREE.Material.call(this), this.type = "MeshDepthMaterial", this.depthPacking = THREE.BasicDepthPacking, this.morphTargets = this.skinning = !1, this.displacementMap = this.alphaMap = this.map = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.lights = this.fog = !1, this.setValues(t)
},THREE.MeshDepthMaterial.prototype = Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial,THREE.MeshDepthMaterial.prototype.copy = function (t) {
    return THREE.Material.prototype.copy.call(this, t), this.depthPacking = t.depthPacking, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.map = t.map, this.alphaMap = t.alphaMap, this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this
},THREE.MeshLambertMaterial = function (t) {
    THREE.Material.call(this), this.type = "MeshLambertMaterial", this.color = new THREE.Color(16777215), this.lightMap = this.map = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new THREE.Color(0), this.emissiveIntensity = 1, this.envMap = this.alphaMap = this.specularMap = this.emissiveMap = null, this.combine = THREE.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinejoin = this.wireframeLinecap = "round", this.morphNormals = this.morphTargets = this.skinning = !1, this.setValues(t)
},THREE.MeshLambertMaterial.prototype = Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial,THREE.MeshLambertMaterial.prototype.copy = function (t) {
    return THREE.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this
},THREE.MeshNormalMaterial = function (t) {
    THREE.Material.call(this, t), this.type = "MeshNormalMaterial", this.wireframe = !1, this.wireframeLinewidth = 1, this.morphTargets = this.lights = this.fog = !1, this.setValues(t)
},THREE.MeshNormalMaterial.prototype = Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial,THREE.MeshNormalMaterial.prototype.copy = function (t) {
    return THREE.Material.prototype.copy.call(this, t), this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this
},THREE.MeshPhongMaterial = function (t) {
    THREE.Material.call(this), this.type = "MeshPhongMaterial", this.color = new THREE.Color(16777215), this.specular = new THREE.Color(1118481), this.shininess = 30, this.lightMap = this.map = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new THREE.Color(0), this.emissiveIntensity = 1, this.bumpMap = this.emissiveMap = null, this.bumpScale = 1, this.normalMap = null, this.normalScale = new THREE.Vector2(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.envMap = this.alphaMap = this.specularMap = null, this.combine = THREE.MultiplyOperation, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinejoin = this.wireframeLinecap = "round", this.morphNormals = this.morphTargets = this.skinning = !1, this.setValues(t)
},THREE.MeshPhongMaterial.prototype = Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial,THREE.MeshPhongMaterial.prototype.copy = function (t) {
    return THREE.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.specular.copy(t.specular), this.shininess = t.shininess, this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.specularMap = t.specularMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.combine = t.combine, this.reflectivity = t.reflectivity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this
},THREE.MeshStandardMaterial = function (t) {
    THREE.Material.call(this), this.defines = {STANDARD: ""}, this.type = "MeshStandardMaterial", this.color = new THREE.Color(16777215), this.metalness = this.roughness = .5, this.lightMap = this.map = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new THREE.Color(0), this.emissiveIntensity = 1, this.bumpMap = this.emissiveMap = null, this.bumpScale = 1, this.normalMap = null, this.normalScale = new THREE.Vector2(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.envMap = this.alphaMap = this.metalnessMap = this.roughnessMap = null, this.envMapIntensity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinejoin = this.wireframeLinecap = "round", this.morphNormals = this.morphTargets = this.skinning = !1, this.setValues(t)
},THREE.MeshStandardMaterial.prototype = Object.create(THREE.Material.prototype),THREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial,THREE.MeshStandardMaterial.prototype.copy = function (t) {
    return THREE.Material.prototype.copy.call(this, t), this.defines = {STANDARD: ""}, this.color.copy(t.color), this.roughness = t.roughness, this.metalness = t.metalness, this.map = t.map, this.lightMap = t.lightMap, this.lightMapIntensity = t.lightMapIntensity, this.aoMap = t.aoMap, this.aoMapIntensity = t.aoMapIntensity, this.emissive.copy(t.emissive), this.emissiveMap = t.emissiveMap, this.emissiveIntensity = t.emissiveIntensity, this.bumpMap = t.bumpMap, this.bumpScale = t.bumpScale, this.normalMap = t.normalMap, this.normalScale.copy(t.normalScale), this.displacementMap = t.displacementMap, this.displacementScale = t.displacementScale, this.displacementBias = t.displacementBias, this.roughnessMap = t.roughnessMap, this.metalnessMap = t.metalnessMap, this.alphaMap = t.alphaMap, this.envMap = t.envMap, this.envMapIntensity = t.envMapIntensity, this.refractionRatio = t.refractionRatio, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.wireframeLinecap = t.wireframeLinecap, this.wireframeLinejoin = t.wireframeLinejoin, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this
},THREE.MeshPhysicalMaterial = function (t) {
    THREE.MeshStandardMaterial.call(this), this.defines = {PHYSICAL: ""}, this.type = "MeshPhysicalMaterial", this.reflectivity = .5, this.clearCoatRoughness = this.clearCoat = 0, this.setValues(t)
},THREE.MeshPhysicalMaterial.prototype = Object.create(THREE.MeshStandardMaterial.prototype),THREE.MeshPhysicalMaterial.prototype.constructor = THREE.MeshPhysicalMaterial,THREE.MeshPhysicalMaterial.prototype.copy = function (t) {
    return THREE.MeshStandardMaterial.prototype.copy.call(this, t), this.defines = {PHYSICAL: ""}, this.reflectivity = t.reflectivity, this.clearCoat = t.clearCoat, this.clearCoatRoughness = t.clearCoatRoughness, this
},THREE.MultiMaterial = function (t) {
    this.uuid = THREE.Math.generateUUID(), this.type = "MultiMaterial", this.materials = t instanceof Array ? t : [], this.visible = !0
},THREE.MultiMaterial.prototype = {
    constructor: THREE.MultiMaterial, toJSON: function (t) {
        for (var e = {
            metadata: {version: 4.2, type: "material", generator: "MaterialExporter"},
            uuid: this.uuid,
            type: this.type,
            materials: []
        }, i = this.materials, n = 0, r = i.length; r > n; n++) {
            var o = i[n].toJSON(t);
            delete o.metadata, e.materials.push(o)
        }
        return e.visible = this.visible, e
    }, clone: function () {
        for (var t = new this.constructor, e = 0; e < this.materials.length; e++) t.materials.push(this.materials[e].clone());
        return t.visible = this.visible, t
    }
},THREE.PointsMaterial = function (t) {
    THREE.Material.call(this), this.type = "PointsMaterial", this.color = new THREE.Color(16777215), this.map = null, this.size = 1, this.sizeAttenuation = !0, this.lights = !1, this.setValues(t)
},THREE.PointsMaterial.prototype = Object.create(THREE.Material.prototype),THREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial,THREE.PointsMaterial.prototype.copy = function (t) {
    return THREE.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.size = t.size, this.sizeAttenuation = t.sizeAttenuation, this
},THREE.ShaderMaterial = function (t) {
    THREE.Material.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = "void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}", this.fragmentShader = "void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}", this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.morphNormals = this.morphTargets = this.skinning = this.clipping = this.lights = this.fog = !1, this.extensions = {
        derivatives: !1,
        fragDepth: !1,
        drawBuffers: !1,
        shaderTextureLOD: !1
    }, this.defaultAttributeValues = {
        color: [1, 1, 1],
        uv: [0, 0],
        uv2: [0, 0]
    }, this.index0AttributeName = void 0, void 0 !== t && (void 0 !== t.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(t))
},THREE.ShaderMaterial.prototype = Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial,THREE.ShaderMaterial.prototype.copy = function (t) {
    return THREE.Material.prototype.copy.call(this, t), this.fragmentShader = t.fragmentShader, this.vertexShader = t.vertexShader, this.uniforms = THREE.UniformsUtils.clone(t.uniforms), this.defines = t.defines, this.wireframe = t.wireframe, this.wireframeLinewidth = t.wireframeLinewidth, this.lights = t.lights, this.clipping = t.clipping, this.skinning = t.skinning, this.morphTargets = t.morphTargets, this.morphNormals = t.morphNormals, this.extensions = t.extensions, this
},THREE.ShaderMaterial.prototype.toJSON = function (t) {
    return t = THREE.Material.prototype.toJSON.call(this, t), t.uniforms = this.uniforms, t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader, t
},THREE.RawShaderMaterial = function (t) {
    THREE.ShaderMaterial.call(this, t), this.type = "RawShaderMaterial"
},THREE.RawShaderMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial,THREE.SpriteMaterial = function (t) {
    THREE.Material.call(this), this.type = "SpriteMaterial", this.color = new THREE.Color(16777215), this.map = null, this.rotation = 0, this.lights = this.fog = !1, this.setValues(t)
},THREE.SpriteMaterial.prototype = Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial,THREE.SpriteMaterial.prototype.copy = function (t) {
    return THREE.Material.prototype.copy.call(this, t), this.color.copy(t.color), this.map = t.map, this.rotation = t.rotation, this
},THREE.ShadowMaterial = function () {
    THREE.ShaderMaterial.call(this, {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.lights, {opacity: {value: 1}}]),
        vertexShader: THREE.ShaderChunk.shadow_vert,
        fragmentShader: THREE.ShaderChunk.shadow_frag
    }), this.transparent = this.lights = !0, Object.defineProperties(this, {
        opacity: {
            enumerable: !0, get: function () {
                return this.uniforms.opacity.value
            }, set: function (t) {
                this.uniforms.opacity.value = t
            }
        }
    })
},THREE.ShadowMaterial.prototype = Object.create(THREE.ShaderMaterial.prototype),THREE.ShadowMaterial.prototype.constructor = THREE.ShadowMaterial,THREE.Texture = function (t, e, i, n, r, o, a, s, l, h) {
    Object.defineProperty(this, "id", {value: THREE.TextureIdCount++}), this.uuid = THREE.Math.generateUUID(), this.sourceFile = this.name = "", this.image = void 0 !== t ? t : THREE.Texture.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = void 0 !== e ? e : THREE.Texture.DEFAULT_MAPPING, this.wrapS = void 0 !== i ? i : THREE.ClampToEdgeWrapping, this.wrapT = void 0 !== n ? n : THREE.ClampToEdgeWrapping, this.magFilter = void 0 !== r ? r : THREE.LinearFilter, this.minFilter = void 0 !== o ? o : THREE.LinearMipMapLinearFilter, this.anisotropy = void 0 !== l ? l : 1, this.format = void 0 !== a ? a : THREE.RGBAFormat, this.type = void 0 !== s ? s : THREE.UnsignedByteType, this.offset = new THREE.Vector2(0, 0), this.repeat = new THREE.Vector2(1, 1), this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = void 0 !== h ? h : THREE.LinearEncoding, this.version = 0, this.onUpdate = null
},THREE.Texture.DEFAULT_IMAGE = void 0,THREE.Texture.DEFAULT_MAPPING = THREE.UVMapping,THREE.Texture.prototype = {
    constructor: THREE.Texture,
    set needsUpdate(t) {
        !0 === t && this.version++
    },
    clone: function () {
        return (new this.constructor).copy(this)
    },
    copy: function (t) {
        return this.image = t.image, this.mipmaps = t.mipmaps.slice(0), this.mapping = t.mapping, this.wrapS = t.wrapS, this.wrapT = t.wrapT, this.magFilter = t.magFilter, this.minFilter = t.minFilter, this.anisotropy = t.anisotropy, this.format = t.format, this.type = t.type, this.offset.copy(t.offset), this.repeat.copy(t.repeat), this.generateMipmaps = t.generateMipmaps, this.premultiplyAlpha = t.premultiplyAlpha, this.flipY = t.flipY, this.unpackAlignment = t.unpackAlignment, this.encoding = t.encoding, this
    },
    toJSON: function (t) {
        if (void 0 !== t.textures[this.uuid]) return t.textures[this.uuid];
        var e = {
            metadata: {version: 4.4, type: "Texture", generator: "Texture.toJSON"},
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [this.repeat.x, this.repeat.y],
            offset: [this.offset.x, this.offset.y],
            wrap: [this.wrapS, this.wrapT],
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY
        };
        if (void 0 !== this.image) {
            var i = this.image;
            if (void 0 === i.uuid && (i.uuid = THREE.Math.generateUUID()), void 0 === t.images[i.uuid]) {
                var n, r = t.images, o = i.uuid, a = i.uuid;
                void 0 !== i.toDataURL ? n = i : (n = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), n.width = i.width, n.height = i.height, n.getContext("2d").drawImage(i, 0, 0, i.width, i.height)), n = 2048 < n.width || 2048 < n.height ? n.toDataURL("image/jpeg", .6) : n.toDataURL("image/png"), r[o] = {
                    uuid: a,
                    url: n
                }
            }
            e.image = i.uuid
        }
        return t.textures[this.uuid] = e
    },
    dispose: function () {
        this.dispatchEvent({type: "dispose"})
    },
    transformUv: function (t) {
        if (this.mapping === THREE.UVMapping) {
            if (t.multiply(this.repeat), t.add(this.offset), 0 > t.x || 1 < t.x) switch (this.wrapS) {
                case THREE.RepeatWrapping:
                    t.x -= Math.floor(t.x);
                    break;
                case THREE.ClampToEdgeWrapping:
                    t.x = 0 > t.x ? 0 : 1;
                    break;
                case THREE.MirroredRepeatWrapping:
                    1 === Math.abs(Math.floor(t.x) % 2) ? t.x = Math.ceil(t.x) - t.x : t.x -= Math.floor(t.x)
            }
            if (0 > t.y || 1 < t.y) switch (this.wrapT) {
                case THREE.RepeatWrapping:
                    t.y -= Math.floor(t.y);
                    break;
                case THREE.ClampToEdgeWrapping:
                    t.y = 0 > t.y ? 0 : 1;
                    break;
                case THREE.MirroredRepeatWrapping:
                    1 === Math.abs(Math.floor(t.y) % 2) ? t.y = Math.ceil(t.y) - t.y : t.y -= Math.floor(t.y)
            }
            this.flipY && (t.y = 1 - t.y)
        }
    }
},Object.assign(THREE.Texture.prototype, THREE.EventDispatcher.prototype),THREE.TextureIdCount = 0,THREE.DepthTexture = function (t, e, i, n, r, o, a, s, l) {
    THREE.Texture.call(this, null, n, r, o, a, s, THREE.DepthFormat, i, l), this.image = {
        width: t,
        height: e
    }, this.type = void 0 !== i ? i : THREE.UnsignedShortType, this.magFilter = void 0 !== a ? a : THREE.NearestFilter, this.minFilter = void 0 !== s ? s : THREE.NearestFilter, this.generateMipmaps = this.flipY = !1
},THREE.DepthTexture.prototype = Object.create(THREE.Texture.prototype),THREE.DepthTexture.prototype.constructor = THREE.DepthTexture,THREE.CanvasTexture = function (t, e, i, n, r, o, a, s, l) {
    THREE.Texture.call(this, t, e, i, n, r, o, a, s, l), this.needsUpdate = !0
},THREE.CanvasTexture.prototype = Object.create(THREE.Texture.prototype),THREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture,THREE.CubeTexture = function (t, e, i, n, r, o, a, s, l, h) {
    t = void 0 !== t ? t : [], e = void 0 !== e ? e : THREE.CubeReflectionMapping, THREE.Texture.call(this, t, e, i, n, r, o, a, s, l, h), this.flipY = !1
},THREE.CubeTexture.prototype = Object.create(THREE.Texture.prototype),THREE.CubeTexture.prototype.constructor = THREE.CubeTexture,Object.defineProperty(THREE.CubeTexture.prototype, "images", {
    get: function () {
        return this.image
    }, set: function (t) {
        this.image = t
    }
}),THREE.CompressedTexture = function (t, e, i, n, r, o, a, s, l, h, u, c) {
    THREE.Texture.call(this, null, o, a, s, l, h, n, r, u, c),
        this.image = {width: e, height: i}, this.mipmaps = t, this.generateMipmaps = this.flipY = !1
},THREE.CompressedTexture.prototype = Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture,THREE.DataTexture = function (t, e, i, n, r, o, a, s, l, h, u, c) {
    THREE.Texture.call(this, null, o, a, s, l, h, n, r, u, c), this.image = {
        data: t,
        width: e,
        height: i
    }, this.magFilter = void 0 !== l ? l : THREE.NearestFilter, this.minFilter = void 0 !== h ? h : THREE.NearestFilter, this.generateMipmaps = this.flipY = !1
},THREE.DataTexture.prototype = Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.constructor = THREE.DataTexture,THREE.VideoTexture = function (t, e, i, n, r, o, a, s, l) {
    function h() {
        requestAnimationFrame(h), t.readyState >= t.HAVE_CURRENT_DATA && (u.needsUpdate = !0)
    }

    THREE.Texture.call(this, t, e, i, n, r, o, a, s, l), this.generateMipmaps = !1;
    var u = this;
    h()
},THREE.VideoTexture.prototype = Object.create(THREE.Texture.prototype),THREE.VideoTexture.prototype.constructor = THREE.VideoTexture,THREE.Group = function () {
    THREE.Object3D.call(this), this.type = "Group"
},THREE.Group.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {constructor: THREE.Group}),THREE.Points = function (t, e) {
    THREE.Object3D.call(this), this.type = "Points", this.geometry = void 0 !== t ? t : new THREE.BufferGeometry, this.material = void 0 !== e ? e : new THREE.PointsMaterial({color: 16777215 * Math.random()})
},THREE.Points.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Points, raycast: function () {
        var t = new THREE.Matrix4, e = new THREE.Ray, i = new THREE.Sphere;
        return function (n, r) {
            function o(t, i) {
                var o = e.distanceSqToPoint(t);
                if (u > o) {
                    var s = e.closestPointToPoint(t);
                    s.applyMatrix4(l);
                    var h = n.ray.origin.distanceTo(s);
                    h < n.near || h > n.far || r.push({
                        distance: h,
                        distanceToRay: Math.sqrt(o),
                        point: s.clone(),
                        index: i,
                        face: null,
                        object: a
                    })
                }
            }

            var a = this, s = this.geometry, l = this.matrixWorld, h = n.params.Points.threshold;
            if (null === s.boundingSphere && s.computeBoundingSphere(), i.copy(s.boundingSphere), i.applyMatrix4(l), !1 !== n.ray.intersectsSphere(i)) {
                t.getInverse(l), e.copy(n.ray).applyMatrix4(t);
                var h = h / ((this.scale.x + this.scale.y + this.scale.z) / 3), u = h * h, h = new THREE.Vector3;
                if (s instanceof THREE.BufferGeometry) {
                    var c = s.index, s = s.attributes.position.array;
                    if (null !== c) for (var p = c.array, c = 0, d = p.length; d > c; c++) {
                        var f = p[c];
                        h.fromArray(s, 3 * f), o(h, f)
                    } else for (c = 0, p = s.length / 3; p > c; c++) h.fromArray(s, 3 * c), o(h, c)
                } else for (h = s.vertices, c = 0, p = h.length; p > c; c++) o(h[c], c)
            }
        }
    }(), clone: function () {
        return new this.constructor(this.geometry, this.material).copy(this)
    }
}),THREE.Line = function (t, e, i) {
    return 1 === i ? (console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."), new THREE.LineSegments(t, e)) : (THREE.Object3D.call(this), this.type = "Line", this.geometry = void 0 !== t ? t : new THREE.BufferGeometry, void(this.material = void 0 !== e ? e : new THREE.LineBasicMaterial({color: 16777215 * Math.random()})))
},THREE.Line.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Line, raycast: function () {
        var t = new THREE.Matrix4, e = new THREE.Ray, i = new THREE.Sphere;
        return function (n, r) {
            var o = n.linePrecision, o = o * o, a = this.geometry, s = this.matrixWorld;
            if (null === a.boundingSphere && a.computeBoundingSphere(), i.copy(a.boundingSphere), i.applyMatrix4(s), !1 !== n.ray.intersectsSphere(i)) {
                t.getInverse(s), e.copy(n.ray).applyMatrix4(t);
                var l = new THREE.Vector3, h = new THREE.Vector3, s = new THREE.Vector3, u = new THREE.Vector3,
                    c = this instanceof THREE.LineSegments ? 2 : 1;
                if (a instanceof THREE.BufferGeometry) {
                    var p = a.index, d = a.attributes.position.array;
                    if (null !== p) for (var p = p.array, a = 0, f = p.length - 1; f > a; a += c) {
                        var m = p[a + 1];
                        l.fromArray(d, 3 * p[a]), h.fromArray(d, 3 * m), m = e.distanceSqToSegment(l, h, u, s), m > o || (u.applyMatrix4(this.matrixWorld), m = n.ray.origin.distanceTo(u), m < n.near || m > n.far || r.push({
                            distance: m,
                            point: s.clone().applyMatrix4(this.matrixWorld),
                            index: a,
                            face: null,
                            faceIndex: null,
                            object: this
                        }))
                    } else for (a = 0, f = d.length / 3 - 1; f > a; a += c) l.fromArray(d, 3 * a), h.fromArray(d, 3 * a + 3), m = e.distanceSqToSegment(l, h, u, s), m > o || (u.applyMatrix4(this.matrixWorld), m = n.ray.origin.distanceTo(u), m < n.near || m > n.far || r.push({
                        distance: m,
                        point: s.clone().applyMatrix4(this.matrixWorld),
                        index: a,
                        face: null,
                        faceIndex: null,
                        object: this
                    }))
                } else if (a instanceof THREE.Geometry) for (l = a.vertices, h = l.length, a = 0; h - 1 > a; a += c) m = e.distanceSqToSegment(l[a], l[a + 1], u, s), m > o || (u.applyMatrix4(this.matrixWorld), m = n.ray.origin.distanceTo(u), m < n.near || m > n.far || r.push({
                    distance: m,
                    point: s.clone().applyMatrix4(this.matrixWorld),
                    index: a,
                    face: null,
                    faceIndex: null,
                    object: this
                }))
            }
        }
    }(), clone: function () {
        return new this.constructor(this.geometry, this.material).copy(this)
    }
}),THREE.LineSegments = function (t, e) {
    THREE.Line.call(this, t, e), this.type = "LineSegments"
},THREE.LineSegments.prototype = Object.assign(Object.create(THREE.Line.prototype), {constructor: THREE.LineSegments}),THREE.Mesh = function (t, e) {
    THREE.Object3D.call(this), this.type = "Mesh", this.geometry = void 0 !== t ? t : new THREE.BufferGeometry, this.material = void 0 !== e ? e : new THREE.MeshBasicMaterial({color: 16777215 * Math.random()}), this.drawMode = THREE.TrianglesDrawMode, this.updateMorphTargets()
},THREE.Mesh.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Mesh, setDrawMode: function (t) {
        this.drawMode = t
    }, copy: function (t) {
        return THREE.Object3D.prototype.copy.call(this, t), this.drawMode = t.drawMode, this
    }, updateMorphTargets: function () {
        if (void 0 !== this.geometry.morphTargets && 0 < this.geometry.morphTargets.length) {
            this.morphTargetBase = -1, this.morphTargetInfluences = [], this.morphTargetDictionary = {};
            for (var t = 0, e = this.geometry.morphTargets.length; e > t; t++) this.morphTargetInfluences.push(0), this.morphTargetDictionary[this.geometry.morphTargets[t].name] = t
        }
    }, getMorphTargetIndexByName: function (t) {
        return void 0 !== this.morphTargetDictionary[t] ? this.morphTargetDictionary[t] : (console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target " + t + " does not exist. Returning 0."), 0)
    }, raycast: function () {
        function t(t, e, i, n, r, o, a) {
            return THREE.Triangle.barycoordFromPoint(t, e, i, n, m), r.multiplyScalar(m.x), o.multiplyScalar(m.y), a.multiplyScalar(m.z), r.add(o).add(a), r.clone()
        }

        function e(t, e, i, n, r, o, a) {
            var s = t.material;
            return null === (s.side === THREE.BackSide ? i.intersectTriangle(o, r, n, !0, a) : i.intersectTriangle(n, r, o, s.side !== THREE.DoubleSide, a)) ? null : (E.copy(a), E.applyMatrix4(t.matrixWorld), i = e.ray.origin.distanceTo(E), i < e.near || i > e.far ? null : {
                distance: i,
                point: E.clone(),
                object: t
            })
        }

        function i(i, n, r, o, h, u, c, m) {
            return a.fromArray(o, 3 * u), s.fromArray(o, 3 * c), l.fromArray(o, 3 * m), (i = e(i, n, r, a, s, l, g)) && (h && (p.fromArray(h, 2 * u), d.fromArray(h, 2 * c), f.fromArray(h, 2 * m), i.uv = t(g, a, s, l, p, d, f)), i.face = new THREE.Face3(u, c, m, THREE.Triangle.normal(a, s, l)), i.faceIndex = u), i
        }

        var n = new THREE.Matrix4, r = new THREE.Ray, o = new THREE.Sphere, a = new THREE.Vector3, s = new THREE.Vector3,
            l = new THREE.Vector3, h = new THREE.Vector3, u = new THREE.Vector3, c = new THREE.Vector3, p = new THREE.Vector2,
            d = new THREE.Vector2, f = new THREE.Vector2, m = new THREE.Vector3, g = new THREE.Vector3, E = new THREE.Vector3;
        return function (m, E) {
            var v = this.geometry, y = this.material, T = this.matrixWorld;
            if (void 0 !== y && (null === v.boundingSphere && v.computeBoundingSphere(), o.copy(v.boundingSphere), o.applyMatrix4(T), !1 !== m.ray.intersectsSphere(o) && (n.getInverse(T), r.copy(m.ray).applyMatrix4(n), null === v.boundingBox || !1 !== r.intersectsBox(v.boundingBox)))) {
                var _, x;
                if (v instanceof THREE.BufferGeometry) {
                    var b, R, y = v.index, T = v.attributes, v = T.position.array;
                    if (void 0 !== T.uv && (_ = T.uv.array), null !== y) for (var T = y.array, w = 0, H = T.length; H > w; w += 3) y = T[w], b = T[w + 1], R = T[w + 2], (x = i(this, m, r, v, _, y, b, R)) && (x.faceIndex = Math.floor(w / 3), E.push(x)); else for (w = 0, H = v.length; H > w; w += 9) y = w / 3, b = y + 1, R = y + 2, (x = i(this, m, r, v, _, y, b, R)) && (x.index = y, E.push(x))
                } else if (v instanceof THREE.Geometry) {
                    var M, S, T = y instanceof THREE.MultiMaterial, w = !0 === T ? y.materials : null, H = v.vertices;
                    b = v.faces, R = v.faceVertexUvs[0], 0 < R.length && (_ = R);
                    for (var C = 0, A = b.length; A > C; C++) {
                        var P = b[C];
                        if (x = !0 === T ? w[P.materialIndex] : y, void 0 !== x) {
                            if (R = H[P.a], M = H[P.b], S = H[P.c], !0 === x.morphTargets) {
                                x = v.morphTargets;
                                var L = this.morphTargetInfluences;
                                a.set(0, 0, 0), s.set(0, 0, 0), l.set(0, 0, 0);
                                for (var O = 0, D = x.length; D > O; O++) {
                                    var I = L[O];
                                    if (0 !== I) {
                                        var N = x[O].vertices;
                                        a.addScaledVector(h.subVectors(N[P.a], R), I), s.addScaledVector(u.subVectors(N[P.b], M), I), l.addScaledVector(c.subVectors(N[P.c], S), I)
                                    }
                                }
                                a.add(R), s.add(M), l.add(S), R = a, M = s, S = l
                            }
                            (x = e(this, m, r, R, M, S, g)) && (_ && (L = _[C], p.copy(L[0]), d.copy(L[1]), f.copy(L[2]), x.uv = t(g, R, M, S, p, d, f)), x.face = P, x.faceIndex = C, E.push(x))
                        }
                    }
                }
            }
        }
    }(), clone: function () {
        return new this.constructor(this.geometry, this.material).copy(this)
    }
}),THREE.Bone = function (t) {
    THREE.Object3D.call(this), this.type = "Bone", this.skin = t
},THREE.Bone.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Bone, copy: function (t) {
        return THREE.Object3D.prototype.copy.call(this, t), this.skin = t.skin, this
    }
}),THREE.Skeleton = function (t, e, i) {
    if (this.useVertexTexture = void 0 !== i ? i : !0, this.identityMatrix = new THREE.Matrix4, t = t || [], this.bones = t.slice(0), this.useVertexTexture ? (t = Math.sqrt(4 * this.bones.length), t = THREE.Math.nextPowerOfTwo(Math.ceil(t)), this.boneTextureHeight = this.boneTextureWidth = t = Math.max(t, 4), this.boneMatrices = new Float32Array(this.boneTextureWidth * this.boneTextureHeight * 4), this.boneTexture = new THREE.DataTexture(this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType)) : this.boneMatrices = new Float32Array(16 * this.bones.length), void 0 === e) this.calculateInverses(); else if (this.bones.length === e.length) this.boneInverses = e.slice(0); else for (console.warn("THREE.Skeleton bonInverses is the wrong length."), this.boneInverses = [], e = 0, t = this.bones.length; t > e; e++) this.boneInverses.push(new THREE.Matrix4)
},Object.assign(THREE.Skeleton.prototype, {
    calculateInverses: function () {
        this.boneInverses = [];
        for (var t = 0, e = this.bones.length; e > t; t++) {
            var i = new THREE.Matrix4;
            this.bones[t] && i.getInverse(this.bones[t].matrixWorld), this.boneInverses.push(i)
        }
    }, pose: function () {
        for (var t, e = 0, i = this.bones.length; i > e; e++) (t = this.bones[e]) && t.matrixWorld.getInverse(this.boneInverses[e]);
        for (e = 0, i = this.bones.length; i > e; e++) (t = this.bones[e]) && (t.parent instanceof THREE.Bone ? (t.matrix.getInverse(t.parent.matrixWorld), t.matrix.multiply(t.matrixWorld)) : t.matrix.copy(t.matrixWorld), t.matrix.decompose(t.position, t.quaternion, t.scale))
    }, update: function () {
        var t = new THREE.Matrix4;
        return function () {
            for (var e = 0, i = this.bones.length; i > e; e++) t.multiplyMatrices(this.bones[e] ? this.bones[e].matrixWorld : this.identityMatrix, this.boneInverses[e]), t.toArray(this.boneMatrices, 16 * e);
            this.useVertexTexture && (this.boneTexture.needsUpdate = !0)
        }
    }(), clone: function () {
        return new THREE.Skeleton(this.bones, this.boneInverses, this.useVertexTexture)
    }
}),THREE.SkinnedMesh = function (t, e, i) {
    if (THREE.Mesh.call(this, t, e), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new THREE.Matrix4, this.bindMatrixInverse = new THREE.Matrix4, t = [], this.geometry && void 0 !== this.geometry.bones) {
        for (var n, r = 0, o = this.geometry.bones.length; o > r; ++r) n = this.geometry.bones[r], e = new THREE.Bone(this), t.push(e), e.name = n.name, e.position.fromArray(n.pos), e.quaternion.fromArray(n.rotq), void 0 !== n.scl && e.scale.fromArray(n.scl);
        for (r = 0, o = this.geometry.bones.length; o > r; ++r) n = this.geometry.bones[r], -1 !== n.parent && null !== n.parent && void 0 !== t[n.parent] ? t[n.parent].add(t[r]) : this.add(t[r])
    }
    this.normalizeSkinWeights(), this.updateMatrixWorld(!0), this.bind(new THREE.Skeleton(t, void 0, i), this.matrixWorld)
},THREE.SkinnedMesh.prototype = Object.assign(Object.create(THREE.Mesh.prototype), {
    constructor: THREE.SkinnedMesh, bind: function (t, e) {
        this.skeleton = t, void 0 === e && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), e = this.matrixWorld), this.bindMatrix.copy(e), this.bindMatrixInverse.getInverse(e)
    }, pose: function () {
        this.skeleton.pose()
    }, normalizeSkinWeights: function () {
        if (this.geometry instanceof THREE.Geometry) for (var t = 0; t < this.geometry.skinWeights.length; t++) {
            var e = this.geometry.skinWeights[t], i = 1 / e.lengthManhattan();
            1 / 0 !== i ? e.multiplyScalar(i) : e.set(1, 0, 0, 0)
        } else if (this.geometry instanceof THREE.BufferGeometry) for (var e = new THREE.Vector4, n = this.geometry.attributes.skinWeight, t = 0; t < n.count; t++) e.x = n.getX(t), e.y = n.getY(t), e.z = n.getZ(t), e.w = n.getW(t), i = 1 / e.lengthManhattan(), 1 / 0 !== i ? e.multiplyScalar(i) : e.set(1, 0, 0, 0), n.setXYZW(t, e.x, e.y, e.z, e.w)
    }, updateMatrixWorld: function (t) {
        THREE.Mesh.prototype.updateMatrixWorld.call(this, !0), "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh unrecognized bindMode: " + this.bindMode)
    }, clone: function () {
        return new this.constructor(this.geometry, this.material, this.skeleton.useVertexTexture).copy(this)
    }
}),THREE.LOD = function () {
    THREE.Object3D.call(this), this.type = "LOD", Object.defineProperties(this, {levels: {enumerable: !0, value: []}})
},THREE.LOD.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.LOD, copy: function (t) {
        THREE.Object3D.prototype.copy.call(this, t, !1), t = t.levels;
        for (var e = 0, i = t.length; i > e; e++) {
            var n = t[e];
            this.addLevel(n.object.clone(), n.distance)
        }
        return this
    }, addLevel: function (t, e) {
        void 0 === e && (e = 0), e = Math.abs(e);
        for (var i = this.levels, n = 0; n < i.length && !(e < i[n].distance); n++) ;
        i.splice(n, 0, {distance: e, object: t}), this.add(t)
    }, getObjectForDistance: function (t) {
        for (var e = this.levels, i = 1, n = e.length; n > i && !(t < e[i].distance); i++) ;
        return e[i - 1].object
    }, raycast: function () {
        var t = new THREE.Vector3;
        return function (e, i) {
            t.setFromMatrixPosition(this.matrixWorld);
            var n = e.ray.origin.distanceTo(t);
            this.getObjectForDistance(n).raycast(e, i)
        }
    }(), update: function () {
        var t = new THREE.Vector3, e = new THREE.Vector3;
        return function (i) {
            var n = this.levels;
            if (1 < n.length) {
                t.setFromMatrixPosition(i.matrixWorld), e.setFromMatrixPosition(this.matrixWorld), i = t.distanceTo(e), n[0].object.visible = !0;
                for (var r = 1, o = n.length; o > r && i >= n[r].distance; r++) n[r - 1].object.visible = !1, n[r].object.visible = !0;
                for (; o > r; r++) n[r].object.visible = !1
            }
        }
    }(), toJSON: function (t) {
        t = THREE.Object3D.prototype.toJSON.call(this, t), t.object.levels = [];
        for (var e = this.levels, i = 0, n = e.length; n > i; i++) {
            var r = e[i];
            t.object.levels.push({object: r.object.uuid, distance: r.distance})
        }
        return t
    }
}),THREE.Sprite = function (t) {
    THREE.Object3D.call(this), this.type = "Sprite", this.material = void 0 !== t ? t : new THREE.SpriteMaterial
},THREE.Sprite.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.Sprite, raycast: function () {
        var t = new THREE.Vector3;
        return function (e, i) {
            t.setFromMatrixPosition(this.matrixWorld);
            var n = e.ray.distanceSqToPoint(t);
            n > this.scale.x * this.scale.y / 4 || i.push({distance: Math.sqrt(n), point: this.position, face: null, object: this})
        }
    }(), clone: function () {
        return new this.constructor(this.material).copy(this)
    }
}),THREE.LensFlare = function (t, e, i, n, r) {
    THREE.Object3D.call(this), this.lensFlares = [], this.positionScreen = new THREE.Vector3, this.customUpdateCallback = void 0, void 0 !== t && this.add(t, e, i, n, r)
},THREE.LensFlare.prototype = Object.assign(Object.create(THREE.Object3D.prototype), {
    constructor: THREE.LensFlare, copy: function (t) {
        THREE.Object3D.prototype.copy.call(this, t), this.positionScreen.copy(t.positionScreen), this.customUpdateCallback = t.customUpdateCallback;
        for (var e = 0, i = t.lensFlares.length; i > e; e++) this.lensFlares.push(t.lensFlares[e]);
        return this
    }, add: function (t, e, i, n, r, o) {
        void 0 === e && (e = -1), void 0 === i && (i = 0), void 0 === o && (o = 1), void 0 === r && (r = new THREE.Color(16777215)), void 0 === n && (n = THREE.NormalBlending), i = Math.min(i, Math.max(0, i)), this.lensFlares.push({
            texture: t,
            size: e,
            distance: i,
            x: 0,
            y: 0,
            z: 0,
            scale: 1,
            rotation: 0,
            opacity: o,
            color: r,
            blending: n
        })
    }, updateLensFlares: function () {
        var t, e, i = this.lensFlares.length, n = 2 * -this.positionScreen.x, r = 2 * -this.positionScreen.y;
        for (t = 0; i > t; t++) e = this.lensFlares[t], e.x = this.positionScreen.x + n * e.distance, e.y = this.positionScreen.y + r * e.distance, e.wantedRotation = e.x * Math.PI * .25, e.rotation += .25 * (e.wantedRotation - e.rotation)
    }
}),THREE.Scene = function () {
    THREE.Object3D.call(this), this.type = "Scene", this.overrideMaterial = this.fog = this.background = null, this.autoUpdate = !0
},THREE.Scene.prototype = Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.constructor = THREE.Scene,THREE.Scene.prototype.copy = function (t, e) {
    return THREE.Object3D.prototype.copy.call(this, t, e), null !== t.background && (this.background = t.background.clone()), null !== t.fog && (this.fog = t.fog.clone()), null !== t.overrideMaterial && (this.overrideMaterial = t.overrideMaterial.clone()), this.autoUpdate = t.autoUpdate, this.matrixAutoUpdate = t.matrixAutoUpdate, this
},THREE.Fog = function (t, e, i) {
    this.name = "", this.color = new THREE.Color(t), this.near = void 0 !== e ? e : 1, this.far = void 0 !== i ? i : 1e3
},THREE.Fog.prototype.clone = function () {
    return new THREE.Fog(this.color.getHex(), this.near, this.far)
},THREE.FogExp2 = function (t, e) {
    this.name = "", this.color = new THREE.Color(t), this.density = void 0 !== e ? e : 25e-5
},THREE.FogExp2.prototype.clone = function () {
    return new THREE.FogExp2(this.color.getHex(), this.density)
},THREE.ShaderChunk = {},THREE.ShaderChunk.alphamap_fragment = "#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif\n",THREE.ShaderChunk.alphatest_fragment = "#ifdef ALPHATEST\n	if ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",THREE.ShaderChunk.aomap_fragment = "#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n	#endif\n#endif\n",THREE.ShaderChunk.aomap_pars_fragment = "#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",THREE.ShaderChunk.begin_vertex = "\nvec3 transformed = vec3( position );\n",THREE.ShaderChunk.beginnormal_vertex = "\nvec3 objectNormal = vec3( normal );\n",THREE.ShaderChunk.bsdfs = "bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n	return any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n		if( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n			float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n			float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n			return distanceFalloff * maxDistanceCutoffFactor;\n#else\n			return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n		}\n		return 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	return 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n	return specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",THREE.ShaderChunk.bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 );\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif\n",THREE.ShaderChunk.clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\n	for ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\n		vec4 plane = clippingPlanes[ i ];\n		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n	}\n#endif\n",THREE.ShaderChunk.clipping_planes_pars_fragment = "#if NUM_CLIPPING_PLANES > 0\n	#if ! defined( PHYSICAL ) && ! defined( PHONG )\n		varying vec3 vViewPosition;\n	#endif\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",THREE.ShaderChunk.clipping_planes_pars_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n	varying vec3 vViewPosition;\n#endif\n",THREE.ShaderChunk.clipping_planes_vertex = "#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n	vViewPosition = - mvPosition.xyz;\n#endif\n",THREE.ShaderChunk.color_fragment = "#ifdef USE_COLOR\n	diffuseColor.rgb *= vColor;\n#endif",THREE.ShaderChunk.color_pars_fragment = "#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif\n",THREE.ShaderChunk.color_pars_vertex = "#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif",THREE.ShaderChunk.color_vertex = "#ifdef USE_COLOR\n	vColor.xyz = color.xyz;\n#endif",THREE.ShaderChunk.common = "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract(sin(sn) * c);\n}\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	float distance = dot( planeNormal, point - pointOnPlane );\n	return - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n",THREE.ShaderChunk.cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n	vec3 absDirection = abs(direction);\n	int face = -1;\n	if( absDirection.x > absDirection.z ) {\n		if(absDirection.x > absDirection.y )\n			face = direction.x > 0.0 ? 0 : 3;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	else {\n		if(absDirection.z > absDirection.y )\n			face = direction.z > 0.0 ? 2 : 5;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	return face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n	float dxRoughness = dFdx(roughness);\n	float dyRoughness = dFdy(roughness);\n	vec3 dx = dFdx( vec * scale * dxRoughness );\n	vec3 dy = dFdy( vec * scale * dyRoughness );\n	float d = max( dot( dx, dx ), dot( dy, dy ) );\n	d = clamp(d, 1.0, cubeUV_rangeClamp);\n	float mipLevel = 0.5 * log2(d);\n	return vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n	float a = 16.0 * cubeUV_rcpTextureSize;\n	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n	float powScale = exp2_packed.x * exp2_packed.y;\n	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n	bool bRes = mipLevel == 0.0;\n	scale =  bRes && (scale < a) ? a : scale;\n	vec3 r;\n	vec2 offset;\n	int face = getFaceFromDirection(direction);\n	float rcpPowScale = 1.0 / powScale;\n	if( face == 0) {\n		r = vec3(direction.x, -direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n	}\n	else if( face == 1) {\n		r = vec3(direction.y, direction.x, direction.z);\n		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n	}\n	else if( face == 2) {\n		r = vec3(direction.z, direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n	}\n	else if( face == 3) {\n		r = vec3(direction.x, direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n	}\n	else if( face == 4) {\n		r = vec3(direction.y, direction.x, -direction.z);\n		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n	}\n	else {\n		r = vec3(direction.z, -direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n	}\n	r = normalize(r);\n	float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n	vec2 base = offset + vec2( texelOffset );\n	return base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n	float roughnessVal = roughness* cubeUV_maxLods3;\n	float r1 = floor(roughnessVal);\n	float r2 = r1 + 1.0;\n	float t = fract(roughnessVal);\n	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n	float s = mipInfo.y;\n	float level0 = mipInfo.x;\n	float level1 = level0 + 1.0;\n	level1 = level1 > 5.0 ? 5.0 : level1;\n	level0 += min( floor( s + 0.5 ), 5.0 );\n	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n	vec4 result = mix(color10, color20, t);\n	return vec4(result.rgb, 1.0);\n}\n#endif\n",THREE.ShaderChunk.defaultnormal_vertex = "#ifdef FLIP_SIDED\n	objectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n",THREE.ShaderChunk.displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n	transformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",THREE.ShaderChunk.displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif\n",THREE.ShaderChunk.emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",THREE.ShaderChunk.emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif\n",THREE.ShaderChunk.encodings_pars_fragment = "\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n",
THREE.ShaderChunk.encodings_fragment = "  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",THREE.ShaderChunk.envmap_fragment = "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n	envColor = envMapTexelToLinear( envColor );\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif\n",THREE.ShaderChunk.envmap_pars_fragment = "#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n	uniform float reflectivity;\n	uniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n		varying vec3 vWorldPosition;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex = "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif\n",THREE.ShaderChunk.envmap_vertex = "#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif\n",THREE.ShaderChunk.fog_fragment = "#ifdef USE_FOG\n	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	#ifdef FOG_EXP2\n		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",THREE.ShaderChunk.fog_pars_fragment = "#ifdef USE_FOG\n	uniform vec3 fogColor;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",THREE.ShaderChunk.lightmap_fragment = "#ifdef USE_LIGHTMAP\n	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",THREE.ShaderChunk.lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_DIR_LIGHTS > 0\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		#ifdef DOUBLE_SIDED\n			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n		#endif\n	}\n#endif\n",THREE.ShaderChunk.lights_pars = "uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	return irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		directLight.color = directionalLight.color;\n		directLight.direction = directionalLight.direction;\n		directLight.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		if ( testLightInRange( lightDistance, pointLight.distance ) ) {\n			directLight.color = pointLight.color;\n			directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		float angleCos = dot( directLight.direction, spotLight.direction );\n		if ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n			directLight.color = spotLight.color;\n			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n		float dotNL = dot( geometry.normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			irradiance *= PI;\n		#endif\n		return irradiance;\n	}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n		#include <normal_flip>\n		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			vec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n		#else\n			vec4 envMapColor = vec4( 0.0 );\n		#endif\n		return PI * envMapColor.rgb * envMapIntensity;\n	}\n	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n		float maxMIPLevelScalar = float( maxMIPLevel );\n		float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n	}\n	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n		#else\n			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n		#endif\n		#include <normal_flip>\n		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			vec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n		#elif defined( ENVMAP_TYPE_EQUIREC )\n			vec2 sampleUV;\n			sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n			sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_SPHERE )\n			vec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#endif\n		return envMapColor.rgb * envMapIntensity;\n	}\n#endif\n",THREE.ShaderChunk.lights_phong_fragment = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",THREE.ShaderChunk.lights_phong_pars_fragment = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n	vec3	diffuseColor;\n	vec3	specularColor;\n	float	specularShininess;\n	float	specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)\n",THREE.ShaderChunk.lights_physical_fragment = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n	material.clearCoat = saturate( clearCoat );	material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",THREE.ShaderChunk.lights_physical_pars_fragment = "struct PhysicalMaterial {\n	vec3	diffuseColor;\n	float	specularRoughness;\n	vec3	specularColor;\n	#ifndef STANDARD\n		float clearCoat;\n		float clearCoatRoughness;\n	#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	#ifndef STANDARD\n		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n	#else\n		float clearCoatDHR = 0.0;\n	#endif\n	reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n	reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	#ifndef STANDARD\n		reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n	#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	#ifndef STANDARD\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		float dotNL = dotNV;\n		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n	#else\n		float clearCoatDHR = 0.0;\n	#endif\n	reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n	#ifndef STANDARD\n		reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n	#endif\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",THREE.ShaderChunk.lights_template = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointDirectLightIrradiance( pointLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#ifdef USE_LIGHTMAP\n		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		}\n	#endif\n	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n	 	irradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n	#endif\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	vec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n	#ifndef STANDARD\n		vec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n	#else\n		vec3 clearCoatRadiance = vec3( 0.0 );\n	#endif\n		\n	RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",THREE.ShaderChunk.logdepthbuf_fragment = "#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",THREE.ShaderChunk.logdepthbuf_pars_fragment = "#ifdef USE_LOGDEPTHBUF\n	uniform float logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n	uniform float logDepthBufFC;\n#endif",THREE.ShaderChunk.logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n	gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n	#else\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n	#endif\n#endif\n",THREE.ShaderChunk.map_fragment = "#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif\n",THREE.ShaderChunk.map_pars_fragment = "#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n",THREE.ShaderChunk.map_particle_fragment = "#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",THREE.ShaderChunk.map_particle_pars_fragment = "#ifdef USE_MAP\n	uniform vec4 offsetRepeat;\n	uniform sampler2D map;\n#endif\n",THREE.ShaderChunk.metalnessmap_fragment = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.r;\n#endif\n",THREE.ShaderChunk.metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",THREE.ShaderChunk.morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",THREE.ShaderChunk.morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n	#ifndef USE_MORPHNORMALS\n	uniform float morphTargetInfluences[ 8 ];\n	#else\n	uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif",THREE.ShaderChunk.morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n	#endif\n#endif\n",THREE.ShaderChunk.normal_flip = "#ifdef DOUBLE_SIDED\n	float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n	float flipNormal = 1.0;\n#endif\n",THREE.ShaderChunk.normal_fragment = "#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",THREE.ShaderChunk.normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n	}\n#endif\n",THREE.ShaderChunk.packing = "vec3 packNormalToRGB( const in vec3 normal ) {\n  return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n  return 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n  return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n  return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",THREE.ShaderChunk.premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",THREE.ShaderChunk.project_vertex = "#ifdef USE_SKINNING\n	vec4 mvPosition = modelViewMatrix * skinned;\n#else\n	vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n",THREE.ShaderChunk.roughnessmap_fragment = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.r;\n#endif\n",THREE.ShaderChunk.roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",THREE.ShaderChunk.shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n		const vec2 offset = vec2( 0.0, 1.0 );\n		vec2 texelSize = vec2( 1.0 ) / size;\n		vec2 centroidUV = floor( uv * size + 0.5 ) / size;\n		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n		vec2 f = fract( uv * size + 0.5 );\n		float a = mix( lb, lt, f.y );\n		float b = mix( rb, rt, f.y );\n		float c = mix( a, b, f.x );\n		return c;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			return (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			return (\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return 1.0;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		vec3 bd3D = normalize( lightToPosition );\n		float dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif\n",
THREE.ShaderChunk.shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n	#endif\n#endif\n",THREE.ShaderChunk.shadowmap_vertex = "#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n#endif\n",THREE.ShaderChunk.shadowmask_pars_fragment = "float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n	DirectionalLight directionalLight;\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n	SpotLight spotLight;\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n	PointLight pointLight;\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#endif\n	return shadow;\n}\n",THREE.ShaderChunk.skinbase_vertex = "#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",THREE.ShaderChunk.skinning_pars_vertex = "#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif\n",THREE.ShaderChunk.skinning_vertex = "#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n#endif\n",THREE.ShaderChunk.skinnormal_vertex = "#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",THREE.ShaderChunk.specularmap_fragment = "float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",THREE.ShaderChunk.specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",THREE.ShaderChunk.tonemapping_fragment = "#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",THREE.ShaderChunk.tonemapping_pars_fragment = "#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",THREE.ShaderChunk.uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",THREE.ShaderChunk.uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n#endif",THREE.ShaderChunk.uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = uv2;\n#endif",THREE.ShaderChunk.uv_pars_fragment = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	varying vec2 vUv;\n#endif",THREE.ShaderChunk.uv_pars_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n#endif\n",THREE.ShaderChunk.uv_vertex = "#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",THREE.ShaderChunk.worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n	#ifdef USE_SKINNING\n		vec4 worldPosition = modelMatrix * skinned;\n	#else\n		vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n	#endif\n#endif\n",THREE.UniformsUtils = {
    merge: function (t) {
        for (var e = {}, i = 0; i < t.length; i++) {
            var n, r = this.clone(t[i]);
            for (n in r) e[n] = r[n]
        }
        return e
    }, clone: function (t) {
        var e, i = {};
        for (e in t) {
            i[e] = {};
            for (var n in t[e]) {
                var r = t[e][n];
                r instanceof THREE.Color || r instanceof THREE.Vector2 || r instanceof THREE.Vector3 || r instanceof THREE.Vector4 || r instanceof THREE.Matrix3 || r instanceof THREE.Matrix4 || r instanceof THREE.Texture ? i[e][n] = r.clone() : Array.isArray(r) ? i[e][n] = r.slice() : i[e][n] = r
            }
        }
        return i
    }
},THREE.UniformsLib = {
    common: {
        diffuse: {value: new THREE.Color(15658734)},
        opacity: {value: 1},
        map: {value: null},
        offsetRepeat: {value: new THREE.Vector4(0, 0, 1, 1)},
        specularMap: {value: null},
        alphaMap: {value: null},
        envMap: {value: null},
        flipEnvMap: {value: -1},
        reflectivity: {value: 1},
        refractionRatio: {value: .98}
    },
    aomap: {aoMap: {value: null}, aoMapIntensity: {value: 1}},
    lightmap: {lightMap: {value: null}, lightMapIntensity: {value: 1}},
    emissivemap: {emissiveMap: {value: null}},
    bumpmap: {bumpMap: {value: null}, bumpScale: {value: 1}},
    normalmap: {normalMap: {value: null}, normalScale: {value: new THREE.Vector2(1, 1)}},
    displacementmap: {displacementMap: {value: null}, displacementScale: {value: 1}, displacementBias: {value: 0}},
    roughnessmap: {roughnessMap: {value: null}},
    metalnessmap: {metalnessMap: {value: null}},
    fog: {fogDensity: {value: 25e-5}, fogNear: {value: 1}, fogFar: {value: 2e3}, fogColor: {value: new THREE.Color(16777215)}},
    lights: {
        ambientLightColor: {value: []},
        directionalLights: {
            value: [],
            properties: {direction: {}, color: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}}
        },
        directionalShadowMap: {value: []},
        directionalShadowMatrix: {value: []},
        spotLights: {
            value: [],
            properties: {
                color: {},
                position: {},
                direction: {},
                distance: {},
                coneCos: {},
                penumbraCos: {},
                decay: {},
                shadow: {},
                shadowBias: {},
                shadowRadius: {},
                shadowMapSize: {}
            }
        },
        spotShadowMap: {value: []},
        spotShadowMatrix: {value: []},
        pointLights: {
            value: [],
            properties: {color: {}, position: {}, decay: {}, distance: {}, shadow: {}, shadowBias: {}, shadowRadius: {}, shadowMapSize: {}}
        },
        pointShadowMap: {value: []},
        pointShadowMatrix: {value: []},
        hemisphereLights: {value: [], properties: {direction: {}, skyColor: {}, groundColor: {}}}
    },
    points: {
        diffuse: {value: new THREE.Color(15658734)},
        opacity: {value: 1},
        size: {value: 1},
        scale: {value: 1},
        map: {value: null},
        offsetRepeat: {value: new THREE.Vector4(0, 0, 1, 1)}
    }
},THREE.ShaderChunk.cube_frag = "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n	gl_FragColor.a *= opacity;\n}\n",THREE.ShaderChunk.cube_vert = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}\n",THREE.ShaderChunk.depth_frag = "#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n	#endif\n}\n",THREE.ShaderChunk.depth_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n",THREE.ShaderChunk.distanceRGBA_frag = "uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	gl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n",THREE.ShaderChunk.distanceRGBA_vert = "varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <skinbase_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition;\n}\n",THREE.ShaderChunk.equirect_frag = "uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldPosition );\n	vec2 sampleUV;\n	sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",THREE.ShaderChunk.equirect_vert = "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}\n",THREE.ShaderChunk.linedashed_frag = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.linedashed_vert = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n",THREE.ShaderChunk.meshbasic_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight;\n	reflectedLight.directDiffuse = vec3( 0.0 );\n	reflectedLight.directSpecular = vec3( 0.0 );\n	reflectedLight.indirectDiffuse = diffuseColor.rgb;\n	reflectedLight.indirectSpecular = vec3( 0.0 );\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <normal_flip>\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshbasic_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_ENVMAP\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	#include <envmap_vertex>\n}\n",THREE.ShaderChunk.meshlambert_frag = "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <normal_flip>\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshlambert_vert = "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.meshphong_frag = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_flip>\n	#include <normal_fragment>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_template>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshphong_vert = "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.meshphysical_frag = "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n	uniform float clearCoat;\n	uniform float clearCoatRoughness;\n#endif\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_flip>\n	#include <normal_fragment>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_template>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshphysical_vert = "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.normal_frag = "uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <packing>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	gl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\n	#include <logdepthbuf_fragment>\n}\n",THREE.ShaderChunk.normal_vert = "varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vNormal = normalize( normalMatrix * normal );\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n",THREE.ShaderChunk.points_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.points_vert = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <project_vertex>\n	#ifdef USE_SIZEATTENUATION\n		gl_PointSize = size * ( scale / - mvPosition.z );\n	#else\n		gl_PointSize = size;\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.shadow_frag = "uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\n}\n",THREE.ShaderChunk.shadow_vert = "#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderLib = {
    basic: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.aomap, THREE.UniformsLib.fog]),
        vertexShader: THREE.ShaderChunk.meshbasic_vert,
        fragmentShader: THREE.ShaderChunk.meshbasic_frag
    },
    lambert: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.aomap, THREE.UniformsLib.lightmap, THREE.UniformsLib.emissivemap, THREE.UniformsLib.fog, THREE.UniformsLib.lights, {emissive: {value: new THREE.Color(0)}}]),
        vertexShader: THREE.ShaderChunk.meshlambert_vert,
        fragmentShader: THREE.ShaderChunk.meshlambert_frag
    },
    phong: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.aomap, THREE.UniformsLib.lightmap, THREE.UniformsLib.emissivemap, THREE.UniformsLib.bumpmap, THREE.UniformsLib.normalmap, THREE.UniformsLib.displacementmap, THREE.UniformsLib.fog, THREE.UniformsLib.lights, {
            emissive: {value: new THREE.Color(0)},
            specular: {value: new THREE.Color(1118481)},
            shininess: {value: 30}
        }]), vertexShader: THREE.ShaderChunk.meshphong_vert, fragmentShader: THREE.ShaderChunk.meshphong_frag
    },
    standard: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.aomap, THREE.UniformsLib.lightmap, THREE.UniformsLib.emissivemap, THREE.UniformsLib.bumpmap, THREE.UniformsLib.normalmap, THREE.UniformsLib.displacementmap, THREE.UniformsLib.roughnessmap, THREE.UniformsLib.metalnessmap, THREE.UniformsLib.fog, THREE.UniformsLib.lights, {
            emissive: {value: new THREE.Color(0)},
            roughness: {value: .5},
            metalness: {value: 0},
            envMapIntensity: {value: 1}
        }]), vertexShader: THREE.ShaderChunk.meshphysical_vert, fragmentShader: THREE.ShaderChunk.meshphysical_frag
    },
    points: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.points, THREE.UniformsLib.fog]),
        vertexShader: THREE.ShaderChunk.points_vert,
        fragmentShader: THREE.ShaderChunk.points_frag
    },
    dashed: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.fog, {
            scale: {value: 1},
            dashSize: {value: 1},
            totalSize: {value: 2}
        }]), vertexShader: THREE.ShaderChunk.linedashed_vert, fragmentShader: THREE.ShaderChunk.linedashed_frag
    },
    depth: {
        uniforms: THREE.UniformsUtils.merge([THREE.UniformsLib.common, THREE.UniformsLib.displacementmap]),
        vertexShader: THREE.ShaderChunk.depth_vert,
        fragmentShader: THREE.ShaderChunk.depth_frag
    },
    normal: {uniforms: {opacity: {value: 1}}, vertexShader: THREE.ShaderChunk.normal_vert, fragmentShader: THREE.ShaderChunk.normal_frag},
    cube: {
        uniforms: {tCube: {value: null}, tFlip: {value: -1}, opacity: {value: 1}},
        vertexShader: THREE.ShaderChunk.cube_vert,
        fragmentShader: THREE.ShaderChunk.cube_frag
    },
    equirect: {
        uniforms: {tEquirect: {value: null}, tFlip: {value: -1}},
        vertexShader: THREE.ShaderChunk.equirect_vert,
        fragmentShader: THREE.ShaderChunk.equirect_frag
    },
    distanceRGBA: {
        uniforms: {lightPos: {value: new THREE.Vector3}},
        vertexShader: THREE.ShaderChunk.distanceRGBA_vert,
        fragmentShader: THREE.ShaderChunk.distanceRGBA_frag
    }
},THREE.ShaderLib.physical = {
    uniforms: THREE.UniformsUtils.merge([THREE.ShaderLib.standard.uniforms, {
        clearCoat: {value: 0},
        clearCoatRoughness: {value: 0}
    }]), vertexShader: THREE.ShaderChunk.meshphysical_vert, fragmentShader: THREE.ShaderChunk.meshphysical_frag
},THREE.WebGLRenderer = function (t) {
    function e(t, e, i, n) {
        !0 === R && (t *= n, e *= n, i *= n), pt.clearColor(t, e, i, n)
    }

    function i() {
        pt.init(), pt.scissor(V.copy(Z).multiplyScalar($)), pt.viewport(G.copy(K).multiplyScalar($)), e(W.r, W.g, W.b, X)
    }

    function n() {
        U = I = null, F = "", B = -1, pt.reset()
    }

    function r(t) {
        t.preventDefault(), n(), i(), dt.clear()
    }

    function o(t) {
        t = t.target, t.removeEventListener("dispose", o), a(t), dt["delete"](t)
    }

    function a(t) {
        var e = dt.get(t).program;
        t.program = void 0,
        void 0 !== e && gt.releaseProgram(e)
    }

    function s(t, e) {
        return Math.abs(e[0]) - Math.abs(t[0])
    }

    function l(t, e) {
        return t.object.renderOrder !== e.object.renderOrder ? t.object.renderOrder - e.object.renderOrder : t.material.program && e.material.program && t.material.program !== e.material.program ? t.material.program.id - e.material.program.id : t.material.id !== e.material.id ? t.material.id - e.material.id : t.z !== e.z ? t.z - e.z : t.id - e.id
    }

    function h(t, e) {
        return t.object.renderOrder !== e.object.renderOrder ? t.object.renderOrder - e.object.renderOrder : t.z !== e.z ? e.z - t.z : t.id - e.id
    }

    function u(t, e, i, n, r) {
        var o;
        i.transparent ? (n = C, o = ++A) : (n = M, o = ++S), o = n[o], void 0 !== o ? (o.id = t.id, o.object = t, o.geometry = e, o.material = i, o.z = ot.z, o.group = r) : (o = {
            id: t.id,
            object: t,
            geometry: e,
            material: i,
            z: ot.z,
            group: r
        }, n.push(o))
    }

    function c(t) {
        if (!J.intersectsSphere(t)) return !1;
        var e = tt.numPlanes;
        if (0 === e) return !0;
        var i = D.clippingPlanes, n = t.center;
        t = -t.radius;
        var r = 0;
        do if (i[r].distanceToPoint(n) < t) return !1; while (++r !== e);
        return !0
    }

    function p(t, e) {
        if (!1 !== t.visible) {
            if (t.layers.test(e.layers)) if (t instanceof THREE.Light) H.push(t); else if (t instanceof THREE.Sprite) {
                var i;
                (i = !1 === t.frustumCulled) || (nt.center.set(0, 0, 0), nt.radius = .7071067811865476, nt.applyMatrix4(t.matrixWorld), i = !0 === c(nt)), i && L.push(t)
            } else if (t instanceof THREE.LensFlare) O.push(t); else if (t instanceof THREE.ImmediateRenderObject) !0 === D.sortObjects && (ot.setFromMatrixPosition(t.matrixWorld), ot.applyProjection(rt)), u(t, null, t.material, ot.z, null); else if ((t instanceof THREE.Mesh || t instanceof THREE.Line || t instanceof THREE.Points) && (t instanceof THREE.SkinnedMesh && t.skeleton.update(), (i = !1 === t.frustumCulled) || (i = t.geometry, null === i.boundingSphere && i.computeBoundingSphere(), nt.copy(i.boundingSphere).applyMatrix4(t.matrixWorld), i = !0 === c(nt)), i)) {
                var n = t.material;
                if (!0 === n.visible) if (!0 === D.sortObjects && (ot.setFromMatrixPosition(t.matrixWorld), ot.applyProjection(rt)), i = mt.update(t), n instanceof THREE.MultiMaterial) for (var r = i.groups, o = n.materials, n = 0, a = r.length; a > n; n++) {
                    var s = r[n], l = o[s.materialIndex];
                    !0 === l.visible && u(t, i, l, ot.z, s)
                } else u(t, i, n, ot.z, null)
            }
            for (i = t.children, n = 0, a = i.length; a > n; n++) p(i[n], e)
        }
    }

    function d(t, e, i, n) {
        for (var r = 0, o = t.length; o > r; r++) {
            var a = t[r], s = a.object, l = a.geometry, h = void 0 === n ? a.material : n, a = a.group;
            if (s.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse, s.matrixWorld), s.normalMatrix.getNormalMatrix(s.modelViewMatrix), s instanceof THREE.ImmediateRenderObject) {
                f(h);
                var u = m(e, i, h, s);
                F = "", s.render(function (t) {
                    D.renderBufferImmediate(t, u, h)
                })
            } else D.renderBufferDirect(e, i, l, h, s, a)
        }
    }

    function f(t) {
        t.side !== THREE.DoubleSide ? pt.enable(lt.CULL_FACE) : pt.disable(lt.CULL_FACE), pt.setFlipSided(t.side === THREE.BackSide), !0 === t.transparent ? pt.setBlending(t.blending, t.blendEquation, t.blendSrc, t.blendDst, t.blendEquationAlpha, t.blendSrcAlpha, t.blendDstAlpha, t.premultipliedAlpha) : pt.setBlending(THREE.NoBlending), pt.setDepthFunc(t.depthFunc), pt.setDepthTest(t.depthTest), pt.setDepthWrite(t.depthWrite), pt.setColorWrite(t.colorWrite), pt.setPolygonOffset(t.polygonOffset, t.polygonOffsetFactor, t.polygonOffsetUnits)
    }

    function m(t, e, i, n) {
        j = 0;
        var r = dt.get(i);
        if (et && ((it || t !== U) && tt.setState(i.clippingPlanes, i.clipShadows, t, r, t === U && i.id === B), void 0 !== r.numClippingPlanes && r.numClippingPlanes !== tt.numPlanes && (i.needsUpdate = !0)), void 0 === r.program && (i.needsUpdate = !0), void 0 !== r.lightsHash && r.lightsHash !== at.hash && (i.needsUpdate = !0), i.needsUpdate) {
            t:{
                var s = dt.get(i), l = gt.getParameters(i, at, e, tt.numPlanes, n), h = gt.getProgramCode(i, l), u = s.program, c = !0;
                if (void 0 === u) i.addEventListener("dispose", o); else if (u.code !== h) a(i); else {
                    if (void 0 !== l.shaderID) break t;
                    c = !1
                }
                if (c && (l.shaderID ? (u = THREE.ShaderLib[l.shaderID], s.__webglShader = {
                        name: i.type,
                        uniforms: THREE.UniformsUtils.clone(u.uniforms),
                        vertexShader: u.vertexShader,
                        fragmentShader: u.fragmentShader
                    }) : s.__webglShader = {
                        name: i.type,
                        uniforms: i.uniforms,
                        vertexShader: i.vertexShader,
                        fragmentShader: i.fragmentShader
                    }, i.__webglShader = s.__webglShader, u = gt.acquireProgram(i, l, h), s.program = u, i.program = u), l = u.getAttributes(), i.morphTargets) for (h = i.numSupportedMorphTargets = 0; h < D.maxMorphTargets; h++) 0 <= l["morphTarget" + h] && i.numSupportedMorphTargets++;
                if (i.morphNormals) for (h = i.numSupportedMorphNormals = 0; h < D.maxMorphNormals; h++) 0 <= l["morphNormal" + h] && i.numSupportedMorphNormals++;
                l = s.__webglShader.uniforms, (i instanceof THREE.ShaderMaterial || i instanceof THREE.RawShaderMaterial) && !0 !== i.clipping || (s.numClippingPlanes = tt.numPlanes, l.clippingPlanes = tt.uniform), i.lights && (s.lightsHash = at.hash, l.ambientLightColor.value = at.ambient, l.directionalLights.value = at.directional, l.spotLights.value = at.spot, l.pointLights.value = at.point, l.hemisphereLights.value = at.hemi, l.directionalShadowMap.value = at.directionalShadowMap, l.directionalShadowMatrix.value = at.directionalShadowMatrix, l.spotShadowMap.value = at.spotShadowMap, l.spotShadowMatrix.value = at.spotShadowMatrix, l.pointShadowMap.value = at.pointShadowMap, l.pointShadowMatrix.value = at.pointShadowMatrix), h = s.program.getUniforms(), h = THREE.WebGLUniforms.seqWithValue(h.seq, l), s.uniformsList = h, s.dynamicUniforms = THREE.WebGLUniforms.splitDynamic(h, l)
            }
            i.needsUpdate = !1
        }
        var p = !1, c = u = !1, s = r.program, h = s.getUniforms(), l = r.__webglShader.uniforms;
        if (s.id !== I && (lt.useProgram(s.program), I = s.id, c = u = p = !0), i.id !== B && (B = i.id, u = !0), (p || t !== U) && (h.set(lt, t, "projectionMatrix"), ct.logarithmicDepthBuffer && h.setValue(lt, "logDepthBufFC", 2 / (Math.log(t.far + 1) / Math.LN2)), t !== U && (U = t, c = u = !0), (i instanceof THREE.ShaderMaterial || i instanceof THREE.MeshPhongMaterial || i instanceof THREE.MeshStandardMaterial || i.envMap) && (p = h.map.cameraPosition, void 0 !== p && p.setValue(lt, ot.setFromMatrixPosition(t.matrixWorld))), (i instanceof THREE.MeshPhongMaterial || i instanceof THREE.MeshLambertMaterial || i instanceof THREE.MeshBasicMaterial || i instanceof THREE.MeshStandardMaterial || i instanceof THREE.ShaderMaterial || i.skinning) && h.setValue(lt, "viewMatrix", t.matrixWorldInverse), h.set(lt, D, "toneMappingExposure"), h.set(lt, D, "toneMappingWhitePoint")), i.skinning && (h.setOptional(lt, n, "bindMatrix"), h.setOptional(lt, n, "bindMatrixInverse"), p = n.skeleton) && (ct.floatVertexTextures && p.useVertexTexture ? (h.set(lt, p, "boneTexture"), h.set(lt, p, "boneTextureWidth"), h.set(lt, p, "boneTextureHeight")) : h.setOptional(lt, p, "boneMatrices")), u) {
            if (i.lights && (u = c, l.ambientLightColor.needsUpdate = u, l.directionalLights.needsUpdate = u, l.pointLights.needsUpdate = u, l.spotLights.needsUpdate = u, l.hemisphereLights.needsUpdate = u), e && i.fog && (l.fogColor.value = e.color, e instanceof THREE.Fog ? (l.fogNear.value = e.near, l.fogFar.value = e.far) : e instanceof THREE.FogExp2 && (l.fogDensity.value = e.density)), i instanceof THREE.MeshBasicMaterial || i instanceof THREE.MeshLambertMaterial || i instanceof THREE.MeshPhongMaterial || i instanceof THREE.MeshStandardMaterial || i instanceof THREE.MeshDepthMaterial) {
                l.opacity.value = i.opacity, l.diffuse.value = i.color, i.emissive && l.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity), l.map.value = i.map, l.specularMap.value = i.specularMap, l.alphaMap.value = i.alphaMap, i.aoMap && (l.aoMap.value = i.aoMap, l.aoMapIntensity.value = i.aoMapIntensity);
                var d;
                i.map ? d = i.map : i.specularMap ? d = i.specularMap : i.displacementMap ? d = i.displacementMap : i.normalMap ? d = i.normalMap : i.bumpMap ? d = i.bumpMap : i.roughnessMap ? d = i.roughnessMap : i.metalnessMap ? d = i.metalnessMap : i.alphaMap ? d = i.alphaMap : i.emissiveMap && (d = i.emissiveMap), void 0 !== d && (d instanceof THREE.WebGLRenderTarget && (d = d.texture), e = d.offset, d = d.repeat, l.offsetRepeat.value.set(e.x, e.y, d.x, d.y)), l.envMap.value = i.envMap, l.flipEnvMap.value = i.envMap instanceof THREE.CubeTexture ? -1 : 1, l.reflectivity.value = i.reflectivity, l.refractionRatio.value = i.refractionRatio
            }
            i instanceof THREE.LineBasicMaterial ? (l.diffuse.value = i.color, l.opacity.value = i.opacity) : i instanceof THREE.LineDashedMaterial ? (l.diffuse.value = i.color, l.opacity.value = i.opacity, l.dashSize.value = i.dashSize, l.totalSize.value = i.dashSize + i.gapSize, l.scale.value = i.scale) : i instanceof THREE.PointsMaterial ? (l.diffuse.value = i.color, l.opacity.value = i.opacity, l.size.value = i.size * $, l.scale.value = .5 * v.clientHeight, l.map.value = i.map, null !== i.map && (d = i.map.offset, i = i.map.repeat, l.offsetRepeat.value.set(d.x, d.y, i.x, i.y))) : i instanceof THREE.MeshLambertMaterial ? (i.lightMap && (l.lightMap.value = i.lightMap, l.lightMapIntensity.value = i.lightMapIntensity), i.emissiveMap && (l.emissiveMap.value = i.emissiveMap)) : i instanceof THREE.MeshPhongMaterial ? (l.specular.value = i.specular, l.shininess.value = Math.max(i.shininess, 1e-4), i.lightMap && (l.lightMap.value = i.lightMap, l.lightMapIntensity.value = i.lightMapIntensity), i.emissiveMap && (l.emissiveMap.value = i.emissiveMap), i.bumpMap && (l.bumpMap.value = i.bumpMap, l.bumpScale.value = i.bumpScale), i.normalMap && (l.normalMap.value = i.normalMap, l.normalScale.value.copy(i.normalScale)), i.displacementMap && (l.displacementMap.value = i.displacementMap, l.displacementScale.value = i.displacementScale, l.displacementBias.value = i.displacementBias)) : i instanceof THREE.MeshPhysicalMaterial ? (l.clearCoat.value = i.clearCoat, l.clearCoatRoughness.value = i.clearCoatRoughness, g(l, i)) : i instanceof THREE.MeshStandardMaterial ? g(l, i) : i instanceof THREE.MeshDepthMaterial ? i.displacementMap && (l.displacementMap.value = i.displacementMap, l.displacementScale.value = i.displacementScale, l.displacementBias.value = i.displacementBias) : i instanceof THREE.MeshNormalMaterial && (l.opacity.value = i.opacity), THREE.WebGLUniforms.upload(lt, r.uniformsList, l, D)
        }
        return h.set(lt, n, "modelViewMatrix"), h.set(lt, n, "normalMatrix"), h.setValue(lt, "modelMatrix", n.matrixWorld), r = r.dynamicUniforms, null !== r && (THREE.WebGLUniforms.evalDynamic(r, l, n, t), THREE.WebGLUniforms.upload(lt, r, l, D)), s
    }

    function g(t, e) {
        t.roughness.value = e.roughness, t.metalness.value = e.metalness, e.roughnessMap && (t.roughnessMap.value = e.roughnessMap), e.metalnessMap && (t.metalnessMap.value = e.metalnessMap), e.lightMap && (t.lightMap.value = e.lightMap, t.lightMapIntensity.value = e.lightMapIntensity), e.emissiveMap && (t.emissiveMap.value = e.emissiveMap), e.bumpMap && (t.bumpMap.value = e.bumpMap, t.bumpScale.value = e.bumpScale), e.normalMap && (t.normalMap.value = e.normalMap, t.normalScale.value.copy(e.normalScale)), e.displacementMap && (t.displacementMap.value = e.displacementMap, t.displacementScale.value = e.displacementScale, t.displacementBias.value = e.displacementBias), e.envMap && (t.envMapIntensity.value = e.envMapIntensity)
    }

    function E(t) {
        var e;
        if (t === THREE.RepeatWrapping) return lt.REPEAT;
        if (t === THREE.ClampToEdgeWrapping) return lt.CLAMP_TO_EDGE;
        if (t === THREE.MirroredRepeatWrapping) return lt.MIRRORED_REPEAT;
        if (t === THREE.NearestFilter) return lt.NEAREST;
        if (t === THREE.NearestMipMapNearestFilter) return lt.NEAREST_MIPMAP_NEAREST;
        if (t === THREE.NearestMipMapLinearFilter) return lt.NEAREST_MIPMAP_LINEAR;
        if (t === THREE.LinearFilter) return lt.LINEAR;
        if (t === THREE.LinearMipMapNearestFilter) return lt.LINEAR_MIPMAP_NEAREST;
        if (t === THREE.LinearMipMapLinearFilter) return lt.LINEAR_MIPMAP_LINEAR;
        if (t === THREE.UnsignedByteType) return lt.UNSIGNED_BYTE;
        if (t === THREE.UnsignedShort4444Type) return lt.UNSIGNED_SHORT_4_4_4_4;
        if (t === THREE.UnsignedShort5551Type) return lt.UNSIGNED_SHORT_5_5_5_1;
        if (t === THREE.UnsignedShort565Type) return lt.UNSIGNED_SHORT_5_6_5;
        if (t === THREE.ByteType) return lt.BYTE;
        if (t === THREE.ShortType) return lt.SHORT;
        if (t === THREE.UnsignedShortType) return lt.UNSIGNED_SHORT;
        if (t === THREE.IntType) return lt.INT;
        if (t === THREE.UnsignedIntType) return lt.UNSIGNED_INT;
        if (t === THREE.FloatType) return lt.FLOAT;
        if (e = ut.get("OES_texture_half_float"), null !== e && t === THREE.HalfFloatType) return e.HALF_FLOAT_OES;
        if (t === THREE.AlphaFormat) return lt.ALPHA;
        if (t === THREE.RGBFormat) return lt.RGB;
        if (t === THREE.RGBAFormat) return lt.RGBA;
        if (t === THREE.LuminanceFormat) return lt.LUMINANCE;
        if (t === THREE.LuminanceAlphaFormat) return lt.LUMINANCE_ALPHA;
        if (t === THREE.DepthFormat) return lt.DEPTH_COMPONENT;
        if (t === THREE.AddEquation) return lt.FUNC_ADD;
        if (t === THREE.SubtractEquation) return lt.FUNC_SUBTRACT;
        if (t === THREE.ReverseSubtractEquation) return lt.FUNC_REVERSE_SUBTRACT;
        if (t === THREE.ZeroFactor) return lt.ZERO;
        if (t === THREE.OneFactor) return lt.ONE;
        if (t === THREE.SrcColorFactor) return lt.SRC_COLOR;
        if (t === THREE.OneMinusSrcColorFactor) return lt.ONE_MINUS_SRC_COLOR;
        if (t === THREE.SrcAlphaFactor) return lt.SRC_ALPHA;
        if (t === THREE.OneMinusSrcAlphaFactor) return lt.ONE_MINUS_SRC_ALPHA;
        if (t === THREE.DstAlphaFactor) return lt.DST_ALPHA;
        if (t === THREE.OneMinusDstAlphaFactor) return lt.ONE_MINUS_DST_ALPHA;
        if (t === THREE.DstColorFactor) return lt.DST_COLOR;
        if (t === THREE.OneMinusDstColorFactor) return lt.ONE_MINUS_DST_COLOR;
        if (t === THREE.SrcAlphaSaturateFactor) return lt.SRC_ALPHA_SATURATE;
        if (e = ut.get("WEBGL_compressed_texture_s3tc"), null !== e) {
            if (t === THREE.RGB_S3TC_DXT1_Format) return e.COMPRESSED_RGB_S3TC_DXT1_EXT;
            if (t === THREE.RGBA_S3TC_DXT1_Format) return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;
            if (t === THREE.RGBA_S3TC_DXT3_Format) return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;
            if (t === THREE.RGBA_S3TC_DXT5_Format) return e.COMPRESSED_RGBA_S3TC_DXT5_EXT
        }
        if (e = ut.get("WEBGL_compressed_texture_pvrtc"), null !== e) {
            if (t === THREE.RGB_PVRTC_4BPPV1_Format) return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
            if (t === THREE.RGB_PVRTC_2BPPV1_Format) return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
            if (t === THREE.RGBA_PVRTC_4BPPV1_Format) return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
            if (t === THREE.RGBA_PVRTC_2BPPV1_Format) return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
        }
        if (e = ut.get("WEBGL_compressed_texture_etc1"), null !== e && t === THREE.RGB_ETC1_Format) return e.COMPRESSED_RGB_ETC1_WEBGL;
        if (e = ut.get("EXT_blend_minmax"), null !== e) {
            if (t === THREE.MinEquation) return e.MIN_EXT;
            if (t === THREE.MaxEquation) return e.MAX_EXT
        }
        return 0
    }

    console.log("THREE.WebGLRenderer", THREE.REVISION), t = t || {};
    var v = void 0 !== t.canvas ? t.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
        y = void 0 !== t.context ? t.context : null, T = void 0 !== t.alpha ? t.alpha : !1, _ = void 0 !== t.depth ? t.depth : !0,
        x = void 0 !== t.stencil ? t.stencil : !0, b = void 0 !== t.antialias ? t.antialias : !1,
        R = void 0 !== t.premultipliedAlpha ? t.premultipliedAlpha : !0,
        w = void 0 !== t.preserveDrawingBuffer ? t.preserveDrawingBuffer : !1, H = [], M = [], S = -1, C = [], A = -1,
        P = new Float32Array(8), L = [], O = [];
    this.domElement = v, this.context = null, this.sortObjects = this.autoClearStencil = this.autoClearDepth = this.autoClearColor = this.autoClear = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.physicallyCorrectLights = this.gammaOutput = this.gammaInput = !1, this.toneMapping = THREE.LinearToneMapping, this.toneMappingWhitePoint = this.toneMappingExposure = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;
    var D = this, I = null, N = null, k = null, B = -1, F = "", U = null, V = new THREE.Vector4, z = null, G = new THREE.Vector4, j = 0,
        W = new THREE.Color(0), X = 0, q = v.width, Y = v.height, $ = 1, Z = new THREE.Vector4(0, 0, q, Y), Q = !1,
        K = new THREE.Vector4(0, 0, q, Y), J = new THREE.Frustum, tt = new THREE.WebGLClipping, et = !1, it = !1, nt = new THREE.Sphere,
        rt = new THREE.Matrix4, ot = new THREE.Vector3, at = {
            hash: "",
            ambient: [0, 0, 0],
            directional: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotShadowMap: [],
            spotShadowMatrix: [],
            point: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: [],
            shadows: []
        }, st = {calls: 0, vertices: 0, faces: 0, points: 0};
    this.info = {render: st, memory: {geometries: 0, textures: 0}, programs: null};
    var lt;
    try {
        if (T = {
                alpha: T,
                depth: _,
                stencil: x,
                antialias: b,
                premultipliedAlpha: R,
                preserveDrawingBuffer: w
            }, lt = y || v.getContext("webgl", T) || v.getContext("experimental-webgl", T), null === lt) {
            if (null !== v.getContext("webgl")) throw"Error creating WebGL context with your selected attributes.";
            throw"Error creating WebGL context."
        }
        void 0 === lt.getShaderPrecisionFormat && (lt.getShaderPrecisionFormat = function () {
            return {rangeMin: 1, rangeMax: 1, precision: 1}
        }), v.addEventListener("webglcontextlost", r, !1)
    } catch (ht) {
        console.error("THREE.WebGLRenderer: " + ht)
    }
    var ut = new THREE.WebGLExtensions(lt);
    ut.get("WEBGL_depth_texture"), ut.get("OES_texture_float"), ut.get("OES_texture_float_linear"), ut.get("OES_texture_half_float"), ut.get("OES_texture_half_float_linear"), ut.get("OES_standard_derivatives"), ut.get("ANGLE_instanced_arrays"), ut.get("OES_element_index_uint") && (THREE.BufferGeometry.MaxIndex = 4294967296);
    var ct = new THREE.WebGLCapabilities(lt, ut, t), pt = new THREE.WebGLState(lt, ut, E), dt = new THREE.WebGLProperties,
        ft = new THREE.WebGLTextures(lt, ut, pt, dt, ct, E, this.info), mt = new THREE.WebGLObjects(lt, dt, this.info),
        gt = new THREE.WebGLPrograms(this, ct), Et = new THREE.WebGLLights;
    this.info.programs = gt.programs;
    var vt = new THREE.WebGLBufferRenderer(lt, ut, st), yt = new THREE.WebGLIndexedBufferRenderer(lt, ut, st),
        Tt = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1), _t = new THREE.PerspectiveCamera,
        xt = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), new THREE.MeshBasicMaterial({depthTest: !1, depthWrite: !1, fog: !1}));
    t = THREE.ShaderLib.cube;
    var bt = new THREE.Mesh(new THREE.BoxBufferGeometry(5, 5, 5), new THREE.ShaderMaterial({
        uniforms: t.uniforms,
        vertexShader: t.vertexShader,
        fragmentShader: t.fragmentShader,
        side: THREE.BackSide,
        depthTest: !1,
        depthWrite: !1,
        fog: !1
    }));
    i(), this.context = lt, this.capabilities = ct, this.extensions = ut, this.properties = dt, this.state = pt;
    var Rt = new THREE.WebGLShadowMap(this, at, mt, ct);
    this.shadowMap = Rt;
    var wt = new THREE.SpritePlugin(this, L), Ht = new THREE.LensFlarePlugin(this, O);
    this.getContext = function () {
        return lt
    }, this.getContextAttributes = function () {
        return lt.getContextAttributes()
    }, this.forceContextLoss = function () {
        ut.get("WEBGL_lose_context").loseContext()
    }, this.getMaxAnisotropy = function () {
        return ct.getMaxAnisotropy()
    }, this.getPrecision = function () {
        return ct.precision
    }, this.getPixelRatio = function () {
        return $
    }, this.setPixelRatio = function (t) {
        void 0 !== t && ($ = t, this.setSize(K.z, K.w, !1))
    }, this.getSize = function () {
        return {width: q, height: Y}
    }, this.setSize = function (t, e, i) {
        q = t, Y = e, v.width = t * $, v.height = e * $, !1 !== i && (v.style.width = t + "px", v.style.height = e + "px"), this.setViewport(0, 0, t, e)
    }, this.setViewport = function (t, e, i, n) {
        pt.viewport(K.set(t, e, i, n))
    }, this.setScissor = function (t, e, i, n) {
        pt.scissor(Z.set(t, e, i, n))
    }, this.setScissorTest = function (t) {
        pt.setScissorTest(Q = t)
    }, this.getClearColor = function () {
        return W
    }, this.setClearColor = function (t, i) {
        W.set(t), X = void 0 !== i ? i : 1, e(W.r, W.g, W.b, X)
    }, this.getClearAlpha = function () {
        return X
    }, this.setClearAlpha = function (t) {
        X = t, e(W.r, W.g, W.b, X)
    }, this.clear = function (t, e, i) {
        var n = 0;
        (void 0 === t || t) && (n |= lt.COLOR_BUFFER_BIT), (void 0 === e || e) && (n |= lt.DEPTH_BUFFER_BIT), (void 0 === i || i) && (n |= lt.STENCIL_BUFFER_BIT), lt.clear(n)
    }, this.clearColor = function () {
        this.clear(!0, !1, !1)
    }, this.clearDepth = function () {
        this.clear(!1, !0, !1)
    }, this.clearStencil = function () {
        this.clear(!1, !1, !0)
    }, this.clearTarget = function (t, e, i, n) {
        this.setRenderTarget(t), this.clear(e, i, n)
    }, this.resetGLState = n, this.dispose = function () {
        C = [], A = -1, M = [], S = -1, v.removeEventListener("webglcontextlost", r, !1)
    }, this.renderBufferImmediate = function (t, e, i) {
        pt.initAttributes();
        var n = dt.get(t);
        if (t.hasPositions && !n.position && (n.position = lt.createBuffer()), t.hasNormals && !n.normal && (n.normal = lt.createBuffer()), t.hasUvs && !n.uv && (n.uv = lt.createBuffer()), t.hasColors && !n.color && (n.color = lt.createBuffer()), e = e.getAttributes(), t.hasPositions && (lt.bindBuffer(lt.ARRAY_BUFFER, n.position), lt.bufferData(lt.ARRAY_BUFFER, t.positionArray, lt.DYNAMIC_DRAW), pt.enableAttribute(e.position), lt.vertexAttribPointer(e.position, 3, lt.FLOAT, !1, 0, 0)), t.hasNormals) {
            if (lt.bindBuffer(lt.ARRAY_BUFFER, n.normal), "MeshPhongMaterial" !== i.type && "MeshStandardMaterial" !== i.type && "MeshPhysicalMaterial" !== i.type && i.shading === THREE.FlatShading) for (var r = 0, o = 3 * t.count; o > r; r += 9) {
                var a = t.normalArray, s = (a[r + 0] + a[r + 3] + a[r + 6]) / 3, l = (a[r + 1] + a[r + 4] + a[r + 7]) / 3,
                    h = (a[r + 2] + a[r + 5] + a[r + 8]) / 3;
                a[r + 0] = s, a[r + 1] = l, a[r + 2] = h, a[r + 3] = s, a[r + 4] = l, a[r + 5] = h, a[r + 6] = s, a[r + 7] = l, a[r + 8] = h
            }
            lt.bufferData(lt.ARRAY_BUFFER, t.normalArray, lt.DYNAMIC_DRAW), pt.enableAttribute(e.normal), lt.vertexAttribPointer(e.normal, 3, lt.FLOAT, !1, 0, 0)
        }
        t.hasUvs && i.map && (lt.bindBuffer(lt.ARRAY_BUFFER, n.uv), lt.bufferData(lt.ARRAY_BUFFER, t.uvArray, lt.DYNAMIC_DRAW), pt.enableAttribute(e.uv), lt.vertexAttribPointer(e.uv, 2, lt.FLOAT, !1, 0, 0)), t.hasColors && i.vertexColors !== THREE.NoColors && (lt.bindBuffer(lt.ARRAY_BUFFER, n.color), lt.bufferData(lt.ARRAY_BUFFER, t.colorArray, lt.DYNAMIC_DRAW), pt.enableAttribute(e.color), lt.vertexAttribPointer(e.color, 3, lt.FLOAT, !1, 0, 0)), pt.disableUnusedAttributes(), lt.drawArrays(lt.TRIANGLES, 0, t.count), t.count = 0
    }, this.renderBufferDirect = function (t, e, i, n, r, o) {
        f(n);
        var a = m(t, e, n, r), l = !1;
        if (t = i.id + "_" + a.id + "_" + n.wireframe, t !== F && (F = t, l = !0), e = r.morphTargetInfluences, void 0 !== e) {
            t = [];
            for (var h = 0, l = e.length; l > h; h++) {
                var u = e[h];
                t.push([u, h])
            }
            t.sort(s), 8 < t.length && (t.length = 8);
            for (var c = i.morphAttributes, h = 0, l = t.length; l > h; h++) u = t[h], P[h] = u[0], 0 !== u[0] ? (e = u[1], !0 === n.morphTargets && c.position && i.addAttribute("morphTarget" + h, c.position[e]), !0 === n.morphNormals && c.normal && i.addAttribute("morphNormal" + h, c.normal[e])) : (!0 === n.morphTargets && i.removeAttribute("morphTarget" + h), !0 === n.morphNormals && i.removeAttribute("morphNormal" + h));
            a.getUniforms().setValue(lt, "morphTargetInfluences", P), l = !0
        }
        if (e = i.index, h = i.attributes.position, !0 === n.wireframe && (e = mt.getWireframeAttribute(i)), null !== e ? (t = yt, t.setIndex(e)) : t = vt, l) {
            var p, l = void 0;
            if (i instanceof THREE.InstancedBufferGeometry && (p = ut.get("ANGLE_instanced_arrays"), null === p)) console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."); else {
                void 0 === l && (l = 0), pt.initAttributes();
                var d, u = i.attributes, a = a.getAttributes(), c = n.defaultAttributeValues;
                for (d in a) {
                    var g = a[d];
                    if (g >= 0) {
                        var E = u[d];
                        if (void 0 !== E) {
                            var v = lt.FLOAT, y = E.array, T = E.normalized;
                            y instanceof Float32Array ? v = lt.FLOAT : y instanceof Float64Array ? console.warn("Unsupported data buffer format: Float64Array") : y instanceof Uint16Array ? v = lt.UNSIGNED_SHORT : y instanceof Int16Array ? v = lt.SHORT : y instanceof Uint32Array ? v = lt.UNSIGNED_INT : y instanceof Int32Array ? v = lt.INT : y instanceof Int8Array ? v = lt.BYTE : y instanceof Uint8Array && (v = lt.UNSIGNED_BYTE);
                            var y = E.itemSize, _ = mt.getAttributeBuffer(E);
                            if (E instanceof THREE.InterleavedBufferAttribute) {
                                var x = E.data, b = x.stride, E = E.offset;
                                x instanceof THREE.InstancedInterleavedBuffer ? (pt.enableAttributeAndDivisor(g, x.meshPerAttribute, p), void 0 === i.maxInstancedCount && (i.maxInstancedCount = x.meshPerAttribute * x.count)) : pt.enableAttribute(g), lt.bindBuffer(lt.ARRAY_BUFFER, _), lt.vertexAttribPointer(g, y, v, T, b * x.array.BYTES_PER_ELEMENT, (l * b + E) * x.array.BYTES_PER_ELEMENT)
                            } else E instanceof THREE.InstancedBufferAttribute ? (pt.enableAttributeAndDivisor(g, E.meshPerAttribute, p), void 0 === i.maxInstancedCount && (i.maxInstancedCount = E.meshPerAttribute * E.count)) : pt.enableAttribute(g), lt.bindBuffer(lt.ARRAY_BUFFER, _), lt.vertexAttribPointer(g, y, v, T, 0, l * y * E.array.BYTES_PER_ELEMENT)
                        } else if (void 0 !== c && (v = c[d], void 0 !== v)) switch (v.length) {
                            case 2:
                                lt.vertexAttrib2fv(g, v);
                                break;
                            case 3:
                                lt.vertexAttrib3fv(g, v);
                                break;
                            case 4:
                                lt.vertexAttrib4fv(g, v);
                                break;
                            default:
                                lt.vertexAttrib1fv(g, v)
                        }
                    }
                }
                pt.disableUnusedAttributes()
            }
            null !== e && lt.bindBuffer(lt.ELEMENT_ARRAY_BUFFER, mt.getAttributeBuffer(e))
        }
        if (p = 1 / 0, null !== e ? p = e.count : void 0 !== h && (p = h.count), d = i.drawRange.start, e = i.drawRange.count, h = null !== o ? o.start : 0, l = null !== o ? o.count : 1 / 0, o = Math.max(0, d, h), p = Math.min(0 + p, d + e, h + l) - 1, p = Math.max(0, p - o + 1), r instanceof THREE.Mesh) if (!0 === n.wireframe) pt.setLineWidth(n.wireframeLinewidth * (null === N ? $ : 1)), t.setMode(lt.LINES); else switch (r.drawMode) {
            case THREE.TrianglesDrawMode:
                t.setMode(lt.TRIANGLES);
                break;
            case THREE.TriangleStripDrawMode:
                t.setMode(lt.TRIANGLE_STRIP);
                break;
            case THREE.TriangleFanDrawMode:
                t.setMode(lt.TRIANGLE_FAN)
        } else r instanceof THREE.Line ? (n = n.linewidth, void 0 === n && (n = 1), pt.setLineWidth(n * (null === N ? $ : 1)), r instanceof THREE.LineSegments ? t.setMode(lt.LINES) : t.setMode(lt.LINE_STRIP)) : r instanceof THREE.Points && t.setMode(lt.POINTS);
        i instanceof THREE.InstancedBufferGeometry ? 0 < i.maxInstancedCount && t.renderInstances(i, o, p) : t.render(o, p)
    }, this.render = function (t, i, n, r) {
        if (!1 == i instanceof THREE.Camera) console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."); else {
            var o = t.fog;
            F = "", B = -1, U = null, !0 === t.autoUpdate && t.updateMatrixWorld(), null === i.parent && i.updateMatrixWorld(), i.matrixWorldInverse.getInverse(i.matrixWorld), rt.multiplyMatrices(i.projectionMatrix, i.matrixWorldInverse), J.setFromMatrix(rt), H.length = 0, A = S = -1, L.length = 0, O.length = 0, it = this.localClippingEnabled, et = tt.init(this.clippingPlanes, it, i), p(t, i), M.length = S + 1, C.length = A + 1, !0 === D.sortObjects && (M.sort(l), C.sort(h)), et && tt.beginShadows();
            for (var a = H, s = 0, u = 0, c = a.length; c > u; u++) {
                var f = a[u];
                f.castShadow && (at.shadows[s++] = f)
            }
            at.shadows.length = s, Rt.render(t, i);
            for (var m, g, E, v, a = H, y = f = 0, T = 0, _ = i.matrixWorldInverse, x = 0, b = 0, R = 0, w = 0, s = 0, u = a.length; u > s; s++) if (c = a[s], m = c.color, g = c.intensity, E = c.distance, v = c.shadow && c.shadow.map ? c.shadow.map.texture : null, c instanceof THREE.AmbientLight) f += m.r * g, y += m.g * g, T += m.b * g; else if (c instanceof THREE.DirectionalLight) {
                var P = Et.get(c);
                P.color.copy(c.color).multiplyScalar(c.intensity), P.direction.setFromMatrixPosition(c.matrixWorld), ot.setFromMatrixPosition(c.target.matrixWorld), P.direction.sub(ot), P.direction.transformDirection(_), (P.shadow = c.castShadow) && (P.shadowBias = c.shadow.bias, P.shadowRadius = c.shadow.radius, P.shadowMapSize = c.shadow.mapSize), at.directionalShadowMap[x] = v, at.directionalShadowMatrix[x] = c.shadow.matrix, at.directional[x++] = P
            } else c instanceof THREE.SpotLight ? (P = Et.get(c), P.position.setFromMatrixPosition(c.matrixWorld), P.position.applyMatrix4(_), P.color.copy(m).multiplyScalar(g), P.distance = E, P.direction.setFromMatrixPosition(c.matrixWorld), ot.setFromMatrixPosition(c.target.matrixWorld), P.direction.sub(ot), P.direction.transformDirection(_), P.coneCos = Math.cos(c.angle), P.penumbraCos = Math.cos(c.angle * (1 - c.penumbra)), P.decay = 0 === c.distance ? 0 : c.decay, (P.shadow = c.castShadow) && (P.shadowBias = c.shadow.bias, P.shadowRadius = c.shadow.radius, P.shadowMapSize = c.shadow.mapSize), at.spotShadowMap[R] = v, at.spotShadowMatrix[R] = c.shadow.matrix, at.spot[R++] = P) : c instanceof THREE.PointLight ? (P = Et.get(c), P.position.setFromMatrixPosition(c.matrixWorld), P.position.applyMatrix4(_), P.color.copy(c.color).multiplyScalar(c.intensity), P.distance = c.distance, P.decay = 0 === c.distance ? 0 : c.decay, (P.shadow = c.castShadow) && (P.shadowBias = c.shadow.bias, P.shadowRadius = c.shadow.radius, P.shadowMapSize = c.shadow.mapSize), at.pointShadowMap[b] = v, void 0 === at.pointShadowMatrix[b] && (at.pointShadowMatrix[b] = new THREE.Matrix4), ot.setFromMatrixPosition(c.matrixWorld).negate(), at.pointShadowMatrix[b].identity().setPosition(ot), at.point[b++] = P) : c instanceof THREE.HemisphereLight && (P = Et.get(c), P.direction.setFromMatrixPosition(c.matrixWorld), P.direction.transformDirection(_), P.direction.normalize(), P.skyColor.copy(c.color).multiplyScalar(g), P.groundColor.copy(c.groundColor).multiplyScalar(g), at.hemi[w++] = P);
            at.ambient[0] = f, at.ambient[1] = y, at.ambient[2] = T, at.directional.length = x, at.spot.length = R, at.point.length = b, at.hemi.length = w, at.hash = x + "," + b + "," + R + "," + w + "," + at.shadows.length, et && tt.endShadows(), st.calls = 0, st.vertices = 0, st.faces = 0, st.points = 0, void 0 === n && (n = null), this.setRenderTarget(n), a = t.background, null === a ? e(W.r, W.g, W.b, X) : a instanceof THREE.Color && e(a.r, a.g, a.b, 1), (this.autoClear || r) && this.clear(this.autoClearColor, this.autoClearDepth, this.autoClearStencil), a instanceof THREE.CubeTexture ? (_t.projectionMatrix.copy(i.projectionMatrix), _t.matrixWorld.extractRotation(i.matrixWorld), _t.matrixWorldInverse.getInverse(_t.matrixWorld), bt.material.uniforms.tCube.value = a, bt.modelViewMatrix.multiplyMatrices(_t.matrixWorldInverse, bt.matrixWorld), mt.update(bt), D.renderBufferDirect(_t, null, bt.geometry, bt.material, bt, null)) : a instanceof THREE.Texture && (xt.material.map = a, mt.update(xt), D.renderBufferDirect(Tt, null, xt.geometry, xt.material, xt, null)), t.overrideMaterial ? (r = t.overrideMaterial, d(M, i, o, r), d(C, i, o, r)) : (pt.setBlending(THREE.NoBlending), d(M, i, o), d(C, i, o)), wt.render(t, i), Ht.render(t, i, G), n && ft.updateRenderTargetMipmap(n), pt.setDepthTest(!0), pt.setDepthWrite(!0), pt.setColorWrite(!0)
        }
    }, this.setFaceCulling = function (t, e) {
        pt.setCullFace(t), pt.setFlipSided(e === THREE.FrontFaceDirectionCW)
    }, this.allocTextureUnit = function () {
        var t = j;
        return t >= ct.maxTextures && console.warn("WebGLRenderer: trying to use " + t + " texture units while this GPU supports only " + ct.maxTextures), j += 1, t
    }, this.setTexture2D = function () {
        var t = !1;
        return function (e, i) {
            e instanceof THREE.WebGLRenderTarget && (t || (console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."), t = !0), e = e.texture), ft.setTexture2D(e, i)
        }
    }(), this.setTexture = function () {
        var t = !1;
        return function (e, i) {
            t || (console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."), t = !0), ft.setTexture2D(e, i)
        }
    }(), this.setTextureCube = function () {
        var t = !1;
        return function (e, i) {
            e instanceof THREE.WebGLRenderTargetCube && (t || (console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."), t = !0), e = e.texture), e instanceof THREE.CubeTexture || Array.isArray(e.image) && 6 === e.image.length ? ft.setTextureCube(e, i) : ft.setTextureCubeDynamic(e, i)
        }
    }(), this.getCurrentRenderTarget = function () {
        return N
    }, this.setRenderTarget = function (t) {
        (N = t) && void 0 === dt.get(t).__webglFramebuffer && ft.setupRenderTarget(t);
        var e, i = t instanceof THREE.WebGLRenderTargetCube;
        t ? (e = dt.get(t), e = i ? e.__webglFramebuffer[t.activeCubeFace] : e.__webglFramebuffer, V.copy(t.scissor), z = t.scissorTest, G.copy(t.viewport)) : (e = null, V.copy(Z).multiplyScalar($), z = Q, G.copy(K).multiplyScalar($)), k !== e && (lt.bindFramebuffer(lt.FRAMEBUFFER, e), k = e), pt.scissor(V), pt.setScissorTest(z), pt.viewport(G), i && (i = dt.get(t.texture), lt.framebufferTexture2D(lt.FRAMEBUFFER, lt.COLOR_ATTACHMENT0, lt.TEXTURE_CUBE_MAP_POSITIVE_X + t.activeCubeFace, i.__webglTexture, t.activeMipMapLevel))
    }, this.readRenderTargetPixels = function (t, e, i, n, r, o) {
        if (!1 == t instanceof THREE.WebGLRenderTarget) console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget."); else {
            var a = dt.get(t).__webglFramebuffer;
            if (a) {
                var s = !1;
                a !== k && (lt.bindFramebuffer(lt.FRAMEBUFFER, a), s = !0);
                try {
                    var l = t.texture;
                    l.format !== THREE.RGBAFormat && E(l.format) !== lt.getParameter(lt.IMPLEMENTATION_COLOR_READ_FORMAT) ? console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.") : l.type === THREE.UnsignedByteType || E(l.type) === lt.getParameter(lt.IMPLEMENTATION_COLOR_READ_TYPE) || l.type === THREE.FloatType && ut.get("WEBGL_color_buffer_float") || l.type === THREE.HalfFloatType && ut.get("EXT_color_buffer_half_float") ? lt.checkFramebufferStatus(lt.FRAMEBUFFER) === lt.FRAMEBUFFER_COMPLETE ? e >= 0 && e <= t.width - n && i >= 0 && i <= t.height - r && lt.readPixels(e, i, n, r, E(l.format), E(l.type), o) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.") : console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.")
                } finally {
                    s && lt.bindFramebuffer(lt.FRAMEBUFFER, k)
                }
            }
        }
    }
},THREE.WebGLRenderTarget = function (t, e, i) {
    this.uuid = THREE.Math.generateUUID(), this.width = t, this.height = e, this.scissor = new THREE.Vector4(0, 0, t, e), this.scissorTest = !1, this.viewport = new THREE.Vector4(0, 0, t, e), i = i || {}, void 0 === i.minFilter && (i.minFilter = THREE.LinearFilter), this.texture = new THREE.Texture(void 0, void 0, i.wrapS, i.wrapT, i.magFilter, i.minFilter, i.format, i.type, i.anisotropy, i.encoding), this.depthBuffer = void 0 !== i.depthBuffer ? i.depthBuffer : !0, this.stencilBuffer = void 0 !== i.stencilBuffer ? i.stencilBuffer : !0, this.depthTexture = null
},Object.assign(THREE.WebGLRenderTarget.prototype, THREE.EventDispatcher.prototype, {
    setSize: function (t, e) {
        (this.width !== t || this.height !== e) && (this.width = t, this.height = e, this.dispose()), this.viewport.set(0, 0, t, e), this.scissor.set(0, 0, t, e)
    }, clone: function () {
        return (new this.constructor).copy(this)
    }, copy: function (t) {
        return this.width = t.width, this.height = t.height, this.viewport.copy(t.viewport), this.texture = t.texture.clone(), this.depthBuffer = t.depthBuffer, this.stencilBuffer = t.stencilBuffer, this.depthTexture = t.depthTexture, this
    }, dispose: function () {
        this.dispatchEvent({type: "dispose"})
    }
}),THREE.WebGLRenderTargetCube = function (t, e, i) {
    THREE.WebGLRenderTarget.call(this, t, e, i), this.activeMipMapLevel = this.activeCubeFace = 0
},THREE.WebGLRenderTargetCube.prototype = Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube,
THREE.WebGLBufferRenderer = function (t, e, i) {
    var n;
    this.setMode = function (t) {
        n = t
    }, this.render = function (e, r) {
        t.drawArrays(n, e, r), i.calls++, i.vertices += r, n === t.TRIANGLES && (i.faces += r / 3)
    }, this.renderInstances = function (r) {
        var o = e.get("ANGLE_instanced_arrays");
        if (null === o) console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays."); else {
            var a = r.attributes.position, s = 0, s = a instanceof THREE.InterleavedBufferAttribute ? a.data.count : a.count;
            o.drawArraysInstancedANGLE(n, 0, s, r.maxInstancedCount), i.calls++, i.vertices += s * r.maxInstancedCount, n === t.TRIANGLES && (i.faces += r.maxInstancedCount * s / 3)
        }
    }
},THREE.WebGLClipping = function () {
    function t() {
        h.value !== n && (h.value = n, h.needsUpdate = r > 0), i.numPlanes = r
    }

    function e(t, e, n, r) {
        var o = null !== t ? t.length : 0, a = null;
        if (0 !== o) {
            if (a = h.value, !0 !== r || null === a) for (r = n + 4 * o, e = e.matrixWorldInverse, l.getNormalMatrix(e), (null === a || a.length < r) && (a = new Float32Array(r)), r = 0; r !== o; ++r, n += 4) s.copy(t[r]).applyMatrix4(e, l), s.normal.toArray(a, n), a[n + 3] = s.constant;
            h.value = a, h.needsUpdate = !0
        }
        return i.numPlanes = o, a
    }

    var i = this, n = null, r = 0, o = !1, a = !1, s = new THREE.Plane, l = new THREE.Matrix3, h = {value: null, needsUpdate: !1};
    this.uniform = h, this.numPlanes = 0, this.init = function (t, i, a) {
        var s = 0 !== t.length || i || 0 !== r || o;
        return o = i, n = e(t, a, 0), r = t.length, s
    }, this.beginShadows = function () {
        a = !0, e(null)
    }, this.endShadows = function () {
        a = !1, t()
    }, this.setState = function (i, s, l, u, c) {
        if (!o || null === i || 0 === i.length || a && !s) a ? e(null) : t(); else {
            s = a ? 0 : r;
            var p = 4 * s, d = u.clippingState || null;
            for (h.value = d, d = e(i, l, p, c), i = 0; i !== p; ++i) d[i] = n[i];
            u.clippingState = d, this.numPlanes += s
        }
    }
},THREE.WebGLIndexedBufferRenderer = function (t, e, i) {
    var n, r, o;
    this.setMode = function (t) {
        n = t
    }, this.setIndex = function (i) {
        i.array instanceof Uint32Array && e.get("OES_element_index_uint") ? (r = t.UNSIGNED_INT, o = 4) : (r = t.UNSIGNED_SHORT, o = 2)
    }, this.render = function (e, a) {
        t.drawElements(n, a, r, e * o), i.calls++, i.vertices += a, n === t.TRIANGLES && (i.faces += a / 3)
    }, this.renderInstances = function (a, s, l) {
        var h = e.get("ANGLE_instanced_arrays");
        null === h ? console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.") : (h.drawElementsInstancedANGLE(n, l, r, s * o, a.maxInstancedCount), i.calls++, i.vertices += l * a.maxInstancedCount, n === t.TRIANGLES && (i.faces += a.maxInstancedCount * l / 3))
    }
},THREE.WebGLExtensions = function (t) {
    var e = {};
    this.get = function (i) {
        if (void 0 !== e[i]) return e[i];
        var n;
        switch (i) {
            case"WEBGL_depth_texture":
                n = t.getExtension("WEBGL_depth_texture") || t.getExtension("MOZ_WEBGL_depth_texture") || t.getExtension("WEBKIT_WEBGL_depth_texture");
                break;
            case"EXT_texture_filter_anisotropic":
                n = t.getExtension("EXT_texture_filter_anisotropic") || t.getExtension("MOZ_EXT_texture_filter_anisotropic") || t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                break;
            case"WEBGL_compressed_texture_s3tc":
                n = t.getExtension("WEBGL_compressed_texture_s3tc") || t.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                break;
            case"WEBGL_compressed_texture_pvrtc":
                n = t.getExtension("WEBGL_compressed_texture_pvrtc") || t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                break;
            case"WEBGL_compressed_texture_etc1":
                n = t.getExtension("WEBGL_compressed_texture_etc1");
                break;
            default:
                n = t.getExtension(i)
        }
        return null === n && console.warn("THREE.WebGLRenderer: " + i + " extension not supported."), e[i] = n
    }
},THREE.WebGLCapabilities = function (t, e, i) {
    function n(e) {
        if ("highp" === e) {
            if (0 < t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.HIGH_FLOAT).precision && 0 < t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.HIGH_FLOAT).precision) return "highp";
            e = "mediump"
        }
        return "mediump" === e && 0 < t.getShaderPrecisionFormat(t.VERTEX_SHADER, t.MEDIUM_FLOAT).precision && 0 < t.getShaderPrecisionFormat(t.FRAGMENT_SHADER, t.MEDIUM_FLOAT).precision ? "mediump" : "lowp"
    }

    var r;
    this.getMaxAnisotropy = function () {
        if (void 0 !== r) return r;
        var i = e.get("EXT_texture_filter_anisotropic");
        return r = null !== i ? t.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
    }, this.getMaxPrecision = n, this.precision = void 0 !== i.precision ? i.precision : "highp", this.logarithmicDepthBuffer = void 0 !== i.logarithmicDepthBuffer ? i.logarithmicDepthBuffer : !1, this.maxTextures = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS), this.maxVertexTextures = t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS), this.maxTextureSize = t.getParameter(t.MAX_TEXTURE_SIZE), this.maxCubemapSize = t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE), this.maxAttributes = t.getParameter(t.MAX_VERTEX_ATTRIBS), this.maxVertexUniforms = t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS), this.maxVaryings = t.getParameter(t.MAX_VARYING_VECTORS), this.maxFragmentUniforms = t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS), this.vertexTextures = 0 < this.maxVertexTextures, this.floatFragmentTextures = !!e.get("OES_texture_float"), this.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures, i = n(this.precision), i !== this.precision && (console.warn("THREE.WebGLRenderer:", this.precision, "not supported, using", i, "instead."), this.precision = i), this.logarithmicDepthBuffer && (this.logarithmicDepthBuffer = !!e.get("EXT_frag_depth"))
},THREE.WebGLGeometries = function (t, e, i) {
    function n(t) {
        var a = t.target;
        t = o[a.id], null !== t.index && r(t.index);
        var s, l = t.attributes;
        for (s in l) r(l[s]);
        a.removeEventListener("dispose", n), delete o[a.id], s = e.get(a), s.wireframe && r(s.wireframe), e["delete"](a), a = e.get(t), a.wireframe && r(a.wireframe), e["delete"](t), i.memory.geometries--
    }

    function r(i) {
        var n;
        n = i instanceof THREE.InterleavedBufferAttribute ? e.get(i.data).__webglBuffer : e.get(i).__webglBuffer, void 0 !== n && (t.deleteBuffer(n), i instanceof THREE.InterleavedBufferAttribute ? e["delete"](i.data) : e["delete"](i))
    }

    var o = {};
    this.get = function (t) {
        var e = t.geometry;
        if (void 0 !== o[e.id]) return o[e.id];
        e.addEventListener("dispose", n);
        var r;
        return e instanceof THREE.BufferGeometry ? r = e : e instanceof THREE.Geometry && (void 0 === e._bufferGeometry && (e._bufferGeometry = (new THREE.BufferGeometry).setFromObject(t)), r = e._bufferGeometry), o[e.id] = r, i.memory.geometries++, r
    }
},THREE.WebGLLights = function () {
    var t = {};
    this.get = function (e) {
        if (void 0 !== t[e.id]) return t[e.id];
        var i;
        switch (e.type) {
            case"DirectionalLight":
                i = {
                    direction: new THREE.Vector3,
                    color: new THREE.Color,
                    shadow: !1,
                    shadowBias: 0,
                    shadowRadius: 1,
                    shadowMapSize: new THREE.Vector2
                };
                break;
            case"SpotLight":
                i = {
                    position: new THREE.Vector3,
                    direction: new THREE.Vector3,
                    color: new THREE.Color,
                    distance: 0,
                    coneCos: 0,
                    penumbraCos: 0,
                    decay: 0,
                    shadow: !1,
                    shadowBias: 0,
                    shadowRadius: 1,
                    shadowMapSize: new THREE.Vector2
                };
                break;
            case"PointLight":
                i = {
                    position: new THREE.Vector3,
                    color: new THREE.Color,
                    distance: 0,
                    decay: 0,
                    shadow: !1,
                    shadowBias: 0,
                    shadowRadius: 1,
                    shadowMapSize: new THREE.Vector2
                };
                break;
            case"HemisphereLight":
                i = {direction: new THREE.Vector3, skyColor: new THREE.Color, groundColor: new THREE.Color}
        }
        return t[e.id] = i
    }
},THREE.WebGLObjects = function (t, e, i) {
    function n(i, n) {
        var r = i instanceof THREE.InterleavedBufferAttribute ? i.data : i, o = e.get(r);
        void 0 === o.__webglBuffer ? (o.__webglBuffer = t.createBuffer(), t.bindBuffer(n, o.__webglBuffer), t.bufferData(n, r.array, r.dynamic ? t.DYNAMIC_DRAW : t.STATIC_DRAW), o.version = r.version) : o.version !== r.version && (t.bindBuffer(n, o.__webglBuffer), !1 === r.dynamic || -1 === r.updateRange.count ? t.bufferSubData(n, 0, r.array) : 0 === r.updateRange.count ? console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.") : (t.bufferSubData(n, r.updateRange.offset * r.array.BYTES_PER_ELEMENT, r.array.subarray(r.updateRange.offset, r.updateRange.offset + r.updateRange.count)), r.updateRange.count = 0), o.version = r.version)
    }

    function r(t, e, i) {
        if (e > i) {
            var n = e;
            e = i, i = n
        }
        return n = t[e], void 0 === n ? (t[e] = [i], !0) : -1 === n.indexOf(i) ? (n.push(i), !0) : !1
    }

    var o = new THREE.WebGLGeometries(t, e, i);
    this.getAttributeBuffer = function (t) {
        return t instanceof THREE.InterleavedBufferAttribute ? e.get(t.data).__webglBuffer : e.get(t).__webglBuffer
    }, this.getWireframeAttribute = function (i) {
        var o = e.get(i);
        if (void 0 !== o.wireframe) return o.wireframe;
        var a = [], s = i.index, l = i.attributes;
        if (i = l.position, null !== s) for (var l = {}, s = s.array, h = 0, u = s.length; u > h; h += 3) {
            var c = s[h + 0], p = s[h + 1], d = s[h + 2];
            r(l, c, p) && a.push(c, p), r(l, p, d) && a.push(p, d), r(l, d, c) && a.push(d, c)
        } else for (s = l.position.array, h = 0, u = s.length / 3 - 1; u > h; h += 3) c = h + 0, p = h + 1, d = h + 2, a.push(c, p, p, d, d, c);
        return a = new THREE.BufferAttribute(new (65535 < i.count ? Uint32Array : Uint16Array)(a), 1), n(a, t.ELEMENT_ARRAY_BUFFER), o.wireframe = a
    }, this.update = function (e) {
        var i = o.get(e);
        e.geometry instanceof THREE.Geometry && i.updateFromObject(e), e = i.index;
        var r = i.attributes;
        null !== e && n(e, t.ELEMENT_ARRAY_BUFFER);
        for (var a in r) n(r[a], t.ARRAY_BUFFER);
        e = i.morphAttributes;
        for (a in e) for (var r = e[a], s = 0, l = r.length; l > s; s++) n(r[s], t.ARRAY_BUFFER);
        return i
    }
},THREE.WebGLProgram = function () {
    function t(t) {
        switch (t) {
            case THREE.LinearEncoding:
                return ["Linear", "( value )"];
            case THREE.sRGBEncoding:
                return ["sRGB", "( value )"];
            case THREE.RGBEEncoding:
                return ["RGBE", "( value )"];
            case THREE.RGBM7Encoding:
                return ["RGBM", "( value, 7.0 )"];
            case THREE.RGBM16Encoding:
                return ["RGBM", "( value, 16.0 )"];
            case THREE.RGBDEncoding:
                return ["RGBD", "( value, 256.0 )"];
            case THREE.GammaEncoding:
                return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
            default:
                throw Error("unsupported encoding: " + t)
        }
    }

    function e(e, i) {
        var n = t(i);
        return "vec4 " + e + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
    }

    function i(e, i) {
        var n = t(i);
        return "vec4 " + e + "( vec4 value ) { return LinearTo" + n[0] + n[1] + "; }"
    }

    function n(t, e) {
        var i;
        switch (e) {
            case THREE.LinearToneMapping:
                i = "Linear";
                break;
            case THREE.ReinhardToneMapping:
                i = "Reinhard";
                break;
            case THREE.Uncharted2ToneMapping:
                i = "Uncharted2";
                break;
            case THREE.CineonToneMapping:
                i = "OptimizedCineon";
                break;
            default:
                throw Error("unsupported toneMapping: " + e)
        }
        return "vec3 " + t + "( vec3 color ) { return " + i + "ToneMapping( color ); }"
    }

    function r(t, e, i) {
        return t = t || {}, [t.derivatives || e.envMapCubeUV || e.bumpMap || e.normalMap || e.flatShading ? "#extension GL_OES_standard_derivatives : enable" : "", (t.fragDepth || e.logarithmicDepthBuffer) && i.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", t.drawBuffers && i.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (t.shaderTextureLOD || e.envMap) && i.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(a).join("\n")
    }

    function o(t) {
        var e, i = [];
        for (e in t) {
            var n = t[e];
            !1 !== n && i.push("#define " + e + " " + n)
        }
        return i.join("\n")
    }

    function a(t) {
        return "" !== t
    }

    function s(t, e) {
        return t.replace(/NUM_DIR_LIGHTS/g, e.numDirLights).replace(/NUM_SPOT_LIGHTS/g, e.numSpotLights).replace(/NUM_POINT_LIGHTS/g, e.numPointLights).replace(/NUM_HEMI_LIGHTS/g, e.numHemiLights)
    }

    function l(t) {
        return t.replace(/#include +<([\w\d.]+)>/g, function (t, e) {
            var i = THREE.ShaderChunk[e];
            if (void 0 === i) throw Error("Can not resolve #include <" + e + ">");
            return l(i)
        })
    }

    function h(t) {
        return t.replace(/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g, function (t, e, i, n) {
            for (t = "", e = parseInt(e); e < parseInt(i); e++) t += n.replace(/\[ i \]/g, "[ " + e + " ]");
            return t
        })
    }

    var u = 0;
    return function (t, c, p, d) {
        var f = t.context, m = p.extensions, g = p.defines, E = p.__webglShader.vertexShader, v = p.__webglShader.fragmentShader,
            y = "SHADOWMAP_TYPE_BASIC";
        d.shadowMapType === THREE.PCFShadowMap ? y = "SHADOWMAP_TYPE_PCF" : d.shadowMapType === THREE.PCFSoftShadowMap && (y = "SHADOWMAP_TYPE_PCF_SOFT");
        var T = "ENVMAP_TYPE_CUBE", _ = "ENVMAP_MODE_REFLECTION", x = "ENVMAP_BLENDING_MULTIPLY";
        if (d.envMap) {
            switch (p.envMap.mapping) {
                case THREE.CubeReflectionMapping:
                case THREE.CubeRefractionMapping:
                    T = "ENVMAP_TYPE_CUBE";
                    break;
                case THREE.CubeUVReflectionMapping:
                case THREE.CubeUVRefractionMapping:
                    T = "ENVMAP_TYPE_CUBE_UV";
                    break;
                case THREE.EquirectangularReflectionMapping:
                case THREE.EquirectangularRefractionMapping:
                    T = "ENVMAP_TYPE_EQUIREC";
                    break;
                case THREE.SphericalReflectionMapping:
                    T = "ENVMAP_TYPE_SPHERE"
            }
            switch (p.envMap.mapping) {
                case THREE.CubeRefractionMapping:
                case THREE.EquirectangularRefractionMapping:
                    _ = "ENVMAP_MODE_REFRACTION"
            }
            switch (p.combine) {
                case THREE.MultiplyOperation:
                    x = "ENVMAP_BLENDING_MULTIPLY";
                    break;
                case THREE.MixOperation:
                    x = "ENVMAP_BLENDING_MIX";
                    break;
                case THREE.AddOperation:
                    x = "ENVMAP_BLENDING_ADD"
            }
        }
        var b = 0 < t.gammaFactor ? t.gammaFactor : 1, m = r(m, d, t.extensions), R = o(g), w = f.createProgram();
        p instanceof THREE.RawShaderMaterial ? (g = [R].filter(a).join("\n"), y = [R].filter(a).join("\n")) : (g = ["precision " + d.precision + " float;", "precision " + d.precision + " int;", "#define SHADER_NAME " + p.__webglShader.name, R, d.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + b, "#define MAX_BONES " + d.maxBones, d.map ? "#define USE_MAP" : "", d.envMap ? "#define USE_ENVMAP" : "", d.envMap ? "#define " + _ : "", d.lightMap ? "#define USE_LIGHTMAP" : "", d.aoMap ? "#define USE_AOMAP" : "", d.emissiveMap ? "#define USE_EMISSIVEMAP" : "", d.bumpMap ? "#define USE_BUMPMAP" : "", d.normalMap ? "#define USE_NORMALMAP" : "", d.displacementMap && d.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", d.specularMap ? "#define USE_SPECULARMAP" : "", d.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", d.metalnessMap ? "#define USE_METALNESSMAP" : "", d.alphaMap ? "#define USE_ALPHAMAP" : "", d.vertexColors ? "#define USE_COLOR" : "", d.flatShading ? "#define FLAT_SHADED" : "", d.skinning ? "#define USE_SKINNING" : "", d.useVertexTexture ? "#define BONE_TEXTURE" : "", d.morphTargets ? "#define USE_MORPHTARGETS" : "", d.morphNormals && !1 === d.flatShading ? "#define USE_MORPHNORMALS" : "", d.doubleSided ? "#define DOUBLE_SIDED" : "", d.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + d.numClippingPlanes, d.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", d.shadowMapEnabled ? "#define " + y : "", d.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", d.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", d.logarithmicDepthBuffer && t.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_COLOR", "	attribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "	attribute vec3 morphTarget0;", "	attribute vec3 morphTarget1;", "	attribute vec3 morphTarget2;", "	attribute vec3 morphTarget3;", "	#ifdef USE_MORPHNORMALS", "		attribute vec3 morphNormal0;", "		attribute vec3 morphNormal1;", "		attribute vec3 morphNormal2;", "		attribute vec3 morphNormal3;", "	#else", "		attribute vec3 morphTarget4;", "		attribute vec3 morphTarget5;", "		attribute vec3 morphTarget6;", "		attribute vec3 morphTarget7;", "	#endif", "#endif", "#ifdef USE_SKINNING", "	attribute vec4 skinIndex;", "	attribute vec4 skinWeight;", "#endif", "\n"].filter(a).join("\n"), y = [m, "precision " + d.precision + " float;", "precision " + d.precision + " int;", "#define SHADER_NAME " + p.__webglShader.name, R, d.alphaTest ? "#define ALPHATEST " + d.alphaTest : "", "#define GAMMA_FACTOR " + b, d.useFog && d.fog ? "#define USE_FOG" : "", d.useFog && d.fogExp ? "#define FOG_EXP2" : "", d.map ? "#define USE_MAP" : "", d.envMap ? "#define USE_ENVMAP" : "", d.envMap ? "#define " + T : "", d.envMap ? "#define " + _ : "", d.envMap ? "#define " + x : "", d.lightMap ? "#define USE_LIGHTMAP" : "", d.aoMap ? "#define USE_AOMAP" : "", d.emissiveMap ? "#define USE_EMISSIVEMAP" : "", d.bumpMap ? "#define USE_BUMPMAP" : "", d.normalMap ? "#define USE_NORMALMAP" : "", d.specularMap ? "#define USE_SPECULARMAP" : "", d.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", d.metalnessMap ? "#define USE_METALNESSMAP" : "", d.alphaMap ? "#define USE_ALPHAMAP" : "", d.vertexColors ? "#define USE_COLOR" : "", d.flatShading ? "#define FLAT_SHADED" : "", d.doubleSided ? "#define DOUBLE_SIDED" : "", d.flipSided ? "#define FLIP_SIDED" : "", "#define NUM_CLIPPING_PLANES " + d.numClippingPlanes, d.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", d.shadowMapEnabled ? "#define " + y : "", d.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", d.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", d.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", d.logarithmicDepthBuffer && t.extensions.get("EXT_frag_depth") ? "#define USE_LOGDEPTHBUF_EXT" : "", d.envMap && t.extensions.get("EXT_shader_texture_lod") ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", d.toneMapping !== THREE.NoToneMapping ? "#define TONE_MAPPING" : "", d.toneMapping !== THREE.NoToneMapping ? THREE.ShaderChunk.tonemapping_pars_fragment : "", d.toneMapping !== THREE.NoToneMapping ? n("toneMapping", d.toneMapping) : "", d.outputEncoding || d.mapEncoding || d.envMapEncoding || d.emissiveMapEncoding ? THREE.ShaderChunk.encodings_pars_fragment : "", d.mapEncoding ? e("mapTexelToLinear", d.mapEncoding) : "", d.envMapEncoding ? e("envMapTexelToLinear", d.envMapEncoding) : "", d.emissiveMapEncoding ? e("emissiveMapTexelToLinear", d.emissiveMapEncoding) : "", d.outputEncoding ? i("linearToOutputTexel", d.outputEncoding) : "", d.depthPacking ? "#define DEPTH_PACKING " + p.depthPacking : "", "\n"].filter(a).join("\n")), E = l(E, d), E = s(E, d), v = l(v, d), v = s(v, d), !1 == p instanceof THREE.ShaderMaterial && (E = h(E), v = h(v)), v = y + v, E = THREE.WebGLShader(f, f.VERTEX_SHADER, g + E), v = THREE.WebGLShader(f, f.FRAGMENT_SHADER, v), f.attachShader(w, E), f.attachShader(w, v), void 0 !== p.index0AttributeName ? f.bindAttribLocation(w, 0, p.index0AttributeName) : !0 === d.morphTargets && f.bindAttribLocation(w, 0, "position"), f.linkProgram(w), d = f.getProgramInfoLog(w), T = f.getShaderInfoLog(E), _ = f.getShaderInfoLog(v), b = x = !0, !1 === f.getProgramParameter(w, f.LINK_STATUS) ? (x = !1, console.error("THREE.WebGLProgram: shader error: ", f.getError(), "gl.VALIDATE_STATUS", f.getProgramParameter(w, f.VALIDATE_STATUS), "gl.getProgramInfoLog", d, T, _)) : "" !== d ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", d) : ("" === T || "" === _) && (b = !1), b && (this.diagnostics = {
            runnable: x,
            material: p,
            programLog: d,
            vertexShader: {log: T, prefix: g},
            fragmentShader: {log: _, prefix: y}
        }), f.deleteShader(E), f.deleteShader(v);
        var H;
        this.getUniforms = function () {
            return void 0 === H && (H = new THREE.WebGLUniforms(f, w, t)), H
        };
        var M;
        return this.getAttributes = function () {
            if (void 0 === M) {
                for (var t = {}, e = f.getProgramParameter(w, f.ACTIVE_ATTRIBUTES), i = 0; e > i; i++) {
                    var n = f.getActiveAttrib(w, i).name;
                    t[n] = f.getAttribLocation(w, n)
                }
                M = t
            }
            return M
        }, this.destroy = function () {
            f.deleteProgram(w), this.program = void 0
        }, Object.defineProperties(this, {
            uniforms: {
                get: function () {
                    return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."), this.getUniforms()
                }
            }, attributes: {
                get: function () {
                    return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."), this.getAttributes()
                }
            }
        }), this.id = u++, this.code = c, this.usedTimes = 1, this.program = w, this.vertexShader = E, this.fragmentShader = v, this
    }
}(),THREE.WebGLPrograms = function (t, e) {
    function i(t, e) {
        var i;
        return t ? t instanceof THREE.Texture ? i = t.encoding : t instanceof THREE.WebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), i = t.texture.encoding) : i = THREE.LinearEncoding, i === THREE.LinearEncoding && e && (i = THREE.GammaEncoding), i
    }

    var n = [], r = {
            MeshDepthMaterial: "depth",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points"
        },
        o = "precision supportsVertexTextures map mapEncoding envMap envMapMode envMapEncoding lightMap aoMap emissiveMap emissiveMapEncoding bumpMap normalMap displacementMap specularMap roughnessMap metalnessMap alphaMap combine vertexColors fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights shadowMapEnabled shadowMapType toneMapping physicallyCorrectLights alphaTest doubleSided flipSided numClippingPlanes depthPacking".split(" ");
    this.getParameters = function (n, o, a, s, l) {
        var h, u = r[n.type];
        e.floatVertexTextures && l && l.skeleton && l.skeleton.useVertexTexture ? h = 1024 : (h = Math.floor((e.maxVertexUniforms - 20) / 4), void 0 !== l && l instanceof THREE.SkinnedMesh && (h = Math.min(l.skeleton.bones.length, h), h < l.skeleton.bones.length && console.warn("WebGLRenderer: too many bones - " + l.skeleton.bones.length + ", this GPU supports just " + h + " (try OpenGL instead of ANGLE)")));
        var c = t.getPrecision();
        null !== n.precision && (c = e.getMaxPrecision(n.precision), c !== n.precision && console.warn("THREE.WebGLProgram.getParameters:", n.precision, "not supported, using", c, "instead."));
        var p = t.getCurrentRenderTarget();
        return {
            shaderID: u,
            precision: c,
            supportsVertexTextures: e.vertexTextures,
            outputEncoding: i(p ? p.texture : null, t.gammaOutput),
            map: !!n.map,
            mapEncoding: i(n.map, t.gammaInput),
            envMap: !!n.envMap,
            envMapMode: n.envMap && n.envMap.mapping,
            envMapEncoding: i(n.envMap, t.gammaInput),
            envMapCubeUV: !!n.envMap && (n.envMap.mapping === THREE.CubeUVReflectionMapping || n.envMap.mapping === THREE.CubeUVRefractionMapping),
            lightMap: !!n.lightMap,
            aoMap: !!n.aoMap,
            emissiveMap: !!n.emissiveMap,
            emissiveMapEncoding: i(n.emissiveMap, t.gammaInput),
            bumpMap: !!n.bumpMap,
            normalMap: !!n.normalMap,
            displacementMap: !!n.displacementMap,
            roughnessMap: !!n.roughnessMap,
            metalnessMap: !!n.metalnessMap,
            specularMap: !!n.specularMap,
            alphaMap: !!n.alphaMap,
            combine: n.combine,
            vertexColors: n.vertexColors,
            fog: !!a,
            useFog: n.fog,
            fogExp: a instanceof THREE.FogExp2,
            flatShading: n.shading === THREE.FlatShading,
            sizeAttenuation: n.sizeAttenuation,
            logarithmicDepthBuffer: e.logarithmicDepthBuffer,
            skinning: n.skinning,
            maxBones: h,
            useVertexTexture: e.floatVertexTextures && l && l.skeleton && l.skeleton.useVertexTexture,
            morphTargets: n.morphTargets,
            morphNormals: n.morphNormals,
            maxMorphTargets: t.maxMorphTargets,
            maxMorphNormals: t.maxMorphNormals,
            numDirLights: o.directional.length,
            numPointLights: o.point.length,
            numSpotLights: o.spot.length,
            numHemiLights: o.hemi.length,
            numClippingPlanes: s,
            shadowMapEnabled: t.shadowMap.enabled && l.receiveShadow && 0 < o.shadows.length,
            shadowMapType: t.shadowMap.type,
            toneMapping: t.toneMapping,
            physicallyCorrectLights: t.physicallyCorrectLights,
            premultipliedAlpha: n.premultipliedAlpha,
            alphaTest: n.alphaTest,
            doubleSided: n.side === THREE.DoubleSide,
            flipSided: n.side === THREE.BackSide,
            depthPacking: void 0 !== n.depthPacking ? n.depthPacking : !1
        }
    }, this.getProgramCode = function (t, e) {
        var i = [];
        if (e.shaderID ? i.push(e.shaderID) : (i.push(t.fragmentShader), i.push(t.vertexShader)), void 0 !== t.defines) for (var n in t.defines) i.push(n), i.push(t.defines[n]);
        for (n = 0; n < o.length; n++) i.push(e[o[n]]);
        return i.join()
    }, this.acquireProgram = function (e, i, r) {
        for (var o, a = 0, s = n.length; s > a; a++) {
            var l = n[a];
            if (l.code === r) {
                o = l, ++o.usedTimes;
                break
            }
        }
        return void 0 === o && (o = new THREE.WebGLProgram(t, r, e, i), n.push(o)), o
    }, this.releaseProgram = function (t) {
        if (0 === --t.usedTimes) {
            var e = n.indexOf(t);
            n[e] = n[n.length - 1], n.pop(), t.destroy()
        }
    }, this.programs = n
},THREE.WebGLProperties = function () {
    var t = {};
    this.get = function (e) {
        e = e.uuid;
        var i = t[e];
        return void 0 === i && (i = {}, t[e] = i), i
    }, this["delete"] = function (e) {
        delete t[e.uuid]
    }, this.clear = function () {
        t = {}
    }
},THREE.WebGLShader = function () {
    function t(t) {
        t = t.split("\n");
        for (var e = 0; e < t.length; e++) t[e] = e + 1 + ": " + t[e];
        return t.join("\n")
    }

    return function (e, i, n) {
        var r = e.createShader(i);
        return e.shaderSource(r, n), e.compileShader(r), !1 === e.getShaderParameter(r, e.COMPILE_STATUS) && console.error("THREE.WebGLShader: Shader couldn't compile."), "" !== e.getShaderInfoLog(r) && console.warn("THREE.WebGLShader: gl.getShaderInfoLog()", i === e.VERTEX_SHADER ? "vertex" : "fragment", e.getShaderInfoLog(r), t(n)), r
    }
}(),THREE.WebGLShadowMap = function (t, e, i, n) {
    function r(e, i, n, r) {
        var o = e.geometry, a = null, a = g, s = e.customDepthMaterial;
        return n && (a = E, s = e.customDistanceMaterial), s ? a = s : (s = !1, i.morphTargets && (o instanceof THREE.BufferGeometry ? s = o.morphAttributes && o.morphAttributes.position && 0 < o.morphAttributes.position.length : o instanceof THREE.Geometry && (s = o.morphTargets && 0 < o.morphTargets.length)), e = e instanceof THREE.SkinnedMesh && i.skinning, o = 0, s && (o |= 1), e && (o |= 2), a = a[o]), t.localClippingEnabled && !0 === i.clipShadows && 0 !== i.clippingPlanes.length && (s = a.uuid, e = i.uuid, o = v[s], void 0 === o && (o = {}, v[s] = o), s = o[e], void 0 === s && (s = a.clone(), o[e] = s), a = s), a.visible = i.visible, a.wireframe = i.wireframe, e = i.side, M.renderSingleSided && e == THREE.DoubleSide && (e = THREE.FrontSide), M.renderReverseSided && (e === THREE.FrontSide ? e = THREE.BackSide : e === THREE.BackSide && (e = THREE.FrontSide)), a.side = e, a.clipShadows = i.clipShadows, a.clippingPlanes = i.clippingPlanes, a.wireframeLinewidth = i.wireframeLinewidth, a.linewidth = i.linewidth, n && void 0 !== a.uniforms.lightPos && a.uniforms.lightPos.value.copy(r), a
    }

    function o(t, e, i) {
        if (!1 !== t.visible) {
            t.layers.test(e.layers) && (t instanceof THREE.Mesh || t instanceof THREE.Line || t instanceof THREE.Points) && t.castShadow && (!1 === t.frustumCulled || !0 === l.intersectsObject(t)) && !0 === t.material.visible && (t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse, t.matrixWorld), m.push(t)), t = t.children;
            for (var n = 0, r = t.length; r > n; n++) o(t[n], e, i)
        }
    }

    var a = t.context, s = t.state, l = new THREE.Frustum, h = new THREE.Matrix4, u = e.shadows, c = new THREE.Vector2,
        p = new THREE.Vector2(n.maxTextureSize, n.maxTextureSize), d = new THREE.Vector3, f = new THREE.Vector3, m = [], g = Array(4),
        E = Array(4), v = {},
        y = [new THREE.Vector3(1, 0, 0), new THREE.Vector3(-1, 0, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, -1, 0)],
        T = [new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 0, 1), new THREE.Vector3(0, 0, -1)],
        _ = [new THREE.Vector4, new THREE.Vector4, new THREE.Vector4, new THREE.Vector4, new THREE.Vector4, new THREE.Vector4];
    e = new THREE.MeshDepthMaterial, e.depthPacking = THREE.RGBADepthPacking, e.clipping = !0, n = THREE.ShaderLib.distanceRGBA;
    for (var x = THREE.UniformsUtils.clone(n.uniforms), b = 0; 4 !== b; ++b) {
        var R = 0 !== (1 & b), w = 0 !== (2 & b), H = e.clone();
        H.morphTargets = R, H.skinning = w, g[b] = H, R = new THREE.ShaderMaterial({
            defines: {USE_SHADOWMAP: ""},
            uniforms: x,
            vertexShader: n.vertexShader,
            fragmentShader: n.fragmentShader,
            morphTargets: R,
            skinning: w,
            clipping: !0
        }), E[b] = R
    }
    var M = this;
    this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = THREE.PCFShadowMap, this.renderSingleSided = this.renderReverseSided = !0, this.render = function (e, n) {
        if (!1 !== M.enabled && (!1 !== M.autoUpdate || !1 !== M.needsUpdate) && 0 !== u.length) {
            s.clearColor(1, 1, 1, 1), s.disable(a.BLEND), s.setDepthTest(!0), s.setScissorTest(!1);
            for (var g, E, v = 0, x = u.length; x > v; v++) {
                var b = u[v], R = b.shadow;
                if (void 0 === R) console.warn("THREE.WebGLShadowMap:", b, "has no shadow."); else {
                    var w = R.camera;
                    if (c.copy(R.mapSize), c.min(p), b instanceof THREE.PointLight) {
                        g = 6, E = !0;
                        var H = c.x, S = c.y;
                        _[0].set(2 * H, S, H, S), _[1].set(0, S, H, S), _[2].set(3 * H, S, H, S), _[3].set(H, S, H, S), _[4].set(3 * H, 0, H, S), _[5].set(H, 0, H, S), c.x *= 4, c.y *= 2
                    } else g = 1, E = !1;
                    for (null === R.map && (R.map = new THREE.WebGLRenderTarget(c.x, c.y, {
                        minFilter: THREE.NearestFilter,
                        magFilter: THREE.NearestFilter,
                        format: THREE.RGBAFormat
                    }), w.updateProjectionMatrix()), R instanceof THREE.SpotLightShadow && R.update(b), H = R.map, R = R.matrix, f.setFromMatrixPosition(b.matrixWorld), w.position.copy(f), t.setRenderTarget(H), t.clear(), H = 0; g > H; H++) {
                        E ? (d.copy(w.position), d.add(y[H]), w.up.copy(T[H]), w.lookAt(d), s.viewport(_[H])) : (d.setFromMatrixPosition(b.target.matrixWorld), w.lookAt(d)), w.updateMatrixWorld(), w.matrixWorldInverse.getInverse(w.matrixWorld), R.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), R.multiply(w.projectionMatrix), R.multiply(w.matrixWorldInverse), h.multiplyMatrices(w.projectionMatrix, w.matrixWorldInverse), l.setFromMatrix(h), m.length = 0, o(e, n, w);
                        for (var S = 0, C = m.length; C > S; S++) {
                            var A = m[S], P = i.update(A), L = A.material;
                            if (L instanceof THREE.MultiMaterial) for (var O = P.groups, L = L.materials, D = 0, I = O.length; I > D; D++) {
                                var N = O[D], k = L[N.materialIndex];
                                !0 === k.visible && (k = r(A, k, E, f), t.renderBufferDirect(w, null, P, k, A, N))
                            } else k = r(A, L, E, f), t.renderBufferDirect(w, null, P, k, A, null)
                        }
                    }
                }
            }
            g = t.getClearColor(), E = t.getClearAlpha(), t.setClearColor(g, E), M.needsUpdate = !1
        }
    }
},THREE.WebGLState = function (t, e, i) {
    function n(e, i, n) {
        var r = new Uint8Array(4), o = t.createTexture();
        for (t.bindTexture(e, o), t.texParameteri(e, t.TEXTURE_MIN_FILTER, t.NEAREST), t.texParameteri(e, t.TEXTURE_MAG_FILTER, t.NEAREST), e = 0; n > e; e++) t.texImage2D(i + e, 0, t.RGBA, 1, 1, 0, t.RGBA, t.UNSIGNED_BYTE, r);
        return o
    }

    var r = this;
    this.buffers = {
        color: new THREE.WebGLColorBuffer(t, this),
        depth: new THREE.WebGLDepthBuffer(t, this),
        stencil: new THREE.WebGLStencilBuffer(t, this)
    };
    var o = t.getParameter(t.MAX_VERTEX_ATTRIBS), a = new Uint8Array(o), s = new Uint8Array(o), l = new Uint8Array(o), h = {}, u = null,
        c = null, p = null, d = null, f = null, m = null, g = null, E = null, v = !1, y = null, T = null, _ = null, x = null, b = null,
        R = null, w = t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS), H = null, M = {}, S = new THREE.Vector4, C = new THREE.Vector4, A = {};
    A[t.TEXTURE_2D] = n(t.TEXTURE_2D, t.TEXTURE_2D, 1), A[t.TEXTURE_CUBE_MAP] = n(t.TEXTURE_CUBE_MAP, t.TEXTURE_CUBE_MAP_POSITIVE_X, 6), this.init = function () {
        this.clearColor(0, 0, 0, 1), this.clearDepth(1), this.clearStencil(0), this.enable(t.DEPTH_TEST), this.setDepthFunc(THREE.LessEqualDepth), this.setFlipSided(!1), this.setCullFace(THREE.CullFaceBack), this.enable(t.CULL_FACE), this.enable(t.BLEND), this.setBlending(THREE.NormalBlending)
    }, this.initAttributes = function () {
        for (var t = 0, e = a.length; e > t; t++) a[t] = 0
    }, this.enableAttribute = function (i) {
        a[i] = 1, 0 === s[i] && (t.enableVertexAttribArray(i), s[i] = 1), 0 !== l[i] && (e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i, 0), l[i] = 0)
    }, this.enableAttributeAndDivisor = function (e, i, n) {
        a[e] = 1, 0 === s[e] && (t.enableVertexAttribArray(e), s[e] = 1), l[e] !== i && (n.vertexAttribDivisorANGLE(e, i), l[e] = i)
    }, this.disableUnusedAttributes = function () {
        for (var e = 0, i = s.length; e !== i; ++e) s[e] !== a[e] && (t.disableVertexAttribArray(e), s[e] = 0)
    }, this.enable = function (e) {
        !0 !== h[e] && (t.enable(e), h[e] = !0)
    }, this.disable = function (e) {
        !1 !== h[e] && (t.disable(e), h[e] = !1)
    }, this.getCompressedTextureFormats = function () {
        if (null === u && (u = [], e.get("WEBGL_compressed_texture_pvrtc") || e.get("WEBGL_compressed_texture_s3tc") || e.get("WEBGL_compressed_texture_etc1"))) for (var i = t.getParameter(t.COMPRESSED_TEXTURE_FORMATS), n = 0; n < i.length; n++) u.push(i[n]);
        return u
    }, this.setBlending = function (e, n, r, o, a, s, l, h) {
        e !== THREE.NoBlending ? (this.enable(t.BLEND), (e !== c || h !== v) && (e === THREE.AdditiveBlending ? h ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ONE, t.ONE, t.ONE, t.ONE)) : (t.blendEquation(t.FUNC_ADD), t.blendFunc(t.SRC_ALPHA, t.ONE)) : e === THREE.SubtractiveBlending ? h ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ZERO, t.ZERO, t.ONE_MINUS_SRC_COLOR, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD), t.blendFunc(t.ZERO, t.ONE_MINUS_SRC_COLOR)) : e === THREE.MultiplyBlending ? h ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ZERO, t.SRC_COLOR, t.ZERO, t.SRC_ALPHA)) : (t.blendEquation(t.FUNC_ADD), t.blendFunc(t.ZERO, t.SRC_COLOR)) : h ? (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.ONE, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)) : (t.blendEquationSeparate(t.FUNC_ADD, t.FUNC_ADD), t.blendFuncSeparate(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA, t.ONE, t.ONE_MINUS_SRC_ALPHA)), c = e, v = h), e === THREE.CustomBlending ? (a = a || n, s = s || r, l = l || o, (n !== p || a !== m) && (t.blendEquationSeparate(i(n), i(a)), p = n, m = a), (r !== d || o !== f || s !== g || l !== E) && (t.blendFuncSeparate(i(r), i(o), i(s), i(l)), d = r, f = o, g = s, E = l)) : E = g = m = f = d = p = null) : (this.disable(t.BLEND), c = e)
    }, this.setColorWrite = function (t) {
        this.buffers.color.setMask(t)
    }, this.setDepthTest = function (t) {
        this.buffers.depth.setTest(t)
    }, this.setDepthWrite = function (t) {
        this.buffers.depth.setMask(t)
    }, this.setDepthFunc = function (t) {
        this.buffers.depth.setFunc(t)
    }, this.setStencilTest = function (t) {
        this.buffers.stencil.setTest(t)
    }, this.setStencilWrite = function (t) {
        this.buffers.stencil.setMask(t)
    }, this.setStencilFunc = function (t, e, i) {
        this.buffers.stencil.setFunc(t, e, i)
    }, this.setStencilOp = function (t, e, i) {
        this.buffers.stencil.setOp(t, e, i)
    }, this.setFlipSided = function (e) {
        y !== e && (e ? t.frontFace(t.CW) : t.frontFace(t.CCW), y = e)
    }, this.setCullFace = function (e) {
        e !== THREE.CullFaceNone ? (this.enable(t.CULL_FACE), e !== T && (e === THREE.CullFaceBack ? t.cullFace(t.BACK) : e === THREE.CullFaceFront ? t.cullFace(t.FRONT) : t.cullFace(t.FRONT_AND_BACK))) : this.disable(t.CULL_FACE), T = e
    }, this.setLineWidth = function (e) {
        e !== _ && (t.lineWidth(e), _ = e)
    }, this.setPolygonOffset = function (e, i, n) {
        e ? (this.enable(t.POLYGON_OFFSET_FILL), (x !== i || b !== n) && (t.polygonOffset(i, n), x = i, b = n)) : this.disable(t.POLYGON_OFFSET_FILL)
    }, this.getScissorTest = function () {
        return R;
    }, this.setScissorTest = function (e) {
        (R = e) ? this.enable(t.SCISSOR_TEST) : this.disable(t.SCISSOR_TEST)
    }, this.activeTexture = function (e) {
        void 0 === e && (e = t.TEXTURE0 + w - 1), H !== e && (t.activeTexture(e), H = e)
    }, this.bindTexture = function (e, i) {
        null === H && r.activeTexture();
        var n = M[H];
        void 0 === n && (n = {
            type: void 0,
            texture: void 0
        }, M[H] = n), (n.type !== e || n.texture !== i) && (t.bindTexture(e, i || A[e]), n.type = e, n.texture = i)
    }, this.compressedTexImage2D = function () {
        try {
            t.compressedTexImage2D.apply(t, arguments)
        } catch (e) {
            console.error(e)
        }
    }, this.texImage2D = function () {
        try {
            t.texImage2D.apply(t, arguments)
        } catch (e) {
            console.error(e)
        }
    }, this.clearColor = function (t, e, i, n) {
        this.buffers.color.setClear(t, e, i, n)
    }, this.clearDepth = function (t) {
        this.buffers.depth.setClear(t)
    }, this.clearStencil = function (t) {
        this.buffers.stencil.setClear(t)
    }, this.scissor = function (e) {
        !1 === S.equals(e) && (t.scissor(e.x, e.y, e.z, e.w), S.copy(e))
    }, this.viewport = function (e) {
        !1 === C.equals(e) && (t.viewport(e.x, e.y, e.z, e.w), C.copy(e))
    }, this.reset = function () {
        for (var e = 0; e < s.length; e++) 1 === s[e] && (t.disableVertexAttribArray(e), s[e] = 0);
        h = {}, H = u = null, M = {}, T = y = c = null, this.buffers.color.reset(), this.buffers.depth.reset(), this.buffers.stencil.reset()
    }
},THREE.WebGLColorBuffer = function (t, e) {
    var i = !1, n = new THREE.Vector4, r = null, o = new THREE.Vector4;
    this.setMask = function (e) {
        r === e || i || (t.colorMask(e, e, e, e), r = e)
    }, this.setLocked = function (t) {
        i = t
    }, this.setClear = function (e, i, r, a) {
        n.set(e, i, r, a), !1 === o.equals(n) && (t.clearColor(e, i, r, a), o.copy(n))
    }, this.reset = function () {
        i = !1, r = null, o = new THREE.Vector4
    }
},THREE.WebGLDepthBuffer = function (t, e) {
    var i = !1, n = null, r = null, o = null;
    this.setTest = function (i) {
        i ? e.enable(t.DEPTH_TEST) : e.disable(t.DEPTH_TEST)
    }, this.setMask = function (e) {
        n === e || i || (t.depthMask(e), n = e)
    }, this.setFunc = function (e) {
        if (r !== e) {
            if (e) switch (e) {
                case THREE.NeverDepth:
                    t.depthFunc(t.NEVER);
                    break;
                case THREE.AlwaysDepth:
                    t.depthFunc(t.ALWAYS);
                    break;
                case THREE.LessDepth:
                    t.depthFunc(t.LESS);
                    break;
                case THREE.LessEqualDepth:
                    t.depthFunc(t.LEQUAL);
                    break;
                case THREE.EqualDepth:
                    t.depthFunc(t.EQUAL);
                    break;
                case THREE.GreaterEqualDepth:
                    t.depthFunc(t.GEQUAL);
                    break;
                case THREE.GreaterDepth:
                    t.depthFunc(t.GREATER);
                    break;
                case THREE.NotEqualDepth:
                    t.depthFunc(t.NOTEQUAL);
                    break;
                default:
                    t.depthFunc(t.LEQUAL)
            } else t.depthFunc(t.LEQUAL);
            r = e
        }
    }, this.setLocked = function (t) {
        i = t
    }, this.setClear = function (e) {
        o !== e && (t.clearDepth(e), o = e)
    }, this.reset = function () {
        i = !1, o = r = n = null
    }
},THREE.WebGLStencilBuffer = function (t, e) {
    var i = !1, n = null, r = null, o = null, a = null, s = null, l = null, h = null, u = null;
    this.setTest = function (i) {
        i ? e.enable(t.STENCIL_TEST) : e.disable(t.STENCIL_TEST)
    }, this.setMask = function (e) {
        n === e || i || (t.stencilMask(e), n = e)
    }, this.setFunc = function (e, i, n) {
        (r !== e || o !== i || a !== n) && (t.stencilFunc(e, i, n), r = e, o = i, a = n)
    }, this.setOp = function (e, i, n) {
        (s !== e || l !== i || h !== n) && (t.stencilOp(e, i, n), s = e, l = i, h = n)
    }, this.setLocked = function (t) {
        i = t
    }, this.setClear = function (e) {
        u !== e && (t.clearStencil(e), u = e)
    }, this.reset = function () {
        i = !1, u = h = l = s = a = o = r = n = null
    }
},THREE.WebGLTextures = function (t, e, i, n, r, o, a) {
    function s(t, e) {
        if (t.width > e || t.height > e) {
            var i = e / Math.max(t.width, t.height), n = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
            return n.width = Math.floor(t.width * i), n.height = Math.floor(t.height * i), n.getContext("2d").drawImage(t, 0, 0, t.width, t.height, 0, 0, n.width, n.height), console.warn("THREE.WebGLRenderer: image is too big (" + t.width + "x" + t.height + "). Resized to " + n.width + "x" + n.height, t), n
        }
        return t
    }

    function l(t) {
        return THREE.Math.isPowerOfTwo(t.width) && THREE.Math.isPowerOfTwo(t.height)
    }

    function h(e) {
        return e === THREE.NearestFilter || e === THREE.NearestMipMapNearestFilter || e === THREE.NearestMipMapLinearFilter ? t.NEAREST : t.LINEAR
    }

    function u(e) {
        e = e.target, e.removeEventListener("dispose", u);
        t:{
            var i = n.get(e);
            if (e.image && i.__image__webglTextureCube) t.deleteTexture(i.__image__webglTextureCube); else {
                if (void 0 === i.__webglInit) break t;
                t.deleteTexture(i.__webglTexture)
            }
            n["delete"](e)
        }
        g.textures--
    }

    function c(e) {
        e = e.target, e.removeEventListener("dispose", c);
        var i = n.get(e), r = n.get(e.texture);
        if (e) {
            if (void 0 !== r.__webglTexture && t.deleteTexture(r.__webglTexture), e.depthTexture && e.depthTexture.dispose(), e instanceof THREE.WebGLRenderTargetCube) for (r = 0; 6 > r; r++) t.deleteFramebuffer(i.__webglFramebuffer[r]), i.__webglDepthbuffer && t.deleteRenderbuffer(i.__webglDepthbuffer[r]); else t.deleteFramebuffer(i.__webglFramebuffer), i.__webglDepthbuffer && t.deleteRenderbuffer(i.__webglDepthbuffer);
            n["delete"](e.texture), n["delete"](e)
        }
        g.textures--
    }

    function p(e, a) {
        var h = n.get(e);
        if (0 < e.version && h.__version !== e.version) {
            var c = e.image;
            if (void 0 === c) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined", e); else {
                if (!1 !== c.complete) {
                    void 0 === h.__webglInit && (h.__webglInit = !0, e.addEventListener("dispose", u), h.__webglTexture = t.createTexture(), g.textures++), i.activeTexture(t.TEXTURE0 + a), i.bindTexture(t.TEXTURE_2D, h.__webglTexture), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY), t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL, e.premultiplyAlpha), t.pixelStorei(t.UNPACK_ALIGNMENT, e.unpackAlignment);
                    var p = s(e.image, r.maxTextureSize);
                    if ((e.wrapS !== THREE.ClampToEdgeWrapping || e.wrapT !== THREE.ClampToEdgeWrapping || e.minFilter !== THREE.NearestFilter && e.minFilter !== THREE.LinearFilter) && !1 === l(p)) if (c = p, c instanceof HTMLImageElement || c instanceof HTMLCanvasElement) {
                        var f = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
                        f.width = THREE.Math.nearestPowerOfTwo(c.width), f.height = THREE.Math.nearestPowerOfTwo(c.height), f.getContext("2d").drawImage(c, 0, 0, f.width, f.height), console.warn("THREE.WebGLRenderer: image is not power of two (" + c.width + "x" + c.height + "). Resized to " + f.width + "x" + f.height, c), p = f
                    } else p = c;
                    var c = l(p), f = o(e.format), m = o(e.type);
                    d(t.TEXTURE_2D, e, c);
                    var v = e.mipmaps;
                    if (e instanceof THREE.DepthTexture) {
                        if (v = t.DEPTH_COMPONENT, e.type === THREE.FloatType) {
                            if (!E) throw Error("Float Depth Texture only supported in WebGL2.0");
                            v = t.DEPTH_COMPONENT32F
                        } else E && (v = t.DEPTH_COMPONENT16);
                        i.texImage2D(t.TEXTURE_2D, 0, v, p.width, p.height, 0, f, m, null)
                    } else if (e instanceof THREE.DataTexture) if (0 < v.length && c) {
                        for (var y = 0, T = v.length; T > y; y++) p = v[y], i.texImage2D(t.TEXTURE_2D, y, f, p.width, p.height, 0, f, m, p.data);
                        e.generateMipmaps = !1
                    } else i.texImage2D(t.TEXTURE_2D, 0, f, p.width, p.height, 0, f, m, p.data); else if (e instanceof THREE.CompressedTexture) for (y = 0, T = v.length; T > y; y++) p = v[y], e.format !== THREE.RGBAFormat && e.format !== THREE.RGBFormat ? -1 < i.getCompressedTextureFormats().indexOf(f) ? i.compressedTexImage2D(t.TEXTURE_2D, y, f, p.width, p.height, 0, p.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : i.texImage2D(t.TEXTURE_2D, y, f, p.width, p.height, 0, f, m, p.data); else if (0 < v.length && c) {
                        for (y = 0, T = v.length; T > y; y++) p = v[y], i.texImage2D(t.TEXTURE_2D, y, f, f, m, p);
                        e.generateMipmaps = !1
                    } else i.texImage2D(t.TEXTURE_2D, 0, f, f, m, p);
                    return e.generateMipmaps && c && t.generateMipmap(t.TEXTURE_2D), h.__version = e.version, void(e.onUpdate && e.onUpdate(e))
                }
                console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete", e)
            }
        }
        i.activeTexture(t.TEXTURE0 + a), i.bindTexture(t.TEXTURE_2D, h.__webglTexture)
    }

    function d(i, a, s) {
        s ? (t.texParameteri(i, t.TEXTURE_WRAP_S, o(a.wrapS)), t.texParameteri(i, t.TEXTURE_WRAP_T, o(a.wrapT)), t.texParameteri(i, t.TEXTURE_MAG_FILTER, o(a.magFilter)), t.texParameteri(i, t.TEXTURE_MIN_FILTER, o(a.minFilter))) : (t.texParameteri(i, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE), t.texParameteri(i, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE), a.wrapS === THREE.ClampToEdgeWrapping && a.wrapT === THREE.ClampToEdgeWrapping || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.", a), t.texParameteri(i, t.TEXTURE_MAG_FILTER, h(a.magFilter)), t.texParameteri(i, t.TEXTURE_MIN_FILTER, h(a.minFilter)), a.minFilter !== THREE.NearestFilter && a.minFilter !== THREE.LinearFilter && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.", a)), !(s = e.get("EXT_texture_filter_anisotropic")) || a.type === THREE.FloatType && null === e.get("OES_texture_float_linear") || a.type === THREE.HalfFloatType && null === e.get("OES_texture_half_float_linear") || !(1 < a.anisotropy || n.get(a).__currentAnisotropy) || (t.texParameterf(i, s.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(a.anisotropy, r.getMaxAnisotropy())), n.get(a).__currentAnisotropy = a.anisotropy)
    }

    function f(e, r, a, s) {
        var l = o(r.texture.format), h = o(r.texture.type);
        i.texImage2D(s, 0, l, r.width, r.height, 0, l, h, null), t.bindFramebuffer(t.FRAMEBUFFER, e), t.framebufferTexture2D(t.FRAMEBUFFER, a, s, n.get(r.texture).__webglTexture, 0), t.bindFramebuffer(t.FRAMEBUFFER, null)
    }

    function m(e, i) {
        t.bindRenderbuffer(t.RENDERBUFFER, e), i.depthBuffer && !i.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_COMPONENT16, i.width, i.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.RENDERBUFFER, e)) : i.depthBuffer && i.stencilBuffer ? (t.renderbufferStorage(t.RENDERBUFFER, t.DEPTH_STENCIL, i.width, i.height), t.framebufferRenderbuffer(t.FRAMEBUFFER, t.DEPTH_STENCIL_ATTACHMENT, t.RENDERBUFFER, e)) : t.renderbufferStorage(t.RENDERBUFFER, t.RGBA4, i.width, i.height), t.bindRenderbuffer(t.RENDERBUFFER, null)
    }

    var g = a.memory, E = "undefined" != typeof WebGL2RenderingContext && t instanceof WebGL2RenderingContext;
    this.setTexture2D = p, this.setTextureCube = function (e, a) {
        var h = n.get(e);
        if (6 === e.image.length) if (0 < e.version && h.__version !== e.version) {
            h.__image__webglTextureCube || (e.addEventListener("dispose", u), h.__image__webglTextureCube = t.createTexture(), g.textures++), i.activeTexture(t.TEXTURE0 + a), i.bindTexture(t.TEXTURE_CUBE_MAP, h.__image__webglTextureCube), t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL, e.flipY);
            for (var c = e instanceof THREE.CompressedTexture, p = e.image[0] instanceof THREE.DataTexture, f = [], m = 0; 6 > m; m++) f[m] = c || p ? p ? e.image[m].image : e.image[m] : s(e.image[m], r.maxCubemapSize);
            var E = l(f[0]), v = o(e.format), y = o(e.type);
            for (d(t.TEXTURE_CUBE_MAP, e, E), m = 0; 6 > m; m++) if (c) for (var T, _ = f[m].mipmaps, x = 0, b = _.length; b > x; x++) T = _[x], e.format !== THREE.RGBAFormat && e.format !== THREE.RGBFormat ? -1 < i.getCompressedTextureFormats().indexOf(v) ? i.compressedTexImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, x, v, T.width, T.height, 0, T.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, x, v, T.width, T.height, 0, v, y, T.data); else p ? i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, 0, v, f[m].width, f[m].height, 0, v, y, f[m].data) : i.texImage2D(t.TEXTURE_CUBE_MAP_POSITIVE_X + m, 0, v, v, y, f[m]);
            e.generateMipmaps && E && t.generateMipmap(t.TEXTURE_CUBE_MAP), h.__version = e.version, e.onUpdate && e.onUpdate(e)
        } else i.activeTexture(t.TEXTURE0 + a), i.bindTexture(t.TEXTURE_CUBE_MAP, h.__image__webglTextureCube)
    }, this.setTextureCubeDynamic = function (e, r) {
        i.activeTexture(t.TEXTURE0 + r), i.bindTexture(t.TEXTURE_CUBE_MAP, n.get(e).__webglTexture)
    }, this.setupRenderTarget = function (e) {
        var r = n.get(e), o = n.get(e.texture);
        e.addEventListener("dispose", c), o.__webglTexture = t.createTexture(), g.textures++;
        var a = e instanceof THREE.WebGLRenderTargetCube, s = l(e);
        if (a) {
            r.__webglFramebuffer = [];
            for (var h = 0; 6 > h; h++) r.__webglFramebuffer[h] = t.createFramebuffer()
        } else r.__webglFramebuffer = t.createFramebuffer();
        if (a) {
            for (i.bindTexture(t.TEXTURE_CUBE_MAP, o.__webglTexture), d(t.TEXTURE_CUBE_MAP, e.texture, s), h = 0; 6 > h; h++) f(r.__webglFramebuffer[h], e, t.COLOR_ATTACHMENT0, t.TEXTURE_CUBE_MAP_POSITIVE_X + h);
            e.texture.generateMipmaps && s && t.generateMipmap(t.TEXTURE_CUBE_MAP), i.bindTexture(t.TEXTURE_CUBE_MAP, null)
        } else i.bindTexture(t.TEXTURE_2D, o.__webglTexture), d(t.TEXTURE_2D, e.texture, s), f(r.__webglFramebuffer, e, t.COLOR_ATTACHMENT0, t.TEXTURE_2D), e.texture.generateMipmaps && s && t.generateMipmap(t.TEXTURE_2D), i.bindTexture(t.TEXTURE_2D, null);
        if (e.depthBuffer) {
            if (r = n.get(e), o = e instanceof THREE.WebGLRenderTargetCube, e.depthTexture) {
                if (o) throw Error("target.depthTexture not supported in Cube render targets");
                if (e instanceof THREE.WebGLRenderTargetCube) throw Error("Depth Texture with cube render targets is not supported!");
                if (t.bindFramebuffer(t.FRAMEBUFFER, r.__webglFramebuffer), !(e.depthTexture instanceof THREE.DepthTexture)) throw Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                n.get(e.depthTexture).__webglTexture && e.depthTexture.image.width === e.width && e.depthTexture.image.height === e.height || (e.depthTexture.image.width = e.width, e.depthTexture.image.height = e.height, e.depthTexture.needsUpdate = !0), p(e.depthTexture, 0), e = n.get(e.depthTexture).__webglTexture, t.framebufferTexture2D(t.FRAMEBUFFER, t.DEPTH_ATTACHMENT, t.TEXTURE_2D, e, 0)
            } else if (o) for (r.__webglDepthbuffer = [], o = 0; 6 > o; o++) t.bindFramebuffer(t.FRAMEBUFFER, r.__webglFramebuffer[o]), r.__webglDepthbuffer[o] = t.createRenderbuffer(), m(r.__webglDepthbuffer[o], e); else t.bindFramebuffer(t.FRAMEBUFFER, r.__webglFramebuffer), r.__webglDepthbuffer = t.createRenderbuffer(), m(r.__webglDepthbuffer, e);
            t.bindFramebuffer(t.FRAMEBUFFER, null)
        }
    }, this.updateRenderTargetMipmap = function (e) {
        var r = e.texture;
        r.generateMipmaps && l(e) && r.minFilter !== THREE.NearestFilter && r.minFilter !== THREE.LinearFilter && (e = e instanceof THREE.WebGLRenderTargetCube ? t.TEXTURE_CUBE_MAP : t.TEXTURE_2D, r = n.get(r).__webglTexture, i.bindTexture(e, r), t.generateMipmap(e), i.bindTexture(e, null))
    }
},THREE.WebGLUniforms = function () {
    var t = new THREE.Texture, e = new THREE.CubeTexture, i = [], n = [], r = function (t, e, n) {
        var r = t[0];
        if (0 >= r || r > 0) return t;
        var o = e * n, a = i[o];
        if (void 0 === a && (a = new Float32Array(o), i[o] = a), 0 !== e) for (r.toArray(a, 0), r = 1, o = 0; r !== e; ++r) o += n, t[r].toArray(a, o);
        return a
    }, o = function (t, e) {
        var i = n[e];
        void 0 === i && (i = new Int32Array(e), n[e] = i);
        for (var r = 0; r !== e; ++r) i[r] = t.allocTextureUnit();
        return i
    }, a = function (t, e) {
        t.uniform1f(this.addr, e)
    }, s = function (t, e) {
        t.uniform1i(this.addr, e)
    }, l = function (t, e) {
        void 0 === e.x ? t.uniform2fv(this.addr, e) : t.uniform2f(this.addr, e.x, e.y)
    }, h = function (t, e) {
        void 0 !== e.x ? t.uniform3f(this.addr, e.x, e.y, e.z) : void 0 !== e.r ? t.uniform3f(this.addr, e.r, e.g, e.b) : t.uniform3fv(this.addr, e)
    }, u = function (t, e) {
        void 0 === e.x ? t.uniform4fv(this.addr, e) : t.uniform4f(this.addr, e.x, e.y, e.z, e.w)
    }, c = function (t, e) {
        t.uniformMatrix2fv(this.addr, !1, e.elements || e)
    }, p = function (t, e) {
        t.uniformMatrix3fv(this.addr, !1, e.elements || e)
    }, d = function (t, e) {
        t.uniformMatrix4fv(this.addr, !1, e.elements || e)
    }, f = function (e, i, n) {
        var r = n.allocTextureUnit();
        e.uniform1i(this.addr, r), n.setTexture2D(i || t, r)
    }, m = function (t, i, n) {
        var r = n.allocTextureUnit();
        t.uniform1i(this.addr, r), n.setTextureCube(i || e, r)
    }, g = function (t, e) {
        t.uniform2iv(this.addr, e)
    }, E = function (t, e) {
        t.uniform3iv(this.addr, e)
    }, v = function (t, e) {
        t.uniform4iv(this.addr, e)
    }, y = function (t) {
        switch (t) {
            case 5126:
                return a;
            case 35664:
                return l;
            case 35665:
                return h;
            case 35666:
                return u;
            case 35674:
                return c;
            case 35675:
                return p;
            case 35676:
                return d;
            case 35678:
                return f;
            case 35680:
                return m;
            case 5124:
            case 35670:
                return s;
            case 35667:
            case 35671:
                return g;
            case 35668:
            case 35672:
                return E;
            case 35669:
            case 35673:
                return v
        }
    }, T = function (t, e) {
        t.uniform1fv(this.addr, e)
    }, _ = function (t, e) {
        t.uniform1iv(this.addr, e)
    }, x = function (t, e) {
        t.uniform2fv(this.addr, r(e, this.size, 2))
    }, b = function (t, e) {
        t.uniform3fv(this.addr, r(e, this.size, 3))
    }, R = function (t, e) {
        t.uniform4fv(this.addr, r(e, this.size, 4))
    }, w = function (t, e) {
        t.uniformMatrix2fv(this.addr, !1, r(e, this.size, 4))
    }, H = function (t, e) {
        t.uniformMatrix3fv(this.addr, !1, r(e, this.size, 9))
    }, M = function (t, e) {
        t.uniformMatrix4fv(this.addr, !1, r(e, this.size, 16))
    }, S = function (e, i, n) {
        var r = i.length, a = o(n, r);
        for (e.uniform1iv(this.addr, a), e = 0; e !== r; ++e) n.setTexture2D(i[e] || t, a[e])
    }, C = function (t, i, n) {
        var r = i.length, a = o(n, r);
        for (t.uniform1iv(this.addr, a), t = 0; t !== r; ++t) n.setTextureCube(i[t] || e, a[t])
    }, A = function (t) {
        switch (t) {
            case 5126:
                return T;
            case 35664:
                return x;
            case 35665:
                return b;
            case 35666:
                return R;
            case 35674:
                return w;
            case 35675:
                return H;
            case 35676:
                return M;
            case 35678:
                return S;
            case 35680:
                return C;
            case 5124:
            case 35670:
                return _;
            case 35667:
            case 35671:
                return g;
            case 35668:
            case 35672:
                return E;
            case 35669:
            case 35673:
                return v
        }
    }, P = function (t, e, i) {
        this.id = t, this.addr = i, this.setValue = y(e.type)
    }, L = function (t, e, i) {
        this.id = t, this.addr = i, this.size = e.size, this.setValue = A(e.type)
    }, O = function (t) {
        this.id = t, this.seq = [], this.map = {}
    };
    O.prototype.setValue = function (t, e) {
        for (var i = this.seq, n = 0, r = i.length; n !== r; ++n) {
            var o = i[n];
            o.setValue(t, e[o.id])
        }
    };
    var D = /([\w\d_]+)(\])?(\[|\.)?/g, I = function (t, e, i) {
        this.seq = [], this.map = {}, this.renderer = i, i = t.getProgramParameter(e, t.ACTIVE_UNIFORMS);
        for (var n = 0; n !== i; ++n) {
            var r = t.getActiveUniform(e, n), o = t.getUniformLocation(e, r.name), a = this, s = r.name, l = s.length;
            for (D.lastIndex = 0; ;) {
                var h = D.exec(s), u = D.lastIndex, c = h[1], p = h[3];
                if ("]" === h[2] && (c |= 0), void 0 === p || "[" === p && u + 2 === l) {
                    s = a, r = void 0 === p ? new P(c, r, o) : new L(c, r, o), s.seq.push(r), s.map[r.id] = r;
                    break
                }
                p = a.map[c], void 0 === p && (p = new O(c), c = a, a = p, c.seq.push(a), c.map[a.id] = a), a = p
            }
        }
    };
    return I.prototype.setValue = function (t, e, i) {
        e = this.map[e], void 0 !== e && e.setValue(t, i, this.renderer)
    }, I.prototype.set = function (t, e, i) {
        var n = this.map[i];
        void 0 !== n && n.setValue(t, e[i], this.renderer)
    }, I.prototype.setOptional = function (t, e, i) {
        e = e[i], void 0 !== e && this.setValue(t, i, e)
    }, I.upload = function (t, e, i, n) {
        for (var r = 0, o = e.length; r !== o; ++r) {
            var a = e[r], s = i[a.id];
            !1 !== s.needsUpdate && a.setValue(t, s.value, n)
        }
    }, I.seqWithValue = function (t, e) {
        for (var i = [], n = 0, r = t.length; n !== r; ++n) {
            var o = t[n];
            o.id in e && i.push(o)
        }
        return i
    }, I.splitDynamic = function (t, e) {
        for (var i = null, n = t.length, r = 0, o = 0; o !== n; ++o) {
            var a = t[o], s = e[a.id];
            s && !0 === s.dynamic ? (null === i && (i = []), i.push(a)) : (o > r && (t[r] = a), ++r)
        }
        return n > r && (t.length = r), i
    }, I.evalDynamic = function (t, e, i, n) {
        for (var r = 0, o = t.length; r !== o; ++r) {
            var a = e[t[r].id], s = a.onUpdateCallback;
            void 0 !== s && s.call(a, i, n)
        }
    }, I
}(),THREE.LensFlarePlugin = function (t, e) {
    var i, n, r, o, a, s, l, h, u, c, p, d, f, m, g, E, v = t.context, y = t.state;
    this.render = function (T, _, x) {
        if (0 !== e.length) {
            T = new THREE.Vector3;
            var b = x.w / x.z, R = .5 * x.z, w = .5 * x.w, H = 16 / x.w, M = new THREE.Vector2(H * b, H), S = new THREE.Vector3(1, 1, 0),
                C = new THREE.Vector2(1, 1), A = new THREE.Box2;
            if (A.min.set(0, 0), A.max.set(x.z - 16, x.w - 16), void 0 === m) {
                var H = new Float32Array([-1, -1, 0, 0, 1, -1, 1, 0, 1, 1, 1, 1, -1, 1, 0, 1]), P = new Uint16Array([0, 1, 2, 0, 2, 3]);
                p = v.createBuffer(), d = v.createBuffer(), v.bindBuffer(v.ARRAY_BUFFER, p), v.bufferData(v.ARRAY_BUFFER, H, v.STATIC_DRAW), v.bindBuffer(v.ELEMENT_ARRAY_BUFFER, d), v.bufferData(v.ELEMENT_ARRAY_BUFFER, P, v.STATIC_DRAW), g = v.createTexture(), E = v.createTexture(), y.bindTexture(v.TEXTURE_2D, g), v.texImage2D(v.TEXTURE_2D, 0, v.RGB, 16, 16, 0, v.RGB, v.UNSIGNED_BYTE, null), v.texParameteri(v.TEXTURE_2D, v.TEXTURE_WRAP_S, v.CLAMP_TO_EDGE), v.texParameteri(v.TEXTURE_2D, v.TEXTURE_WRAP_T, v.CLAMP_TO_EDGE), v.texParameteri(v.TEXTURE_2D, v.TEXTURE_MAG_FILTER, v.NEAREST), v.texParameteri(v.TEXTURE_2D, v.TEXTURE_MIN_FILTER, v.NEAREST), y.bindTexture(v.TEXTURE_2D, E), v.texImage2D(v.TEXTURE_2D, 0, v.RGBA, 16, 16, 0, v.RGBA, v.UNSIGNED_BYTE, null), v.texParameteri(v.TEXTURE_2D, v.TEXTURE_WRAP_S, v.CLAMP_TO_EDGE), v.texParameteri(v.TEXTURE_2D, v.TEXTURE_WRAP_T, v.CLAMP_TO_EDGE), v.texParameteri(v.TEXTURE_2D, v.TEXTURE_MAG_FILTER, v.NEAREST), v.texParameteri(v.TEXTURE_2D, v.TEXTURE_MIN_FILTER, v.NEAREST);
                var H = f = {
                        vertexShader: "uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
                        fragmentShader: "uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"
                    }, P = v.createProgram(), L = v.createShader(v.FRAGMENT_SHADER), O = v.createShader(v.VERTEX_SHADER),
                    D = "precision " + t.getPrecision() + " float;\n";
                v.shaderSource(L, D + H.fragmentShader), v.shaderSource(O, D + H.vertexShader), v.compileShader(L), v.compileShader(O), v.attachShader(P, L), v.attachShader(P, O), v.linkProgram(P), m = P, u = v.getAttribLocation(m, "position"), c = v.getAttribLocation(m, "uv"), i = v.getUniformLocation(m, "renderType"), n = v.getUniformLocation(m, "map"), r = v.getUniformLocation(m, "occlusionMap"), o = v.getUniformLocation(m, "opacity"), a = v.getUniformLocation(m, "color"), s = v.getUniformLocation(m, "scale"), l = v.getUniformLocation(m, "rotation"), h = v.getUniformLocation(m, "screenPosition")
            }
            for (v.useProgram(m), y.initAttributes(), y.enableAttribute(u), y.enableAttribute(c), y.disableUnusedAttributes(), v.uniform1i(r, 0), v.uniform1i(n, 1), v.bindBuffer(v.ARRAY_BUFFER, p), v.vertexAttribPointer(u, 2, v.FLOAT, !1, 16, 0), v.vertexAttribPointer(c, 2, v.FLOAT, !1, 16, 8), v.bindBuffer(v.ELEMENT_ARRAY_BUFFER, d), y.disable(v.CULL_FACE), y.setDepthWrite(!1), P = 0, L = e.length; L > P; P++) if (H = 16 / x.w, M.set(H * b, H), O = e[P], T.set(O.matrixWorld.elements[12], O.matrixWorld.elements[13], O.matrixWorld.elements[14]), T.applyMatrix4(_.matrixWorldInverse), T.applyProjection(_.projectionMatrix), S.copy(T), C.x = x.x + S.x * R + R - 8, C.y = x.y + S.y * w + w - 8, !0 === A.containsPoint(C)) {
                y.activeTexture(v.TEXTURE0), y.bindTexture(v.TEXTURE_2D, null), y.activeTexture(v.TEXTURE1), y.bindTexture(v.TEXTURE_2D, g), v.copyTexImage2D(v.TEXTURE_2D, 0, v.RGB, C.x, C.y, 16, 16, 0), v.uniform1i(i, 0), v.uniform2f(s, M.x, M.y), v.uniform3f(h, S.x, S.y, S.z), y.disable(v.BLEND), y.enable(v.DEPTH_TEST), v.drawElements(v.TRIANGLES, 6, v.UNSIGNED_SHORT, 0), y.activeTexture(v.TEXTURE0), y.bindTexture(v.TEXTURE_2D, E), v.copyTexImage2D(v.TEXTURE_2D, 0, v.RGBA, C.x, C.y, 16, 16, 0), v.uniform1i(i, 1), y.disable(v.DEPTH_TEST), y.activeTexture(v.TEXTURE1), y.bindTexture(v.TEXTURE_2D, g), v.drawElements(v.TRIANGLES, 6, v.UNSIGNED_SHORT, 0), O.positionScreen.copy(S), O.customUpdateCallback ? O.customUpdateCallback(O) : O.updateLensFlares(), v.uniform1i(i, 2), y.enable(v.BLEND);
                for (var D = 0, I = O.lensFlares.length; I > D; D++) {
                    var N = O.lensFlares[D];
                    .001 < N.opacity && .001 < N.scale && (S.x = N.x, S.y = N.y, S.z = N.z, H = N.size * N.scale / x.w, M.x = H * b, M.y = H, v.uniform3f(h, S.x, S.y, S.z), v.uniform2f(s, M.x, M.y), v.uniform1f(l, N.rotation), v.uniform1f(o, N.opacity), v.uniform3f(a, N.color.r, N.color.g, N.color.b), y.setBlending(N.blending, N.blendEquation, N.blendSrc, N.blendDst), t.setTexture2D(N.texture, 1), v.drawElements(v.TRIANGLES, 6, v.UNSIGNED_SHORT, 0))
                }
            }
            y.enable(v.CULL_FACE), y.enable(v.DEPTH_TEST), y.setDepthWrite(!0), t.resetGLState()
        }
    }
},THREE.SpritePlugin = function (t, e) {
    function i(t, e) {
        return t.renderOrder !== e.renderOrder ? t.renderOrder - e.renderOrder : t.z !== e.z ? e.z - t.z : e.id - t.id
    }

    var n, r, o, a, s, l, h, u, c, p, d, f, m, g, E, v, y, T, _, x, b, R = t.context, w = t.state, H = new THREE.Vector3,
        M = new THREE.Quaternion, S = new THREE.Vector3;
    this.render = function (C, A) {
        if (0 !== e.length) {
            if (void 0 === x) {
                var P = new Float32Array([-.5, -.5, 0, 0, .5, -.5, 1, 0, .5, .5, 1, 1, -.5, .5, 0, 1]),
                    L = new Uint16Array([0, 1, 2, 0, 2, 3]);
                T = R.createBuffer(), _ = R.createBuffer(), R.bindBuffer(R.ARRAY_BUFFER, T), R.bufferData(R.ARRAY_BUFFER, P, R.STATIC_DRAW), R.bindBuffer(R.ELEMENT_ARRAY_BUFFER, _), R.bufferData(R.ELEMENT_ARRAY_BUFFER, L, R.STATIC_DRAW);
                var P = R.createProgram(), L = R.createShader(R.VERTEX_SHADER), O = R.createShader(R.FRAGMENT_SHADER);
                R.shaderSource(L, ["precision " + t.getPrecision() + " float;", "uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")), R.shaderSource(O, ["precision " + t.getPrecision() + " float;", "uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")), R.compileShader(L), R.compileShader(O), R.attachShader(P, L), R.attachShader(P, O), R.linkProgram(P), x = P, v = R.getAttribLocation(x, "position"), y = R.getAttribLocation(x, "uv"), n = R.getUniformLocation(x, "uvOffset"), r = R.getUniformLocation(x, "uvScale"), o = R.getUniformLocation(x, "rotation"), a = R.getUniformLocation(x, "scale"), s = R.getUniformLocation(x, "color"), l = R.getUniformLocation(x, "map"), h = R.getUniformLocation(x, "opacity"), u = R.getUniformLocation(x, "modelViewMatrix"), c = R.getUniformLocation(x, "projectionMatrix"), p = R.getUniformLocation(x, "fogType"), d = R.getUniformLocation(x, "fogDensity"), f = R.getUniformLocation(x, "fogNear"), m = R.getUniformLocation(x, "fogFar"), g = R.getUniformLocation(x, "fogColor"), E = R.getUniformLocation(x, "alphaTest"), P = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), P.width = 8, P.height = 8, L = P.getContext("2d"), L.fillStyle = "white", L.fillRect(0, 0, 8, 8), b = new THREE.Texture(P), b.needsUpdate = !0
            }
            R.useProgram(x), w.initAttributes(), w.enableAttribute(v), w.enableAttribute(y), w.disableUnusedAttributes(), w.disable(R.CULL_FACE), w.enable(R.BLEND), R.bindBuffer(R.ARRAY_BUFFER, T), R.vertexAttribPointer(v, 2, R.FLOAT, !1, 16, 0), R.vertexAttribPointer(y, 2, R.FLOAT, !1, 16, 8), R.bindBuffer(R.ELEMENT_ARRAY_BUFFER, _), R.uniformMatrix4fv(c, !1, A.projectionMatrix.elements), w.activeTexture(R.TEXTURE0), R.uniform1i(l, 0), L = P = 0, (O = C.fog) ? (R.uniform3f(g, O.color.r, O.color.g, O.color.b), O instanceof THREE.Fog ? (R.uniform1f(f, O.near), R.uniform1f(m, O.far), R.uniform1i(p, 1), L = P = 1) : O instanceof THREE.FogExp2 && (R.uniform1f(d, O.density), R.uniform1i(p, 2), L = P = 2)) : (R.uniform1i(p, 0), L = P = 0);
            for (var O = 0, D = e.length; D > O; O++) {
                var I = e[O];
                I.modelViewMatrix.multiplyMatrices(A.matrixWorldInverse, I.matrixWorld), I.z = -I.modelViewMatrix.elements[14]
            }
            e.sort(i);
            for (var N = [], O = 0, D = e.length; D > O; O++) {
                var I = e[O], k = I.material;
                !1 !== k.visible && (R.uniform1f(E, k.alphaTest), R.uniformMatrix4fv(u, !1, I.modelViewMatrix.elements), I.matrixWorld.decompose(H, M, S), N[0] = S.x, N[1] = S.y, I = 0, C.fog && k.fog && (I = L), P !== I && (R.uniform1i(p, I), P = I), null !== k.map ? (R.uniform2f(n, k.map.offset.x, k.map.offset.y), R.uniform2f(r, k.map.repeat.x, k.map.repeat.y)) : (R.uniform2f(n, 0, 0), R.uniform2f(r, 1, 1)), R.uniform1f(h, k.opacity), R.uniform3f(s, k.color.r, k.color.g, k.color.b), R.uniform1f(o, k.rotation), R.uniform2fv(a, N), w.setBlending(k.blending, k.blendEquation, k.blendSrc, k.blendDst), w.setDepthTest(k.depthTest), w.setDepthWrite(k.depthWrite), k.map ? t.setTexture2D(k.map, 0) : t.setTexture2D(b, 0), R.drawElements(R.TRIANGLES, 6, R.UNSIGNED_SHORT, 0))
            }
            w.enable(R.CULL_FACE), t.resetGLState()
        }
    }
},Object.assign(THREE, {
    Face4: function (t, e, i, n, r, o, a) {
        return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."), new THREE.Face3(t, e, i, r, o, a)
    }, LineStrip: 0, LinePieces: 1, MeshFaceMaterial: THREE.MultiMaterial, PointCloud: function (t, e) {
        return console.warn("THREE.PointCloud has been renamed to THREE.Points."), new THREE.Points(t, e)
    }, Particle: THREE.Sprite, ParticleSystem: function (t, e) {
        return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."), new THREE.Points(t, e)
    }, PointCloudMaterial: function (t) {
        return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."), new THREE.PointsMaterial(t)
    }, ParticleBasicMaterial: function (t) {
        return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."), new THREE.PointsMaterial(t)
    }, ParticleSystemMaterial: function (t) {
        return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."), new THREE.PointsMaterial(t)
    }, Vertex: function (t, e, i) {
        return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."), new THREE.Vector3(t, e, i)
    }
}),Object.assign(THREE.Box2.prototype, {
    empty: function () {
        return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty()
    }, isIntersectionBox: function (t) {
        return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t)
    }
}),Object.assign(THREE.Box3.prototype, {
    empty: function () {
        return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty()
    }, isIntersectionBox: function (t) {
        return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t)
    }, isIntersectionSphere: function (t) {
        return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(t)
    }
}),Object.assign(THREE.Matrix3.prototype, {
    multiplyVector3: function (t) {
        return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), t.applyMatrix3(this)
    }, multiplyVector3Array: function (t) {
        return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."), this.applyToVector3Array(t)
    }
}),Object.assign(THREE.Matrix4.prototype, {
    extractPosition: function (t) {
        return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(t)
    }, setRotationFromQuaternion: function (t) {
        return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(t)
    }, multiplyVector3: function (t) {
        return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."), t.applyProjection(this)
    }, multiplyVector4: function (t) {
        return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), t.applyMatrix4(this)
    }, multiplyVector3Array: function (t) {
        return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."), this.applyToVector3Array(t)
    }, rotateAxis: function (t) {
        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), t.transformDirection(this)
    }, crossVector: function (t) {
        return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), t.applyMatrix4(this)
    }, translate: function (t) {
        console.error("THREE.Matrix4: .translate() has been removed.")
    }, rotateX: function (t) {
        console.error("THREE.Matrix4: .rotateX() has been removed.")
    }, rotateY: function (t) {
        console.error("THREE.Matrix4: .rotateY() has been removed.")
    }, rotateZ: function (t) {
        console.error("THREE.Matrix4: .rotateZ() has been removed.")
    }, rotateByAxis: function (t, e) {
        console.error("THREE.Matrix4: .rotateByAxis() has been removed.");
    }
}),Object.assign(THREE.Plane.prototype, {
    isIntersectionLine: function (t) {
        return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(t)
    }
}),Object.assign(THREE.Quaternion.prototype, {
    multiplyVector3: function (t) {
        return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), t.applyQuaternion(this)
    }
}),Object.assign(THREE.Ray.prototype, {
    isIntersectionBox: function (t) {
        return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(t)
    }, isIntersectionPlane: function (t) {
        return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(t)
    }, isIntersectionSphere: function (t) {
        return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(t)
    }
}),Object.assign(THREE.Vector3.prototype, {
    setEulerFromRotationMatrix: function () {
        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
    }, setEulerFromQuaternion: function () {
        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
    }, getPositionFromMatrix: function (t) {
        return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(t)
    }, getScaleFromMatrix: function (t) {
        return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(t)
    }, getColumnFromMatrix: function (t, e) {
        return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(e, t)
    }
}),Object.assign(THREE.Object3D.prototype, {
    getChildByName: function (t) {
        return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(t)
    }, renderDepth: function (t) {
        console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
    }, translate: function (t, e) {
        return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(e, t)
    }
}),Object.defineProperties(THREE.Object3D.prototype, {
    eulerOrder: {
        get: function () {
            return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order
        }, set: function (t) {
            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = t
        }
    }, useQuaternion: {
        get: function () {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
        }, set: function (t) {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
        }
    }
}),Object.defineProperties(THREE.LOD.prototype, {
    objects: {
        get: function () {
            return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels
        }
    }
}),THREE.PerspectiveCamera.prototype.setLens = function (t, e) {
    console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), void 0 !== e && (this.filmGauge = e), this.setFocalLength(t)
},Object.defineProperties(THREE.Light.prototype, {
    onlyShadow: {
        set: function (t) {
            console.warn("THREE.Light: .onlyShadow has been removed.")
        }
    }, shadowCameraFov: {
        set: function (t) {
            console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = t
        }
    }, shadowCameraLeft: {
        set: function (t) {
            console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = t
        }
    }, shadowCameraRight: {
        set: function (t) {
            console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = t
        }
    }, shadowCameraTop: {
        set: function (t) {
            console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = t
        }
    }, shadowCameraBottom: {
        set: function (t) {
            console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = t
        }
    }, shadowCameraNear: {
        set: function (t) {
            console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = t
        }
    }, shadowCameraFar: {
        set: function (t) {
            console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = t
        }
    }, shadowCameraVisible: {
        set: function (t) {
            console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
        }
    }, shadowBias: {
        set: function (t) {
            console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = t
        }
    }, shadowDarkness: {
        set: function (t) {
            console.warn("THREE.Light: .shadowDarkness has been removed.")
        }
    }, shadowMapWidth: {
        set: function (t) {
            console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = t
        }
    }, shadowMapHeight: {
        set: function (t) {
            console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = t
        }
    }
}),Object.defineProperties(THREE.BufferAttribute.prototype, {
    length: {
        get: function () {
            return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."), this.array.length
        }
    }
}),Object.assign(THREE.BufferGeometry.prototype, {
    addIndex: function (t) {
        console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(t)
    }, addDrawCall: function (t, e, i) {
        void 0 !== i && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(t, e)
    }, clearDrawCalls: function () {
        console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups()
    }, computeTangents: function () {
        console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
    }, computeOffsets: function () {
        console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
    }
}),Object.defineProperties(THREE.BufferGeometry.prototype, {
    drawcalls: {
        get: function () {
            return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups
        }
    }, offsets: {
        get: function () {
            return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups
        }
    }
}),Object.defineProperties(THREE.Material.prototype, {
    wrapAround: {
        get: function () {
            console.warn("THREE." + this.type + ": .wrapAround has been removed.")
        }, set: function (t) {
            console.warn("THREE." + this.type + ": .wrapAround has been removed.")
        }
    }, wrapRGB: {
        get: function () {
            return console.warn("THREE." + this.type + ": .wrapRGB has been removed."), new THREE.Color
        }
    }
}),Object.defineProperties(THREE.MeshPhongMaterial.prototype, {
    metal: {
        get: function () {
            return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."), !1
        }, set: function (t) {
            console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
        }
    }
}),Object.defineProperties(THREE.ShaderMaterial.prototype, {
    derivatives: {
        get: function () {
            return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives
        }, set: function (t) {
            console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = t
        }
    }
}),THREE.EventDispatcher.prototype = Object.assign(Object.create({
    constructor: THREE.EventDispatcher, apply: function (t) {
        console.warn("THREE.EventDispatcher: .apply is deprecated, just inherit or Object.assign the prototype to mix-in."), Object.assign(t, this)
    }
}), THREE.EventDispatcher.prototype),Object.assign(THREE.WebGLRenderer.prototype, {
    supportsFloatTextures: function () {
        return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float")
    }, supportsHalfFloatTextures: function () {
        return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float")
    }, supportsStandardDerivatives: function () {
        return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives")
    }, supportsCompressedTextureS3TC: function () {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc")
    }, supportsCompressedTexturePVRTC: function () {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc")
    }, supportsBlendMinMax: function () {
        return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax")
    }, supportsVertexTextures: function () {
        return this.capabilities.vertexTextures
    }, supportsInstancedArrays: function () {
        return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays")
    }, enableScissorTest: function (t) {
        console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(t)
    }, initMaterial: function () {
        console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
    }, addPrePlugin: function () {
        console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
    }, addPostPlugin: function () {
        console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
    }, updateShadowMap: function () {
        console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
    }
}),Object.defineProperties(THREE.WebGLRenderer.prototype, {
    shadowMapEnabled: {
        get: function () {
            return this.shadowMap.enabled
        }, set: function (t) {
            console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = t
        }
    }, shadowMapType: {
        get: function () {
            return this.shadowMap.type
        }, set: function (t) {
            console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = t
        }
    }, shadowMapCullFace: {
        get: function () {
            return this.shadowMap.cullFace
        }, set: function (t) {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."), this.shadowMap.cullFace = t
        }
    }
}),Object.defineProperties(THREE.WebGLShadowMap.prototype, {
    cullFace: {
        get: function () {
            return this.renderReverseSided ? THREE.CullFaceFront : THREE.CullFaceBack
        }, set: function (t) {
            t = t !== THREE.CullFaceBack, console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to " + t + "."), this.renderReverseSided = t
        }
    }
}),Object.defineProperties(THREE.WebGLRenderTarget.prototype, {
    wrapS: {
        get: function () {
            return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS
        }, set: function (t) {
            console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = t
        }
    }, wrapT: {
        get: function () {
            return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT
        }, set: function (t) {
            console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = t
        }
    }, magFilter: {
        get: function () {
            return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter
        }, set: function (t) {
            console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = t
        }
    }, minFilter: {
        get: function () {
            return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter
        }, set: function (t) {
            console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = t
        }
    }, anisotropy: {
        get: function () {
            return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy
        }, set: function (t) {
            console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = t
        }
    }, offset: {
        get: function () {
            return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset
        }, set: function (t) {
            console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = t
        }
    }, repeat: {
        get: function () {
            return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat
        }, set: function (t) {
            console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = t
        }
    }, format: {
        get: function () {
            return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format
        }, set: function (t) {
            console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = t
        }
    }, type: {
        get: function () {
            return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type
        }, set: function (t) {
            console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = t
        }
    }, generateMipmaps: {
        get: function () {
            return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps
        }, set: function (t) {
            console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = t
        }
    }
}),Object.assign(THREE.Audio.prototype, {
    load: function (t) {
        console.warn("THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.");
        var e = this;
        return (new THREE.AudioLoader).load(t, function (t) {
            e.setBuffer(t)
        }), this
    }
}),Object.assign(THREE.AudioAnalyser.prototype, {
    getData: function (t) {
        return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData()
    }
}),THREE.GeometryUtils = {
    merge: function (t, e, i) {
        console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");
        var n;
        e instanceof THREE.Mesh && (e.matrixAutoUpdate && e.updateMatrix(), n = e.matrix, e = e.geometry), t.merge(e, n, i)
    }, center: function (t) {
        return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."), t.center()
    }
},THREE.ImageUtils = {
    crossOrigin: void 0, loadTexture: function (t, e, i, n) {
        console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
        var r = new THREE.TextureLoader;
        return r.setCrossOrigin(this.crossOrigin), t = r.load(t, i, void 0, n), e && (t.mapping = e), t
    }, loadTextureCube: function (t, e, i, n) {
        console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
        var r = new THREE.CubeTextureLoader;
        return r.setCrossOrigin(this.crossOrigin), t = r.load(t, i, void 0, n), e && (t.mapping = e), t
    }, loadCompressedTexture: function () {
        console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
    }, loadCompressedTextureCube: function () {
        console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
    }
},THREE.Projector = function () {
    console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."), this.projectVector = function (t, e) {
        console.warn("THREE.Projector: .projectVector() is now vector.project()."), t.project(e)
    }, this.unprojectVector = function (t, e) {
        console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."), t.unproject(e)
    }, this.pickingRay = function (t, e) {
        console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")
    }
},THREE.CanvasRenderer = function () {
    console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"), this.domElement = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"), this.clear = function () {
    }, this.render = function () {
    }, this.setClearColor = function () {
    }, this.setSize = function () {
    }
},THREE.CurveUtils = {
    tangentQuadraticBezier: function (t, e, i, n) {
        return 2 * (1 - t) * (i - e) + 2 * t * (n - i)
    }, tangentCubicBezier: function (t, e, i, n, r) {
        return -3 * e * (1 - t) * (1 - t) + 3 * i * (1 - t) * (1 - t) - 6 * t * i * (1 - t) + 6 * t * n * (1 - t) - 3 * t * t * n + 3 * t * t * r
    }, tangentSpline: function (t, e, i, n, r) {
        return 6 * t * t - 6 * t + (3 * t * t - 4 * t + 1) + (-6 * t * t + 6 * t) + (3 * t * t - 2 * t)
    }, interpolate: function (t, e, i, n, r) {
        t = .5 * (i - t), n = .5 * (n - e);
        var o = r * r;
        return (2 * e - 2 * i + t + n) * r * o + (-3 * e + 3 * i - 2 * t - n) * o + t * r + e
    }
},THREE.SceneUtils = {
    createMultiMaterialObject: function (t, e) {
        for (var i = new THREE.Group, n = 0, r = e.length; r > n; n++) i.add(new THREE.Mesh(t, e[n]));
        return i
    }, detach: function (t, e, i) {
        t.applyMatrix(e.matrixWorld), e.remove(t), i.add(t)
    }, attach: function (t, e, i) {
        var n = new THREE.Matrix4;
        n.getInverse(i.matrixWorld), t.applyMatrix(n), e.remove(t), i.add(t)
    }
},THREE.ShapeUtils = {
    area: function (t) {
        for (var e = t.length, i = 0, n = e - 1, r = 0; e > r; n = r++) i += t[n].x * t[r].y - t[r].x * t[n].y;
        return .5 * i
    }, triangulate: function () {
        return function (t, e) {
            var i = t.length;
            if (3 > i) return null;
            var n, r, o, a = [], s = [], l = [];
            if (0 < THREE.ShapeUtils.area(t)) for (r = 0; i > r; r++) s[r] = r; else for (r = 0; i > r; r++) s[r] = i - 1 - r;
            var h = 2 * i;
            for (r = i - 1; i > 2;) {
                if (0 >= h--) {
                    console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()");
                    break
                }
                n = r, n >= i && (n = 0), r = n + 1, r >= i && (r = 0), o = r + 1, o >= i && (o = 0);
                var u;
                t:{
                    var c = u = void 0, p = void 0, d = void 0, f = void 0, m = void 0, g = void 0, E = void 0, v = void 0, c = t[s[n]].x,
                        p = t[s[n]].y, d = t[s[r]].x, f = t[s[r]].y, m = t[s[o]].x, g = t[s[o]].y;
                    if (Number.EPSILON > (d - c) * (g - p) - (f - p) * (m - c)) u = !1; else {
                        var y = void 0, T = void 0, _ = void 0, x = void 0, b = void 0, R = void 0, w = void 0, H = void 0, M = void 0,
                            S = void 0, M = H = w = v = E = void 0, y = m - d, T = g - f, _ = c - m, x = p - g, b = d - c, R = f - p;
                        for (u = 0; i > u; u++) if (E = t[s[u]].x, v = t[s[u]].y, !(E === c && v === p || E === d && v === f || E === m && v === g) && (w = E - c, H = v - p, M = E - d, S = v - f, E -= m, v -= g, M = y * S - T * M, w = b * H - R * w, H = _ * v - x * E, M >= -Number.EPSILON && H >= -Number.EPSILON && w >= -Number.EPSILON)) {
                            u = !1;
                            break t
                        }
                        u = !0
                    }
                }
                if (u) {
                    for (a.push([t[s[n]], t[s[r]], t[s[o]]]), l.push([s[n], s[r], s[o]]), n = r, o = r + 1; i > o; n++, o++) s[n] = s[o];
                    i--, h = 2 * i
                }
            }
            return e ? l : a
        }
    }(), triangulateShape: function (t, e) {
        function i(t) {
            var e = t.length;
            e > 2 && t[e - 1].equals(t[0]) && t.pop()
        }

        function n(t, e, i) {
            return t.x !== e.x ? t.x < e.x ? t.x <= i.x && i.x <= e.x : e.x <= i.x && i.x <= t.x : t.y < e.y ? t.y <= i.y && i.y <= e.y : e.y <= i.y && i.y <= t.y
        }

        function r(t, e, i, r, o) {
            var a = e.x - t.x, s = e.y - t.y, l = r.x - i.x, h = r.y - i.y, u = t.x - i.x, c = t.y - i.y, p = s * l - a * h,
                d = s * u - a * c;
            if (Math.abs(p) > Number.EPSILON) {
                if (p > 0) {
                    if (0 > d || d > p) return [];
                    if (l = h * u - l * c, 0 > l || l > p) return []
                } else {
                    if (d > 0 || p > d) return [];
                    if (l = h * u - l * c, l > 0 || p > l) return []
                }
                return 0 === l ? !o || 0 !== d && d !== p ? [t] : [] : l === p ? !o || 0 !== d && d !== p ? [e] : [] : 0 === d ? [i] : d === p ? [r] : (o = l / p, [{
                    x: t.x + o * a,
                    y: t.y + o * s
                }])
            }
            return 0 !== d || h * u !== l * c ? [] : (s = 0 === a && 0 === s, l = 0 === l && 0 === h, s && l ? t.x !== i.x || t.y !== i.y ? [] : [t] : s ? n(i, r, t) ? [t] : [] : l ? n(t, e, i) ? [i] : [] : (0 !== a ? (t.x < e.x ? (a = t, l = t.x, s = e, t = e.x) : (a = e, l = e.x, s = t, t = t.x), i.x < r.x ? (e = i, p = i.x, h = r, i = r.x) : (e = r, p = r.x, h = i, i = i.x)) : (t.y < e.y ? (a = t, l = t.y, s = e, t = e.y) : (a = e, l = e.y, s = t, t = t.y), i.y < r.y ? (e = i, p = i.y, h = r, i = r.y) : (e = r, p = r.y, h = i, i = i.y)), p >= l ? p > t ? [] : t === p ? o ? [] : [e] : i >= t ? [e, s] : [e, h] : l > i ? [] : l === i ? o ? [] : [a] : i >= t ? [a, s] : [a, h]))
        }

        function o(t, e, i, n) {
            var r = e.x - t.x, o = e.y - t.y;
            e = i.x - t.x, i = i.y - t.y;
            var a = n.x - t.x;
            return n = n.y - t.y, t = r * i - o * e, r = r * n - o * a, Math.abs(t) > Number.EPSILON ? (e = a * i - n * e, t > 0 ? r >= 0 && e >= 0 : r >= 0 || e >= 0) : r > 0
        }

        i(t), e.forEach(i);
        var a, s, l, h, u, c = {};
        for (l = t.concat(), a = 0, s = e.length; s > a; a++) Array.prototype.push.apply(l, e[a]);
        for (a = 0, s = l.length; s > a; a++) u = l[a].x + ":" + l[a].y, void 0 !== c[u] && console.warn("THREE.ShapeUtils: Duplicate point", u, a), c[u] = a;
        a = function (t, e) {
            function i(t, e) {
                var i = g.length - 1, n = t - 1;
                0 > n && (n = i);
                var r = t + 1;
                return r > i && (r = 0), (i = o(g[t], g[n], g[r], s[e])) ? (i = s.length - 1, n = e - 1, 0 > n && (n = i), r = e + 1, r > i && (r = 0), (i = o(s[e], s[n], s[r], g[t])) ? !0 : !1) : !1
            }

            function n(t, e) {
                var i, n;
                for (i = 0; i < g.length; i++) if (n = i + 1, n %= g.length, n = r(t, e, g[i], g[n], !0), 0 < n.length) return !0;
                return !1
            }

            function a(t, i) {
                var n, o, a, s;
                for (n = 0; n < E.length; n++) for (o = e[E[n]], a = 0; a < o.length; a++) if (s = a + 1, s %= o.length, s = r(t, i, o[a], o[s], !0), 0 < s.length) return !0;
                return !1
            }

            var s, l, h, u, c, p, d, f, m, g = t.concat(), E = [], v = [], y = 0;
            for (l = e.length; l > y; y++) E.push(y);
            d = 0;
            for (var T = 2 * E.length; 0 < E.length;) {
                if (T--, 0 > T) {
                    console.log("Infinite Loop! Holes left:" + E.length + ", Probably Hole outside Shape!");
                    break
                }
                for (h = d; h < g.length; h++) {
                    for (u = g[h], l = -1, y = 0; y < E.length; y++) if (c = E[y], p = u.x + ":" + u.y + ":" + c, void 0 === v[p]) {
                        for (s = e[c], f = 0; f < s.length; f++) if (c = s[f], i(h, f) && !n(u, c) && !a(u, c)) {
                            l = f, E.splice(y, 1), d = g.slice(0, h + 1), c = g.slice(h), f = s.slice(l), m = s.slice(0, l + 1), g = d.concat(f).concat(m).concat(c), d = h;
                            break
                        }
                        if (l >= 0) break;
                        v[p] = !0
                    }
                    if (l >= 0) break
                }
            }
            return g
        }(t, e);
        var p = THREE.ShapeUtils.triangulate(a, !1);
        for (a = 0, s = p.length; s > a; a++) for (h = p[a], l = 0; 3 > l; l++) u = h[l].x + ":" + h[l].y, u = c[u], void 0 !== u && (h[l] = u);
        return p.concat()
    }, isClockWise: function (t) {
        return 0 > THREE.ShapeUtils.area(t)
    }, b2: function () {
        return function (t, e, i, n) {
            var r = 1 - t;
            return r * r * e + 2 * (1 - t) * t * i + t * t * n
        }
    }(), b3: function () {
        return function (t, e, i, n, r) {
            var o = 1 - t, a = 1 - t;
            return o * o * o * e + 3 * a * a * t * i + 3 * (1 - t) * t * t * n + t * t * t * r
        }
    }()
},THREE.Curve = function () {
},THREE.Curve.prototype = {
    constructor: THREE.Curve, getPoint: function (t) {
        return console.warn("THREE.Curve: Warning, getPoint() not implemented!"), null
    }, getPointAt: function (t) {
        return t = this.getUtoTmapping(t), this.getPoint(t)
    }, getPoints: function (t) {
        t || (t = 5);
        for (var e = [], i = 0; t >= i; i++) e.push(this.getPoint(i / t));
        return e
    }, getSpacedPoints: function (t) {
        t || (t = 5);
        for (var e = [], i = 0; t >= i; i++) e.push(this.getPointAt(i / t));
        return e
    }, getLength: function () {
        var t = this.getLengths();
        return t[t.length - 1]
    }, getLengths: function (t) {
        if (t || (t = this.__arcLengthDivisions ? this.__arcLengthDivisions : 200), this.cacheArcLengths && this.cacheArcLengths.length === t + 1 && !this.needsUpdate) return this.cacheArcLengths;
        this.needsUpdate = !1;
        var e, i, n = [], r = this.getPoint(0), o = 0;
        for (n.push(0), i = 1; t >= i; i++) e = this.getPoint(i / t), o += e.distanceTo(r), n.push(o), r = e;
        return this.cacheArcLengths = n
    }, updateArcLengths: function () {
        this.needsUpdate = !0, this.getLengths()
    }, getUtoTmapping: function (t, e) {
        var i, n = this.getLengths(), r = 0, o = n.length;
        i = e ? e : t * n[o - 1];
        for (var a, s = 0, l = o - 1; l >= s;) if (r = Math.floor(s + (l - s) / 2), a = n[r] - i, 0 > a) s = r + 1; else {
            if (!(a > 0)) {
                l = r;
                break
            }
            l = r - 1
        }
        return r = l, n[r] === i ? r / (o - 1) : (s = n[r], n = (r + (i - s) / (n[r + 1] - s)) / (o - 1))
    }, getTangent: function (t) {
        var e = t - 1e-4;
        return t += 1e-4, 0 > e && (e = 0), t > 1 && (t = 1), e = this.getPoint(e), this.getPoint(t).clone().sub(e).normalize()
    }, getTangentAt: function (t) {
        return t = this.getUtoTmapping(t), this.getTangent(t)
    }
},THREE.Curve.create = function (t, e) {
    return t.prototype = Object.create(THREE.Curve.prototype), t.prototype.constructor = t, t.prototype.getPoint = e, t
},THREE.CurvePath = function () {
    this.curves = [], this.autoClose = !1
},THREE.CurvePath.prototype = Object.assign(Object.create(THREE.Curve.prototype), {
    constructor: THREE.CurvePath, add: function (t) {
        this.curves.push(t)
    }, closePath: function () {
        var t = this.curves[0].getPoint(0), e = this.curves[this.curves.length - 1].getPoint(1);
        t.equals(e) || this.curves.push(new THREE.LineCurve(e, t))
    }, getPoint: function (t) {
        var e = t * this.getLength(), i = this.getCurveLengths();
        for (t = 0; t < i.length;) {
            if (i[t] >= e) return e = i[t] - e, t = this.curves[t], i = t.getLength(), t.getPointAt(0 === i ? 0 : 1 - e / i);
            t++
        }
        return null
    }, getLength: function () {
        var t = this.getCurveLengths();
        return t[t.length - 1]
    }, updateArcLengths: function () {
        this.needsUpdate = !0, this.cacheLengths = null, this.getLengths()
    }, getCurveLengths: function () {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
        for (var t = [], e = 0, i = 0, n = this.curves.length; n > i; i++) e += this.curves[i].getLength(), t.push(e);
        return this.cacheLengths = t
    }, getSpacedPoints: function (t) {
        t || (t = 40);
        for (var e = [], i = 0; t >= i; i++) e.push(this.getPoint(i / t));
        return this.autoClose && e.push(e[0]), e
    }, getPoints: function (t) {
        t = t || 12;
        for (var e, i = [], n = 0, r = this.curves; n < r.length; n++) for (var o = r[n], o = o.getPoints(o instanceof THREE.EllipseCurve ? 2 * t : o instanceof THREE.LineCurve ? 1 : o instanceof THREE.SplineCurve ? t * o.points.length : t), a = 0; a < o.length; a++) {
            var s = o[a];
            e && e.equals(s) || (i.push(s), e = s)
        }
        return this.autoClose && 1 < i.length && !i[i.length - 1].equals(i[0]) && i.push(i[0]), i
    }, createPointsGeometry: function (t) {
        return t = this.getPoints(t), this.createGeometry(t)
    }, createSpacedPointsGeometry: function (t) {
        return t = this.getSpacedPoints(t), this.createGeometry(t)
    }, createGeometry: function (t) {
        for (var e = new THREE.Geometry, i = 0, n = t.length; n > i; i++) {
            var r = t[i];
            e.vertices.push(new THREE.Vector3(r.x, r.y, r.z || 0))
        }
        return e
    }
}),THREE.Font = function (t) {
    this.data = t
},Object.assign(THREE.Font.prototype, {
    generateShapes: function (t, e, i) {
        void 0 === e && (e = 100), void 0 === i && (i = 4);
        var n = this.data;
        t = String(t).split("");
        var r = e / n.resolution, o = 0;
        e = [];
        for (var a = 0; a < t.length; a++) {
            var s;
            s = r;
            var l = o, h = n.glyphs[t[a]] || n.glyphs["?"];
            if (h) {
                var u = new THREE.ShapePath, c = [], p = THREE.ShapeUtils.b2, d = THREE.ShapeUtils.b3, f = void 0, m = void 0,
                    g = m = f = void 0, E = void 0, v = void 0, y = void 0, T = void 0, _ = void 0, E = void 0;
                if (h.o) for (var x = h._cachedOutline || (h._cachedOutline = h.o.split(" ")), b = 0, R = x.length; R > b;) switch (x[b++]) {
                    case"m":
                        f = x[b++] * s + l, m = x[b++] * s, u.moveTo(f, m);
                        break;
                    case"l":
                        f = x[b++] * s + l, m = x[b++] * s, u.lineTo(f, m);
                        break;
                    case"q":
                        if (f = x[b++] * s + l, m = x[b++] * s, v = x[b++] * s + l, y = x[b++] * s, u.quadraticCurveTo(v, y, f, m), E = c[c.length - 1]) for (var g = E.x, E = E.y, w = 1; i >= w; w++) {
                            var H = w / i;
                            p(H, g, v, f), p(H, E, y, m)
                        }
                        break;
                    case"b":
                        if (f = x[b++] * s + l, m = x[b++] * s, v = x[b++] * s + l, y = x[b++] * s, T = x[b++] * s + l, _ = x[b++] * s, u.bezierCurveTo(v, y, T, _, f, m), E = c[c.length - 1]) for (g = E.x, E = E.y, w = 1; i >= w; w++) H = w / i, d(H, g, v, T, f), d(H, E, y, _, m)
                }
                s = {offset: h.ha * s, path: u}
            } else s = void 0;
            o += s.offset, e.push(s.path)
        }
        for (i = [], n = 0, t = e.length; t > n; n++) Array.prototype.push.apply(i, e[n].toShapes());
        return i
    }
}),THREE.Path = function (t) {
    THREE.CurvePath.call(this), this.currentPoint = new THREE.Vector2, t && this.fromPoints(t)
},THREE.Path.prototype = Object.assign(Object.create(THREE.CurvePath.prototype), {
    constructor: THREE.Path, fromPoints: function (t) {
        this.moveTo(t[0].x, t[0].y);
        for (var e = 1, i = t.length; i > e; e++) this.lineTo(t[e].x, t[e].y)
    }, moveTo: function (t, e) {
        this.currentPoint.set(t, e)
    }, lineTo: function (t, e) {
        var i = new THREE.LineCurve(this.currentPoint.clone(), new THREE.Vector2(t, e));
        this.curves.push(i), this.currentPoint.set(t, e)
    }, quadraticCurveTo: function (t, e, i, n) {
        t = new THREE.QuadraticBezierCurve(this.currentPoint.clone(), new THREE.Vector2(t, e), new THREE.Vector2(i, n)), this.curves.push(t), this.currentPoint.set(i, n)
    }, bezierCurveTo: function (t, e, i, n, r, o) {
        t = new THREE.CubicBezierCurve(this.currentPoint.clone(), new THREE.Vector2(t, e), new THREE.Vector2(i, n), new THREE.Vector2(r, o)), this.curves.push(t), this.currentPoint.set(r, o)
    }, splineThru: function (t) {
        var e = [this.currentPoint.clone()].concat(t), e = new THREE.SplineCurve(e);
        this.curves.push(e), this.currentPoint.copy(t[t.length - 1])
    }, arc: function (t, e, i, n, r, o) {
        this.absarc(t + this.currentPoint.x, e + this.currentPoint.y, i, n, r, o)
    }, absarc: function (t, e, i, n, r, o) {
        this.absellipse(t, e, i, i, n, r, o)
    }, ellipse: function (t, e, i, n, r, o, a, s) {
        this.absellipse(t + this.currentPoint.x, e + this.currentPoint.y, i, n, r, o, a, s)
    }, absellipse: function (t, e, i, n, r, o, a, s) {
        t = new THREE.EllipseCurve(t, e, i, n, r, o, a, s), 0 < this.curves.length && (e = t.getPoint(0), e.equals(this.currentPoint) || this.lineTo(e.x, e.y)), this.curves.push(t), t = t.getPoint(1), this.currentPoint.copy(t)
    }
}),THREE.ShapePath = function () {
    this.subPaths = [], this.currentPath = null
},THREE.ShapePath.prototype = {
    moveTo: function (t, e) {
        this.currentPath = new THREE.Path, this.subPaths.push(this.currentPath), this.currentPath.moveTo(t, e)
    }, lineTo: function (t, e) {
        this.currentPath.lineTo(t, e)
    }, quadraticCurveTo: function (t, e, i, n) {
        this.currentPath.quadraticCurveTo(t, e, i, n)
    }, bezierCurveTo: function (t, e, i, n, r, o) {
        this.currentPath.bezierCurveTo(t, e, i, n, r, o)
    }, splineThru: function (t) {
        this.currentPath.splineThru(t)
    }, toShapes: function (t, e) {
        function i(t) {
            for (var e = [], i = 0, n = t.length; n > i; i++) {
                var r = t[i], o = new THREE.Shape;
                o.curves = r.curves, e.push(o)
            }
            return e
        }

        function n(t, e) {
            for (var i = e.length, n = !1, r = i - 1, o = 0; i > o; r = o++) {
                var a = e[r], s = e[o], l = s.x - a.x, h = s.y - a.y;
                if (Math.abs(h) > Number.EPSILON) {
                    if (0 > h && (a = e[o], l = -l, s = e[r], h = -h), !(t.y < a.y || t.y > s.y)) if (t.y === a.y) {
                        if (t.x === a.x) return !0
                    } else {
                        if (r = h * (t.x - a.x) - l * (t.y - a.y), 0 === r) return !0;
                        0 > r || (n = !n)
                    }
                } else if (t.y === a.y && (s.x <= t.x && t.x <= a.x || a.x <= t.x && t.x <= s.x)) return !0
            }
            return n
        }

        var r = THREE.ShapeUtils.isClockWise, o = this.subPaths;
        if (0 === o.length) return [];
        if (!0 === e) return i(o);
        var a, s, l, h = [];
        if (1 === o.length) return s = o[0], l = new THREE.Shape, l.curves = s.curves, h.push(l), h;
        var u = !r(o[0].getPoints()), u = t ? !u : u;
        l = [];
        var c, p = [], d = [], f = 0;
        p[f] = void 0, d[f] = [];
        for (var m = 0, g = o.length; g > m; m++) s = o[m], c = s.getPoints(), a = r(c), (a = t ? !a : a) ? (!u && p[f] && f++, p[f] = {
            s: new THREE.Shape,
            p: c
        }, p[f].s.curves = s.curves, u && f++, d[f] = []) : d[f].push({h: s, p: c[0]});
        if (!p[0]) return i(o);
        if (1 < p.length) {
            for (m = !1, s = [], r = 0, o = p.length; o > r; r++) l[r] = [];
            for (r = 0, o = p.length; o > r; r++) for (a = d[r], u = 0; u < a.length; u++) {
                for (f = a[u], c = !0, g = 0; g < p.length; g++) n(f.p, p[g].p) && (r !== g && s.push({
                    froms: r,
                    tos: g,
                    hole: u
                }), c ? (c = !1, l[g].push(f)) : m = !0);
                c && l[r].push(f)
            }
            0 < s.length && (m || (d = l))
        }
        for (m = 0, r = p.length; r > m; m++) for (l = p[m].s, h.push(l), s = d[m], o = 0, a = s.length; a > o; o++) l.holes.push(s[o].h);
        return h
    }
},THREE.Shape = function () {
    THREE.Path.apply(this, arguments), this.holes = []
},THREE.Shape.prototype = Object.assign(Object.create(THREE.Path.prototype), {
    constructor: THREE.Shape, extrude: function (t) {
        return new THREE.ExtrudeGeometry(this, t)
    }, makeGeometry: function (t) {
        return new THREE.ShapeGeometry(this, t)
    }, getPointsHoles: function (t) {
        for (var e = [], i = 0, n = this.holes.length; n > i; i++) e[i] = this.holes[i].getPoints(t);
        return e
    }, extractAllPoints: function (t) {
        return {shape: this.getPoints(t), holes: this.getPointsHoles(t)}
    }, extractPoints: function (t) {
        return this.extractAllPoints(t)
    }
}),THREE.LineCurve = function (t, e) {
    this.v1 = t, this.v2 = e
},THREE.LineCurve.prototype = Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.constructor = THREE.LineCurve,THREE.LineCurve.prototype.getPoint = function (t) {
    if (1 === t) return this.v2.clone();
    var e = this.v2.clone().sub(this.v1);
    return e.multiplyScalar(t).add(this.v1), e
},THREE.LineCurve.prototype.getPointAt = function (t) {
    return this.getPoint(t)
},THREE.LineCurve.prototype.getTangent = function (t) {
    return this.v2.clone().sub(this.v1).normalize()
},THREE.QuadraticBezierCurve = function (t, e, i) {
    this.v0 = t, this.v1 = e, this.v2 = i
},THREE.QuadraticBezierCurve.prototype = Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve,THREE.QuadraticBezierCurve.prototype.getPoint = function (t) {
    var e = THREE.ShapeUtils.b2;
    return new THREE.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x), e(t, this.v0.y, this.v1.y, this.v2.y))
},THREE.QuadraticBezierCurve.prototype.getTangent = function (t) {
    var e = THREE.CurveUtils.tangentQuadraticBezier;
    return new THREE.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x), e(t, this.v0.y, this.v1.y, this.v2.y)).normalize()
},THREE.CubicBezierCurve = function (t, e, i, n) {
    this.v0 = t, this.v1 = e, this.v2 = i, this.v3 = n
},THREE.CubicBezierCurve.prototype = Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve,THREE.CubicBezierCurve.prototype.getPoint = function (t) {
    var e = THREE.ShapeUtils.b3;
    return new THREE.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y))
},THREE.CubicBezierCurve.prototype.getTangent = function (t) {
    var e = THREE.CurveUtils.tangentCubicBezier;
    return new THREE.Vector2(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y)).normalize()
},THREE.SplineCurve = function (t) {
    this.points = void 0 == t ? [] : t
},THREE.SplineCurve.prototype = Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.constructor = THREE.SplineCurve,THREE.SplineCurve.prototype.getPoint = function (t) {
    var e = this.points;
    t *= e.length - 1;
    var i = Math.floor(t);
    t -= i;
    var n = e[0 === i ? i : i - 1], r = e[i], o = e[i > e.length - 2 ? e.length - 1 : i + 1],
        e = e[i > e.length - 3 ? e.length - 1 : i + 2], i = THREE.CurveUtils.interpolate;
    return new THREE.Vector2(i(n.x, r.x, o.x, e.x, t), i(n.y, r.y, o.y, e.y, t))
},THREE.EllipseCurve = function (t, e, i, n, r, o, a, s) {
    this.aX = t, this.aY = e, this.xRadius = i, this.yRadius = n, this.aStartAngle = r, this.aEndAngle = o, this.aClockwise = a, this.aRotation = s || 0
},THREE.EllipseCurve.prototype = Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve,THREE.EllipseCurve.prototype.getPoint = function (t) {
    for (var e = 2 * Math.PI, i = this.aEndAngle - this.aStartAngle, n = Math.abs(i) < Number.EPSILON; 0 > i;) i += e;
    for (; i > e;) i -= e;
    i < Number.EPSILON && (i = n ? 0 : e), !0 !== this.aClockwise || n || (i = i === e ? -e : i - e), e = this.aStartAngle + t * i, t = this.aX + this.xRadius * Math.cos(e);
    var r = this.aY + this.yRadius * Math.sin(e);
    return 0 !== this.aRotation && (e = Math.cos(this.aRotation), i = Math.sin(this.aRotation), n = t - this.aX, r -= this.aY, t = n * e - r * i + this.aX, r = n * i + r * e + this.aY), new THREE.Vector2(t, r)
},THREE.ArcCurve = function (t, e, i, n, r, o) {
    THREE.EllipseCurve.call(this, t, e, i, i, n, r, o);
},THREE.ArcCurve.prototype = Object.create(THREE.EllipseCurve.prototype),THREE.ArcCurve.prototype.constructor = THREE.ArcCurve,THREE.LineCurve3 = THREE.Curve.create(function (t, e) {
    this.v1 = t, this.v2 = e
}, function (t) {
    if (1 === t) return this.v2.clone();
    var e = new THREE.Vector3;
    return e.subVectors(this.v2, this.v1), e.multiplyScalar(t), e.add(this.v1), e
}),THREE.QuadraticBezierCurve3 = THREE.Curve.create(function (t, e, i) {
    this.v0 = t, this.v1 = e, this.v2 = i
}, function (t) {
    var e = THREE.ShapeUtils.b2;
    return new THREE.Vector3(e(t, this.v0.x, this.v1.x, this.v2.x), e(t, this.v0.y, this.v1.y, this.v2.y), e(t, this.v0.z, this.v1.z, this.v2.z))
}),THREE.CubicBezierCurve3 = THREE.Curve.create(function (t, e, i, n) {
    this.v0 = t, this.v1 = e, this.v2 = i, this.v3 = n
}, function (t) {
    var e = THREE.ShapeUtils.b3;
    return new THREE.Vector3(e(t, this.v0.x, this.v1.x, this.v2.x, this.v3.x), e(t, this.v0.y, this.v1.y, this.v2.y, this.v3.y), e(t, this.v0.z, this.v1.z, this.v2.z, this.v3.z))
}),THREE.SplineCurve3 = THREE.Curve.create(function (t) {
    console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"), this.points = void 0 == t ? [] : t
}, function (t) {
    var e = this.points;
    t *= e.length - 1;
    var i = Math.floor(t);
    t -= i;
    var n = e[0 == i ? i : i - 1], r = e[i], o = e[i > e.length - 2 ? e.length - 1 : i + 1], e = e[i > e.length - 3 ? e.length - 1 : i + 2],
        i = THREE.CurveUtils.interpolate;
    return new THREE.Vector3(i(n.x, r.x, o.x, e.x, t), i(n.y, r.y, o.y, e.y, t), i(n.z, r.z, o.z, e.z, t))
}),THREE.CatmullRomCurve3 = function () {
    function t() {
    }

    var e = new THREE.Vector3, i = new t, n = new t, r = new t;
    return t.prototype.init = function (t, e, i, n) {
        this.c0 = t, this.c1 = i, this.c2 = -3 * t + 3 * e - 2 * i - n, this.c3 = 2 * t - 2 * e + i + n
    }, t.prototype.initNonuniformCatmullRom = function (t, e, i, n, r, o, a) {
        t = ((e - t) / r - (i - t) / (r + o) + (i - e) / o) * o, n = ((i - e) / o - (n - e) / (o + a) + (n - i) / a) * o, this.init(e, i, t, n)
    }, t.prototype.initCatmullRom = function (t, e, i, n, r) {
        this.init(e, i, r * (i - t), r * (n - e))
    }, t.prototype.calc = function (t) {
        var e = t * t;
        return this.c0 + this.c1 * t + this.c2 * e + this.c3 * e * t
    }, THREE.Curve.create(function (t) {
        this.points = t || [], this.closed = !1
    }, function (t) {
        var o, a, s = this.points;
        a = s.length, 2 > a && console.log("duh, you need at least 2 points"), t *= a - (this.closed ? 0 : 1), o = Math.floor(t), t -= o, this.closed ? o += o > 0 ? 0 : (Math.floor(Math.abs(o) / s.length) + 1) * s.length : 0 === t && o === a - 1 && (o = a - 2, t = 1);
        var l, h, u;
        if (this.closed || o > 0 ? l = s[(o - 1) % a] : (e.subVectors(s[0], s[1]).add(s[0]), l = e), h = s[o % a], u = s[(o + 1) % a], this.closed || a > o + 2 ? s = s[(o + 2) % a] : (e.subVectors(s[a - 1], s[a - 2]).add(s[a - 1]), s = e), void 0 === this.type || "centripetal" === this.type || "chordal" === this.type) {
            var c = "chordal" === this.type ? .5 : .25;
            a = Math.pow(l.distanceToSquared(h), c), o = Math.pow(h.distanceToSquared(u), c), c = Math.pow(u.distanceToSquared(s), c), 1e-4 > o && (o = 1), 1e-4 > a && (a = o), 1e-4 > c && (c = o), i.initNonuniformCatmullRom(l.x, h.x, u.x, s.x, a, o, c), n.initNonuniformCatmullRom(l.y, h.y, u.y, s.y, a, o, c), r.initNonuniformCatmullRom(l.z, h.z, u.z, s.z, a, o, c)
        } else "catmullrom" === this.type && (a = void 0 !== this.tension ? this.tension : .5, i.initCatmullRom(l.x, h.x, u.x, s.x, a), n.initCatmullRom(l.y, h.y, u.y, s.y, a), r.initCatmullRom(l.z, h.z, u.z, s.z, a));
        return new THREE.Vector3(i.calc(t), n.calc(t), r.calc(t))
    })
}(),THREE.ClosedSplineCurve3 = function (t) {
    console.warn("THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3."), THREE.CatmullRomCurve3.call(this, t), this.type = "catmullrom", this.closed = !0
},THREE.ClosedSplineCurve3.prototype = Object.create(THREE.CatmullRomCurve3.prototype),THREE.BoxGeometry = function (t, e, i, n, r, o) {
    THREE.Geometry.call(this), this.type = "BoxGeometry", this.parameters = {
        width: t,
        height: e,
        depth: i,
        widthSegments: n,
        heightSegments: r,
        depthSegments: o
    }, this.fromBufferGeometry(new THREE.BoxBufferGeometry(t, e, i, n, r, o)), this.mergeVertices()
},THREE.BoxGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry,THREE.CubeGeometry = THREE.BoxGeometry,THREE.BoxBufferGeometry = function (t, e, i, n, r, o) {
    function a(t, e, i, n, r, o, a, l, h, y, T) {
        var _ = o / h, x = a / y, b = o / 2, R = a / 2, w = l / 2;
        a = h + 1;
        for (var H = y + 1, M = o = 0, S = new THREE.Vector3, C = 0; H > C; C++) for (var A = C * x - R, P = 0; a > P; P++) S[t] = (P * _ - b) * n, S[e] = A * r, S[i] = w, c[f] = S.x, c[f + 1] = S.y, c[f + 2] = S.z, S[t] = 0, S[e] = 0, S[i] = l > 0 ? 1 : -1, p[f] = S.x, p[f + 1] = S.y, p[f + 2] = S.z, d[m] = P / h, d[m + 1] = 1 - C / y, f += 3, m += 2, o += 1;
        for (C = 0; y > C; C++) for (P = 0; h > P; P++) t = E + P + a * (C + 1), e = E + (P + 1) + a * (C + 1), i = E + (P + 1) + a * C, u[g] = E + P + a * C, u[g + 1] = t, u[g + 2] = i, u[g + 3] = t, u[g + 4] = e, u[g + 5] = i, g += 6, M += 6;
        s.addGroup(v, M, T), v += M, E += o
    }

    THREE.BufferGeometry.call(this), this.type = "BoxBufferGeometry", this.parameters = {
        width: t,
        height: e,
        depth: i,
        widthSegments: n,
        heightSegments: r,
        depthSegments: o
    };
    var s = this;
    n = Math.floor(n) || 1, r = Math.floor(r) || 1, o = Math.floor(o) || 1;
    var l = function (t, e, i) {
            return t = 0 + (t + 1) * (e + 1) * 2 + (t + 1) * (i + 1) * 2, t += (i + 1) * (e + 1) * 2
        }(n, r, o), h = function (t, e, i) {
            return t = 0 + t * e * 2 + t * i * 2, t += i * e * 2, 6 * t
        }(n, r, o), u = new (h > 65535 ? Uint32Array : Uint16Array)(h), c = new Float32Array(3 * l), p = new Float32Array(3 * l),
        d = new Float32Array(2 * l), f = 0, m = 0, g = 0, E = 0, v = 0;
    a("z", "y", "x", -1, -1, i, e, t, o, r, 0), a("z", "y", "x", 1, -1, i, e, -t, o, r, 1), a("x", "z", "y", 1, 1, t, i, e, n, o, 2), a("x", "z", "y", 1, -1, t, i, -e, n, o, 3), a("x", "y", "z", 1, -1, t, e, i, n, r, 4), a("x", "y", "z", -1, -1, t, e, -i, n, r, 5), this.setIndex(new THREE.BufferAttribute(u, 1)), this.addAttribute("position", new THREE.BufferAttribute(c, 3)), this.addAttribute("normal", new THREE.BufferAttribute(p, 3)), this.addAttribute("uv", new THREE.BufferAttribute(d, 2))
},THREE.BoxBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry,THREE.CircleGeometry = function (t, e, i, n) {
    THREE.Geometry.call(this), this.type = "CircleGeometry", this.parameters = {
        radius: t,
        segments: e,
        thetaStart: i,
        thetaLength: n
    }, this.fromBufferGeometry(new THREE.CircleBufferGeometry(t, e, i, n))
},THREE.CircleGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry,THREE.CircleBufferGeometry = function (t, e, i, n) {
    THREE.BufferGeometry.call(this), this.type = "CircleBufferGeometry", this.parameters = {
        radius: t,
        segments: e,
        thetaStart: i,
        thetaLength: n
    }, t = t || 50, e = void 0 !== e ? Math.max(3, e) : 8, i = void 0 !== i ? i : 0, n = void 0 !== n ? n : 2 * Math.PI;
    var r = e + 2, o = new Float32Array(3 * r), a = new Float32Array(3 * r), r = new Float32Array(2 * r);
    a[2] = 1, r[0] = .5, r[1] = .5;
    for (var s = 0, l = 3, h = 2; e >= s; s++, l += 3, h += 2) {
        var u = i + s / e * n;
        o[l] = t * Math.cos(u), o[l + 1] = t * Math.sin(u), a[l + 2] = 1, r[h] = (o[l] / t + 1) / 2, r[h + 1] = (o[l + 1] / t + 1) / 2
    }
    for (i = [], l = 1; e >= l; l++) i.push(l, l + 1, 0);
    this.setIndex(new THREE.BufferAttribute(new Uint16Array(i), 1)), this.addAttribute("position", new THREE.BufferAttribute(o, 3)), this.addAttribute("normal", new THREE.BufferAttribute(a, 3)), this.addAttribute("uv", new THREE.BufferAttribute(r, 2)), this.boundingSphere = new THREE.Sphere(new THREE.Vector3, t)
},THREE.CircleBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry,THREE.CylinderBufferGeometry = function (t, e, i, n, r, o, a, s) {
    function l(i) {
        var r, o, l, u = new THREE.Vector2, c = new THREE.Vector3, p = 0, y = !0 === i ? t : e, x = !0 === i ? 1 : -1;
        for (o = E, r = 1; n >= r; r++) f.setXYZ(E, 0, T * x, 0), m.setXYZ(E, 0, x, 0), u.x = .5, u.y = .5, g.setXY(E, u.x, u.y), E++;
        for (l = E, r = 0; n >= r; r++) {
            var b = r / n * s + a, R = Math.cos(b), b = Math.sin(b);
            c.x = y * b, c.y = T * x, c.z = y * R, f.setXYZ(E, c.x, c.y, c.z), m.setXYZ(E, 0, x, 0), u.x = .5 * R + .5, u.y = .5 * b * x + .5, g.setXY(E, u.x, u.y), E++
        }
        for (r = 0; n > r; r++) u = o + r, c = l + r, !0 === i ? (d.setX(v, c), v++, d.setX(v, c + 1)) : (d.setX(v, c + 1), v++, d.setX(v, c)), v++, d.setX(v, u), v++, p += 3;
        h.addGroup(_, p, !0 === i ? 1 : 2), _ += p
    }

    THREE.BufferGeometry.call(this), this.type = "CylinderBufferGeometry", this.parameters = {
        radiusTop: t,
        radiusBottom: e,
        height: i,
        radialSegments: n,
        heightSegments: r,
        openEnded: o,
        thetaStart: a,
        thetaLength: s
    };
    var h = this;
    t = void 0 !== t ? t : 20, e = void 0 !== e ? e : 20, i = void 0 !== i ? i : 100, n = Math.floor(n) || 8, r = Math.floor(r) || 1, o = void 0 !== o ? o : !1, a = void 0 !== a ? a : 0, s = void 0 !== s ? s : 2 * Math.PI;
    var u = 0;
    !1 === o && (t > 0 && u++, e > 0 && u++);
    var c = function () {
            var t = (n + 1) * (r + 1);
            return !1 === o && (t += (n + 1) * u + n * u), t
        }(), p = function () {
            var t = n * r * 6;
            return !1 === o && (t += n * u * 3), t
        }(), d = new THREE.BufferAttribute(new (p > 65535 ? Uint32Array : Uint16Array)(p), 1),
        f = new THREE.BufferAttribute(new Float32Array(3 * c), 3), m = new THREE.BufferAttribute(new Float32Array(3 * c), 3),
        g = new THREE.BufferAttribute(new Float32Array(2 * c), 2), E = 0, v = 0, y = [], T = i / 2, _ = 0;
    !function () {
        var o, l, u = new THREE.Vector3, c = new THREE.Vector3, p = 0, x = (e - t) / i;
        for (l = 0; r >= l; l++) {
            var b = [], R = l / r, w = R * (e - t) + t;
            for (o = 0; n >= o; o++) {
                var H = o / n;
                c.x = w * Math.sin(H * s + a), c.y = -R * i + T, c.z = w * Math.cos(H * s + a), f.setXYZ(E, c.x, c.y, c.z), u.copy(c), (0 === t && 0 === l || 0 === e && l === r) && (u.x = Math.sin(H * s + a), u.z = Math.cos(H * s + a)), u.setY(Math.sqrt(u.x * u.x + u.z * u.z) * x).normalize(), m.setXYZ(E, u.x, u.y, u.z), g.setXY(E, H, 1 - R), b.push(E), E++
            }
            y.push(b)
        }
        for (o = 0; n > o; o++) for (l = 0; r > l; l++) u = y[l + 1][o], c = y[l + 1][o + 1], x = y[l][o + 1], d.setX(v, y[l][o]), v++, d.setX(v, u), v++, d.setX(v, x), v++, d.setX(v, u), v++, d.setX(v, c), v++, d.setX(v, x), v++, p += 6;
        h.addGroup(_, p, 0), _ += p
    }(), !1 === o && (t > 0 && l(!0), e > 0 && l(!1)), this.setIndex(d), this.addAttribute("position", f), this.addAttribute("normal", m), this.addAttribute("uv", g)
},THREE.CylinderBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry,THREE.CylinderGeometry = function (t, e, i, n, r, o, a, s) {
    THREE.Geometry.call(this), this.type = "CylinderGeometry", this.parameters = {
        radiusTop: t,
        radiusBottom: e,
        height: i,
        radialSegments: n,
        heightSegments: r,
        openEnded: o,
        thetaStart: a,
        thetaLength: s
    }, this.fromBufferGeometry(new THREE.CylinderBufferGeometry(t, e, i, n, r, o, a, s)), this.mergeVertices()
},THREE.CylinderGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry,THREE.ConeBufferGeometry = function (t, e, i, n, r, o, a) {
    THREE.CylinderBufferGeometry.call(this, 0, t, e, i, n, r, o, a), this.type = "ConeBufferGeometry", this.parameters = {
        radius: t,
        height: e,
        radialSegments: i,
        heightSegments: n,
        thetaStart: o,
        thetaLength: a
    }
},THREE.ConeBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.ConeBufferGeometry.prototype.constructor = THREE.ConeBufferGeometry,THREE.ConeGeometry = function (t, e, i, n, r, o, a) {
    THREE.CylinderGeometry.call(this, 0, t, e, i, n, r, o, a), this.type = "ConeGeometry", this.parameters = {
        radius: t,
        height: e,
        radialSegments: i,
        heightSegments: n,
        openEnded: r,
        thetaStart: o,
        thetaLength: a
    }
},THREE.ConeGeometry.prototype = Object.create(THREE.CylinderGeometry.prototype),THREE.ConeGeometry.prototype.constructor = THREE.ConeGeometry,THREE.EdgesGeometry = function (t, e) {
    function i(t, e) {
        return t - e
    }

    THREE.BufferGeometry.call(this);
    var n, r = Math.cos(THREE.Math.DEG2RAD * (void 0 !== e ? e : 1)), o = [0, 0], a = {}, s = ["a", "b", "c"];
    t instanceof THREE.BufferGeometry ? (n = new THREE.Geometry, n.fromBufferGeometry(t)) : n = t.clone(), n.mergeVertices(), n.computeFaceNormals();
    var l = n.vertices;
    n = n.faces;
    for (var h = 0, u = n.length; u > h; h++) for (var c = n[h], p = 0; 3 > p; p++) {
        o[0] = c[s[p]], o[1] = c[s[(p + 1) % 3]], o.sort(i);
        var d = o.toString();
        void 0 === a[d] ? a[d] = {vert1: o[0], vert2: o[1], face1: h, face2: void 0} : a[d].face2 = h
    }
    o = [];
    for (d in a) s = a[d], (void 0 === s.face2 || n[s.face1].normal.dot(n[s.face2].normal) <= r) && (h = l[s.vert1], o.push(h.x), o.push(h.y), o.push(h.z), h = l[s.vert2], o.push(h.x), o.push(h.y), o.push(h.z));
    this.addAttribute("position", new THREE.BufferAttribute(new Float32Array(o), 3))
},THREE.EdgesGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry,THREE.ExtrudeGeometry = function (t, e) {
    "undefined" != typeof t && (THREE.Geometry.call(this), this.type = "ExtrudeGeometry", t = Array.isArray(t) ? t : [t], this.addShapeList(t, e), this.computeFaceNormals())
},THREE.ExtrudeGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry,THREE.ExtrudeGeometry.prototype.addShapeList = function (t, e) {
    for (var i = t.length, n = 0; i > n; n++) this.addShape(t[n], e)
},THREE.ExtrudeGeometry.prototype.addShape = function (t, e) {
    function i(t, e, i) {
        return e || console.error("THREE.ExtrudeGeometry: vec does not exist"), e.clone().multiplyScalar(i).add(t)
    }

    function n(t, e, i) {
        var n = 1, n = t.x - e.x, r = t.y - e.y, o = i.x - t.x, a = i.y - t.y, s = n * n + r * r;
        if (Math.abs(n * a - r * o) > Number.EPSILON) {
            var l = Math.sqrt(s), h = Math.sqrt(o * o + a * a), s = e.x - r / l;
            if (e = e.y + n / l, o = ((i.x - a / h - s) * a - (i.y + o / h - e) * o) / (n * a - r * o), i = s + n * o - t.x, t = e + r * o - t.y, n = i * i + t * t, 2 >= n) return new THREE.Vector2(i, t);
            n = Math.sqrt(n / 2)
        } else t = !1, n > Number.EPSILON ? o > Number.EPSILON && (t = !0) : n < -Number.EPSILON ? o < -Number.EPSILON && (t = !0) : Math.sign(r) === Math.sign(a) && (t = !0), t ? (i = -r, t = n, n = Math.sqrt(s)) : (i = n, t = r, n = Math.sqrt(s / 2));
        return new THREE.Vector2(i / n, t / n)
    }

    function r(t, e) {
        var i, n;
        for (B = t.length; 0 <= --B;) {
            i = B, n = B - 1, 0 > n && (n = t.length - 1);
            for (var r = 0, o = v + 2 * m, r = 0; o > r; r++) {
                var a = N * r, s = N * (r + 1), l = e + i + a, a = e + n + a, h = e + n + s, s = e + i + s, l = l + H, a = a + H, h = h + H,
                    s = s + H;
                w.faces.push(new THREE.Face3(l, a, s, null, null, 1)), w.faces.push(new THREE.Face3(a, h, s, null, null, 1)), l = _.generateSideWallUV(w, l, a, h, s), w.faceVertexUvs[0].push([l[0], l[1], l[3]]), w.faceVertexUvs[0].push([l[1], l[2], l[3]])
            }
        }
    }

    function o(t, e, i) {
        w.vertices.push(new THREE.Vector3(t, e, i))
    }

    function a(t, e, i) {
        t += H, e += H, i += H, w.faces.push(new THREE.Face3(t, e, i, null, null, 0)), t = _.generateTopUV(w, t, e, i), w.faceVertexUvs[0].push(t)
    }

    var s, l, h, u, c, p = void 0 !== e.amount ? e.amount : 100, d = void 0 !== e.bevelThickness ? e.bevelThickness : 6,
        f = void 0 !== e.bevelSize ? e.bevelSize : d - 2, m = void 0 !== e.bevelSegments ? e.bevelSegments : 3,
        g = void 0 !== e.bevelEnabled ? e.bevelEnabled : !0, E = void 0 !== e.curveSegments ? e.curveSegments : 12,
        v = void 0 !== e.steps ? e.steps : 1, y = e.extrudePath, T = !1,
        _ = void 0 !== e.UVGenerator ? e.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;
    y && (s = y.getSpacedPoints(v), T = !0, g = !1, l = void 0 !== e.frames ? e.frames : new THREE.TubeGeometry.FrenetFrames(y, v, !1), h = new THREE.Vector3, u = new THREE.Vector3, c = new THREE.Vector3), g || (f = d = m = 0);
    var x, b, R, w = this, H = this.vertices.length, y = t.extractPoints(E), E = y.shape, M = y.holes;
    if (y = !THREE.ShapeUtils.isClockWise(E)) {
        for (E = E.reverse(), b = 0, R = M.length; R > b; b++) x = M[b], THREE.ShapeUtils.isClockWise(x) && (M[b] = x.reverse());
        y = !1
    }
    var S = THREE.ShapeUtils.triangulateShape(E, M), C = E;
    for (b = 0, R = M.length; R > b; b++) x = M[b], E = E.concat(x);
    var A, P, L, O, D, I, N = E.length, k = S.length, y = [], B = 0;
    for (L = C.length, A = L - 1, P = B + 1; L > B; B++, A++, P++) A === L && (A = 0), P === L && (P = 0), y[B] = n(C[B], C[A], C[P]);
    var F, U = [], V = y.concat();
    for (b = 0, R = M.length; R > b; b++) {
        for (x = M[b], F = [], B = 0, L = x.length, A = L - 1, P = B + 1; L > B; B++, A++, P++) A === L && (A = 0), P === L && (P = 0), F[B] = n(x[B], x[A], x[P]);
        U.push(F), V = V.concat(F)
    }
    for (A = 0; m > A; A++) {
        for (L = A / m, O = d * (1 - L), P = f * Math.sin(L * Math.PI / 2), B = 0, L = C.length; L > B; B++) D = i(C[B], y[B], P), o(D.x, D.y, -O);
        for (b = 0, R = M.length; R > b; b++) for (x = M[b], F = U[b], B = 0, L = x.length; L > B; B++) D = i(x[B], F[B], P), o(D.x, D.y, -O)
    }
    for (P = f, B = 0; N > B; B++) D = g ? i(E[B], V[B], P) : E[B], T ? (u.copy(l.normals[0]).multiplyScalar(D.x), h.copy(l.binormals[0]).multiplyScalar(D.y), c.copy(s[0]).add(u).add(h), o(c.x, c.y, c.z)) : o(D.x, D.y, 0);
    for (L = 1; v >= L; L++) for (B = 0; N > B; B++) D = g ? i(E[B], V[B], P) : E[B], T ? (u.copy(l.normals[L]).multiplyScalar(D.x), h.copy(l.binormals[L]).multiplyScalar(D.y), c.copy(s[L]).add(u).add(h), o(c.x, c.y, c.z)) : o(D.x, D.y, p / v * L);
    for (A = m - 1; A >= 0; A--) {
        for (L = A / m, O = d * (1 - L), P = f * Math.sin(L * Math.PI / 2), B = 0, L = C.length; L > B; B++) D = i(C[B], y[B], P), o(D.x, D.y, p + O);
        for (b = 0, R = M.length; R > b; b++) for (x = M[b], F = U[b], B = 0, L = x.length; L > B; B++) D = i(x[B], F[B], P), T ? o(D.x, D.y + s[v - 1].y, s[v - 1].x + O) : o(D.x, D.y, p + O)
    }
    !function () {
        if (g) {
            var t;
            for (t = 0 * N, B = 0; k > B; B++) I = S[B], a(I[2] + t, I[1] + t, I[0] + t);
            for (t = v + 2 * m, t *= N, B = 0; k > B; B++) I = S[B], a(I[0] + t, I[1] + t, I[2] + t)
        } else {
            for (B = 0; k > B; B++) I = S[B], a(I[2], I[1], I[0]);
            for (B = 0; k > B; B++) I = S[B], a(I[0] + N * v, I[1] + N * v, I[2] + N * v)
        }
    }(), function () {
        var t = 0;
        for (r(C, t), t += C.length, b = 0, R = M.length; R > b; b++) x = M[b], r(x, t), t += x.length
    }()
},THREE.ExtrudeGeometry.WorldUVGenerator = {
    generateTopUV: function (t, e, i, n) {
        return t = t.vertices, e = t[e], i = t[i], n = t[n], [new THREE.Vector2(e.x, e.y), new THREE.Vector2(i.x, i.y), new THREE.Vector2(n.x, n.y)]
    }, generateSideWallUV: function (t, e, i, n, r) {
        return t = t.vertices, e = t[e], i = t[i], n = t[n], r = t[r], .01 > Math.abs(e.y - i.y) ? [new THREE.Vector2(e.x, 1 - e.z), new THREE.Vector2(i.x, 1 - i.z), new THREE.Vector2(n.x, 1 - n.z), new THREE.Vector2(r.x, 1 - r.z)] : [new THREE.Vector2(e.y, 1 - e.z), new THREE.Vector2(i.y, 1 - i.z), new THREE.Vector2(n.y, 1 - n.z), new THREE.Vector2(r.y, 1 - r.z)]
    }
},THREE.ShapeGeometry = function (t, e) {
    THREE.Geometry.call(this), this.type = "ShapeGeometry", !1 === Array.isArray(t) && (t = [t]), this.addShapeList(t, e), this.computeFaceNormals()
},THREE.ShapeGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry,THREE.ShapeGeometry.prototype.addShapeList = function (t, e) {
    for (var i = 0, n = t.length; n > i; i++) this.addShape(t[i], e);
    return this
},THREE.ShapeGeometry.prototype.addShape = function (t, e) {
    void 0 === e && (e = {});
    var i, n, r, o = e.material, a = void 0 === e.UVGenerator ? THREE.ExtrudeGeometry.WorldUVGenerator : e.UVGenerator,
        s = this.vertices.length;
    i = t.extractPoints(void 0 !== e.curveSegments ? e.curveSegments : 12);
    var l = i.shape, h = i.holes;
    if (!THREE.ShapeUtils.isClockWise(l)) for (l = l.reverse(), i = 0, n = h.length; n > i; i++) r = h[i], THREE.ShapeUtils.isClockWise(r) && (h[i] = r.reverse());
    var u = THREE.ShapeUtils.triangulateShape(l, h);
    for (i = 0, n = h.length; n > i; i++) r = h[i], l = l.concat(r);
    for (h = l.length, n = u.length, i = 0; h > i; i++) r = l[i], this.vertices.push(new THREE.Vector3(r.x, r.y, 0));
    for (i = 0; n > i; i++) h = u[i], l = h[0] + s, r = h[1] + s, h = h[2] + s, this.faces.push(new THREE.Face3(l, r, h, null, null, o)), this.faceVertexUvs[0].push(a.generateTopUV(this, l, r, h))
},THREE.LatheBufferGeometry = function (t, e, i, n) {
    THREE.BufferGeometry.call(this), this.type = "LatheBufferGeometry", this.parameters = {
        points: t,
        segments: e,
        phiStart: i,
        phiLength: n
    }, e = Math.floor(e) || 12, i = i || 0, n = n || 2 * Math.PI, n = THREE.Math.clamp(n, 0, 2 * Math.PI);
    for (var r = (e + 1) * t.length, o = e * t.length * 6, a = new THREE.BufferAttribute(new (o > 65535 ? Uint32Array : Uint16Array)(o), 1), s = new THREE.BufferAttribute(new Float32Array(3 * r), 3), l = new THREE.BufferAttribute(new Float32Array(2 * r), 2), h = 0, u = 0, c = 1 / e, p = new THREE.Vector3, d = new THREE.Vector2, r = 0; e >= r; r++) for (var o = i + r * c * n, f = Math.sin(o), m = Math.cos(o), o = 0; o <= t.length - 1; o++) p.x = t[o].x * f, p.y = t[o].y, p.z = t[o].x * m, s.setXYZ(h, p.x, p.y, p.z), d.x = r / e, d.y = o / (t.length - 1), l.setXY(h, d.x, d.y), h++;
    for (r = 0; e > r; r++) for (o = 0; o < t.length - 1; o++) i = o + r * t.length, h = i + t.length, c = i + t.length + 1, p = i + 1, a.setX(u, i), u++, a.setX(u, h), u++, a.setX(u, p), u++, a.setX(u, h), u++, a.setX(u, c), u++, a.setX(u, p), u++;
    if (this.setIndex(a), this.addAttribute("position", s), this.addAttribute("uv", l), this.computeVertexNormals(), n === 2 * Math.PI) for (n = this.attributes.normal.array, a = new THREE.Vector3, s = new THREE.Vector3, l = new THREE.Vector3, i = e * t.length * 3, o = r = 0; r < t.length; r++, o += 3) a.x = n[o + 0], a.y = n[o + 1], a.z = n[o + 2], s.x = n[i + o + 0], s.y = n[i + o + 1], s.z = n[i + o + 2], l.addVectors(a, s).normalize(), n[o + 0] = n[i + o + 0] = l.x, n[o + 1] = n[i + o + 1] = l.y, n[o + 2] = n[i + o + 2] = l.z
},THREE.LatheBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry,THREE.LatheGeometry = function (t, e, i, n) {
    THREE.Geometry.call(this), this.type = "LatheGeometry", this.parameters = {
        points: t,
        segments: e,
        phiStart: i,
        phiLength: n
    }, this.fromBufferGeometry(new THREE.LatheBufferGeometry(t, e, i, n)), this.mergeVertices()
},THREE.LatheGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry,THREE.PlaneGeometry = function (t, e, i, n) {
    THREE.Geometry.call(this), this.type = "PlaneGeometry", this.parameters = {
        width: t,
        height: e,
        widthSegments: i,
        heightSegments: n
    }, this.fromBufferGeometry(new THREE.PlaneBufferGeometry(t, e, i, n))
},THREE.PlaneGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry,THREE.PlaneBufferGeometry = function (t, e, i, n) {
    THREE.BufferGeometry.call(this), this.type = "PlaneBufferGeometry", this.parameters = {
        width: t,
        height: e,
        widthSegments: i,
        heightSegments: n
    };
    var r = t / 2, o = e / 2;
    i = Math.floor(i) || 1, n = Math.floor(n) || 1;
    var a = i + 1, s = n + 1, l = t / i, h = e / n;
    e = new Float32Array(a * s * 3), t = new Float32Array(a * s * 3);
    for (var u = new Float32Array(a * s * 2), c = 0, p = 0, d = 0; s > d; d++) for (var f = d * h - o, m = 0; a > m; m++) e[c] = m * l - r, e[c + 1] = -f, t[c + 2] = 1, u[p] = m / i, u[p + 1] = 1 - d / n, c += 3, p += 2;
    for (c = 0, r = new (65535 < e.length / 3 ? Uint32Array : Uint16Array)(i * n * 6), d = 0; n > d; d++) for (m = 0; i > m; m++) o = m + a * (d + 1), s = m + 1 + a * (d + 1), l = m + 1 + a * d, r[c] = m + a * d, r[c + 1] = o, r[c + 2] = l, r[c + 3] = o, r[c + 4] = s, r[c + 5] = l, c += 6;
    this.setIndex(new THREE.BufferAttribute(r, 1)), this.addAttribute("position", new THREE.BufferAttribute(e, 3)), this.addAttribute("normal", new THREE.BufferAttribute(t, 3)), this.addAttribute("uv", new THREE.BufferAttribute(u, 2))
},THREE.PlaneBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry,THREE.RingBufferGeometry = function (t, e, i, n, r, o) {
    THREE.BufferGeometry.call(this), this.type = "RingBufferGeometry", this.parameters = {
        innerRadius: t,
        outerRadius: e,
        thetaSegments: i,
        phiSegments: n,
        thetaStart: r,
        thetaLength: o
    }, t = t || 20, e = e || 50, r = void 0 !== r ? r : 0, o = void 0 !== o ? o : 2 * Math.PI, i = void 0 !== i ? Math.max(3, i) : 8, n = void 0 !== n ? Math.max(1, n) : 1;
    var a, s, l = (i + 1) * (n + 1), h = i * n * 6, h = new THREE.BufferAttribute(new (h > 65535 ? Uint32Array : Uint16Array)(h), 1),
        u = new THREE.BufferAttribute(new Float32Array(3 * l), 3), c = new THREE.BufferAttribute(new Float32Array(3 * l), 3),
        l = new THREE.BufferAttribute(new Float32Array(2 * l), 2), p = 0, d = 0, f = t, m = (e - t) / n, g = new THREE.Vector3,
        E = new THREE.Vector2;
    for (t = 0; n >= t; t++) {
        for (s = 0; i >= s; s++) a = r + s / i * o, g.x = f * Math.cos(a), g.y = f * Math.sin(a), u.setXYZ(p, g.x, g.y, g.z), c.setXYZ(p, 0, 0, 1), E.x = (g.x / e + 1) / 2, E.y = (g.y / e + 1) / 2, l.setXY(p, E.x, E.y), p++;
        f += m
    }
    for (t = 0; n > t; t++) for (e = t * (i + 1), s = 0; i > s; s++) r = a = s + e, o = a + i + 1, p = a + i + 2, a += 1, h.setX(d, r), d++, h.setX(d, o), d++, h.setX(d, p), d++, h.setX(d, r), d++, h.setX(d, p), d++, h.setX(d, a), d++;
    this.setIndex(h), this.addAttribute("position", u), this.addAttribute("normal", c), this.addAttribute("uv", l)
},THREE.RingBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry,THREE.RingGeometry = function (t, e, i, n, r, o) {
    THREE.Geometry.call(this), this.type = "RingGeometry", this.parameters = {
        innerRadius: t,
        outerRadius: e,
        thetaSegments: i,
        phiSegments: n,
        thetaStart: r,
        thetaLength: o
    }, this.fromBufferGeometry(new THREE.RingBufferGeometry(t, e, i, n, r, o))
},THREE.RingGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.RingGeometry.prototype.constructor = THREE.RingGeometry,THREE.SphereGeometry = function (t, e, i, n, r, o, a) {
    THREE.Geometry.call(this), this.type = "SphereGeometry", this.parameters = {
        radius: t,
        widthSegments: e,
        heightSegments: i,
        phiStart: n,
        phiLength: r,
        thetaStart: o,
        thetaLength: a
    }, this.fromBufferGeometry(new THREE.SphereBufferGeometry(t, e, i, n, r, o, a))
},THREE.SphereGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry,THREE.SphereBufferGeometry = function (t, e, i, n, r, o, a) {
    THREE.BufferGeometry.call(this), this.type = "SphereBufferGeometry", this.parameters = {
        radius: t,
        widthSegments: e,
        heightSegments: i,
        phiStart: n,
        phiLength: r,
        thetaStart: o,
        thetaLength: a
    }, t = t || 50, e = Math.max(3, Math.floor(e) || 8), i = Math.max(2, Math.floor(i) || 6), n = void 0 !== n ? n : 0, r = void 0 !== r ? r : 2 * Math.PI, o = void 0 !== o ? o : 0, a = void 0 !== a ? a : Math.PI;
    for (var s = o + a, l = (e + 1) * (i + 1), h = new THREE.BufferAttribute(new Float32Array(3 * l), 3), u = new THREE.BufferAttribute(new Float32Array(3 * l), 3), l = new THREE.BufferAttribute(new Float32Array(2 * l), 2), c = 0, p = [], d = new THREE.Vector3, f = 0; i >= f; f++) {
        for (var m = [], g = f / i, E = 0; e >= E; E++) {
            var v = E / e, y = -t * Math.cos(n + v * r) * Math.sin(o + g * a), T = t * Math.cos(o + g * a),
                _ = t * Math.sin(n + v * r) * Math.sin(o + g * a);
            d.set(y, T, _).normalize(), h.setXYZ(c, y, T, _), u.setXYZ(c, d.x, d.y, d.z), l.setXY(c, v, 1 - g), m.push(c), c++
        }
        p.push(m)
    }
    for (n = [], f = 0; i > f; f++) for (E = 0; e > E; E++) r = p[f][E + 1], a = p[f][E], c = p[f + 1][E], d = p[f + 1][E + 1], (0 !== f || o > 0) && n.push(r, a, d), (f !== i - 1 || s < Math.PI) && n.push(a, c, d);
    this.setIndex(new (65535 < h.count ? THREE.Uint32Attribute : THREE.Uint16Attribute)(n, 1)), this.addAttribute("position", h), this.addAttribute("normal", u), this.addAttribute("uv", l), this.boundingSphere = new THREE.Sphere(new THREE.Vector3, t)
},THREE.SphereBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry,THREE.TextGeometry = function (t, e) {
    e = e || {};
    var i = e.font;
    return !1 == i instanceof THREE.Font ? (console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new THREE.Geometry) : (i = i.generateShapes(t, e.size, e.curveSegments), e.amount = void 0 !== e.height ? e.height : 50, void 0 === e.bevelThickness && (e.bevelThickness = 10), void 0 === e.bevelSize && (e.bevelSize = 8), void 0 === e.bevelEnabled && (e.bevelEnabled = !1), THREE.ExtrudeGeometry.call(this, i, e), void(this.type = "TextGeometry"))
},THREE.TextGeometry.prototype = Object.create(THREE.ExtrudeGeometry.prototype),THREE.TextGeometry.prototype.constructor = THREE.TextGeometry,THREE.TorusBufferGeometry = function (t, e, i, n, r) {
    THREE.BufferGeometry.call(this), this.type = "TorusBufferGeometry", this.parameters = {
        radius: t,
        tube: e,
        radialSegments: i,
        tubularSegments: n,
        arc: r
    }, t = t || 100, e = e || 40, i = Math.floor(i) || 8, n = Math.floor(n) || 6, r = r || 2 * Math.PI;
    var o, a, s = (i + 1) * (n + 1), l = i * n * 6, l = new (l > 65535 ? Uint32Array : Uint16Array)(l), h = new Float32Array(3 * s),
        u = new Float32Array(3 * s), s = new Float32Array(2 * s), c = 0, p = 0, d = 0, f = new THREE.Vector3, m = new THREE.Vector3,
        g = new THREE.Vector3;
    for (o = 0; i >= o; o++) for (a = 0; n >= a; a++) {
        var E = a / n * r, v = o / i * Math.PI * 2;
        m.x = (t + e * Math.cos(v)) * Math.cos(E), m.y = (t + e * Math.cos(v)) * Math.sin(E), m.z = e * Math.sin(v), h[c] = m.x, h[c + 1] = m.y, h[c + 2] = m.z, f.x = t * Math.cos(E), f.y = t * Math.sin(E), g.subVectors(m, f).normalize(), u[c] = g.x, u[c + 1] = g.y, u[c + 2] = g.z, s[p] = a / n, s[p + 1] = o / i, c += 3, p += 2
    }
    for (o = 1; i >= o; o++) for (a = 1; n >= a; a++) t = (n + 1) * (o - 1) + a - 1, e = (n + 1) * (o - 1) + a, r = (n + 1) * o + a, l[d] = (n + 1) * o + a - 1, l[d + 1] = t, l[d + 2] = r, l[d + 3] = t, l[d + 4] = e, l[d + 5] = r, d += 6;
    this.setIndex(new THREE.BufferAttribute(l, 1)), this.addAttribute("position", new THREE.BufferAttribute(h, 3)), this.addAttribute("normal", new THREE.BufferAttribute(u, 3)), this.addAttribute("uv", new THREE.BufferAttribute(s, 2))
},THREE.TorusBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry,THREE.TorusGeometry = function (t, e, i, n, r) {
    THREE.Geometry.call(this), this.type = "TorusGeometry", this.parameters = {
        radius: t,
        tube: e,
        radialSegments: i,
        tubularSegments: n,
        arc: r
    }, this.fromBufferGeometry(new THREE.TorusBufferGeometry(t, e, i, n, r))
},THREE.TorusGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry,THREE.TorusKnotBufferGeometry = function (t, e, i, n, r, o) {
    function a(t, e, i, n, r) {
        var o = Math.cos(t), a = Math.sin(t);
        t *= i / e, e = Math.cos(t), r.x = n * (2 + e) * .5 * o, r.y = n * (2 + e) * a * .5, r.z = n * Math.sin(t) * .5
    }

    THREE.BufferGeometry.call(this), this.type = "TorusKnotBufferGeometry", this.parameters = {
        radius: t,
        tube: e,
        tubularSegments: i,
        radialSegments: n,
        p: r,
        q: o
    }, t = t || 100, e = e || 40, i = Math.floor(i) || 64, n = Math.floor(n) || 8, r = r || 2, o = o || 3;
    var s, l, h = (n + 1) * (i + 1), u = n * i * 6, u = new THREE.BufferAttribute(new (u > 65535 ? Uint32Array : Uint16Array)(u), 1),
        c = new THREE.BufferAttribute(new Float32Array(3 * h), 3), p = new THREE.BufferAttribute(new Float32Array(3 * h), 3),
        h = new THREE.BufferAttribute(new Float32Array(2 * h), 2), d = 0, f = 0, m = new THREE.Vector3, g = new THREE.Vector3,
        E = new THREE.Vector2, v = new THREE.Vector3, y = new THREE.Vector3, T = new THREE.Vector3, _ = new THREE.Vector3,
        x = new THREE.Vector3;
    for (s = 0; i >= s; ++s) for (l = s / i * r * Math.PI * 2, a(l, r, o, t, v), a(l + .01, r, o, t, y), _.subVectors(y, v), x.addVectors(y, v), T.crossVectors(_, x), x.crossVectors(T, _), T.normalize(), x.normalize(), l = 0; n >= l; ++l) {
        var b = l / n * Math.PI * 2, R = -e * Math.cos(b), b = e * Math.sin(b);
        m.x = v.x + (R * x.x + b * T.x), m.y = v.y + (R * x.y + b * T.y), m.z = v.z + (R * x.z + b * T.z), c.setXYZ(d, m.x, m.y, m.z), g.subVectors(m, v).normalize(), p.setXYZ(d, g.x, g.y, g.z), E.x = s / i, E.y = l / n, h.setXY(d, E.x, E.y), d++
    }
    for (l = 1; i >= l; l++) for (s = 1; n >= s; s++) t = (n + 1) * l + (s - 1), e = (n + 1) * l + s, r = (n + 1) * (l - 1) + s, u.setX(f, (n + 1) * (l - 1) + (s - 1)), f++, u.setX(f, t), f++, u.setX(f, r), f++, u.setX(f, t), f++, u.setX(f, e), f++, u.setX(f, r), f++;
    this.setIndex(u), this.addAttribute("position", c), this.addAttribute("normal", p), this.addAttribute("uv", h)
},THREE.TorusKnotBufferGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry,THREE.TorusKnotGeometry = function (t, e, i, n, r, o, a) {
    THREE.Geometry.call(this), this.type = "TorusKnotGeometry", this.parameters = {
        radius: t,
        tube: e,
        tubularSegments: i,
        radialSegments: n,
        p: r,
        q: o
    }, void 0 !== a && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."), this.fromBufferGeometry(new THREE.TorusKnotBufferGeometry(t, e, i, n, r, o)), this.mergeVertices()
},THREE.TorusKnotGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry,THREE.TubeGeometry = function (t, e, i, n, r, o) {
    THREE.Geometry.call(this), this.type = "TubeGeometry", this.parameters = {
        path: t,
        segments: e,
        radius: i,
        radialSegments: n,
        closed: r,
        taper: o
    }, e = e || 64, i = i || 1, n = n || 8, r = r || !1, o = o || THREE.TubeGeometry.NoTaper;
    var a, s, l, h, u, c, p, d, f, m, g = [], E = e + 1, v = new THREE.Vector3;
    for (d = new THREE.TubeGeometry.FrenetFrames(t, e, r), f = d.normals, m = d.binormals, this.tangents = d.tangents, this.normals = f, this.binormals = m, d = 0; E > d; d++) for (g[d] = [], l = d / (E - 1), p = t.getPointAt(l), a = f[d], s = m[d], u = i * o(l), l = 0; n > l; l++) h = l / n * 2 * Math.PI, c = -u * Math.cos(h), h = u * Math.sin(h), v.copy(p), v.x += c * a.x + h * s.x, v.y += c * a.y + h * s.y, v.z += c * a.z + h * s.z, g[d][l] = this.vertices.push(new THREE.Vector3(v.x, v.y, v.z)) - 1;
    for (d = 0; e > d; d++) for (l = 0; n > l; l++) o = r ? (d + 1) % e : d + 1, E = (l + 1) % n, t = g[d][l], i = g[o][l], o = g[o][E], E = g[d][E], v = new THREE.Vector2(d / e, l / n), f = new THREE.Vector2((d + 1) / e, l / n), m = new THREE.Vector2((d + 1) / e, (l + 1) / n), a = new THREE.Vector2(d / e, (l + 1) / n), this.faces.push(new THREE.Face3(t, i, E)), this.faceVertexUvs[0].push([v, f, a]), this.faces.push(new THREE.Face3(i, o, E)), this.faceVertexUvs[0].push([f.clone(), m, a.clone()]);
    this.computeFaceNormals(), this.computeVertexNormals()
},THREE.TubeGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry,THREE.TubeGeometry.NoTaper = function (t) {
    return 1
},THREE.TubeGeometry.SinusoidalTaper = function (t) {
    return Math.sin(Math.PI * t)
},THREE.TubeGeometry.FrenetFrames = function (t, e, i) {
    var n = new THREE.Vector3, r = [], o = [], a = [], s = new THREE.Vector3, l = new THREE.Matrix4;
    e += 1;
    var h, u, c;
    for (this.tangents = r, this.normals = o, this.binormals = a, h = 0; e > h; h++) u = h / (e - 1), r[h] = t.getTangentAt(u), r[h].normalize();
    for (o[0] = new THREE.Vector3, a[0] = new THREE.Vector3, t = Number.MAX_VALUE, h = Math.abs(r[0].x), u = Math.abs(r[0].y), c = Math.abs(r[0].z), t >= h && (t = h, n.set(1, 0, 0)), t >= u && (t = u, n.set(0, 1, 0)), t >= c && n.set(0, 0, 1), s.crossVectors(r[0], n).normalize(), o[0].crossVectors(r[0], s), a[0].crossVectors(r[0], o[0]), h = 1; e > h; h++) o[h] = o[h - 1].clone(), a[h] = a[h - 1].clone(), s.crossVectors(r[h - 1], r[h]), s.length() > Number.EPSILON && (s.normalize(), n = Math.acos(THREE.Math.clamp(r[h - 1].dot(r[h]), -1, 1)), o[h].applyMatrix4(l.makeRotationAxis(s, n))), a[h].crossVectors(r[h], o[h]);
    if (i) for (n = Math.acos(THREE.Math.clamp(o[0].dot(o[e - 1]), -1, 1)), n /= e - 1, 0 < r[0].dot(s.crossVectors(o[0], o[e - 1])) && (n = -n), h = 1; e > h; h++) o[h].applyMatrix4(l.makeRotationAxis(r[h], n * h)), a[h].crossVectors(r[h], o[h])
},THREE.PolyhedronGeometry = function (t, e, i, n) {
    function r(t) {
        var e = t.normalize().clone();
        e.index = l.vertices.push(e) - 1;
        var i = Math.atan2(t.z, -t.x) / 2 / Math.PI + .5;
        return t = Math.atan2(-t.y, Math.sqrt(t.x * t.x + t.z * t.z)) / Math.PI + .5, e.uv = new THREE.Vector2(i, 1 - t), e
    }

    function o(t, e, i) {
        var n = new THREE.Face3(t.index, e.index, i.index, [t.clone(), e.clone(), i.clone()]);
        l.faces.push(n), g.copy(t).add(e).add(i).divideScalar(3), n = Math.atan2(g.z, -g.x), l.faceVertexUvs[0].push([s(t.uv, t, n), s(e.uv, e, n), s(i.uv, i, n)])
    }

    function a(t, e) {
        for (var i = Math.pow(2, e), n = r(l.vertices[t.a]), a = r(l.vertices[t.b]), s = r(l.vertices[t.c]), h = [], u = 0; i >= u; u++) {
            h[u] = [];
            for (var c = r(n.clone().lerp(s, u / i)), p = r(a.clone().lerp(s, u / i)), d = i - u, f = 0; d >= f; f++) h[u][f] = 0 === f && u === i ? c : r(c.clone().lerp(p, f / d))
        }
        for (u = 0; i > u; u++) for (f = 0; 2 * (i - u) - 1 > f; f++) n = Math.floor(f / 2), 0 === f % 2 ? o(h[u][n + 1], h[u + 1][n], h[u][n]) : o(h[u][n + 1], h[u + 1][n + 1], h[u + 1][n])
    }

    function s(t, e, i) {
        return 0 > i && 1 === t.x && (t = new THREE.Vector2(t.x - 1, t.y)), 0 === e.x && 0 === e.z && (t = new THREE.Vector2(i / 2 / Math.PI + .5, t.y)), t.clone()
    }

    THREE.Geometry.call(this), this.type = "PolyhedronGeometry", this.parameters = {
        vertices: t,
        indices: e,
        radius: i,
        detail: n
    }, i = i || 1, n = n || 0;
    for (var l = this, h = 0, u = t.length; u > h; h += 3) r(new THREE.Vector3(t[h], t[h + 1], t[h + 2]));
    t = this.vertices;
    for (var c = [], p = h = 0, u = e.length; u > h; h += 3, p++) {
        var d = t[e[h]], f = t[e[h + 1]], m = t[e[h + 2]];
        c[p] = new THREE.Face3(d.index, f.index, m.index, [d.clone(), f.clone(), m.clone()]);
    }
    for (var g = new THREE.Vector3, h = 0, u = c.length; u > h; h++) a(c[h], n);
    for (h = 0, u = this.faceVertexUvs[0].length; u > h; h++) e = this.faceVertexUvs[0][h], n = e[0].x, t = e[1].x, c = e[2].x, p = Math.max(n, t, c), d = Math.min(n, t, c), p > .9 && .1 > d && (.2 > n && (e[0].x += 1), .2 > t && (e[1].x += 1), .2 > c && (e[2].x += 1));
    for (h = 0, u = this.vertices.length; u > h; h++) this.vertices[h].multiplyScalar(i);
    this.mergeVertices(), this.computeFaceNormals(), this.boundingSphere = new THREE.Sphere(new THREE.Vector3, i)
},THREE.PolyhedronGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry,THREE.DodecahedronGeometry = function (t, e) {
    var i = (1 + Math.sqrt(5)) / 2, n = 1 / i;
    THREE.PolyhedronGeometry.call(this, [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -n, -i, 0, -n, i, 0, n, -i, 0, n, i, -n, -i, 0, -n, i, 0, n, -i, 0, n, i, 0, -i, 0, -n, i, 0, -n, -i, 0, n, i, 0, n], [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], t, e), this.type = "DodecahedronGeometry", this.parameters = {
        radius: t,
        detail: e
    }
},THREE.DodecahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype),THREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry,THREE.IcosahedronGeometry = function (t, e) {
    var i = (1 + Math.sqrt(5)) / 2;
    THREE.PolyhedronGeometry.call(this, [-1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, 0, 0, -1, i, 0, 1, i, 0, -1, -i, 0, 1, -i, i, 0, -1, i, 0, 1, -i, 0, -1, -i, 0, 1], [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], t, e), this.type = "IcosahedronGeometry", this.parameters = {
        radius: t,
        detail: e
    }
},THREE.IcosahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype),THREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry,THREE.OctahedronGeometry = function (t, e) {
    THREE.PolyhedronGeometry.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], t, e), this.type = "OctahedronGeometry", this.parameters = {
        radius: t,
        detail: e
    }
},THREE.OctahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype),THREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry,THREE.TetrahedronGeometry = function (t, e) {
    THREE.PolyhedronGeometry.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], t, e), this.type = "TetrahedronGeometry", this.parameters = {
        radius: t,
        detail: e
    }
},THREE.TetrahedronGeometry.prototype = Object.create(THREE.PolyhedronGeometry.prototype),THREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry,THREE.ParametricGeometry = function (t, e, i) {
    THREE.Geometry.call(this), this.type = "ParametricGeometry", this.parameters = {func: t, slices: e, stacks: i};
    var n, r, o, a, s = this.vertices, l = this.faces, h = this.faceVertexUvs[0], u = e + 1;
    for (n = 0; i >= n; n++) for (a = n / i, r = 0; e >= r; r++) o = r / e, o = t(o, a), s.push(o);
    var c, p, d, f;
    for (n = 0; i > n; n++) for (r = 0; e > r; r++) t = n * u + r, s = n * u + r + 1, a = (n + 1) * u + r + 1, o = (n + 1) * u + r, c = new THREE.Vector2(r / e, n / i), p = new THREE.Vector2((r + 1) / e, n / i), d = new THREE.Vector2((r + 1) / e, (n + 1) / i), f = new THREE.Vector2(r / e, (n + 1) / i), l.push(new THREE.Face3(t, s, o)), h.push([c, p, f]), l.push(new THREE.Face3(s, a, o)), h.push([p.clone(), d, f.clone()]);
    this.computeFaceNormals(), this.computeVertexNormals()
},THREE.ParametricGeometry.prototype = Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry,THREE.WireframeGeometry = function (t) {
    function e(t, e) {
        return t - e
    }

    THREE.BufferGeometry.call(this);
    var i = [0, 0], n = {}, r = ["a", "b", "c"];
    if (t instanceof THREE.Geometry) {
        var o = t.vertices, a = t.faces, s = 0, l = new Uint32Array(6 * a.length);
        t = 0;
        for (var h = a.length; h > t; t++) for (var u = a[t], c = 0; 3 > c; c++) {
            i[0] = u[r[c]], i[1] = u[r[(c + 1) % 3]], i.sort(e);
            var p = i.toString();
            void 0 === n[p] && (l[2 * s] = i[0], l[2 * s + 1] = i[1], n[p] = !0, s++)
        }
        for (i = new Float32Array(6 * s), t = 0, h = s; h > t; t++) for (c = 0; 2 > c; c++) n = o[l[2 * t + c]], s = 6 * t + 3 * c, i[s + 0] = n.x, i[s + 1] = n.y, i[s + 2] = n.z;
        this.addAttribute("position", new THREE.BufferAttribute(i, 3))
    } else if (t instanceof THREE.BufferGeometry) {
        if (null !== t.index) {
            for (h = t.index.array, o = t.attributes.position, r = t.groups, s = 0, 0 === r.length && t.addGroup(0, h.length), l = new Uint32Array(2 * h.length), a = 0, u = r.length; u > a; ++a) {
                t = r[a], c = t.start, p = t.count, t = c;
                for (var d = c + p; d > t; t += 3) for (c = 0; 3 > c; c++) i[0] = h[t + c], i[1] = h[t + (c + 1) % 3], i.sort(e), p = i.toString(), void 0 === n[p] && (l[2 * s] = i[0], l[2 * s + 1] = i[1], n[p] = !0, s++)
            }
            for (i = new Float32Array(6 * s), t = 0, h = s; h > t; t++) for (c = 0; 2 > c; c++) s = 6 * t + 3 * c, n = l[2 * t + c], i[s + 0] = o.getX(n), i[s + 1] = o.getY(n), i[s + 2] = o.getZ(n)
        } else for (o = t.attributes.position.array, s = o.length / 3, l = s / 3, i = new Float32Array(6 * s), t = 0, h = l; h > t; t++) for (c = 0; 3 > c; c++) s = 18 * t + 6 * c, l = 9 * t + 3 * c, i[s + 0] = o[l], i[s + 1] = o[l + 1], i[s + 2] = o[l + 2], n = 9 * t + (c + 1) % 3 * 3, i[s + 3] = o[n], i[s + 4] = o[n + 1], i[s + 5] = o[n + 2];
        this.addAttribute("position", new THREE.BufferAttribute(i, 3))
    }
},THREE.WireframeGeometry.prototype = Object.create(THREE.BufferGeometry.prototype),THREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry,THREE.AxisHelper = function (t) {
    t = t || 1;
    var e = new Float32Array([0, 0, 0, t, 0, 0, 0, 0, 0, 0, t, 0, 0, 0, 0, 0, 0, t]),
        i = new Float32Array([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1]);
    t = new THREE.BufferGeometry, t.addAttribute("position", new THREE.BufferAttribute(e, 3)), t.addAttribute("color", new THREE.BufferAttribute(i, 3)), e = new THREE.LineBasicMaterial({vertexColors: THREE.VertexColors}), THREE.LineSegments.call(this, t, e)
},THREE.AxisHelper.prototype = Object.create(THREE.LineSegments.prototype),THREE.AxisHelper.prototype.constructor = THREE.AxisHelper,THREE.ArrowHelper = function () {
    var t = new THREE.BufferGeometry;
    t.addAttribute("position", new THREE.Float32Attribute([0, 0, 0, 0, 1, 0], 3));
    var e = new THREE.CylinderBufferGeometry(0, .5, 1, 5, 1);
    return e.translate(0, -.5, 0), function (i, n, r, o, a, s) {
        THREE.Object3D.call(this), void 0 === o && (o = 16776960), void 0 === r && (r = 1), void 0 === a && (a = .2 * r), void 0 === s && (s = .2 * a), this.position.copy(n), this.line = new THREE.Line(t, new THREE.LineBasicMaterial({color: o})), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new THREE.Mesh(e, new THREE.MeshBasicMaterial({color: o})), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(i), this.setLength(r, a, s)
    }
}(),THREE.ArrowHelper.prototype = Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper,THREE.ArrowHelper.prototype.setDirection = function () {
    var t, e = new THREE.Vector3;
    return function (i) {
        .99999 < i.y ? this.quaternion.set(0, 0, 0, 1) : -.99999 > i.y ? this.quaternion.set(1, 0, 0, 0) : (e.set(i.z, 0, -i.x).normalize(), t = Math.acos(i.y), this.quaternion.setFromAxisAngle(e, t))
    }
}(),THREE.ArrowHelper.prototype.setLength = function (t, e, i) {
    void 0 === e && (e = .2 * t), void 0 === i && (i = .2 * e), this.line.scale.set(1, Math.max(0, t - e), 1), this.line.updateMatrix(), this.cone.scale.set(i, e, i), this.cone.position.y = t, this.cone.updateMatrix()
},THREE.ArrowHelper.prototype.setColor = function (t) {
    this.line.material.color.copy(t), this.cone.material.color.copy(t)
},THREE.BoxHelper = function (t, e) {
    void 0 === e && (e = 16776960);
    var i = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]), n = new Float32Array(24),
        r = new THREE.BufferGeometry;
    r.setIndex(new THREE.BufferAttribute(i, 1)), r.addAttribute("position", new THREE.BufferAttribute(n, 3)), THREE.LineSegments.call(this, r, new THREE.LineBasicMaterial({color: e})), void 0 !== t && this.update(t)
},THREE.BoxHelper.prototype = Object.create(THREE.LineSegments.prototype),THREE.BoxHelper.prototype.constructor = THREE.BoxHelper,THREE.BoxHelper.prototype.update = function () {
    var t = new THREE.Box3;
    return function (e) {
        if (e instanceof THREE.Box3 ? t.copy(e) : t.setFromObject(e), !t.isEmpty()) {
            e = t.min;
            var i = t.max, n = this.geometry.attributes.position, r = n.array;
            r[0] = i.x, r[1] = i.y, r[2] = i.z, r[3] = e.x, r[4] = i.y, r[5] = i.z, r[6] = e.x, r[7] = e.y, r[8] = i.z, r[9] = i.x, r[10] = e.y, r[11] = i.z, r[12] = i.x, r[13] = i.y, r[14] = e.z, r[15] = e.x, r[16] = i.y, r[17] = e.z, r[18] = e.x, r[19] = e.y, r[20] = e.z, r[21] = i.x, r[22] = e.y, r[23] = e.z, n.needsUpdate = !0, this.geometry.computeBoundingSphere()
        }
    }
}(),THREE.BoundingBoxHelper = function (t, e) {
    var i = void 0 !== e ? e : 8947848;
    this.object = t, this.box = new THREE.Box3, THREE.Mesh.call(this, new THREE.BoxGeometry(1, 1, 1), new THREE.MeshBasicMaterial({
        color: i,
        wireframe: !0
    }))
},THREE.BoundingBoxHelper.prototype = Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper,THREE.BoundingBoxHelper.prototype.update = function () {
    this.box.setFromObject(this.object), this.box.size(this.scale), this.box.center(this.position)
},THREE.CameraHelper = function (t) {
    function e(t, e, n) {
        i(t, n), i(e, n)
    }

    function i(t, e) {
        n.vertices.push(new THREE.Vector3), n.colors.push(new THREE.Color(e)), void 0 === o[t] && (o[t] = []), o[t].push(n.vertices.length - 1)
    }

    var n = new THREE.Geometry, r = new THREE.LineBasicMaterial({color: 16777215, vertexColors: THREE.FaceColors}), o = {};
    e("n1", "n2", 16755200), e("n2", "n4", 16755200), e("n4", "n3", 16755200), e("n3", "n1", 16755200), e("f1", "f2", 16755200), e("f2", "f4", 16755200), e("f4", "f3", 16755200), e("f3", "f1", 16755200), e("n1", "f1", 16755200), e("n2", "f2", 16755200), e("n3", "f3", 16755200), e("n4", "f4", 16755200), e("p", "n1", 16711680), e("p", "n2", 16711680), e("p", "n3", 16711680), e("p", "n4", 16711680), e("u1", "u2", 43775), e("u2", "u3", 43775), e("u3", "u1", 43775), e("c", "t", 16777215), e("p", "c", 3355443), e("cn1", "cn2", 3355443), e("cn3", "cn4", 3355443), e("cf1", "cf2", 3355443), e("cf3", "cf4", 3355443), THREE.LineSegments.call(this, n, r), this.camera = t, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = o, this.update()
},THREE.CameraHelper.prototype = Object.create(THREE.LineSegments.prototype),THREE.CameraHelper.prototype.constructor = THREE.CameraHelper,THREE.CameraHelper.prototype.update = function () {
    function t(t, o, a, s) {
        if (n.set(o, a, s).unproject(r), t = i[t], void 0 !== t) for (o = 0, a = t.length; a > o; o++) e.vertices[t[o]].copy(n)
    }

    var e, i, n = new THREE.Vector3, r = new THREE.Camera;
    return function () {
        e = this.geometry, i = this.pointMap, r.projectionMatrix.copy(this.camera.projectionMatrix), t("c", 0, 0, -1), t("t", 0, 0, 1), t("n1", -1, -1, -1), t("n2", 1, -1, -1), t("n3", -1, 1, -1), t("n4", 1, 1, -1), t("f1", -1, -1, 1), t("f2", 1, -1, 1), t("f3", -1, 1, 1), t("f4", 1, 1, 1), t("u1", .7, 1.1, -1), t("u2", -.7, 1.1, -1), t("u3", 0, 2, -1), t("cf1", -1, 0, 1), t("cf2", 1, 0, 1), t("cf3", 0, -1, 1), t("cf4", 0, 1, 1), t("cn1", -1, 0, -1), t("cn2", 1, 0, -1), t("cn3", 0, -1, -1), t("cn4", 0, 1, -1), e.verticesNeedUpdate = !0
    }
}(),THREE.DirectionalLightHelper = function (t, e) {
    THREE.Object3D.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, void 0 === e && (e = 1);
    var i = new THREE.BufferGeometry;
    i.addAttribute("position", new THREE.Float32Attribute([-e, e, 0, e, e, 0, e, -e, 0, -e, -e, 0, -e, e, 0], 3));
    var n = new THREE.LineBasicMaterial({fog: !1});
    this.add(new THREE.Line(i, n)), i = new THREE.BufferGeometry, i.addAttribute("position", new THREE.Float32Attribute([0, 0, 0, 0, 0, 1], 3)), this.add(new THREE.Line(i, n)), this.update()
},THREE.DirectionalLightHelper.prototype = Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper,THREE.DirectionalLightHelper.prototype.dispose = function () {
    var t = this.children[0], e = this.children[1];
    t.geometry.dispose(), t.material.dispose(), e.geometry.dispose(), e.material.dispose()
},THREE.DirectionalLightHelper.prototype.update = function () {
    var t = new THREE.Vector3, e = new THREE.Vector3, i = new THREE.Vector3;
    return function () {
        t.setFromMatrixPosition(this.light.matrixWorld), e.setFromMatrixPosition(this.light.target.matrixWorld), i.subVectors(e, t);
        var n = this.children[0], r = this.children[1];
        n.lookAt(i), n.material.color.copy(this.light.color).multiplyScalar(this.light.intensity), r.lookAt(i), r.scale.z = i.length()
    }
}(),THREE.EdgesHelper = function (t, e, i) {
    e = void 0 !== e ? e : 16777215, THREE.LineSegments.call(this, new THREE.EdgesGeometry(t.geometry, i), new THREE.LineBasicMaterial({color: e})), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1
},THREE.EdgesHelper.prototype = Object.create(THREE.LineSegments.prototype),THREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper,THREE.FaceNormalsHelper = function (t, e, i, n) {
    this.object = t, this.size = void 0 !== e ? e : 1, t = void 0 !== i ? i : 16776960, n = void 0 !== n ? n : 1, e = 0, i = this.object.geometry, i instanceof THREE.Geometry ? e = i.faces.length : console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead."), i = new THREE.BufferGeometry, e = new THREE.Float32Attribute(6 * e, 3), i.addAttribute("position", e), THREE.LineSegments.call(this, i, new THREE.LineBasicMaterial({
        color: t,
        linewidth: n
    })), this.matrixAutoUpdate = !1, this.update()
},THREE.FaceNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype),THREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper,THREE.FaceNormalsHelper.prototype.update = function () {
    var t = new THREE.Vector3, e = new THREE.Vector3, i = new THREE.Matrix3;
    return function () {
        this.object.updateMatrixWorld(!0), i.getNormalMatrix(this.object.matrixWorld);
        for (var n = this.object.matrixWorld, r = this.geometry.attributes.position, o = this.object.geometry, a = o.vertices, o = o.faces, s = 0, l = 0, h = o.length; h > l; l++) {
            var u = o[l], c = u.normal;
            t.copy(a[u.a]).add(a[u.b]).add(a[u.c]).divideScalar(3).applyMatrix4(n), e.copy(c).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t), r.setXYZ(s, t.x, t.y, t.z), s += 1, r.setXYZ(s, e.x, e.y, e.z), s += 1
        }
        return r.needsUpdate = !0, this
    }
}(),THREE.GridHelper = function (t, e, i, n) {
    e = e || 1, i = new THREE.Color(void 0 !== i ? i : 4473924), n = new THREE.Color(void 0 !== n ? n : 8947848);
    for (var r = e / 2, o = 2 * t / e, a = [], s = [], l = 0, h = 0, u = -t; e >= l; l++, u += o) {
        a.push(-t, 0, u, t, 0, u), a.push(u, 0, -t, u, 0, t);
        var c = l === r ? i : n;
        c.toArray(s, h), h += 3, c.toArray(s, h), h += 3, c.toArray(s, h), h += 3, c.toArray(s, h), h += 3
    }
    t = new THREE.BufferGeometry, t.addAttribute("position", new THREE.Float32Attribute(a, 3)), t.addAttribute("color", new THREE.Float32Attribute(s, 3)), a = new THREE.LineBasicMaterial({vertexColors: THREE.VertexColors}), THREE.LineSegments.call(this, t, a)
},THREE.GridHelper.prototype = Object.create(THREE.LineSegments.prototype),THREE.GridHelper.prototype.constructor = THREE.GridHelper,THREE.GridHelper.prototype.setColors = function () {
    console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
},THREE.HemisphereLightHelper = function (t, e) {
    THREE.Object3D.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.colors = [new THREE.Color, new THREE.Color];
    var i = new THREE.SphereGeometry(e, 4, 2);
    i.rotateX(-Math.PI / 2);
    for (var n = 0; 8 > n; n++) i.faces[n].color = this.colors[4 > n ? 0 : 1];
    n = new THREE.MeshBasicMaterial({
        vertexColors: THREE.FaceColors,
        wireframe: !0
    }), this.lightSphere = new THREE.Mesh(i, n), this.add(this.lightSphere), this.update()
},THREE.HemisphereLightHelper.prototype = Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper,THREE.HemisphereLightHelper.prototype.dispose = function () {
    this.lightSphere.geometry.dispose(), this.lightSphere.material.dispose()
},THREE.HemisphereLightHelper.prototype.update = function () {
    var t = new THREE.Vector3;
    return function () {
        this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity), this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity), this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()), this.lightSphere.geometry.colorsNeedUpdate = !0
    }
}(),THREE.PointLightHelper = function (t, e) {
    this.light = t, this.light.updateMatrixWorld();
    var i = new THREE.SphereBufferGeometry(e, 4, 2), n = new THREE.MeshBasicMaterial({wireframe: !0, fog: !1});
    n.color.copy(this.light.color).multiplyScalar(this.light.intensity), THREE.Mesh.call(this, i, n), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1
},THREE.PointLightHelper.prototype = Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper,THREE.PointLightHelper.prototype.dispose = function () {
    this.geometry.dispose(), this.material.dispose()
},THREE.PointLightHelper.prototype.update = function () {
    this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
},THREE.SkeletonHelper = function (t) {
    this.bones = this.getBoneList(t);
    for (var e = new THREE.Geometry, i = 0; i < this.bones.length; i++) this.bones[i].parent instanceof THREE.Bone && (e.vertices.push(new THREE.Vector3), e.vertices.push(new THREE.Vector3), e.colors.push(new THREE.Color(0, 0, 1)), e.colors.push(new THREE.Color(0, 1, 0)));
    e.dynamic = !0, i = new THREE.LineBasicMaterial({
        vertexColors: THREE.VertexColors,
        depthTest: !1,
        depthWrite: !1,
        transparent: !0
    }), THREE.LineSegments.call(this, e, i), this.root = t, this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, this.update()
},THREE.SkeletonHelper.prototype = Object.create(THREE.LineSegments.prototype),THREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper,THREE.SkeletonHelper.prototype.getBoneList = function (t) {
    var e = [];
    t instanceof THREE.Bone && e.push(t);
    for (var i = 0; i < t.children.length; i++) e.push.apply(e, this.getBoneList(t.children[i]));
    return e
},THREE.SkeletonHelper.prototype.update = function () {
    for (var t = this.geometry, e = (new THREE.Matrix4).getInverse(this.root.matrixWorld), i = new THREE.Matrix4, n = 0, r = 0; r < this.bones.length; r++) {
        var o = this.bones[r];
        o.parent instanceof THREE.Bone && (i.multiplyMatrices(e, o.matrixWorld), t.vertices[n].setFromMatrixPosition(i), i.multiplyMatrices(e, o.parent.matrixWorld), t.vertices[n + 1].setFromMatrixPosition(i), n += 2)
    }
    t.verticesNeedUpdate = !0, t.computeBoundingSphere()
},THREE.SpotLightHelper = function (t) {
    THREE.Object3D.call(this), this.light = t, this.light.updateMatrixWorld(), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1, t = new THREE.BufferGeometry;
    for (var e = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], i = 0, n = 1; 32 > i; i++, n++) {
        var r = i / 32 * Math.PI * 2, o = n / 32 * Math.PI * 2;
        e.push(Math.cos(r), Math.sin(r), 1, Math.cos(o), Math.sin(o), 1)
    }
    t.addAttribute("position", new THREE.Float32Attribute(e, 3)), e = new THREE.LineBasicMaterial({fog: !1}), this.cone = new THREE.LineSegments(t, e), this.add(this.cone), this.update()
},THREE.SpotLightHelper.prototype = Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper,THREE.SpotLightHelper.prototype.dispose = function () {
    this.cone.geometry.dispose(), this.cone.material.dispose()
},THREE.SpotLightHelper.prototype.update = function () {
    var t = new THREE.Vector3, e = new THREE.Vector3;
    return function () {
        var i = this.light.distance ? this.light.distance : 1e3, n = i * Math.tan(this.light.angle);
        this.cone.scale.set(n, n, i), t.setFromMatrixPosition(this.light.matrixWorld), e.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(e.sub(t)), this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)
    }
}(),THREE.VertexNormalsHelper = function (t, e, i, n) {
    this.object = t, this.size = void 0 !== e ? e : 1, t = void 0 !== i ? i : 16711680, n = void 0 !== n ? n : 1, e = 0, i = this.object.geometry, i instanceof THREE.Geometry ? e = 3 * i.faces.length : i instanceof THREE.BufferGeometry && (e = i.attributes.normal.count), i = new THREE.BufferGeometry, e = new THREE.Float32Attribute(6 * e, 3), i.addAttribute("position", e), THREE.LineSegments.call(this, i, new THREE.LineBasicMaterial({
        color: t,
        linewidth: n
    })), this.matrixAutoUpdate = !1, this.update()
},THREE.VertexNormalsHelper.prototype = Object.create(THREE.LineSegments.prototype),THREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper,THREE.VertexNormalsHelper.prototype.update = function () {
    var t = new THREE.Vector3, e = new THREE.Vector3, i = new THREE.Matrix3;
    return function () {
        var n = ["a", "b", "c"];
        this.object.updateMatrixWorld(!0), i.getNormalMatrix(this.object.matrixWorld);
        var r = this.object.matrixWorld, o = this.geometry.attributes.position, a = this.object.geometry;
        if (a instanceof THREE.Geometry) for (var s = a.vertices, l = a.faces, h = a = 0, u = l.length; u > h; h++) for (var c = l[h], p = 0, d = c.vertexNormals.length; d > p; p++) {
            var f = c.vertexNormals[p];
            t.copy(s[c[n[p]]]).applyMatrix4(r), e.copy(f).applyMatrix3(i).normalize().multiplyScalar(this.size).add(t), o.setXYZ(a, t.x, t.y, t.z), a += 1, o.setXYZ(a, e.x, e.y, e.z), a += 1
        } else if (a instanceof THREE.BufferGeometry) for (n = a.attributes.position, s = a.attributes.normal, p = a = 0, d = n.count; d > p; p++) t.set(n.getX(p), n.getY(p), n.getZ(p)).applyMatrix4(r), e.set(s.getX(p), s.getY(p), s.getZ(p)), e.applyMatrix3(i).normalize().multiplyScalar(this.size).add(t), o.setXYZ(a, t.x, t.y, t.z), a += 1, o.setXYZ(a, e.x, e.y, e.z), a += 1;
        return o.needsUpdate = !0, this
    }
}(),THREE.WireframeHelper = function (t, e) {
    var i = void 0 !== e ? e : 16777215;
    THREE.LineSegments.call(this, new THREE.WireframeGeometry(t.geometry), new THREE.LineBasicMaterial({color: i})), this.matrix = t.matrixWorld, this.matrixAutoUpdate = !1
},THREE.WireframeHelper.prototype = Object.create(THREE.LineSegments.prototype),THREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper,THREE.ImmediateRenderObject = function (t) {
    THREE.Object3D.call(this), this.material = t, this.render = function (t) {
    }
},THREE.ImmediateRenderObject.prototype = Object.create(THREE.Object3D.prototype),THREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject,THREE.MorphBlendMesh = function (t, e) {
    THREE.Mesh.call(this, t, e), this.animationsMap = {}, this.animationsList = [];
    var i = this.geometry.morphTargets.length;
    this.createAnimation("__default", 0, i - 1, i / 1), this.setAnimationWeight("__default", 1)
},THREE.MorphBlendMesh.prototype = Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh,THREE.MorphBlendMesh.prototype.createAnimation = function (t, e, i, n) {
    e = {
        start: e,
        end: i,
        length: i - e + 1,
        fps: n,
        duration: (i - e) / n,
        lastFrame: 0,
        currentFrame: 0,
        active: !1,
        time: 0,
        direction: 1,
        weight: 1,
        directionBackwards: !1,
        mirroredLoop: !1
    }, this.animationsMap[t] = e, this.animationsList.push(e)
},THREE.MorphBlendMesh.prototype.autoCreateAnimations = function (t) {
    for (var e, i = /([a-z]+)_?(\d+)/i, n = {}, r = this.geometry, o = 0, a = r.morphTargets.length; a > o; o++) {
        var s = r.morphTargets[o].name.match(i);
        if (s && 1 < s.length) {
            var l = s[1];
            n[l] || (n[l] = {start: 1 / 0, end: -(1 / 0)}), s = n[l], o < s.start && (s.start = o), o > s.end && (s.end = o), e || (e = l)
        }
    }
    for (l in n) s = n[l], this.createAnimation(l, s.start, s.end, t);
    this.firstAnimation = e
},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function (t) {
    (t = this.animationsMap[t]) && (t.direction = 1, t.directionBackwards = !1)
},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function (t) {
    (t = this.animationsMap[t]) && (t.direction = -1, t.directionBackwards = !0)
},THREE.MorphBlendMesh.prototype.setAnimationFPS = function (t, e) {
    var i = this.animationsMap[t];
    i && (i.fps = e, i.duration = (i.end - i.start) / i.fps)
},THREE.MorphBlendMesh.prototype.setAnimationDuration = function (t, e) {
    var i = this.animationsMap[t];
    i && (i.duration = e, i.fps = (i.end - i.start) / i.duration)
},THREE.MorphBlendMesh.prototype.setAnimationWeight = function (t, e) {
    var i = this.animationsMap[t];
    i && (i.weight = e)
},THREE.MorphBlendMesh.prototype.setAnimationTime = function (t, e) {
    var i = this.animationsMap[t];
    i && (i.time = e)
},THREE.MorphBlendMesh.prototype.getAnimationTime = function (t) {
    var e = 0;
    return (t = this.animationsMap[t]) && (e = t.time), e
},THREE.MorphBlendMesh.prototype.getAnimationDuration = function (t) {
    var e = -1;
    return (t = this.animationsMap[t]) && (e = t.duration), e
},THREE.MorphBlendMesh.prototype.playAnimation = function (t) {
    var e = this.animationsMap[t];
    e ? (e.time = 0, e.active = !0) : console.warn("THREE.MorphBlendMesh: animation[" + t + "] undefined in .playAnimation()")
},THREE.MorphBlendMesh.prototype.stopAnimation = function (t) {
    (t = this.animationsMap[t]) && (t.active = !1)
},THREE.MorphBlendMesh.prototype.update = function (t) {
    for (var e = 0, i = this.animationsList.length; i > e; e++) {
        var n = this.animationsList[e];
        if (n.active) {
            var r = n.duration / n.length;
            n.time += n.direction * t, n.mirroredLoop ? (n.time > n.duration || 0 > n.time) && (n.direction *= -1, n.time > n.duration && (n.time = n.duration, n.directionBackwards = !0), 0 > n.time && (n.time = 0, n.directionBackwards = !1)) : (n.time %= n.duration, 0 > n.time && (n.time += n.duration));
            var o = n.start + THREE.Math.clamp(Math.floor(n.time / r), 0, n.length - 1), a = n.weight;
            o !== n.currentFrame && (this.morphTargetInfluences[n.lastFrame] = 0, this.morphTargetInfluences[n.currentFrame] = 1 * a, this.morphTargetInfluences[o] = 0, n.lastFrame = n.currentFrame, n.currentFrame = o), r = n.time % r / r, n.directionBackwards && (r = 1 - r), n.currentFrame !== n.lastFrame ? (this.morphTargetInfluences[n.currentFrame] = r * a, this.morphTargetInfluences[n.lastFrame] = (1 - r) * a) : this.morphTargetInfluences[n.currentFrame] = a
        }
    }
};
var Detector = {
    canvas: !!window.CanvasRenderingContext2D,
    webgl: function () {
        try {
            var t = document.createElement("canvas");
            return !(!window.WebGLRenderingContext || !t.getContext("webgl") && !t.getContext("experimental-webgl"))
        } catch (e) {
            return !1
        }
    }(),
    workers: !!window.Worker,
    fileapi: window.File && window.FileReader && window.FileList && window.Blob,
    getWebGLErrorMessage: function () {
        var t = document.createElement("div");
        return t.id = "webgl-error-message", t.style.fontFamily = "monospace", t.style.fontSize = "13px", t.style.fontWeight = "normal", t.style.textAlign = "center", t.style.background = "#fff", t.style.color = "#000", t.style.padding = "1.5em", t.style.width = "400px", t.style.margin = "5em auto 0", this.webgl || (t.innerHTML = window.WebGLRenderingContext ? ['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />', 'Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n") : ['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>', 'Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n")), t
    },
    addGetWebGLMessage: function (t) {
        var e, i, n;
        t = t || {}, e = void 0 !== t.parent ? t.parent : document.body, i = void 0 !== t.id ? t.id : "oldie", n = Detector.getWebGLErrorMessage(), n.id = i, e.appendChild(n)
    }
};
"object" == typeof module && (module.exports = Detector), THREE.OrbitControls = function (t, e) {
    function i() {
        return 2 * Math.PI / 60 / 60 * O.autoRotateSpeed
    }

    function n() {
        return Math.pow(.95, O.zoomSpeed)
    }

    function r(t) {
        V.theta -= t
    }

    function o(t) {
        V.phi -= t
    }

    function a(t) {
        O.object instanceof THREE.PerspectiveCamera ? z /= t : O.object instanceof THREE.OrthographicCamera ? (O.object.zoom = Math.max(O.minZoom, Math.min(O.maxZoom, O.object.zoom * t)), O.object.updateProjectionMatrix(), j = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), O.enableZoom = !1)
    }

    function s(t) {
        O.object instanceof THREE.PerspectiveCamera ? z *= t : O.object instanceof THREE.OrthographicCamera ? (O.object.zoom = Math.max(O.minZoom, Math.min(O.maxZoom, O.object.zoom / t)), O.object.updateProjectionMatrix(), j = !0) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."), O.enableZoom = !1)
    }

    function l(t) {
        W.set(t.clientX, t.clientY)
    }

    function h(t) {
        Q.set(t.clientX, t.clientY)
    }

    function u(t) {
        Y.set(t.clientX, t.clientY)
    }

    function c(t) {
        X.set(t.clientX, t.clientY), q.subVectors(X, W);
        var e = O.domElement === document ? O.domElement.body : O.domElement;
        r(2 * Math.PI * q.x / e.clientWidth * O.rotateSpeed), o(2 * Math.PI * q.y / e.clientHeight * O.rotateSpeed), W.copy(X), O.update()
    }

    function p(t) {
        K.set(t.clientX, t.clientY), J.subVectors(K, Q), J.y > 0 ? a(n()) : J.y < 0 && s(n()), Q.copy(K), O.update()
    }

    function d(t) {
        $.set(t.clientX, t.clientY), Z.subVectors($, Y), it(Z.x, Z.y), Y.copy($), O.update()
    }

    function f(t) {
    }

    function m(t) {
        var e = 0;
        void 0 !== t.wheelDelta ? e = t.wheelDelta : void 0 !== t.detail && (e = -t.detail), e > 0 ? s(n()) : 0 > e && a(n()), O.update()
    }

    function g(t) {
        switch (t.keyCode) {
            case O.keys.UP:
                it(0, O.keyPanSpeed), O.update();
                break;
            case O.keys.BOTTOM:
                it(0, -O.keyPanSpeed), O.update();
                break;
            case O.keys.LEFT:
                it(O.keyPanSpeed, 0), O.update();
                break;
            case O.keys.RIGHT:
                it(-O.keyPanSpeed, 0), O.update()
        }
    }

    function E(t) {
        W.set(t.touches[0].pageX, t.touches[0].pageY)
    }

    function v(t) {
        var e = t.touches[0].pageX - t.touches[1].pageX, i = t.touches[0].pageY - t.touches[1].pageY, n = Math.sqrt(e * e + i * i);
        Q.set(0, n)
    }

    function y(t) {
        Y.set(t.touches[0].pageX, t.touches[0].pageY)
    }

    function T(t) {
        X.set(t.touches[0].pageX, t.touches[0].pageY), q.subVectors(X, W);
        var e = O.domElement === document ? O.domElement.body : O.domElement;
        r(2 * Math.PI * q.x / e.clientWidth * O.rotateSpeed), o(2 * Math.PI * q.y / e.clientHeight * O.rotateSpeed), W.copy(X), O.update()
    }

    function _(t) {
        var e = t.touches[0].pageX - t.touches[1].pageX, i = t.touches[0].pageY - t.touches[1].pageY, r = Math.sqrt(e * e + i * i);
        K.set(0, r), J.subVectors(K, Q), J.y > 0 ? s(n()) : J.y < 0 && a(n()), Q.copy(K), O.update()
    }

    function x(t) {
        $.set(t.touches[0].pageX, t.touches[0].pageY), Z.subVectors($, Y), it(Z.x, Z.y), Y.copy($), O.update()
    }

    function b(t) {
    }

    function R(t) {
        if (O.enabled !== !1) {
            if (t.preventDefault(), t.button === O.mouseButtons.ORBIT) {
                if (O.enableRotate === !1) return;
                l(t), B = k.ROTATE
            } else if (t.button === O.mouseButtons.ZOOM) {
                if (O.enableZoom === !1) return;
                h(t), B = k.DOLLY
            } else if (t.button === O.mouseButtons.PAN) {
                if (O.enablePan === !1) return;
                u(t), B = k.PAN
            }
            B !== k.NONE && (document.addEventListener("mousemove", w, !1), document.addEventListener("mouseup", H, !1), O.dispatchEvent(I))
        }
    }

    function w(t) {
        if (O.enabled !== !1) if (t.preventDefault(), B === k.ROTATE) {
            if (O.enableRotate === !1) return;
            c(t)
        } else if (B === k.DOLLY) {
            if (O.enableZoom === !1) return;
            p(t)
        } else if (B === k.PAN) {
            if (O.enablePan === !1) return;
            d(t)
        }
    }

    function H(t) {
        O.enabled !== !1 && (f(t), document.removeEventListener("mousemove", w, !1), document.removeEventListener("mouseup", H, !1), O.dispatchEvent(N), B = k.NONE)
    }

    function M(t) {
        O.enabled === !1 || O.enableZoom === !1 || B !== k.NONE && B !== k.ROTATE || (t.preventDefault(), t.stopPropagation(), m(t), O.dispatchEvent(I), O.dispatchEvent(N))
    }

    function S(t) {
        O.enabled !== !1 && O.enableKeys !== !1 && O.enablePan !== !1 && g(t)
    }

    function C(t) {
        if (O.enabled !== !1) {
            switch (t.touches.length) {
                case 1:
                    if (O.enableRotate === !1) return;
                    E(t), B = k.TOUCH_ROTATE;
                    break;
                case 2:
                    if (O.enableZoom === !1) return;
                    v(t), B = k.TOUCH_DOLLY;
                    break;
                case 3:
                    if (O.enablePan === !1) return;
                    y(t), B = k.TOUCH_PAN;
                    break;
                default:
                    B = k.NONE
            }
            B !== k.NONE && O.dispatchEvent(I)
        }
    }

    function A(t) {
        if (O.enabled !== !1) switch (t.preventDefault(), t.stopPropagation(), t.touches.length) {
            case 1:
                if (O.enableRotate === !1) return;
                if (B !== k.TOUCH_ROTATE) return;
                T(t);
                break;
            case 2:
                if (O.enableZoom === !1) return;
                if (B !== k.TOUCH_DOLLY) return;
                _(t);
                break;
            case 3:
                if (O.enablePan === !1) return;
                if (B !== k.TOUCH_PAN) return;
                x(t);
                break;
            default:
                B = k.NONE
        }
    }

    function P(t) {
        O.enabled !== !1 && (b(t), O.dispatchEvent(N), B = k.NONE)
    }

    function L(t) {
        t.preventDefault()
    }

    this.object = t, this.domElement = void 0 !== e ? e : document, this.enabled = !0, this.target = new THREE.Vector3, this.minDistance = 0, this.maxDistance = 1 / 0, this.minZoom = 0, this.maxZoom = 1 / 0, this.minPolarAngle = 0, this.maxPolarAngle = Math.PI, this.minAzimuthAngle = -(1 / 0), this.maxAzimuthAngle = 1 / 0, this.enableDamping = !1, this.dampingFactor = .25, this.enableZoom = !0, this.zoomSpeed = 1, this.enableRotate = !0, this.rotateSpeed = 1, this.enablePan = !0, this.keyPanSpeed = 7, this.autoRotate = !1, this.autoRotateSpeed = 2, this.enableKeys = !0, this.keys = {
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        BOTTOM: 40
    }, this.mouseButtons = {
        ORBIT: THREE.MOUSE.LEFT,
        ZOOM: THREE.MOUSE.MIDDLE,
        PAN: THREE.MOUSE.RIGHT
    }, this.target0 = this.target.clone(), this.position0 = this.object.position.clone(), this.zoom0 = this.object.zoom, this.getPolarAngle = function () {
        return U.phi
    }, this.getAzimuthalAngle = function () {
        return U.theta
    }, this.reset = function () {
        O.target.copy(O.target0), O.object.position.copy(O.position0), O.object.zoom = O.zoom0, O.object.updateProjectionMatrix(), O.dispatchEvent(D), O.update(), B = k.NONE
    }, this.update = function () {
        var e = new THREE.Vector3, n = (new THREE.Quaternion).setFromUnitVectors(t.up, new THREE.Vector3(0, 1, 0)), o = n.clone().inverse(),
            a = new THREE.Vector3, s = new THREE.Quaternion;
        return function () {
            var t = O.object.position;
            return e.copy(t).sub(O.target), e.applyQuaternion(n), U.setFromVector3(e), O.autoRotate && B === k.NONE && r(i()), U.theta += V.theta, U.phi += V.phi, U.theta = Math.max(O.minAzimuthAngle, Math.min(O.maxAzimuthAngle, U.theta)), U.phi = Math.max(O.minPolarAngle, Math.min(O.maxPolarAngle, U.phi)), U.makeSafe(), U.radius *= z, U.radius = Math.max(O.minDistance, Math.min(O.maxDistance, U.radius)), O.target.add(G), e.setFromSpherical(U), e.applyQuaternion(o), t.copy(O.target).add(e), O.object.lookAt(O.target), O.enableDamping === !0 ? (V.theta *= 1 - O.dampingFactor, V.phi *= 1 - O.dampingFactor) : V.set(0, 0, 0), z = 1, G.set(0, 0, 0), j || a.distanceToSquared(O.object.position) > F || 8 * (1 - s.dot(O.object.quaternion)) > F ? (O.dispatchEvent(D), a.copy(O.object.position), s.copy(O.object.quaternion), j = !1, !0) : !1
        }
    }(), this.dispose = function () {
        O.domElement.removeEventListener("contextmenu", L, !1), O.domElement.removeEventListener("mousedown", R, !1), O.domElement.removeEventListener("mousewheel", M, !1), O.domElement.removeEventListener("MozMousePixelScroll", M, !1),
            O.domElement.removeEventListener("touchstart", C, !1), O.domElement.removeEventListener("touchend", P, !1), O.domElement.removeEventListener("touchmove", A, !1), document.removeEventListener("mousemove", w, !1), document.removeEventListener("mouseup", H, !1), window.removeEventListener("keydown", S, !1)
    };
    var O = this, D = {type: "change"}, I = {type: "start"}, N = {type: "end"},
        k = {NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5}, B = k.NONE, F = 1e-6,
        U = new THREE.Spherical, V = new THREE.Spherical, z = 1, G = new THREE.Vector3, j = !1, W = new THREE.Vector2,
        X = new THREE.Vector2, q = new THREE.Vector2, Y = new THREE.Vector2, $ = new THREE.Vector2, Z = new THREE.Vector2,
        Q = new THREE.Vector2, K = new THREE.Vector2, J = new THREE.Vector2, tt = function () {
            var t = new THREE.Vector3;
            return function (e, i) {
                t.setFromMatrixColumn(i, 0), t.multiplyScalar(-e), G.add(t)
            }
        }(), et = function () {
            var t = new THREE.Vector3;
            return function (e, i) {
                t.setFromMatrixColumn(i, 1), t.multiplyScalar(e), G.add(t)
            }
        }(), it = function () {
            var t = new THREE.Vector3;
            return function (e, i) {
                var n = O.domElement === document ? O.domElement.body : O.domElement;
                if (O.object instanceof THREE.PerspectiveCamera) {
                    var r = O.object.position;
                    t.copy(r).sub(O.target);
                    var o = t.length();
                    o *= Math.tan(O.object.fov / 2 * Math.PI / 180), tt(2 * e * o / n.clientHeight, O.object.matrix), et(2 * i * o / n.clientHeight, O.object.matrix)
                } else O.object instanceof THREE.OrthographicCamera ? (tt(e * (O.object.right - O.object.left) / O.object.zoom / n.clientWidth, O.object.matrix), et(i * (O.object.top - O.object.bottom) / O.object.zoom / n.clientHeight, O.object.matrix)) : (console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."), O.enablePan = !1)
            }
        }();
    O.domElement.addEventListener("contextmenu", L, !1), O.domElement.addEventListener("mousedown", R, !1), O.domElement.addEventListener("mousewheel", M, !1), O.domElement.addEventListener("MozMousePixelScroll", M, !1), O.domElement.addEventListener("touchstart", C, !1), O.domElement.addEventListener("touchend", P, !1), O.domElement.addEventListener("touchmove", A, !1), window.addEventListener("keydown", S, !1), this.update()
}, THREE.OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype), THREE.OrbitControls.prototype.constructor = THREE.OrbitControls, Object.defineProperties(THREE.OrbitControls.prototype, {
    center: {
        get: function () {
            return console.warn("THREE.OrbitControls: .center has been renamed to .target"), this.target
        }
    }, noZoom: {
        get: function () {
            return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), !this.enableZoom
        }, set: function (t) {
            console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."), this.enableZoom = !t
        }
    }, noRotate: {
        get: function () {
            return console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), !this.enableRotate
        }, set: function (t) {
            console.warn("THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."), this.enableRotate = !t
        }
    }, noPan: {
        get: function () {
            return console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), !this.enablePan
        }, set: function (t) {
            console.warn("THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead."), this.enablePan = !t
        }
    }, noKeys: {
        get: function () {
            return console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), !this.enableKeys
        }, set: function (t) {
            console.warn("THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."), this.enableKeys = !t
        }
    }, staticMoving: {
        get: function () {
            return console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), !this.enableDamping
        }, set: function (t) {
            console.warn("THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."), this.enableDamping = !t
        }
    }, dynamicDampingFactor: {
        get: function () {
            return console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor
        }, set: function (t) {
            console.warn("THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."), this.dampingFactor = t
        }
    }
}), THREE.EffectComposer = function (t, e) {
    if (this.renderer = t, void 0 === e) {
        var i = {minFilter: THREE.LinearFilter, magFilter: THREE.LinearFilter, format: THREE.RGBAFormat, stencilBuffer: !1},
            n = t.getSize();
        e = new THREE.WebGLRenderTarget(n.width, n.height, i)
    }
    this.renderTarget1 = e, this.renderTarget2 = e.clone(), this.writeBuffer = this.renderTarget1, this.readBuffer = this.renderTarget2, this.passes = [], void 0 === THREE.CopyShader && console.error("THREE.EffectComposer relies on THREE.CopyShader"), this.copyPass = new THREE.ShaderPass(THREE.CopyShader)
}, Object.assign(THREE.EffectComposer.prototype, {
    swapBuffers: function () {
        var t = this.readBuffer;
        this.readBuffer = this.writeBuffer, this.writeBuffer = t
    }, addPass: function (t) {
        this.passes.push(t);
        var e = this.renderer.getSize();
        t.setSize(e.width, e.height)
    }, insertPass: function (t, e) {
        this.passes.splice(e, 0, t)
    }, render: function (t) {
        var e, i, n = !1, r = this.passes.length;
        for (i = 0; r > i; i++) if (e = this.passes[i], e.enabled !== !1) {
            if (e.render(this.renderer, this.writeBuffer, this.readBuffer, t, n), e.needsSwap) {
                if (n) {
                    var o = this.renderer.context;
                    o.stencilFunc(o.NOTEQUAL, 1, 4294967295), this.copyPass.render(this.renderer, this.writeBuffer, this.readBuffer, t), o.stencilFunc(o.EQUAL, 1, 4294967295)
                }
                this.swapBuffers()
            }
            void 0 !== THREE.MaskPass && (e instanceof THREE.MaskPass ? n = !0 : e instanceof THREE.ClearMaskPass && (n = !1))
        }
    }, reset: function (t) {
        if (void 0 === t) {
            var e = this.renderer.getSize();
            t = this.renderTarget1.clone(), t.setSize(e.width, e.height)
        }
        this.renderTarget1.dispose(), this.renderTarget2.dispose(), this.renderTarget1 = t, this.renderTarget2 = t.clone(), this.writeBuffer = this.renderTarget1, this.readBuffer = this.renderTarget2
    }, setSize: function (t, e) {
        this.renderTarget1.setSize(t, e), this.renderTarget2.setSize(t, e);
        for (var i = 0; i < this.passes.length; i++) this.passes[i].setSize(t, e)
    }
}), THREE.Pass = function () {
    this.enabled = !0, this.needsSwap = !0, this.clear = !1, this.renderToScreen = !1
}, Object.assign(THREE.Pass.prototype, {
    setSize: function (t, e) {
    }, render: function (t, e, i, n, r) {
        console.error("THREE.Pass: .render() must be implemented in derived pass.")
    }
}), THREE.ClearPass = function (t, e) {
    THREE.Pass.call(this), this.needsSwap = !1, this.clearColor = void 0 !== t ? t : 0, this.clearAlpha = void 0 !== e ? e : 0
}, THREE.ClearPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {
    constructor: THREE.ClearPass,
    render: function (t, e, i, n, r) {
        var o, a;
        this.clearColor && (o = t.getClearColor().getHex(), a = t.getClearAlpha(), t.setClearColor(this.clearColor, this.clearAlpha)), t.setRenderTarget(this.renderToScreen ? null : i), t.clear(), this.clearColor && t.setClearColor(o, a)
    }
}), THREE.RenderPass = function (t, e, i, n, r) {
    THREE.Pass.call(this), this.scene = t, this.camera = e, this.overrideMaterial = i, this.clearColor = n, this.clearAlpha = void 0 !== r ? r : 0, this.clear = !0, this.needsSwap = !1
}, THREE.RenderPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {
    constructor: THREE.RenderPass,
    render: function (t, e, i, n, r) {
        var o = t.autoClear;
        t.autoClear = !1, this.scene.overrideMaterial = this.overrideMaterial;
        var a, s;
        this.clearColor && (a = t.getClearColor().getHex(), s = t.getClearAlpha(), t.setClearColor(this.clearColor, this.clearAlpha)), t.render(this.scene, this.camera, this.renderToScreen ? null : i, this.clear), this.clearColor && t.setClearColor(a, s), this.scene.overrideMaterial = null, t.autoClear = o
    }
}), THREE.TexturePass = function (t, e) {
    THREE.Pass.call(this), void 0 === THREE.CopyShader && console.error("THREE.TexturePass relies on THREE.CopyShader");
    var i = THREE.CopyShader;
    this.map = t, this.opacity = void 0 !== e ? e : 1, this.uniforms = THREE.UniformsUtils.clone(i.uniforms), this.material = new THREE.ShaderMaterial({
        uniforms: this.uniforms,
        vertexShader: i.vertexShader,
        fragmentShader: i.fragmentShader,
        depthTest: !1,
        depthWrite: !1
    }), this.needsSwap = !1, this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1), this.scene = new THREE.Scene, this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null), this.scene.add(this.quad)
}, THREE.TexturePass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {
    constructor: THREE.TexturePass,
    render: function (t, e, i, n, r) {
        var o = t.autoClear;
        t.autoClear = !1, this.quad.material = this.material, this.uniforms.opacity.value = this.opacity, this.uniforms.tDiffuse.value = this.map, this.material.transparent = this.opacity < 1, t.render(this.scene, this.camera, this.renderToScreen ? null : i, this.clear), t.autoClear = o
    }
}), THREE.ShaderPass = function (t, e) {
    THREE.Pass.call(this), this.textureID = void 0 !== e ? e : "tDiffuse", t instanceof THREE.ShaderMaterial ? (this.uniforms = t.uniforms, this.material = t) : t && (this.uniforms = THREE.UniformsUtils.clone(t.uniforms), this.material = new THREE.ShaderMaterial({
        defines: t.defines || {},
        uniforms: this.uniforms,
        vertexShader: t.vertexShader,
        fragmentShader: t.fragmentShader
    })), this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1), this.scene = new THREE.Scene, this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null), this.scene.add(this.quad)
}, THREE.ShaderPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {
    constructor: THREE.ShaderPass,
    render: function (t, e, i, n, r) {
        this.uniforms[this.textureID] && (this.uniforms[this.textureID].value = i.texture), this.quad.material = this.material, this.renderToScreen ? t.render(this.scene, this.camera) : t.render(this.scene, this.camera, e, this.clear)
    }
}), THREE.GlitchPass = function (t) {
    THREE.Pass.call(this), void 0 === THREE.DigitalGlitch && console.error("THREE.GlitchPass relies on THREE.DigitalGlitch");
    var e = THREE.DigitalGlitch;
    this.uniforms = THREE.UniformsUtils.clone(e.uniforms), void 0 == t && (t = 64), this.uniforms.tDisp.value = this.generateHeightmap(t), this.material = new THREE.ShaderMaterial({
        uniforms: this.uniforms,
        vertexShader: e.vertexShader,
        fragmentShader: e.fragmentShader
    }), this.camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1), this.scene = new THREE.Scene, this.quad = new THREE.Mesh(new THREE.PlaneBufferGeometry(2, 2), null), this.scene.add(this.quad), this.goWild = !1, this.curF = 0, this.lala = function () {
        this.generateTrigger()
    }
}, THREE.GlitchPass.prototype = Object.assign(Object.create(THREE.Pass.prototype), {
    constructor: THREE.GlitchPass,
    render: function (t, e, i, n, r) {
        this.curF < this.randX ? (this.uniforms.byp.value = 0, this.uniforms.tDiffuse.value = i.texture, this.uniforms.seed.value = Math.random(), this.curF % this.randX == 0 || 1 == this.goWild ? (this.uniforms.amount.value = Math.random() / 30, this.uniforms.angle.value = THREE.Math.randFloat(-Math.PI, Math.PI), this.uniforms.seed_x.value = THREE.Math.randFloat(-1, 1), this.uniforms.seed_y.value = THREE.Math.randFloat(-1, 1), this.uniforms.distortion_x.value = THREE.Math.randFloat(0, 1), this.uniforms.distortion_y.value = THREE.Math.randFloat(0, 1)) : this.curF % this.randX < this.randX / 5 ? (this.uniforms.amount.value = Math.random() / 90, this.uniforms.angle.value = THREE.Math.randFloat(-Math.PI, Math.PI), this.uniforms.distortion_x.value = THREE.Math.randFloat(0, 1), this.uniforms.distortion_y.value = THREE.Math.randFloat(0, 1), this.uniforms.seed_x.value = THREE.Math.randFloat(-.3, .3), this.uniforms.seed_y.value = THREE.Math.randFloat(-.3, .3)) : 0 == this.goWild && (this.uniforms.byp.value = 1), this.curF++) : (this.uniforms.tDiffuse.value = i.texture, this.uniforms.seed.value = 0, this.uniforms.byp.value = 1), this.quad.material = this.material, this.renderToScreen ? t.render(this.scene, this.camera) : t.render(this.scene, this.camera, e, this.clear)
    },
    generateTrigger: function () {
        this.curF = 0, this.randX = THREE.Math.randInt(20, 80)
    },
    generateHeightmap: function (t) {
        for (var e = new Float32Array(t * t * 3), i = t * t, n = 0; i > n; n++) {
            var r = THREE.Math.randFloat(0, 1);
            e[3 * n + 0] = r, e[3 * n + 1] = r, e[3 * n + 2] = r
        }
        var o = new THREE.DataTexture(e, t, t, THREE.RGBFormat, THREE.FloatType);
        return o.needsUpdate = !0, o
    }
}), THREE.CopyShader = {
    uniforms: {tDiffuse: {value: null}, opacity: {value: 1}},
    vertexShader: ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
    fragmentShader: ["uniform float opacity;", "uniform sampler2D tDiffuse;", "varying vec2 vUv;", "void main() {", "vec4 texel = texture2D( tDiffuse, vUv );", "gl_FragColor = opacity * texel;", "}"].join("\n")
}, THREE.DigitalGlitch = {
    uniforms: {
        tDiffuse: {value: null},
        tDisp: {value: null},
        byp: {value: 0},
        amount: {value: .08},
        angle: {value: .02},
        seed: {value: .02},
        seed_x: {value: .02},
        seed_y: {value: .02},
        distortion_x: {value: .5},
        distortion_y: {value: .6},
        col_s: {value: .2}
    },
    vertexShader: ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
    fragmentShader: ["uniform int byp;", "uniform sampler2D tDiffuse;", "uniform sampler2D tDisp;", "uniform float amount;", "uniform float angle;", "uniform float seed;", "uniform float seed_x;", "uniform float seed_y;", "uniform float distortion_x;", "uniform float distortion_y;", "uniform float col_s;", "varying vec2 vUv;", "float rand(vec2 co){", "return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);", "}", "void main() {", "if(byp<1) {", "vec2 p = vUv;", "float xs = floor(gl_FragCoord.x / 0.5);", "float ys = floor(gl_FragCoord.y / 0.5);", "vec4 normal = texture2D (tDisp, p*seed*seed);", "if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {", "if(seed_x>0.){", "p.y = 1. - (p.y + distortion_y);", "}", "else {", "p.y = distortion_y;", "}", "}", "if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {", "if(seed_y>0.){", "p.x=distortion_x;", "}", "else {", "p.x = 1. - (p.x + distortion_x);", "}", "}", "p.x+=normal.x*seed_x*(seed/5.);", "p.y+=normal.y*seed_y*(seed/5.);", "vec2 offset = amount * vec2( cos(angle), sin(angle));", "vec4 cr = texture2D(tDiffuse, p + offset);", "vec4 cga = texture2D(tDiffuse, p);", "vec4 cb = texture2D(tDiffuse, p - offset);", "gl_FragColor = vec4(cga.r, cga.g, cga.b, cga.a);", "vec4 snow = 70.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);", "gl_FragColor = gl_FragColor+ snow;", "}", "else {", "gl_FragColor=texture2D (tDiffuse, vUv);", "}", "}"].join("\n")
}, THREE.HorizontalBlurShader = {
    uniforms: {tDiffuse: {value: null}, h: {value: 1 / 512}},
    vertexShader: ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
    fragmentShader: ["uniform sampler2D tDiffuse;", "uniform float h;", "varying vec2 vUv;", "void main() {", "vec4 sum = vec4( 0.0 );", "sum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;", "sum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;", "sum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;", "sum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;", "sum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;", "sum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;", "sum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;", "sum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;", "gl_FragColor = sum;", "}"].join("\n")
}, THREE.VerticalBlurShader = {
    uniforms: {tDiffuse: {value: null}, v: {value: 1 / 512}},
    vertexShader: ["varying vec2 vUv;", "void main() {", "vUv = uv;", "gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );", "}"].join("\n"),
    fragmentShader: ["uniform sampler2D tDiffuse;", "uniform float v;", "varying vec2 vUv;", "void main() {", "vec4 sum = vec4( 0.0 );", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;", "sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;", "gl_FragColor = sum;", "}"].join("\n")
}, function (t, e) {
    "function" == typeof define && define.amd ? define(["jquery"], function (i) {
        return e(t, i)
    }) : "object" == typeof exports ? module.exports = e(t, require("jquery")) : e(t, jQuery)
}(this, function (t, e, i) {
    "use strict";

    function n() {
        "hidden" !== r && (a.hidden = l.pageVisibility ? a[r] : i)
    }

    for (var r, o, a = t.document, s = ["webkit", "o", "ms", "moz", ""], l = e.support || {}, h = ("onfocusin" in a && "hasFocus" in a ? "focusin focusout" : "focus blur"); (o = s.pop()) !== i;) if (r = (o ? o + "H" : "h") + "idden", l.pageVisibility = a[r] !== i, l.pageVisibility) {
        h = o + "visibilitychange";
        break
    }
    n(), e(/blur$/.test(h) ? t : a).on(h, function (t) {
        var o = t.type, s = t.originalEvent;
        if (s) {
            var l = s.toElement;
            (!/^focus./.test(o) || l === i && s.fromElement === i && s.relatedTarget === i) && e(a).triggerHandler(r && a[r] || /^(?:blur|focusout)$/.test(o) ? "hide" : "show"), n()
        }
    })
});
var relax = {};
relax.animation = {}, relax.browser = {}, relax.math = {}, relax.geom = {}, relax.color = {}, relax.performance = {}, relax.layout = {}, relax.caniuse = {}, relax.dom = {}, relax.tools = {}, relax.displayObject = {}, relax.geom.lineDistance = function (t, e) {
    var i = 0, n = 0;
    return i = e.x - t.x, i *= i, n = e.y - t.y, n *= n, Math.sqrt(i + n)
}, relax.geom.degToRad = function (t) {
    return t / 180 * Math.PI
}, relax.geom.radToDeg = function (t) {
    return 180 * t / Math.PI
}, relax.geom.getXYFromMouseTouchEvent = function (t) {
    var e = null;
    return t.originalEvent ? e = t.originalEvent.touches || t.originalEvent.changedTouches : t.changedTouches && (e = t.changedTouches), e ? {
        x: e[0].pageX,
        y: e[0].pageY,
        touches: e[0]
    } : {x: t.pageX, y: t.pageY, touches: null}
}, relax.geom.getDistanceFromLatLonInKm = function (t, e, i, n) {
    var r = 6371, o = relax.geom.degToRad(i - t), a = relax.geom.degToRad(n - e),
        s = Math.sin(o / 2) * Math.sin(o / 2) + Math.cos(relax.geom.degToRad(t)) * Math.cos(relax.geom.degToRad(i)) * Math.sin(a / 2) * Math.sin(a / 2),
        l = 2 * Math.atan2(Math.sqrt(s), Math.sqrt(1 - s)), h = r * l;
    return h
}, relax.dom.bindSelect = function (t, e, i) {
    var n = relax.browser.getInternetExplorerVersion() <= 8 && -1 !== relax.browser.getInternetExplorerVersion(), r = i;
    n ? $(t).bind("propertychange", function (t) {
        "propertychange" == t.type && "value" == event.propertyName.toLowerCase() && (t.target.selectedIndex = this.selectedIndex, r(t))
    }) : $(t).change(relax.dom.bind(e, r))
}, relax.dom.bind = function (t, e) {
    return function () {
        e.apply(t, arguments)
    }
}, relax.tools.checkInterface = function (t, e) {
    for (var i in e) if (typeof t[i] != typeof e[i]) return log("object failed to implement interface member " + i), !1;
    return !0
}, function () {
    var t = !1, e = /xyz/.test(function () {
        xyz
    }) ? /\b_super\b/ : /.*/;
    this.Class = function () {
    }, Class.extend = function (i) {
        function n() {
            !t && this.init && this.init.apply(this, arguments)
        }

        var r = this.prototype;
        t = !0;
        var o = new this;
        t = !1;
        for (var a in i) o[a] = "function" == typeof i[a] && "function" == typeof r[a] && e.test(i[a]) ? function (t, e) {
            return function () {
                var i = this._super;
                this._super = r[t];
                var n = e.apply(this, arguments);
                return this._super = i, n
            }
        }(a, i[a]) : i[a];
        return n.prototype = o, n.prototype.constructor = n, n.extend = arguments.callee, n
    }, "function" == typeof define && define.amd && define("Class", function () {
        return Class
    })
}(), relax.setLog = function (t) {
    t ? window.log = function () {
    } : -1 === relax.browser.getInternetExplorerVersion() ? (Function.prototype.bind && ("object" == typeof console || "function" == typeof console) && "object" == typeof console.log && ["log", "info", "warn", "error", "assert", "dir", "clear", "profile", "profileEnd"].forEach(function (t) {
        console[t] = this.call(console[t], console)
    }, Function.prototype.bind), window.log || (window.log = function () {
        var t, e, i, n, r = arguments, o = !1;
        if (log.history = log.history || [], log.history.push(arguments), log.detailPrint && log.needDetailPrint && (t = navigator.userAgent, e = /Windows\sNT\s(\d+\.\d+)/, console && console.log && /MSIE\s(\d+)/.test(t) && e.test(t) && parseFloat(e.exec(t)[1]) >= 6.1 && (o = !0)), o || "undefined" != typeof console && "function" == typeof console.log) if (log.detailPrint && log.needDetailPrint && log.needDetailPrint()) for (console.log("-----------------"), r = log.detailPrint(r), n = 0; n < r.length;) console.log(r[n]), n++; else 1 === Array.prototype.slice.call(r).length && "string" == typeof Array.prototype.slice.call(r)[0] ? console.log(Array.prototype.slice.call(r).toString()) : console.log(Array.prototype.slice.call(r)); else if (Function.prototype.bind || "undefined" == typeof console || "object" != typeof console.log) document.getElementById("firebug-lite") ? setTimeout(function () {
            window.log.apply(window, r)
        }, 500) : (i = document.createElement("script"), i.type = "text/javascript", i.id = "firebug-lite", i.src = "https://getfirebug.com/firebug-lite.js", document.getElementsByTagName("HEAD")[0].appendChild(i), setTimeout(function () {
            window.log.apply(window, r)
        }, 2e3)); else if (log.detailPrint) for (Function.prototype.call.call(console.log, console, Array.prototype.slice.call(["-----------------"])), r = log.detailPrint(r), n = 0; n < r.length;) Function.prototype.call.call(console.log, console, Array.prototype.slice.call([r[n]])), n++; else Function.prototype.call.call(console.log, console, Array.prototype.slice.call(r))
    })) : window.log = function () {
        if (log.history = log.history || [], log.history.push(arguments), this.console) {
            var t, e = arguments;
            e.callee = e.callee.caller, t = [].slice.call(e), "object" == typeof console.log ? log.apply.call(console.log, console, t) : console.log.apply(console, t)
        }
    }
}, function (t) {
    "use strict";
    var e, i = t.document, n = /^(#?[\w-]+|\.[\w-.]+)$/, r = /\./g, o = [].slice;
    t.query = function (t, a) {
        if (a = a || i, n.test(t)) switch (t.charAt(0)) {
            case"#":
                return [a.getElementById(t.substr(1))];
            case".":
                return e = t.substr(1).replace(r, " "), o.call(a.getElementsByClassName(e));
            default:
                return o.call(a.getElementsByTagName(t))
        }
        return o.call(a.querySelectorAll(t))
    }
}(this), function () {
    for (var t = 0, e = ["ms", "moz", "webkit", "o"], i = 0; i < e.length && !window.requestAnimationFrame; ++i) window.requestAnimationFrame = window[e[i] + "RequestAnimationFrame"], window.cancelRequestAnimationFrame = window[e[i] + "CancelRequestAnimationFrame"];
    window.requestAnimationFrame || (window.requestAnimationFrame = function (e, i) {
        var n = (new Date).getTime(), r = Math.max(0, 16 - (n - t)), o = window.setTimeout(function () {
            e(n + r)
        }, r);
        return t = n + r, o
    }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function (t) {
        clearTimeout(t)
    })
}(), relax || (relax = {}), relax.array || (relax.array = {}), relax.date = {}, relax.array.equals = function (t, e) {
    if (!e) return !1;
    if (t.length != e.length) return !1;
    for (var i = 0, n = z.length; n > i; i++) if (t[i] instanceof Array && e[i] instanceof Array) {
        if (!relax.array.equals(t[i], e[i])) return !1
    } else if (t[i] != e[i]) return !1;
    return !0
}, relax.array.equalInPercent = function (t, e) {
    if (!e) return 0;
    for (var i = 100 / t.length * .01, n = 0, r = 0, o = t.length; o > r; r++) t[r] == e[r] && r < e.length && (n += i);
    return n
}, relax.date.getWeek = function (t) {
    t = "int" == typeof t ? t : 1;
    var e = new Date(this.getFullYear(), 0, 1), i = e.getDay() - t;
    i = i >= 0 ? i : i + 7;
    var n, r = Math.floor((this.getTime() - e.getTime() - 6e4 * (this.getTimezoneOffset() - e.getTimezoneOffset())) / 864e5) + 1;
    return 4 > i ? (n = Math.floor((r + i - 1) / 7) + 1, n > 52 && (nYear = new Date(this.getFullYear() + 1, 0, 1), nday = nYear.getDay() - t, nday = nday >= 0 ? nday : nday + 7, n = nday < 4 ? 1 : 53)) : n = Math.floor((r + i - 1) / 7), n
}, HTMLElement.prototype.index || (HTMLElement.prototype.index = function () {
    for (var t = this, e = t.parentNode, i = 0; t.previousElementSibling;) i++, t = t.previousElementSibling;
    return this === e.children[i] ? i : -1
}), relax || (relax = {}), relax.browser || (relax.browser = {}), relax.browser.isIOS = function () {
    return navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPod/i) || navigator.userAgent.match(/iPad/i) ? !0 : !1
}, relax.browser.isMacintosh = function () {
    return navigator.platform.indexOf("Mac") > -1
}, relax.browser.isWindows = function () {
    return navigator.platform.indexOf("Win") > -1
}, relax.browser.isFirefox = function () {
    var t = navigator.userAgent;
    return t.lastIndexOf("Firefox/") > 0 ? Number(navigator.userAgent.match(/Firefox\/([1]{1}[7-9]{1}|[2-9]{1}[0-9]{1})/)[1]) : !1
}, relax.browser.getIOSVersion = function () {
    if (!relax.browser.isIOS()) return -1;
    var t = navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/), e = [parseInt(t[1], 10), parseInt(t[2], 10), parseInt(t[3] || 0, 10)];
    return parseFloat(e.join("."))
}, relax.browser.getAndroidVersion = function () {
    var t = navigator.userAgent.toLowerCase(), e = t.match(/android\s([0-9\.]*)/);
    return parseFloat(e ? e[1] : -1)
}, relax.browser.isTouch = function () {
    return !!("ontouchstart" in window) || !!("msmaxtouchpoints" in window.navigator)
}, relax.browser.isAndroid = function () {
    return navigator.userAgent.match(/Android/i)
}, relax.browser.isWindowsPhone = function () {
    return navigator.userAgent.match(/Windows Phone/i) || navigator.userAgent.match(/IEMobile/i) ? !0 : !1
}, relax.browser.isTablet = function () {
    var t = relax.browser.isAndroid() && !navigator.userAgent.match(/Mobile/i) && !navigator.userAgent.match(/mobile/i);
    return navigator.userAgent.match(/iPad/i) || t ? !0 : !1
}, relax.browser.isMobile = function () {
    var t = !relax.browser.isTablet() && (navigator.userAgent.match(/Mobile/i) || navigator.userAgent.match(/mobile/i)),
        e = !relax.browser.isTablet() && relax.browser.isIOS(), i = relax.browser.isWindowsPhone();
    return t || e || i ? !0 : !1
}, relax.browser.isWebKit = function () {
    return "WebkitAppearance" in document.documentElement.style
}, relax.browser.getInternetExplorerVersion = function () {
    var t = -1;
    if ("Microsoft Internet Explorer" == navigator.appName) {
        var e = navigator.userAgent, i = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})");
        null != i.exec(e) && (t = parseFloat(RegExp.$1))
    } else if ("Netscape" == navigator.appName) {
        var e = navigator.userAgent, i = new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})");
        null != i.exec(e) && (t = parseFloat(RegExp.$1))
    }
    return t
}, relax.browser.serverReachable = function (t, e) {
    (void 0 == e || null == e) && (e = !1);
    var i, n = new (window.ActiveXObject || XMLHttpRequest)("Microsoft.XMLHTTP");
    n.open("HEAD", "//" + window.location.hostname + "/?rand=" + Math.random(), e);
    try {
        n.send(), i = n.status;
        var r = !(i >= 200 && 300 > i || 304 === i);
        return t && t(r), r
    } catch (o) {
        return t && t(!0), !0
    }
}, relax || (relax = {}), relax.caniuse || (relax.caniuse = {}), relax.caniuse.pushstate = function () {
    return !(!window.history || !history.pushState)
}, relax.caniuse.serviceWorker = function () {
    return "serviceWorker" in navigator
}, relax.caniuse.canvas = function () {
    if (void 0 == this._canvasSupported || null == this._canvasSupported) {
        var t = document.createElement("canvas");
        this._canvasSupported = !(!t.getContext || !t.getContext("2d"))
    }
    return this._canvasSupported
}, relax.caniuse.localstorage = function () {
    try {
        return localStorage.setItem("rwatgg_hello_storage", "mod"), localStorage.removeItem("rwatgg_hello_storage"), !0
    } catch (t) {
        return !1
    }
}, relax.caniuse.cssBlendmodes = function () {
    try {
        if ("CSS" in window && "supports" in window.CSS) {
            var t = window.CSS.supports("mix-blend-mode", "soft-light");
            return t
        }
    } catch (e) {
        return !1
    }
    return !1
}, relax.caniuse.mp4 = function () {
    return "boolean" == typeof this._mp4Supported ? this._mp4Supported : (this._mp4Supported = !!document.createElement("video").canPlayType("video/mp4; codecs=avc1.42E01E,mp4a.40.2"), this._mp4Supported)
}, relax.caniuse.cssgradients = function () {
    if ("boolean" == typeof this.cssGradientSupported) return this.cssGradientSupported;
    var t = "background-image:", e = "gradient(linear,left top,right bottom,from(#9f9),to(white));",
        i = "linear-gradient(left top,#9f9, white);", n = " -webkit- -moz- -o- -ms- ".split(" "),
        r = (t + "-webkit- ".split(" ").join(e + t) + n.join(i + t)).slice(0, -t.length), o = document.createElement("div"), a = o.style;
    return a.cssText = r, this.cssGradientSupported = ("" + a.backgroundImage).indexOf("gradient") > -1, this.cssGradientSupported
}, relax.caniuse.WebGL = function () {
    if ("boolean" == typeof this._webglSupported) return this._webglSupported;
    var t = document.createElement("canvas");
    return this._webglSupported = !(!window.WebGLRenderingContext || !t.getContext("webgl") && !t.getContext("experimental-webgl")), this._webglSupported
}, relax.caniuse.AudioContext = function () {
    return window.AudioContext = window.AudioContext || window.webkitAudioContext, window.AudioContext ? !0 : !1
}, relax.caniuse.FileReader = function () {
    return !!(window.FileReader && window.File && window.FileList && window.Blob)
}, relax || (relax = {}), relax.color || (relax.color = {}), relax.color.rgb2hex = function (t, e, i, n, r) {
    function o(t) {
        var e = t.toString(16);
        return 1 == e.length ? "0" + e : e
    }

    return n || (n = 255), r ? n << 24 | t << 16 | e << 8 | i : (1 >= n && (n = Math.round(255 * n)), "#" + o(t) + o(e) + o(i))
}, relax.color.hex2rgb = function (t) {
    var e = {};
    return e.red = t >> 16 & 255, e.green = t >> 8 & 255, e.blue = 255 & t, e
}, relax.color.hex2css = function (t) {
    return "#" + t.toString(16)
}, relax.color.getBetweenColourByPercent = function (t, e, i) {
    var n = e >> 16, r = e >> 8 & 255, o = 255 & e;
    n += ((i >> 16) - n) * t, r += ((i >> 8 & 255) - r) * t, o += ((255 & i) - o) * t;
    var a = n << 16 | r << 8 | o;
    return relax.color.hex2css(a)
}, relax.color.similar = function (t, e, i) {
    i || (i = .01);
    var n = relax.color.hex2rgb(t), r = relax.color.hex2rgb(e);
    i = 195075 * i << 0;
    var o = 0;
    return o += Math.pow(n.red - r.red, 2), o += Math.pow(n.green - r.green, 2), o += Math.pow(n.blue - r.blue, 2), i >= o
}, relax.color.different = function (t, e, i) {
    i || (i = .01);
    for (var n = 0; n < e.length; n++) if (relax.color.similar(t, e[n], i)) return !1;
    return !0
}, relax.color.uniqueColours = function (t, e, i) {
    i || (i = .01);
    for (var n = [], r = 0; r < t.length && n.length < e; r++) relax.color.different(t[r], n, i) && n.push(t[r]);
    return n
}, relax.color.indexColours = function (t, e) {
    function i(t, e) {
        return t.count > e.count ? 1 : t.count < e.count ? -1 : 0
    }

    e || (e = !0);
    for (var n, r = t.getContext("2d"), o = r.getImageData(0, 0, t.width, t.height), a = o.data, s = {}, l = [], h = 0, s = a.length; s > h; h += 4) n = relax.color.rgb2hex(a[h], a[h + 1], a[h + 2]), l.push({
        colour: n,
        count: l.length
    });
    return e ? l.sort(i) : l
}, relax.color.averageColour = function (t) {
    for (var e = 0, i = 0, n = 0, r = 0, o = t.getContext("2d"), a = o.getImageData(0, 0, t.width, t.height), s = a.data, l = 0, h = s.length; h > l; l += 4) e += s[l], i += s[l + 1], n += s[l + 2], r++;
    return e = ~~(e / r), i = ~~(i / r), n = ~~(n / r), relax.color.rgb2hex(e, i, n, 1, !1)
}, relax.color.averageColours = function (t, e) {
    for (var i, n, r, o = new Array, a = Math.round(Math.sqrt(e)), s = t.getContext("2d"), l = 0, h = 0, u = 0, c = 0, p = Math.round(t.width / a), d = Math.round(t.height / a), f = 0; e > f; f++) i = document.createElement("canvas"), n = i.getContext("2d"), r = s.getImageData(u, c, p, d), n.putImageData(r, 10, 70), o.push(relax.color.averageColour(i)), h = f % a, u = p * h, c = d * l, h == a - 1 && l++;
    return o
}, relax.color.shadeColor = function (t, e) {
    var i = parseInt(t.slice(1), 16), n = 0 > e ? 0 : 255, r = 0 > e ? -1 * e : e, o = i >> 16, a = i >> 8 & 255, s = 255 & i;
    return "#" + (16777216 + 65536 * (Math.round((n - o) * r) + o) + 256 * (Math.round((n - a) * r) + a) + (Math.round((n - s) * r) + s)).toString(16).slice(1)
}, relax.color.blendColors = function (t, e, i) {
    var n = parseInt(t.slice(1), 16), r = parseInt(e.slice(1), 16), o = n >> 16, a = n >> 8 & 255, s = 255 & n, l = r >> 16,
        h = r >> 8 & 255, u = 255 & r;
    return "#" + (16777216 + 65536 * (Math.round((l - o) * i) + o) + 256 * (Math.round((h - a) * i) + a) + (Math.round((u - s) * i) + s)).toString(16).slice(1)
}, relax || (relax = {}), relax.displayObject || (relax.displayObject = {}), relax.displayObject.statsWrapper = {
    stats: null,
    init: function () {
        this.stats = new Stats, this.stats.getDomElement().style.position = "fixed", this.stats.getDomElement().style.left = "0px", this.stats.getDomElement().style.top = "0px", document.body.appendChild(this.stats.getDomElement()), RenderQue.add(this)
    },
    renderQueCall: function () {
        this.stats.update()
    }
}, relax.displayObject.Image = Class.extend({
    _callbacks: null,
    progress: 0,
    _convertToBase64: !1,
    _allowProgress: !1,
    src: null,
    data: null,
    loading: !1,
    loaded: !1,
    naturalWidth: 0,
    naturalHeight: 0,
    init: function (t) {
        t && t.src && (this.src = t.src), t && t.convertToBase64 === !0 && (this._convertToBase64 = !0), t && t.progress === !0 && (this._allowProgress = !0)
    },
    load: function (t, e, i) {
        if (this.progress = 0, this.loading = !0, "string" == typeof t) this.src = t, this._allowProgress = i === !0 ? !1 : !0; else {
            var e = t.callback;
            t.src && (this.src = t.src)
        }
        this.addCallback(e);
        var n = relax.browser.getInternetExplorerVersion() > 0 && relax.browser.getInternetExplorerVersion() < 10;
        !this._allowProgress || n ? (this.data = new Image, this.data.onload = relax.dom.bind(this, this.onImageLoaded), this.data.src = this.src) : (this.request = new XMLHttpRequest, this.request.onprogress = relax.dom.bind(this, this.onLoadProgress), this.request.onload = relax.dom.bind(this, this.onRequestLoaded), this.request.open("GET", this.src, !0), this.request.overrideMimeType("text/plain; charset=x-user-defined"), this.request.send(null))
    },
    addCallback: function (t) {
        this._callbacks || (this._callbacks = []), -1 == this._callbacks.indexOf(t) && this._callbacks.push(t)
    },
    onRequestLoaded: function () {
        this.progress = 1, -1 === this.src.indexOf(".gif") && this._convertToBase64 && this._allowProgress ? (this.data = new Image, this.data.onload = relax.dom.bind(this, this.onImageLoaded), this.data.src = "data:image/jpeg;base64," + this.base64Encode(this.request.responseText)) : this.data ? this.onImageLoaded() : (this.data = new Image, this.data.onload = relax.dom.bind(this, this.onImageLoaded), this.data.src = this.src)
    },
    onLoadProgress: function (t) {
        t.lengthComputable && !this.loaded && (this.progress = t.loaded / t.total)
    },
    stop: function () {
        this.loading = !1, this.data && !this.loaded && (this.data.src = ""), this.request && (this.request.onprogress = null, this.request.onload = null, this.request.abort());
    },
    getProgress: function () {
        return this._progress
    },
    dealoc: function () {
        this.stop(), this.data && (this.data.onload = void 0, this.data = null), this._callbacks = null, this.request = null
    },
    onImageLoaded: function () {
        this.loading = !1, this.progress = 1, this.naturalWidth = this.data.naturalWidth, this.naturalHeight = this.data.naturalHeight, this.loaded = !0;
        for (var t = 0; t < this._callbacks.length; t++) this._callbacks[t](this)
    },
    base64Encode: function (t) {
        for (var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", i = "", n = 0; n < t.length;) {
            var r, o, a = 255 & t.charCodeAt(n++), s = 255 & t.charCodeAt(n++), l = 255 & t.charCodeAt(n++), h = a >> 2,
                u = (3 & a) << 4 | s >> 4;
            isNaN(s) ? r = o = 64 : (r = (15 & s) << 2 | l >> 6, o = isNaN(l) ? 64 : 63 & l), i += e.charAt(h) + e.charAt(u) + e.charAt(r) + e.charAt(o)
        }
        return i
    }
}), relax || (relax = {}), relax.layout || (relax.layout = {}), relax.layout.DeviceOrientChange = function (t) {
    function e() {
        i = 90 === Math.abs(window.orientation) ? "landscape" : "portrait", t(i, window.orientation)
    }

    var i = 90 === Math.abs(window.orientation) ? "landscape" : "portrait";
    t(i, window.orientation), window.onorientationchange = e
}, relax.layout.scaleToRect = function (t, e) {
    e.style.width = t.w + "px", e.style.height = t.h + "px", e.style.marginLeft = t.overflowx + "px", e.style.marginTop = t.overflowy + "px"
}, relax.layout.getScaleRect = function (t, e, i, n, r, o) {
    var a = i, s = a / t * e;
    (n > s && !o || "width" === o || "only-width" === o) && (s = n, a = s / e * t);
    var l = "width" === o ? 0 : .5 * i - .5 * a, h = "height" === o ? 0 : .5 * n - .5 * s;
    return r || (r = function (t) {
        return t
    }), {w: r(a), h: r(s), overflowx: r(l), overflowy: r(h)}
}, "classList" in document.documentElement || !Object.defineProperty || "undefined" == typeof HTMLElement || Object.defineProperty(HTMLElement.prototype, "classList", {
    get: function () {
        function t(t) {
            return function (i) {
                var n = e.className.split(/\s+/), r = n.indexOf(i);
                t(n, r, i), e.className = n.join(" ")
            }
        }

        var e = this, i = {
            add: t(function (t, e, i) {
                ~e || t.push(i)
            }), remove: t(function (t, e) {
                ~e && t.splice(e, 1)
            }), toggle: t(function (t, e, i) {
                ~e ? t.splice(e, 1) : t.push(i)
            }), contains: function (t) {
                return !!~e.className.split(/\s+/).indexOf(t)
            }, item: function (t) {
                return e.className.split(/\s+/)[t] || null
            }
        };
        return Object.defineProperty(i, "length", {
            get: function () {
                return e.className.split(/\s+/).length
            }
        }), i
    }
}), window.location.origin || (window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ":" + window.location.port : "")), Object.keys || (Object.keys = function () {
    "use strict";
    var t = Object.prototype.hasOwnProperty, e = !{toString: null}.propertyIsEnumerable("toString"),
        i = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"],
        n = i.length;
    return function (r) {
        if ("object" != typeof r && ("function" != typeof r || null === r)) throw new TypeError("Object.keys called on non-object");
        var o, a, s = [];
        for (o in r) t.call(r, o) && s.push(o);
        if (e) for (a = 0; n > a; a++) t.call(r, i[a]) && s.push(i[a]);
        return s
    }
}()), Array.prototype.indexOf || (Array.prototype.indexOf = function (t) {
    var e = this.length >>> 0, i = Number(arguments[1]) || 0;
    for (i = 0 > i ? Math.ceil(i) : Math.floor(i), 0 > i && (i += e); e > i; i++) if (i in this && this[i] === t) return i;
    return -1
}), relax || (relax = {}), relax.math || (relax.math = {}), relax.math.norm = function (t, e, i) {
    return (t - e) / (i - e)
}, relax.math.lerp = function (t, e, i) {
    return (i - e) * t + e
}, relax.math.map = function (t, e, i, n, r) {
    return relax.math.lerp(relax.math.norm(t, e, i), n, r)
}, relax.math.clamp = function (t, e, i) {
    return Math.min(Math.max(t, e), i)
}, relax.math.convertToRange = function (t, e, i) {
    if (t < e[0]) return i[0];
    if (t > e[1]) return i[1];
    var n = e[1] - e[0], r = i[1] - i[0], o = t - e[0];
    return o * r / n + i[0]
};
var relax;
relax || (relax = {}), relax.draw || (relax.draw = {}), relax.draw.imageIntoCanvas = function (t, e) {
    var i, n, r;
    if (null == e && (e = !0), !t || void 0 === t.ctx || void 0 === t.image || void 0 === t.imageWidth || void 0 === t.imageHeight || void 0 === t.viewportWidth || void 0 === t.viewportHeight) throw new Error("imageIntoCanvas Error: all options are mandatory.");
    return "undefined" == typeof t.offsetX && (t.offsetX = 0), "undefined" == typeof t.offsetY && (t.offsetY = 0), i = t.viewportWidth / t.imageWidth, t.imageHeight * i < t.viewportHeight && (i = t.viewportHeight / t.imageHeight), n = .5 * t.viewportWidth - t.imageWidth * i * .5, r = .5 * t.viewportHeight - t.imageHeight * i * .5, n += t.offsetX, r += t.offsetY, e && t.ctx.save(), t.ctx.translate(Math.round(n), Math.round(r)), t.ctx.scale(i, i), t.ctx.drawImage(t.image, 0, 0), e ? t.ctx.restore() : void 0
};
var relax;
relax || (relax = {}), relax.numbers || (relax.numbers = {}), relax.numbers.splitInThousands = function (t, e) {
    return null == e && (e = ","), t.toString().replace(/\B(?=(\d{3})+(?!\d))/g, e)
}, relax || (relax = {}), relax.tools || (relax.tools = {}), relax.tools.shuffle = function (t) {
    for (var e, i, n = t.length; 0 !== n;) i = Math.floor(Math.random() * n), n -= 1, e = t[n], t[n] = t[i], t[i] = e;
    return t
}, relax.tools.cookie = {
    get: function (t) {
        var e, i, n, r = document.cookie.split(";");
        for (e = 0; e < r.length; e++) if (i = r[e].substr(0, r[e].indexOf("=")), n = r[e].substr(r[e].indexOf("=") + 1), i = i.replace(/^\s+|\s+$/g, ""), i == t) return unescape(n)
    }, set: function (t, e, i) {
        var n = new Date;
        n.setDate(n.getDate() + i);
        var r = escape(e) + (null === i ? "" : "; expires=" + n.toUTCString());
        document.cookie = t + "=" + r
    }, clear: function (t) {
        document.cookie = t + "=; expires=Thu, 01 Jan 1970 00:00:01 GMT;"
    }, check: function (t, e) {
        var i = this.get(t);
        return i && "" !== i && void 0 !== i && null !== i && "undefined" !== i ? !0 : !1
    }
}, relax.tools.throttle = function (t, e, i) {
    var n = null;
    return i || (i = this), function () {
        var r = arguments;
        clearTimeout(n), n = setTimeout(function () {
            i && t.apply(i, r)
        }, e)
    }
}, relax.tools.validateEmail = function (t) {
    var e = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return e.test(t)
}, relax.tools.validatePassword = function (t) {
    var e = /^[A-Za-z0-9!@#$%^&*()_]{1,50}$/;
    return e.test(t)
}, relax.tools.stripHTMLFromString = function (t) {
    var e = document.createElement("DIV");
    return e.innerHTML = t, e.textContent || e.innerText
}, relax.tools.popupwindow = function (t, e, i, n) {
    var r = screen.width / 2 - i / 2, o = screen.height / 2 - n / 2;
    return window.open(t, e, "toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=" + i + ", height=" + n + ", top=" + o + ", left=" + r)
}, relax.tools.DragAndSwipe = Class.extend({
    _el: null,
    _touchEventsAdded: !1,
    _pinchCallback: null,
    _swipeCallback: null,
    _dragCallback: null,
    _swipeThreshold: 100,
    _forceDirection: "xy",
    _startY: 0,
    _dragY: 0,
    _dragYTarget: 0,
    _startX: 0,
    _dragX: 0,
    _dragXTarget: 0,
    _mouseObj: null,
    startDragY: 0,
    startDragX: 0,
    _iid: null,
    _maxMinBoundries: null,
    _preventMoveDefault: !0,
    init: function (t, e) {
        null == relax.tools.DragAndSwipe.iid && (relax.tools.DragAndSwipe.iid = 0), relax.tools.DragAndSwipe.iid++, this._iid = "relax" + relax.tools.DragAndSwipe.iid, e && this.setPreventModeDefault(e.preventMoveDefault), this._el = t
    },
    setPreventModeDefault: function (t) {
        this._preventMoveDefault = Boolean(t)
    },
    setBoundries: function (t) {
        this._maxMinBoundries = t
    },
    _onTouchStart: function (t) {
        this._mouseObj = relax.geom.getXYFromMouseTouchEvent(t), this._startY = this._mouseObj.y, this._startX = this._mouseObj.x, this.startDragY = this._dragYTarget, this.startDragX = this._dragXTarget, this._onDragging()
    },
    _onTouchEnd: function (t) {
        if (this._dragY = this._dragYTarget, this._dragX = this._dragXTarget, this._swipeCallback && this._mouseObj) {
            var e = this._mouseObj.x > this._startX ? "left" : "right", i = this._mouseObj.y > this._startY ? "up" : "down",
                n = Math.abs(this._mouseObj.x - this._startX) > this._swipeThreshold,
                r = Math.abs(this._mouseObj.y - this._startY) > this._swipeThreshold, o = !1;
            "xy" === this._forceDirection ? (n || r) && (o = !0) : "x" === this._forceDirection && n ? o = !0 : "y" === this._forceDirection && r && (o = !0), o && this._swipeCallback({
                xDirection: e,
                yDirection: i
            })
        }
        this._onDragging()
    },
    _onTouchMove: function (t) {
        this._preventMoveDefault && t.preventDefault(), this._mouseObj = relax.geom.getXYFromMouseTouchEvent(t);
        var e = this._mouseObj.y - this._startY, i = this._mouseObj.x - this._startX, n = this._dragX + i, r = this._dragY + e,
            o = n < this._dragXTarget ? "left" : "right", a = r < this._dragYTarget ? "up" : "down";
        this._dragXTarget = n, this._dragYTarget = r, this._onDragging(o, a)
    },
    _onDragging: function (t, e) {
        this._maxMinBoundries && (this._maxMinBoundries.minSwipeX && (this._dragXTarget = Math.max(this._maxMinBoundries.minSwipeX, this._dragXTarget), this._dragX = Math.max(this._maxMinBoundries.minSwipeX, this._dragX)), this._maxMinBoundries.minSwipeY && (this._dragYTarget = Math.max(this._maxMinBoundries.minSwipeY, this._dragYTarget), this._dragY = Math.max(this._maxMinBoundries.minSwipeY, this._dragY)), this._maxMinBoundries.maxSwipeX && (this._dragXTarget = Math.min(this._maxMinBoundries.maxSwipeX, this._dragXTarget), this._dragX = Math.min(this._maxMinBoundries.maxSwipeX, this._dragX)), this._maxMinBoundries.maxSwipeY && (this._dragYTarget = Math.min(this._maxMinBoundries.maxSwipeY, this._dragYTarget), this._dragY = Math.min(this._maxMinBoundries.maxSwipeY, this._dragY))), this._dragCallback && this._dragCallback({
            xDirection: t,
            yDirection: e,
            x: this._dragXTarget,
            y: this._dragYTarget
        })
    },
    addEvents: function () {
        this._touchEventsAdded || (this._touchEventsAdded = !0, $(this._el).bind("touchstart." + this._iid, relax.dom.bind(this, this._onTouchStart)), $(this._el).bind("touchmove." + this._iid, relax.dom.bind(this, this._onTouchMove)), $(this._el).bind("touchend." + this._iid, relax.dom.bind(this, this._onTouchEnd)))
    },
    removeEvents: function () {
        this._touchEventsAdded = !1, $(this._el).unbind("touchstart." + this._iid + " touchmove." + this._iid + " touchend." + this._iid)
    },
    addSwipe: function (t, e, i) {
        i && (this._forceDirection = i), e && (this._swipeThreshold = e), this._swipeCallback = t, this.addEvents()
    },
    addDrag: function (t) {
        this._dragCallback = t, this.addEvents()
    },
    dealoc: function () {
        this._binded = !1, this.removeEvents(), this._el = null, this._callback = null
    }
}), relax.tools.PinchGestureWrapper = Class.extend({
    _el: null, _callback: null, _startScale: 0, _currentScale: 0, init: function (t, e) {
        this._el = t, this._callback = e, this._startScale = 0, this._currentScale = 0, this._onGestureStart = function (t) {
            t.preventDefault(), this._startScale = t.originalEvent.scale
        }, this._onGestureEnd = function (t) {
            t.preventDefault(), this._callback(this._startScale > this._currentScale)
        }, this._onGestureChange = function (t) {
            t.preventDefault(), this._currentScale = t.originalEvent.scale, this._callback(this._currentScale)
        }, $(this._el).bind("gesturestart.pinch", relax.dom.bind(this, this._onGestureStart)), $(this._el).bind("gesturechange.pinch", relax.dom.bind(this, this._onGestureChange)), $(this._el).bind("gestureend.pinch", relax.dom.bind(this, this._onGestureEnd))
    }, dealoc: function () {
        $(this._el).unbind("gesturestart.pinch gesturechange.pinch gestureend.pinch"), this._el = null, this._callback = null
    }
}), relax.tools.renderQue = {
    items: [], running: !1, rAF: null, render: function () {
        if (!this.items || 0 === this.items.length || !this.running) return this.running = !1, void cancelAnimationFrame(this.rAF);
        for (var t = 0; t < this.items.length; t++) this.items[t].renderQueCall();
        if (this.running) {
            var e = this;
            this.rAF = window.requestAnimationFrame(function () {
                e.render()
            })
        }
    }, has: function (t) {
        return -1 != this.items.indexOf(t)
    }, add: function (t) {
        if (t && this.items) {
            if (void 0 === t.renderQueCall) throw new Error("RenderQue requires objects to have a renderQueCall method for callback.");
            -1 === this.items.indexOf(t) && this.items.push(t)
        }
        if (!this.running) {
            this.running = !0;
            var e = this;
            this.rAF = window.requestAnimationFrame(function () {
                e.render()
            })
        }
    }, remove: function (t) {
        this.items && t && -1 !== this.items.indexOf(t) && this.items.splice(this.items.indexOf(t), 1), 0 === this.items.length && (this.running = !1)
    }
}, relax.tools.clone = function (t) {
    function e(t, e, i) {
        var n, r, o = {};
        for (n in e) r = e[n], n in t && (t[n] === r || n in o && o[n] === r) || (t[n] = i ? i(r) : r);
        return t
    }

    if (!t || "object" != typeof t || "[object Function]" === Object.prototype.toString.call(t)) return t;
    if (t.nodeType && "cloneNode" in t) return t.cloneNode(!0);
    if (t instanceof Date) return new Date(t.getTime());
    if (t instanceof RegExp) return new RegExp(t);
    var i, n, r;
    if (t instanceof Array) for (i = [], n = 0, r = t.length; r > n; ++n) n in t && i.push(clone(t[n])); else i = t.constructor ? new t.constructor : {};
    return e(i, t, clone)
}, relax || (relax = {}), relax.screen || (relax.screen = {}), relax.screen.isRetina = function () {
    return window.devicePixelRatio > 1
}, relax || (relax = {}), relax.animation || (relax.animation = {}), relax.animation.getTransitionEndEvent = function () {
    if (this.endValue) return this.endValue;
    var t, e = document.createElement("fakeelement"), i = {
        transition: "transitionend",
        OTransition: "oTransitionEnd",
        MozTransition: "transitionend",
        WebkitTransition: "webkitTransitionEnd"
    };
    for (t in i) void 0 !== e.style[t] && (this.endValue = i[t]);
    return this.endValue
}, relax.transitionEndString = relax.animation.getTransitionEndEvent();
var EventDispatcher;
relax.EventDispatcher = EventDispatcher = function () {
    function t() {
        this.eventChannel = {}, _.extend(this.eventChannel, Backbone.Events)
    }

    return t.prototype.eventChannel = null, t.prototype.trigger = function (t, e) {
        return null == e && (e = null), null !== e ? this.eventChannel.trigger(t, e) : this.eventChannel.trigger(t)
    }, t.prototype.bind = function (t, e, i, n) {
        if (null == n && (n = !1), !t || !e || !i) throw new Error("All parameters are mandatory");
        return this.eventChannel.on(t, e, i), n ? setTimeout(function (t) {
            return function () {
                return e.apply(i, [t])
            }
        }(this), 0) : void 0
    }, t.prototype.unbindAll = function (t) {
        if (!t) throw new Error("All parameters are mandatory");
        return this.eventChannel.off(null, null, t)
    }, t.prototype.unbind = function (t, e, i) {
        if (!t || !e || !i) throw new Error("All parameters are mandatory");
        return this.eventChannel.off(t, e, i)
    }, t.prototype.dealoc = function () {
        return this.eventChannel.unbind(), this.eventChannel = null
    }, t
}(), relax.Vector2d = function (t, e) {
    this.x = t || 0, this.y = e || 0
}, relax.Vector2d.prototype = {
    reset: function (t, e) {
        return this.x = t, this.y = e, this
    }, toString: function (t) {
        t = t || 3;
        var e = Math.pow(10, t);
        return "[" + Math.round(this.x * e) / e + ", " + Math.round(this.y * e) / e + "]"
    }, clone: function () {
        return new relax.Vector2d(this.x, this.y)
    }, copyTo: function (t) {
        t.x = this.x, t.y = this.y
    }, copyFrom: function (t) {
        this.x = t.x, this.y = t.y
    }, magnitude: function () {
        return Math.sqrt(this.x * this.x + this.y * this.y)
    }, magnitudeSquared: function () {
        return this.x * this.x + this.y * this.y
    }, normalise: function () {
        var t = this.magnitude();
        return this.x = this.x / t, this.y = this.y / t, this
    }, reverse: function () {
        return this.x = -this.x, this.y = -this.y, this
    }, plusEq: function (t) {
        return this.x += t.x, this.y += t.y, this
    }, plusNew: function (t) {
        return new relax.Vector2d(this.x + t.x, this.y + t.y)
    }, minusEq: function (t) {
        return this.x -= t.x, this.y -= t.y, this
    }, minusNew: function (t) {
        return new relax.Vector2d(this.x - t.x, this.y - t.y)
    }, multiplyEq: function (t) {
        return this.x *= t, this.y *= t, this
    }, multiplyNew: function (t) {
        var e = this.clone();
        return e.multiplyEq(t)
    }, divideEq: function (t) {
        return this.x /= t, this.y /= t, this
    }, divideNew: function (t) {
        var e = this.clone();
        return e.divideEq(t)
    }, dot: function (t) {
        return this.x * t.x + this.y * t.y
    }, angle: function (t) {
        return Math.atan2(this.y, this.x) * (t ? 1 : relax.Vector2dConst.TO_DEGREES)
    }, rotate: function (t, e) {
        var i = Math.cos(t * (e ? 1 : relax.Vector2dConst.TO_RADIANS)), n = Math.sin(t * (e ? 1 : relax.Vector2dConst.TO_RADIANS));
        return relax.Vector2dConst.temp.copyFrom(this), this.x = relax.Vector2dConst.temp.x * i - relax.Vector2dConst.temp.y * n, this.y = relax.Vector2dConst.temp.x * n + relax.Vector2dConst.temp.y * i, this
    }, equals: function (t) {
        return this.x == t.x && this.y == t.x
    }, isCloseTo: function (t, e) {
        return this.equals(t) ? !0 : (relax.Vector2dConst.temp.copyFrom(this), relax.Vector2dConst.temp.minusEq(t), relax.Vector2dConst.temp.magnitudeSquared() < e * e)
    }, rotateAroundPoint: function (t, e, i) {
        relax.Vector2dConst.temp.copyFrom(this), relax.Vector2dConst.temp.minusEq(t), relax.Vector2dConst.temp.rotate(e, i), relax.Vector2dConst.temp.plusEq(t), this.copyFrom(relax.Vector2dConst.temp)
    }, isMagLessThan: function (t) {
        return this.magnitudeSquared() < t * t
    }, isMagGreaterThan: function (t) {
        return this.magnitudeSquared() > t * t
    }
}, relax.Vector2dConst = {TO_DEGREES: 180 / Math.PI, TO_RADIANS: Math.PI / 180, temp: new relax.Vector2d};
var BasicRelaxService, __hasProp = {}.hasOwnProperty, __extends = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) __hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
};
try {
    relax.BasicRelaxService = BasicRelaxService = function (t) {
        function e() {
            return e.__super__.constructor.apply(this, arguments)
        }

        return __extends(e, t), e.prototype.initialize = function (t) {
            return this.url = "//services.rwatgg.com/" + t.client + "/" + t.service + "/"
        }, e.prototype.fetch = function (t) {
            return null == t && (t = new Object), t.success || (t.success = relax.dom.bind(this, this.onSuccess), t.error = relax.dom.bind(this, this.onError)), e.__super__.fetch.call(this, t)
        }, e.prototype.onSuccess = function (t, e) {
            return console ? console.log("%c RWATGG > UserLocation Success", "background: green; color: white;") : void 0
        }, e.prototype.onError = function (t, e) {
            var i;
            try {
                rwatgs.error.bot.report("BasicRelaxService error:", e.status)
            } catch (n) {
                i = n
            }
            return console && console.log("%c RWATGG > UserLocation Error: status:", "background: red; color: white;", e.status), console ? console.log("%c RWATGG > UserLocation Error: statusText:", "background: red; color: white;", e.statusText) : void 0
        }, e
    }(Backbone.Model)
} catch (_error) {
}
var UserLocation, __hasProp = {}.hasOwnProperty, __extends = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) __hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
};
try {
    relax.UserLocation = UserLocation = function (t) {
        function e() {
            return e.__super__.constructor.apply(this, arguments)
        }

        return __extends(e, t), e.prototype.initialize = function (t) {
            return this.url = "//services.rwatgg.com/" + t.client + "/location/"
        }, e.prototype.fetch = function (t) {
            var i, n, r;
            return null == t && (t = new Object), i = !0, relax.caniuse.localstorage() && sessionStorage.getItem("rwatgg_location") && (n = JSON.parse(sessionStorage.getItem("rwatgg_location")), r = n.timestamp - (new Date).getTime(), r > 0 && new Date(r).getHours() > 1 && (i = !1, this.set(n))), i ? (t.success || (t.success = relax.dom.bind(this, this.onSuccess), t.error = relax.dom.bind(this, this.onError)), e.__super__.fetch.call(this, t)) : void 0
        }, e.prototype.onSuccess = function (t, e) {
            return relax.caniuse.localstorage() && (this.set("timestamp", (new Date).getTime(), {silent: !0}), sessionStorage.setItem("rwatgg_location", JSON.stringify(this.toJSON()))), console ? console.log("%c RWATGG > UserLocation Success", "background: green; color: white;") : void 0
        }, e.prototype.onError = function (t, e) {
            var i;
            try {
                rwatgs.error.bot.report("services error:", e.status)
            } catch (n) {
                i = n
            }
            return console && console.log("%c RWATGG > UserLocation Error: status:", "background: red; color: white;", e.status), console ? console.log("%c RWATGG > UserLocation Error: statusText:", "background: red; color: white;", e.statusText) : void 0
        }, e
    }(Backbone.Model)
} catch (_error) {
}
var SocialFeed, __hasProp = {}.hasOwnProperty, __extends = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) __hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
};
try {
    relax.SocialFeed = SocialFeed = function (t) {
        function e() {
            return e.__super__.constructor.apply(this, arguments)
        }

        return __extends(e, t), e.prototype.initialize = function (t) {
            var e;
            if (!t.client) throw new Error("client needs to be defined.");
            if (!t.feed) throw new Error("feed needs to be defined.");
            return e = t.useProxy ? "/handlers/proxy.ashx?url=" : "//", this.url = e + "services.rwatgg.com/" + t.client + "/" + t.feed + "/"
        }, e.prototype.fetch = function (t) {
            return null == t && (t = new Object), t.success || (t.success = relax.dom.bind(this, this.onSuccess), t.error = relax.dom.bind(this, this.onError)), e.__super__.fetch.call(this, t)
        }, e.prototype.parse = function (t) {
            return {data: t}
        }, e.prototype.onSuccess = function (t, e) {
            return console ? console.log("%c RWATGG > " + this.get("feed") + " Success", "background: green; color: white;") : void 0
        }, e.prototype.onError = function (t, e) {
            var i;
            try {
                rwatgs.error.bot.report("services error:", this.url)
            } catch (n) {
                i = n
            }
            return console && console.log("%c RWATGG > " + this.get("feed") + " Error: status:", "background: red; color: white;", e.status), console ? console.log("%c RWATGG > " + this.get("feed") + " Error: statusText:", "background: red; color: white;", e.statusText) : void 0
        }, e
    }(Backbone.Model)
} catch (_error) {
}
var __hasProp = {}.hasOwnProperty, __extends = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) __hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
};
relax.Counter = function (t) {
    function e(t) {
        e.__super__.constructor.call(this), t.startStep && (this._currentStep = !isNaN(t.startStep)), t.direction && (this._direction = t.direction), t.maxSteps && (this._maxSteps = t.maxSteps), t.runThrough === !1 && (this._runThrough = t.runThrough), this._time = isNaN(t.time) ? relax.Counter.DEFAULT_TIME : t.time, this._currentStep = this._step = isNaN(t.step) ? relax.Counter.DEFAULT_STEP : t.step, t.doLoop && (this._loop = !0), t.stopOnEnd === !0 && (this._stopOnEnd = !0), t.autoStart && this.resume()
    }

    return __extends(e, t), e.ON_STEP_EVENT = "counter-step", e.ON_STEP_STOP_EVENT = "counter-stop", e.ON_STEP_START_EVENT = "counter-start", e.DEFAULT_TIME = 4e3, e.DEFAULT_STEP = 1, e.prototype._time = 0, e.prototype._step = 0, e.prototype._loop = !1, e.prototype._timeout = 0, e.prototype._stopOnEnd = !1, e.prototype._maxSteps = -1, e.prototype._isRunning = !1, e.prototype._runThrough = !0, e.prototype._direction = 1, e.prototype._currentStep = 0, e.prototype.resume = function () {
        return this.trigger(relax.Counter.ON_STEP_START_EVENT, this), this.start()
    }, e.prototype.start = function () {
        return this._isRunning = !0, clearTimeout(this._timeout), this._timeout = setTimeout(function (t) {
            return function () {
                return t.onStep()
            }
        }(this), this._time)
    }, e.prototype.pause = function () {
        return this._isRunning = !1, clearTimeout(this._timeout), this.trigger(relax.Counter.ON_STEP_STOP_EVENT, this)
    }, e.prototype.isRunning = function () {
        return this._isRunning
    }, e.prototype.setStep = function (t) {
        return this._currentStep = t, this.validateStep()
    }, e.prototype.getCurrentStep = function () {
        return this._currentStep
    }, e.prototype.next = function () {
        return this.setStep(this._currentStep + 1)
    }, e.prototype.prev = function () {
        return this.setStep(this._currentStep - 1)
    }, e.prototype.changeDirecion = function (t) {
        return null == t && (t = null), null !== t ? this._direction = t : this._direction *= -1
    }, e.prototype.resetTimer = function () {
        return this.start()
    }, e.prototype.dealoc = function () {
        return this._isRunning = !1, clearTimeout(this._timeout), e.__super__.dealoc.call(this)
    }, e.prototype.getStep = function () {
        return this._currentStep
    }, e.prototype.onStep = function () {
        return this._currentStep += this._step * this._direction, this.validateStep()
    }, e.prototype.validateStep = function () {
        var t;
        return t = !this._isRunning, this._stopOnEnd && this._currentStep >= this._maxSteps - 1 ? (t = !0, this._currentStep = this._maxSteps - 1) : this._loop && -1 !== this._maxSteps ? this._currentStep %= this._maxSteps : !this._loop && -1 !== this._maxSteps && (this._currentStep <= 0 || this._currentStep >= this._maxSteps - 1) && (this._direction *= -1), this._runThrough || (t = !0), this._currentStep < 0 ? this._loop ? this._currentStep = this._maxSteps + this._currentStep : this._currentStep = 0 : this._currentStep > this._maxSteps - 1 && -1 !== this._maxSteps && (this._currentStep = this._maxSteps), this.trigger(relax.Counter.ON_STEP_EVENT, this), !t && this._isRunning ? this.start() : void 0
    }, e
}(relax.EventDispatcher);
var GATracking;
relax.GATracking = GATracking = function () {
    function t() {
    }

    return t.prototype.page = function (t) {
        var e;
        log("tracking page:", t);
        try {
            return "undefined" != typeof _gaq ? _gaq.push(["_trackPageview", t]) : ga("send", "pageview", t)
        } catch (i) {
            return e = i, log("tracking error:", e)
        }
    }, t.prototype.event = function (t, e, i, n) {
        var r;
        log("tracking event:", t, e, i, n);
        try {
            return i && n ? "undefined" != typeof _gaq ? _gaq.push(["_trackEvent", t, e, i, n]) : ga("send", "event", t, e, i, n) : i ? "undefined" != typeof _gaq ? _gaq.push(["_trackEvent", t, e, i]) : ga("send", "event", t, e, i) : "undefined" != typeof _gaq ? _gaq.push(["_trackEvent", t, e]) : ga("send", "event", t, e)
        } catch (o) {
            return r = o, log("tracking error:", r)
        }
    }, t
}();
var SocialSharer;
relax.SocialSharer = SocialSharer = function () {
    function t() {
    }

    return t.prototype._facebookIsInitialized = !1, t.prototype.loadFacebook = function (t) {
        var e, i, n, r;
        if (!t.appId) throw new Error("Add facebook app id");
        return r = function (e) {
            return function () {
                return e._facebookIsInitialized = !0, FB.init({appId: t.appId, status: !0, cookie: !0, xfbml: !0, version: "v2.1"})
            }
        }(this), window.FB ? r() : (i = void 0, e = "facebook-jssdk", n = document.getElementsByTagName("script")[0], document.getElementById(e) ? void 0 : (i = document.createElement("script"), i.id = e, i.async = !0, i.src = "//connect.facebook.net/en_US/sdk.js", $("body").append(i), window.fbAsyncInit = r))
    }, t.prototype.shareFacebook = function (t) {
        var e, i, n, r, o, a, s;
        o = t.name, r = t.description, n = t.caption || "", a = t.picture || "", s = t.url || "http://" + window.location.host;
        try {
            return i = {method: "stream.publish", name: o, link: s, caption: n, description: r, picture: a}, FB.ui(i, function (e) {
                if (e && e.post_id) {
                    if (t.callback && t.callback(e), console && console.log) return console.log("Post was published.")
                } else if (t.callback && t.callback(e), console && console.log) return console.log("Post was NOT published.")
            })
        } catch (l) {
            return e = l, this.shareFacebookBasic(t)
        }
    }, t.prototype.shareFacebookBasic = function (t) {
        return window.open("http://www.facebook.com/sharer.php?u=" + t.url)
    }, t.prototype.shareEmail = function (t) {
        return document.location.href = "mailto:?subject=" + t.subject + "&body=" + t.body
    }, t.prototype.shareTwitter = function (t) {
        var e, i, n, r, o, a, s, l, h, u;
        return l = encodeURIComponent(t.text), u = t.width || 700, s = t.height || 400, h = encodeURIComponent(t.url) || encodeURIComponent("http://" + window.location.host), e = "https://twitter.com/intent/tweet?url=" + h + "&text=" + l, o = u, a = s, n = screen.availWidth / 2 - o, r = screen.availHeight / 2 - a, i = "width={width},height={height},toolbar=0,menubar=0,location=0,status=0,scrollbars=0,resizable=0,left={left},top={top}".replace("{width}", o).replace("{height}", a).replace("{left}", n).replace("{top}", r), window.open(e, "twitterShareWindow", i), !0
    }, t.prototype.googlePlus = function (t) {
        var e, i;
        return i = encodeURIComponent(t.url) || encodeURIComponent("http://" + window.location.host), e = "https://plus.google.com/share?url=" + i, window.open(e, "googlePlusShareWindow")
    }, t.prototype.sharePinterest = function (t) {
        var e, i, n;
        if (void 0 === t.image || "" === t.image) throw new Error("Pinterest: image param is missing");
        return n = encodeURIComponent(t.url) || encodeURIComponent("http://" + window.location.host), i = encodeURIComponent(t.text), e = "http://pinterest.com/pin/create/button/?url=" + n + "&media=" + t.image + "&description=" + i, window.open(e, "pinterestShareWindow")
    }, t
}();
var ImageLoader, __hasProp = {}.hasOwnProperty, __extends = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) __hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
};
window.relax.ImageLoader = ImageLoader = function (t) {
    function e(t) {
        var i, n, r, o, a, s, l, h, u, c, p, d, f, m, g, E, v, y, T, _, x, b, R, w, H, M;
        if (e.__super__.constructor.call(this), t.allowProgress === !0 && (this._allowProgress = t.allowProgress), !t.sources) throw new Error("ImageLoader: sources needs to be defined.");
        for (t.loadOrder && (this._loadOrder = t.loadOrder), this._loadCue = [], this._data = [], w = t.sources, f = 0, v = w.length; v > f; f++) p = w[f], this._data.push(new relax.displayObject.Image({
            src: p,
            progress: t.allowProgress === !0 ? !0 : !1
        })), this._data[p] = this._data.length - 1;
        if (this._loadOrder === relax.ImageLoader.ORDER_DIVIDE_AND_CONQUER) {
            for (h = [], H = t.sources, m = 0, y = H.length; y > m; m++) a = H[m], h.push(h.length);
            for (c = [], u = 0, c.push(h.splice(0, 1)[0]), c.push(h.splice(h.length - 1, 1)[0]); h.length > 0;) for (g = 0, T = h.length; T > g; g++) {
                for (i = h[g], u++, n = 0, l = u + 1, r = E = 1; l > E && (n += r % 2 === 0 ? Math.round((l - r) * (h.length / l)) : Math.round(r * (h.length / l)), d = null, h.length > 0 && (d = h.splice(n, 1)[0]), d && c.push(d), 0 !== h.length); r = E += 1) ;
                if (0 === h.length) break
            }
            for (b = 0, _ = c.length; _ > b; b++) s = c[b], this._loadCue.push(this._data[s])
        } else for (M = this._data, R = 0, x = M.length; x > R; R++) o = M[R], this._loadCue.push(o);
        this.length = this._data.length, t.autoload && this.load(!0)
    }

    return __extends(e, t), e.ORDER_LINEAR = "linear", e.ORDER_DIVIDE_AND_CONQUER = "divide-and-conquer", e.IMAGE_LOADED = "image-loaded", e.LOADED = "loaded", e.LOADING = "loading", e.prototype._data = null, e.prototype._toLoad = null, e.prototype._paused = !1, e.prototype._loadCue = null, e.prototype._loadOrder = e.ORDER_LINEAR, e.prototype._allowProgress = !1, e.prototype._leftToBeLoaded = -1, e.prototype._loadAllAtSameTime = !1, e.prototype.loaded = !1, e.prototype.length = 0, e.prototype.pause = function (t) {
        var e, i, n, r, o;
        if (null == t && (t = !1), this._paused = !0, t) {
            for (r = this._loadCue, o = [], i = 0, n = r.length; n > i; i++) e = r[i], e.loaded ? o.push(void 0) : o.push(e.stop());
            return o
        }
    }, e.prototype.resume = function () {
        return this._paused = !1, this.loaded ? void 0 : this.load(this._loadAllAtSameTime)
    }, e.prototype.load = function (t) {
        var e, i, n, r, o;
        if (null == t && (t = !1), !this._paused) {
            if (this._loadAllAtSameTime = t, !this.loaded) if (this._leftToBeLoaded = this._loadCue.length, this._loadAllAtSameTime) {
                if (this._loadAllAtSameTime) for (o = this._loadCue, n = 0, r = o.length; r > n; n++) e = o[n], e.loaded || e.load({callback: relax.dom.bind(this, this.onImageLoaded)})
            } else i = this.getNextImageToLoad(), null != i && i.load({callback: relax.dom.bind(this, this.onImageLoaded)});
            return this._allowProgress && !relax.tools.renderQue.has(this) ? relax.tools.renderQue.add(this) : void 0
        }
    }, e.prototype.renderQueCall = function () {
        var t, e, i, n, r;
        for (e = 0, r = this._data, i = 0, n = r.length; n > i; i++) t = r[i], e += t.progress / this._data.length;
        return e !== this._loadProgress ? (this._loadProgress = e, this.trigger(window.relax.ImageLoader.LOADING, this._loadProgress)) : void 0
    }, e.prototype.getNextImageToLoad = function () {
        var t, e, i, n;
        for (n = this._loadCue, e = 0, i = n.length; i > e; e++) if (t = n[e], !t.loading) return t
    }, e.prototype.onImageLoaded = function (t) {
        return this.trigger(relax.ImageLoader.IMAGE_LOADED, t), 0 === --this._leftToBeLoaded ? (this.loaded = !0, relax.tools.renderQue.has(this) && relax.tools.renderQue.remove(this), this.trigger(relax.ImageLoader.LOADED, this)) : void 0
    }, e.prototype.getImage = function (t, e) {
        var i, n, r, o, a, s;
        if (null == e && (e = !1), this._loadOrder === relax.ImageLoader.ORDER_DIVIDE_AND_CONQUER && (e = !0), r = null, isNaN(t)) {
            for (s = this._data, o = 0, a = s.length; a > o; o++) if (r = s[o], r.src === t) {
                if (!r.loaded) throw new Error("Trying to get image that is not loaded");
                return r
            }
        } else if (r = this._data[t], !r.loaded && !e) throw new Error("Trying to get image that is not loaded");
        if (e && !r.loaded) for (i = this._data.indexOf(r) + 1, n = this._data.indexOf(r) - 1; !r.loaded && (n >= 0 || i < this._data.length);) i < this._data.length && this._data[i].loaded ? r = this._data[i] : n >= 0 && this._data[n].loaded ? r = this._data[n] : (i += 1, n -= 1);
        return r
    }, e.prototype.dealoc = function () {
        var t, i, n, r;
        for (relax.tools.renderQue.has(this) && relax.tools.renderQue.remove(this), this._loadCue = null, r = this._data, i = 0, n = r.length; n > i; i++) t = r[i], t.dealoc();
        return e.__super__.dealoc.call(this)
    }, e
}(relax.EventDispatcher);
var StageModel, __hasProp = {}.hasOwnProperty, __extends = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) __hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
};
relax.StageModel = StageModel = function (t) {
    function e(t) {
        var i, n, r, o, a, s;
        if (e.__super__.constructor.call(this), t && t.mediaqueries) for (this._mediaQueries = t.mediaqueries, this._mediaQueries.sort(function (t) {
            return function (t, e) {
                return t.horizontalBreakPoint < e.horizontalBreakPoint ? -1 : t.horizontalBreakPoint > e.horizontalBreakPoint ? 1 : 0
            }
        }(this)), s = this._mediaQueries, o = 0, a = s.length; a > o; o++) if (i = s[o], !i.eventName) throw new Error("Stagemodel: eventName needs to be defined");
        this.scrollContext = t.scrollContext ? t.scrollContext : window, r = t.resizeContext ? t.resizeContext : window, n = t.orientationContext ? t.orientationContext : window, r.addEventListener("resize", relax.dom.bind(this, this.resize), !1), n.addEventListener("orientationchange", relax.dom.bind(this, this.resize), !1), this.scrollContext.addEventListener("scroll", relax.dom.bind(this, this.scroll), !1), this.updateScrollY(), this.resize(), relax.tools.renderQue.add(this)
    }

    return __extends(e, t), e.SCROLL = "stage:scroll", e.RESIZE = "stage:resize", e.RESPONSIVE_CHANGE = "stage:responsive", e.ORIENTATION_PORTRAIT = "portrait", e.ORIENTATION_LANDSCAPE = "landscape", e.prototype.w = 0, e.prototype.h = 0, e.prototype.halfh = 0, e.prototype.halfw = 0, e.prototype.scrollDirection = "", e.prototype.scrolling = !1, e.prototype._tempScrollY = 0, e.prototype._mediaQueries = null, e.prototype.currentMQ = "", e.prototype.performanceTimer = 0, e.prototype.orientationMode = "", Object.defineProperties(e.prototype, {
        scrollTop: {
            get: function () {
                return this._windowScrollY
            }
        }, scrolltop: {
            get: function () {
                return this._windowScrollY
            }
        }
    }), e.prototype.renderQueCall = function () {
        return this.scrolling ? (this.scrolling = !1, this.updateScrollY()) : void 0
    }, e.prototype.scroll = function (t) {
        return this.scrolling = !0
    }, e.prototype.updateScrollY = function () {
        return this.scrollContext !== window ? this._tempScrollY = this.scrollContext.scrollTop : 0 === document.documentElement.scrollTop ? this._tempScrollY = document.body.scrollTop : this._tempScrollY = document.documentElement.scrollTop,
            this.handleScroll()
    }, e.prototype.handleScroll = function () {
        return this.scrollDirection = this._tempScrollY < this.scrollTop ? -1 : this._tempScrollY > this.scrollTop ? 1 : 0, this._windowScrollY = this._tempScrollY, this.scrolltop = this.scrollTop, this.trigger(relax.StageModel.SCROLL, this)
    }, e.prototype.resize = function (t) {
        return this.updateScrollY(), this.w = document.documentElement.clientWidth || window.innerWidth, this.h = document.documentElement.clientHeight || window.innerHeight, this.halfw = .5 * this.w, this.halfh = .5 * this.h, this.orientationMode = this.w / this.h <= .87 ? relax.StageModel.ORIENTATION_PORTRAIT : relax.StageModel.ORIENTATION_LANDSCAPE, this.trigger(e.RESIZE, this), this._mediaQueries ? this.checkMediaQueries() : void 0
    }, e.prototype.checkMediaQueries = function (t) {
        var e, i, n, r, o;
        for (null == t && (t = !1), r = this._mediaQueries, o = [], i = 0, n = r.length; n > i; i++) {
            if (e = r[i], e.horizontalBreakPoint && e.horizontalBreakPoint > this.w) {
                (this.currentMQ !== e.eventName || t) && (this.currentMQ = e.eventName, this.trigger(relax.StageModel.RESPONSIVE_CHANGE, this));
                break
            }
            o.push(void 0)
        }
        return o
    }, e.prototype.bind = function (t, i, n, r) {
        return null == r && (r = !0), e.__super__.bind.call(this, t, i, n, r)
    }, e.prototype.dealoc = function () {
        throw new Error("Wow wow wow! You don't wanna do this!")
    }, e
}(relax.EventDispatcher), "object" == typeof module && module.exports && (module.exports = relax);
var DefaultPage, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
DefaultPage = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.ON_ANIMATED_IN = "on-animated-in", e.ON_ANIMATED_OUT = "on-animated-out", e._stageModel = null, e.prototype.haveEventsBound = !1, e.prototype.tagName = "div", e.prototype.className = "page", e.prototype._rendered = !1, e.setStageModel = function (t) {
        return e._stageModel = t
    }, e.prototype.render = function (t) {
        var e, i, n, r, o, a;
        if (null == t && (t = null), !this.model.get("is-from-initial-pageload") && !this._rendered) {
            if (e = _.extend("function" == typeof this.events ? this.events() : this.events, {"mouseenter a[single-cache='true']": "onCacheElementMouseEnter"}), setTimeout(function (t) {
                    return function () {
                        return t.delegateEvents(e)
                    }
                }(this), 0), n = _.extend(this.model.toJSON()), t) for (i in t) a = t[i], n[i] = a;
            window.templates ? (n.data = this.model.get("data"), r = this.model.getTemplate(), o = r(n), this.el.innerHTML = _.unescape(o)) : this.el.innerHTML = _.unescape(this.model.getTemplate())
        }
        return this._rendered = !0, this
    }, e.prototype.onAddedToDOM = function () {
        var t, i;
        return this.haveEventsBound || this.model.get("removed") ? void 0 : (this.haveEventsBound = !0, e._stageModel || console.warn("StageModel not set for default page! (DefaultPage.setStageModel(stageModel reference))"), null != (t = e._stageModel) && t.bind(relax.StageModel.RESIZE, this.resize, this, !0), null != (i = e._stageModel) && i.bind(relax.StageModel.SCROLL, this.scroll, this, !1), this.animateIn())
    }, e.prototype.onCacheElementMouseEnter = function (t) {
        return window.application.pages.fetchCache(t.currentTarget.getAttribute("href"))
    }, e.prototype.update = function (t) {
        return log("page update requested", t)
    }, e.prototype.resize = function (t) {
    }, e.prototype.scroll = function (t) {
    }, e.prototype.animateIn = function () {
        return this.trigger(e.ON_ANIMATED_IN)
    }, e.prototype.animateOut = function (t) {
        return this.trigger(e.ON_ANIMATED_OUT)
    }, e.prototype.dealoc = function () {
        var t;
        return null != (t = e._stageModel) && t.unbindAll(this), this.undelegateEvents(), this.unbind(), this.remove()
    }, e
}(Backbone.View);
var PageModel, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
PageModel = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.PAGES = {}, e.templateAliasRoutes = null, e.prototype.defaults = {
        active: !1,
        removed: !1,
        "animate-state": "pre-in"
    }, e.prototype.navigateTo = function () {
        var t, e, i, n, r;
        if (n = this.get("url").split("?")[0], i = this.get("parameters"), i && Object.keys(i).length > 0) {
            n += "?", t = 0;
            for (e in i) r = i[e], n += ++t < Object.keys(i).length ? e + "=" + r + "&" : e + "=" + r
        }
        return window.application.router.navigate(n)
    }, e.prototype.setActiveTo = function (t, i) {
        var n;
        return null == i && (i = null), e.PAGES["*"] || (e.PAGES["*"] = DefaultPage), this.set("active", t), this.get("active") ? this.get("view") ? void 0 : (n = e.PAGES[this.get("type")] ? e.PAGES[this.get("type")] : e.PAGES["*"], this.get("is-from-initial-pageload") ? this.set("view", new n({
            model: this,
            el: this.get("context").getElementsByClassName("page")[0]
        })) : this.set("view", new n({model: this})), this.get("view").el && this.get("view").el.classList.add(this.get("type")), this.onModelReady()) : this.removeView(i)
    }, e.prototype.getTemplate = function () {
        return this.get("data").template || "" === this.get("data").template ? this.get("data").template : window.templates[this.get("type")] ? _.template(window.templates[this.get("type")]) : e.templateAliasRoutes && e.templateAliasRoutes[this.get("type")] ? _.template(window.templates[e.templateAliasRoutes[this.get("type")]]) : (window.templates["default"] || (window.templates["default"] = "<div>Template is missing!</div>"), _.template(window.templates["default"]))
    }, e.prototype.onModelReady = function () {
        var t, e;
        return this.addType(), e = this.get("view"), e && (e.once(DefaultPage.ON_ANIMATED_IN, this.onAnimatedIn, this), e.render()), this.set({"animate-state": "pre-in"}), e ? this.get("prev-model") ? (t = this.get("prev-model"), t.get("removed") ? this.addViewToDOM() : t.once("removed", this.addViewToDOM, this)) : this.addViewToDOM() : void 0
    }, e.prototype.addViewToDOM = function () {
        var t;
        return t = this.get("view"), t.el ? (this.get("context").insertBefore(t.el, this.get("context").children[0] || null), t.onAddedToDOM()) : void 0
    }, e.prototype.addType = function () {
        return document.body.classList.add("page-" + this.get("type"))
    }, e.prototype.removeType = function () {
        return document.body.classList.remove("page-" + this.get("type"))
    }, e.prototype.removeView = function (t) {
        var e;
        return null == t && (t = null), e = this.get("view"), t && t.get("active") && t.get("is-overlay") && !this.get("is-overlay") ? void 0 : e ? (e.once(DefaultPage.ON_ANIMATED_OUT, this.onAnimatedOut, this), this.set({"animate-state": "pre-out"}), e.animateOut(t)) : this.remove()
    }, e.prototype.remove = function () {
        var t;
        return this.removeType(), this.trigger("destroy", this), this.set("removed", !0), this.trigger("removed"), this.unbind(), null != (t = this.get("collection")) && t.off("change", this), Backbone.Model.prototype.destroy.apply(this)
    }, e.prototype.onAnimatedIn = function () {
        return this.set({"animate-state": "in"}), this.trigger("ready")
    }, e.prototype.onAnimatedOut = function () {
        var t;
        return this.set({"animate-state": "out"}), null != (t = this.get("view")) && t.dealoc(), this.unset("view"), this.remove()
    }, e.addAliasRoutes = function (t) {
        return e.templateAliasRoutes = t
    }, e.setPageTypes = function (t) {
        return e.PAGES = t
    }, e
}(Backbone.Model);
var CachedAjax, PagesCollection, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
PagesCollection = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype.routeRootURL = "/", e.prototype.url = "", e.prototype.ajaxObj = null, e.prototype.offlineUrl = null, e.prototype._context = null, e.prototype._updateTypes = null, e.prototype.jsonOnly = !1, e.prototype._isFirstRender = !0, e.prototype._pageModelTypes = null, e._sessionStorageEnabled = !0, e._ignoredCacheTypes = [], e.prototype._overlayTypes = null, e.prototype._requestTimer = 0, e.prototype._dto = null, e.prototype.initialize = function (t) {
        return this._context = t.context ? t.context : t.$context, e._sessionStorageEnabled = relax.caniuse.localstorage(), t.storeInSession === !1 && (e._sessionStorageEnabled = !1), this.jsonOnly = t.jsonOnly, t.offlineUrl && (this.offlineUrl = t.offlineUrl), t.ignoredCacheTypes && (e._ignoredCacheTypes = t.ignoredCacheTypes), t.overlayTypes && (this._overlayTypes = t.overlayTypes), t.modelClasses ? this._pageModelTypes = t.modelClasses : this._pageModelTypes = [], this._pageModelTypes["*"] || (this._pageModelTypes["*"] = PageModel), t.updateTypes && (this._updateTypes = t.updateTypes), t ? this.routeRootURL = t.rootURL : void 0
    }, e.prototype.bindCacheElements = function () {
        var t, e, i, n, r, o;
        if (i = relax.browser.isTouch() && (relax.browser.isMobile() || relax.browser.isTablet()), !i) {
            for (r = document.querySelectorAll("a[single-cache=true]"), o = [], e = 0, n = r.length; n > e; e++) t = r[e], o.push(t.addEventListener("mouseenter", this.onCacheElementMouseEnter.bind(this)));
            return o
        }
    }, e.prototype.onCacheElementMouseEnter = function (t) {
        return this.fetchCache(t.currentTarget.getAttribute("href"))
    }, e.prototype.dealocModelsAndGetPrevious = function (t) {
        return null == t && (t = null), t ? (t.setActiveTo(!1, this.model), t) : this.model ? (this.model.setActiveTo(!1, this.model), this.model) : void 0
    }, e.prototype.fetch = function (t, e, i) {
        var n;
        return null == i && (i = {}), "undefined" != typeof console && null !== console && console.log("%c Single:PagesCollection > fetching page: '" + t + "', of type: '" + e + "'", "background: #e4e4e4; color: #888888"), document.body.classList.add("single-loading"), this._isFirstRender && (this.model = null), this.trigger("fetching", this.model), clearTimeout(this._requestTimer), this._dto = {
            type: e,
            url: t,
            parameters: i
        }, this._isFirstRender ? (n = window.globalJSON, this.jsonOnly && (n = window.globalJSON[0]), this.setModelData(n, !this.jsonOnly)) : this.makeAjaxCall(), this._isFirstRender = !1
    }, e.prototype.makeAjaxCall = function () {
        var t, e;
        return this.jsonOnly ? this.setModelData(this._dto) : (null != (t = this.ajaxObj) && t.abort(), this.isInCacheAndCansetData() ? void 0 : (this._requestTimer = setTimeout(function (t) {
            return function () {
                return "undefined" != typeof rwatgs && null !== rwatgs ? rwatgs.error.bot.report({
                    error: {
                        errorUrl: t._dto.url,
                        message: "RelaxSingle: page took more than 10 seconds to fetch ..."
                    }
                }) : void 0
            }
        }(this), 1e4), CachedAjax.checkIfCallIsActiveThenStop(this._dto.url), e = -1 === this._dto.url.indexOf("?") ? this.routeRootURL + this._dto.url + "?ajax=" : this.routeRootURL + this._dto.url + "&ajax=", this.ajaxObj = new XMLHttpRequest, this.ajaxObj.open("GET", e, !0), this.ajaxObj.onload = function (t) {
            return function () {
                var e, i, n;
                if (clearTimeout(t._requestTimer), t.ajaxObj.responseURL && window.location.href !== t.ajaxObj.responseURL && -1 === t.ajaxObj.responseURL.indexOf("ajax=")) return window.application.router.navigate(t.ajaxObj.responseURL);
                if (t.ajaxObj.status >= 200 && t.ajaxObj.status < 400 && "" !== t.ajaxObj.responseText) {
                    try {
                        e = JSON.parse(t.ajaxObj.responseText)
                    } catch (n) {
                        i = n, log("RelaxSingle: Code RED -> error parsing reponseText"), "undefined" != typeof rwatgs && null !== rwatgs && rwatgs.error.bot.report({
                            error: {
                                errorUrl: t._dto.url,
                                message: "RelaxSingle: Code RED -> error parsing reponseText"
                            }
                        })
                    }
                    return e ? t.onNewPageRequested(e) : t.onPageRequestError(t.ajaxObj.status)
                }
                return t.onPageRequestError(t.ajaxObj.status, "offline")
            }
        }(this), this.ajaxObj.onerror = function (t) {
            return function () {
                return clearTimeout(t._requestTimer), 0 === t.ajaxObj.status && "" === t.ajaxObj.responseText ? t.onPageRequestError(t.ajaxObj.status, "offline") : t.onPageRequestError(t.ajaxObj.status)
            }
        }(this), this.ajaxObj.send()))
    }, e.prototype.isInCacheAndCansetData = function () {
        var t, i;
        return i = !1, e.doesSessionCacheContain(this._dto.url) ? (t = e.getFromSessionStorage(this._dto.url), this.setModelData(JSON.parse(t)), !0) : !1
    }, e.prototype.isPageUpdateable = function (t) {
        return this._updateTypes && -1 !== this._updateTypes.indexOf(t) || "update-only" === t
    }, e.prototype.isPageOverlay = function (t) {
        return this._overlayTypes && -1 !== this._overlayTypes.indexOf(t)
    }, e.prototype.canPageUpdateAndBelong = function () {
        var t, e, i, n, r;
        return t = this.model.get("url").split("/"), e = this._dto.fragment.split("?")[0].split("/"), n = 1 === relax.array.equalInPercent(t, e), i = this.model.get("updateable"), r = this.model.get("prev-model"), r ? i && this.model.get("type") === r.get("type") ? !0 : this.model.get("type") !== r.get("type") ? !1 : !1 : !1
    }, e.prototype.setModelData = function (t, i) {
        var n, r, o, a, s, l, h, u, c, p;
        if (null == i && (i = !1), (this._dto !== t || void 0 === this._dto.data) && (this._dto.data = t), t.pageType && t.pageType !== this._dto.type && (this._dto.type = t.pageType.toLowerCase()), this._dto.fragment = Backbone.history.fragment, h = this.isPageOverlay(this._dto.type), u = this.isPageUpdateable(this._dto.type), r = !1, this.model && (r = this.canPageUpdateAndBelong()), this.model && u && r) return c = this.model.get("type") !== this._dto.type, c && this.model.removeType(), this.model.set("type", this._dto.type), this.model.set("data", this._dto.data), this.model.set("url", this._dto.url), this._dto.parameters && this.model.set("parameters", this._dto.parameters), c && this.model.addType(), this.updateModelView(this._dto);
        if (e._sessionStorageEnabled) if (e.cacheAllowedForType(this._dto.type)) {
            if (window.templates || void 0 !== t.template || (t.template = this._context.getElementsByClassName("page")[0].innerHTML), !this.jsonOnly) try {
                n = JSON.stringify(t), sessionStorage.setItem(e.handleUrl(this._dto.url), n)
            } catch (l) {
                s = l, log("RelaxSingle: Code RED -> sessionstorage error"), "undefined" != typeof rwatgs && null !== rwatgs && rwatgs.error.bot.report({
                    error: {
                        errorUrl: this._dto.url,
                        message: s.message
                    }
                })
            }
        } else e.removeFromStorage(this._dto.url);
        if (t.template || (t.template = ""), o = this._pageModelTypes[this._dto.type] ? this._pageModelTypes[this._dto.type] : this._pageModelTypes["*"], a = !0, this.model && this.model.get("url") !== this._dto.url ? h ? h && this.model && (p = this.model) : p = this.dealocModelsAndGetPrevious() : this.model && this.model.get("url") === this._dto.url && (a = !1), p && p.get("is-overlay")) {
            for (; p.get("is-overlay") && p.get("prev-model");) p = p.get("prev-model");
            p && p.get("url") === this._dto.url ? (this.model = p, a = !1) : this.dealocModelsAndGetPrevious(p)
        }
        return a ? (this.model = new o({data: t}), this.model.once("ready", relax.dom.bind(this, this.onModelReady)), this.model.set({
            context: this._context,
            url: this._dto.url,
            type: this._dto.type,
            parameters: this._dto.parameters,
            collection: this,
            updateable: u,
            "is-from-initial-pageload": i,
            "is-overlay": h
        }), p && this.model.set("prev-model", p), this.model.setActiveTo(!0), this.triggerUpdate()) : this.updateModelView(this._dto), this.model.get("data") && this.model.get("data").pageTitle ? document.title = this.model.get("data").pageTitle : void 0
    }, e.prototype.updateModelView = function (t) {
        return null == t && (t = null), this.model ? (!t && this._dto && (t = this._dto), this.model.set({
            data: this._dto.data,
            parameters: this._dto.parameters
        }), this.model.get && this.model.get("view") && this.model.get("view").update(t), this.triggerUpdate()) : void 0
    }, e.prototype.triggerUpdate = function () {
        return this.removeLoadingClass(), this.trigger("updated", this.model)
    }, e.prototype.removeLoadingClass = function () {
        return this._requestTimer && clearTimeout(this._requestTimer), setTimeout(function (t) {
            return function () {
                return document.body.classList.remove("single-loading")
            }
        }(this), 0)
    }, e.prototype.onModelReady = function () {
        return this.model.off("ready"), this.trigger("ready", this.model)
    }, e.prototype.checkIfModelExistWith = function (t) {
        var e;
        return e = null, _.each(this.models, function (i) {
            return i.get("url") === t ? e = i : void 0
        }), e
    }, e.prototype.onNewPageRequested = function (t) {
        return this.ajaxObj = null, this.setModelData(t)
    }, e.prototype.onPageRequestError = function (t, e) {
        var i, n;
        if (this.removeLoadingClass(), "offline" === e && null !== this.offlineUrl && relax.caniuse.serviceWorker()) return this._dto.url = this.offlineUrl, this.makeAjaxCall(this._dto), this.trigger("offline", this.model);
        this.isInCacheAndCansetData();
        try {
            if (e && "abort" !== e) return "undefined" != typeof rwatgs && null !== rwatgs ? rwatgs.error.bot.report({
                message: "RelaxSingle: Page Request Error:",
                errorUrl: this._dto.url,
                errorType: e
            }) : void 0
        } catch (n) {
            i = n
        }
    }, e.prototype.fetchCache = function (t) {
        return e.doesSessionCacheContain(t) ? void 0 : new CachedAjax(t)
    }, e.removeFromStorage = function (t) {
        return e._sessionStorageEnabled ? (t = e.handleUrl(t), -1 !== CachedAjax.urls.indexOf(t) && (CachedAjax.urls = CachedAjax.urls.splice(1, CachedAjax.urls.indexOf(t))), sessionStorage.removeItem(t)) : void 0
    }, e.cacheAllowedForType = function (t) {
        return e._ignoredCacheTypes && -1 !== e._ignoredCacheTypes.indexOf(t.toLowerCase()) ? !1 : !0
    }, e.handleUrl = function (t) {
        return "/" !== t.substr(0, 1) && (t = "/" + t), t
    }, e.getFromSessionStorage = function (t) {
        return t = e.handleUrl(t), sessionStorage.getItem(t)
    }, e.doesSessionCacheContain = function (t) {
        return t = e.handleUrl(t), e._sessionStorageEnabled && e.getFromSessionStorage(t) ? !0 : !1
    }, e
}(Backbone.Collection), CachedAjax = function () {
    function t(e) {
        this._url = e, this._url = PagesCollection.handleUrl(this._url), this._basicUrl = this._url, -1 === t.urls.indexOf(this._url) ? (t.urls.push(this._basicUrl), t.activeCacheCalls[this._basicUrl] = this, e = -1 === this._url.indexOf("?") ? this._url + "?ajax=" : this._url + "&ajax=", this.cacheAjaxObj = new XMLHttpRequest, this.cacheAjaxObj.open("GET", e, !0), this.cacheAjaxObj.onload = function (t) {
            return function () {
                var i;
                if (t.cacheAjaxObj.responseURL && -1 !== t.cacheAjaxObj.responseURL.indexOf("ajax=")) {
                    if (i = t.cacheAjaxObj.responseURL.indexOf(e), 200 === t.cacheAjaxObj.status && i) return t.onCachedPageRequested(t.cacheAjaxObj.responseText);
                    if (t.cacheAjaxObj.status < 200 || t.cacheAjaxObj.status >= 400 && i) return "undefined" != typeof rwatgs && null !== rwatgs ? rwatgs.error.bot.report({
                        error: {
                            errorUrl: e,
                            message: t.cacheAjaxObj.status + ", " + t.cacheAjaxObj.statusText
                        }
                    }) : void 0
                }
            }
        }(this), this.cacheAjaxObj.onerror = this.onPageRequestError.bind(this), this.cacheAjaxObj.send()) : this.dealoc()
    }

    return t.activeCacheCalls = [], t.urls = [], t.prototype._url = null, t.prototype._basicUrl = null, t.checkIfCallIsActiveThenStop = function (e) {
        var i;
        return e = PagesCollection.handleUrl(e), null != (i = t.activeCacheCalls[e]) && i.dealoc(), t.activeCacheCalls[e] = null
    }, t.prototype.onCachedPageRequested = function (t) {
        var e, i, n, r;
        try {
            r = JSON.parse(t).pageType, PagesCollection.cacheAllowedForType && PagesCollection.cacheAllowedForType(r) && (e = t, sessionStorage.setItem(this._url, e))
        } catch (n) {
            i = n, "undefined" != typeof rwatgs && null !== rwatgs && rwatgs.error.bot.report({
                error: {
                    errorUrl: this._url,
                    message: i.message
                }
            })
        }
        return this.dealoc()
    }, t.prototype.onPageRequestError = function (t) {
        var e;
        return e = null, 0 !== this.cacheAjaxObj.status && "" !== this.cacheAjaxObj.statusText ? e = this.cacheAjaxObj.status + ", " + this.cacheAjaxObj.statusText : this.cacheAjaxObj.response && this.cacheAjaxObj.responseText && (e = "response: " + this.cacheAjaxObj.response + " > responseText: " + this.cacheAjaxObj.responseText), e && "undefined" != typeof rwatgs && null !== rwatgs ? rwatgs.error.bot.report({
            error: {
                errorUrl: this._url,
                message: e
            }
        }) : void 0
    }, t.prototype.dealoc = function () {
        return delete t.activeCacheCalls[this._basicUrl], this.cacheAjaxObj && this.cacheAjaxObj.abort(), this.cacheAjaxObj = null, this._url = null, this._basicUrl = null, delete this
    }, t
}();
var Router, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
Router = function (t) {
    function e(t) {
        var i, n, r, o, a, s;
        null != (o = window.opener) && o.focus(), this.pages = t.pages, t.routes || (t.routes = {}), this._ignoreURLUpdate = t.ignoreURLUpdate, t.tracking && (this._tracking = t.tracking), a = this.buildRoutes(t.routes), i = JSON.parse(JSON.stringify(a));
        for (n in i) s = i[n], "/" === n.substr(n.length - 1, 1) ? (r = n.substr(0, n.length - 1), a[r] = s) : "/" !== n.substr(n.length - 1, 1) && (r = n + "/", a[r] = s);
        t.routes = a, e.__super__.constructor.call(this, t)
    }

    return extend(e, t), e.prototype.pages = null, e.prototype._tracking = null, e.prototype._currentFrag = null, e.prototype._ignoreURLUpdate = !1, e.prototype._hasRunFirstTime = !1, e.prototype._openInTab = !1, e.prototype._tabInterferingCharDown = !1, e.prototype.onKeyDown = function (t) {
        return (16 === t.keyCode || 9 === t.keyCode) && (this._tabInterferingCharDown = !0), !this._tabInterferingCharDown && (t.ctrlKey || t.metaKey || t.button && 1 === evnt.button) ? this._openInTab = !0 : void 0
    }, e.prototype.onKeyUp = function (t) {
        return (16 === t.keyCode || 9 === t.keyCode) && (this._tabInterferingCharDown = !1), this._openInTab = !1
    }, e.prototype.onWindowFocus = function (t) {
        return this._openInTab = !1, this._tabInterferingCharDown = !1
    }, e.prototype.buildRoutes = function (t) {
        var e, i, n, r, o, a, s, l, h;
        e = {}, e[""] = "homeRoute", a = this, i = function (t) {
            return a.on("route:" + t + "Route", function (e) {
                return function () {
                    return a.doRoute(Backbone.history.fragment, t)
                }
            }(this))
        }, o = function (t) {
            return function (i, n) {
                return "/" === n.substr(n.length - 1, n.length - 1) ? ("/" === n.substr(n.length - 1) && console && console.warn("Last character of route is / (forward-slash), cannot be! url in question:", n), e[t.getRouteStr(n)] = i + "Route", e[t.getRouteStr(n.split(0, n.length - 1))] = i + "Route") : (e[t.getRouteStr(n)] = i + "Route", e[t.getRouteStr(n + "/")] = i + "Route")
            }
        }(this);
        for (s in t) {
            if (h = t[s], "[object Array]" === Object.prototype.toString.call(h)) for (n = 0, r = h.length; r > n; n++) l = h[n], o(s, l); else o(s, h);
            new i(s)
        }
        return e["*notFound"] = "notFound", this.on("route:notFound", function (t) {
            return function (e) {
                return t.routeNotFound()
            }
        }(this)), e
    }, e.prototype.getRouteStr = function (t) {
        return !t && console && console.log ? console.warn("Single:Router, route param is undefined!") : "/" === t.substr(0, 1) ? t.substr(1, t.length) : t
    }, e.prototype.start = function (t) {
        var e, i, n, r;
        if (null == t && (t = null), t || (t = {}), t.rootURL || (t.rootURL = "/"), t.rootURL.length > 2 && console.warn && console.warn("Single:Router, be aware that rootURL is not '/' !"), r = -1 !== window.location.href.indexOf("localhost") ? !1 : window.history.pushState, null !== t.ignorePushState && t.ignorePushState === !0 && (r = !1), window.history.pushState || -1 !== window.location.href.indexOf("#") || t.ignorePushState !== !0 || (window.location.hash = window.location.pathname), Backbone.history.start({
                pushState: r,
                root: t.rootURL,
                silent: !1
            }), n = relax.browser.isTouch() && (relax.browser.isMobile() || relax.browser.isTablet()), !n && (!t || t && !t.preventFocusControl)) try {
            return document.onkeydown = this.onKeyDown.bind(this), document.onkeyup = this.onKeyUp.bind(this), window.addEventListener("focus", this.onWindowFocus.bind(this), !1), window.addEventListener("blur", this.onWindowFocus.bind(this), !1)
        } catch (i) {
            e = i
        }
    }, e.prototype.doRoute = function (t, e) {
        var i, n, r, o, a, s;
        return null == e && (e = ""), a = t.split("?"), o = {}, a.length >= 1 && (t = a[0], o = this.parseQueryString(window.location.href)), null != (s = this._tracking) && s.page(Backbone.history.fragment), i = t.split("?")[0], n = this._currentFrag === Backbone.history.fragment, n ? void 0 : (this._currentFrag = Backbone.history.fragment, r = e ? e : "not-defined", this.pages.fetch(Backbone.history.fragment, r, o))
    }, e.prototype.navigate = function (t, i) {
        var n, r, o, a, s, l, h, u;
        if (t = t.split("?ajax")[0], this._openInTab && !this._tabInterferingCharDown && (document.body.classList.remove("single-loading"), u = window.open(t, "_blank"))) return void u.focus();
        if (h = window.location.host, r = void 0 === t.split(h)[1] ? t : t.split(h)[1], a = r.split("?").length > 1, o = r.split("?")[0], s = !(!window.history || !history.pushState), this._ignoreURLUpdate) {
            if (this._currentFrag !== r) return this._currentFrag = r, Backbone.history.loadUrl(r)
        } else {
            if (l = !1, this._currentFrag && (n = this._currentFrag.split("?")[0], l = n === r, "/" !== n && "" !== n || "" !== o && "/" !== o || (l = !0)), !s) return window.location.href = r;
            if (!l) return e.__super__.navigate.call(this, r, {trigger: !0});
            if (this.pages.updateModelView(), a || Backbone.history.fragment.split("?").length > 1) return e.__super__.navigate.call(this, r, {trigger: !0})
        }
    }, e.prototype.navigateToParentPage = function () {
        var t, e, i;
        return i = Backbone.history.fragment, t = i.lastIndexOf("/"), e = i.substring(0, t + 1), this.navigate(e)
    }, e.prototype.routeNotFound = function () {
        return "undefined" != typeof console && null !== console && console.warn("Single:Router, route not found!", Backbone.history.fragment), this.doRoute(Backbone.history.fragment)
    }, e.prototype.addQueryString = function (t, e, i, n) {
        var r, o;
        return null == e && (e = null), null == i && (i = !0), null == n && (n = null), n || (n = Backbone.history.fragment), r = new RegExp("([?&])" + t + "=.*?(&|$)", "i"), o = -1 !== n.indexOf("?") ? "&" : "?", n = n.match(r) ? e ? n.replace(r, "$1" + t + "=" + e + "$2") : n.replace(r, "$1" + t) : e ? n + o + t + "=" + e : n + o + t, i && this.navigate(n), n
    }, e.prototype.removeQueryString = function (t, e, i) {
        var n, r;
        return null == e && (e = !0), null == i && (i = null), i || (i = Backbone.history.fragment), r = new RegExp("([?&])" + t + "=.*?(&|#|$)(.*)", "gi"), n = i.split("#"), i = i.replace(r, "$1$3").replace(/(&|\?)$/, ""), e && this.navigate(i), i
    }, e.prototype.parseQueryString = function (t) {
        var e, i, n, r, o, a;
        for (null == t && (t = null), null === t && (t = window.location.href), n = {}, r = function (t) {
            var e, i, r, o, a, s;
            if (o = new RegExp("([^?=&]+)(=([^&]*))?", "g"), r = t.match(o), r && r.length > 1) {
                for (s = [], e = i = 1, a = r.length; a > i; e = i += 1) "" !== r[e] ? s.push(n[r[e].split("=")[0]] = r[e].split("=")[1]) : s.push(void 0);
                return s
            }
        }, o = t.split("#"), e = 0, i = o.length; i > e; e++) a = o[e], r(a);
        return n
    }, e.prototype.getQueryStringParameter = function (t, e) {
        var i, n;
        return null == e && (e = null), t = t.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]"), i = new RegExp("[\\?&]" + t + "=([^&#]*)"), e || (e = window.location.href), n = i.exec(e), null === n ? "" : decodeURIComponent(n[1].replace(/\+/g, " "))
    }, e.prototype.updateQueryStringParameter = function (t, e) {
        return null == e && (e = null), this.addQueryString(t, e)
    }, e
}(Backbone.Router);
var DebugMenu;
DebugMenu = {
    enabled: !1, _el: null, _open: !0, router: null, init: function (t) {
        var e;
        if (!window.jQuery) throw new Error("DebugMenu debug requires jQuery to work");
        return DebugMenu.router = t.router, this.enabled = !0, t.pages.on("updated", this.onPageUpdated, this), e = "<b>RWATGG debug menu</b></br>", this._el = $("body").prepend("<div id='DebugMenu-debug'><div style='line-height: 16px; padding: 4px; padding-left: 6px; background-color: #FCF8E3; color: #555555; display: block; margin-left: 10px; margin-top: 10px; width: 280px;'>" + e + "</div>").find("#DebugMenu-debug"), this.buildTree(t.routes, this._el), this.addStyle(), t.open ? $("#DebugMenu-debug").addClass("open") : void 0
    }, addStyle: function () {
        var t, e, i;
        return t = "html,body{width:100%;height:100%;}#DebugMenu-debug{background:#e7e7e7;color:black;font-family:Georgia, Verdana;font-size:11px; line-height:11px;padding-right:10px;box-shadow:6px 7px 8px -4px #e7e7e7;overflow:auto;width:0;height:100%;position:fixed;z-index:9999999999999999;top:0;left:0;transition:width .5s cubic-bezier(0.190,1.000,0.220,1.000);-moz-transition:width .5s cubic-bezier(0.190,1.000,0.220,1.000);-webkit-transition:width .5s cubic-bezier(0.190,1.000,0.220,1.000);-o-transition:width .5s cubic-bezier(0.190,1.000,0.220,1.000);margin:0;}#DebugMenu-debug * {box-sizing: border-box;}#DebugMenu-debug.open{width:300px;}#DebugMenu-debug ul{overflow:hidden;margin:0;padding:0 0 0 15px;}#DebugMenu-debug > ul{margin-top:10px;margin-bottom:10px;padding:0 0 0 10px;}#DebugMenu-debug ul li{border:1px solid #fafafa;cursor:pointer;opacity:1;list-style:none;background:white;width:300px;transition:margin .25s cubic-bezier(0.190,1.000,0.220,1.000);-moz-transition:margin .25s cubic-bezier(0.190,1.000,0.220,1.000);-webkit-transition:margin .25s cubic-bezier(0.190,1.000,0.220,1.000);-o-transition:margin .25s cubic-bezier(0.190,1.000,0.220,1.000);margin:0;padding:7px 2px 7px 6px;}#DebugMenu-debug ul li.selected:before{content:'> ';}#DebugMenu-debug ul li.selected{background:#000000;color:#ffffff;margin:10px 0;}#DebugMenu-debug ul li.prev-selected{background:#e9e9e9;}#DebugMenu-debug ul li:hover{opacity:.7;}", e = document.getElementsByTagName("head")[0], i = document.createElement("style"), i.type = "text/css", i.styleSheet ? i.styleSheet.cssText = t : i.appendChild(document.createTextNode(t)), e.appendChild(i), $(document).bind("mousemove.debug", relax.dom.bind(this, this.onMouseMove))
    }, onMouseMove: function (t) {
        var e;
        return e = this._open, this._open = t.pageX <= (this._open ? 250 : 40), e !== this._open ? this._open ? $("#DebugMenu-debug").addClass("open") : $("#DebugMenu-debug").removeClass("open") : void 0
    }, buildTree: function (t, e, i) {
        var n, r, o, a, s, l, h;
        for (null == i && (i = null), l = [], r = 0, a = t.length; a > r; r++) s = t[r], o = s.url.split("/").join("-"), o = o.split("?").join("_").split("=").join("_").split("&").join("_"), n = e.append("<ul id='" + o + "-wrapper'></ul>").find("ul#" + o + "-wrapper"), h = i ? i + s.url : s.url, h = h.split("//").join("/"), new DebugMenu.DebugBtn(h, n.append("<li id='" + o + "-btn'><span>" + s.label + "</span></li>").find("#" + o + "-btn")), s.children && s.children.length > 0 ? l.push(this.buildTree(s.children, n, h)) : l.push(void 0);
        return l
    }, onPageUpdated: function (t) {
        return log("onPageUpdate", t)
    }
}, DebugMenu.DebugBtn = function () {
    function t(t, e) {
        this._url = t, this._el = e, this._el.click(relax.dom.bind(this, this.onClick))
    }

    return t.prototype._url = "", t.prototype._el = null, t.prototype.onClick = function (t) {
        return DebugMenu.router.navigate(this._url)
    }, t
}();
var RWATGGPageModel, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
RWATGGPageModel = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype.isTextType = function () {
        return "textpage" === this.get("type") ? !0 : !1
    }, e
}(PageModel);
var ScrollHandler;
ScrollHandler = function () {
    function t() {
        this.el = $("#pseudo-scroll"), this._stageModel = window.application.stageModel, this._stageModel.bind(StageModel.RESIZE, this.resize, this)
    }

    return t.prototype.el = null, t.prototype._h = 0, t.prototype._stageModel = null, t.TIME_SCROLL_SPEED = .1, t.prototype.setHeight = function (t) {
        return this._h = t, this.el.height(this._h)
    }, t.prototype.setY = function (t) {
        return $(window).scrollTop(t)
    }, t.prototype.resize = function (t) {
    }, t.prototype.getPercent = function () {
        var t, e;
        return t = this._h - this._stageModel.h, e = 1 - (t - this._stageModel.scrollTop) / t, isNaN(e) && (e = 0), e = Math.max(-4, Math.min(e, 1))
    }, t
}();
var SoundController;
SoundController = function () {
    function t() {
        var e, i, n;
        try {
            if (relax.caniuse.localstorage() && "true" === window.localStorage.getItem("disable-sound") && (t.disableSound = !0), relax.browser.isMobile() && (t.disableSound = !0), t.disableSound && $("#footer .mute-btn").remove(), t.disableSound) return;
            for ($.support.pageVisibility && ($(document).on("show.visibility", relax.dom.bind(this, this.onDocumentShow)), $(document).on("hide.visibility", relax.dom.bind(this, this.onDocumentHide))), this._mainLoop = new buzz.sound("/static/sound/Drone Loop (Main)", {formats: ["ogg", "mp3"]}), this._mainLoop.bind("canplaythrough", function (t) {
                return function () {
                    return t._caseLoop = new buzz.sound("/static/sound/Drone Loop (Case)", {
                        formats: ["ogg", "mp3"],
                        autoplay: !1
                    }), t._textLoop = new buzz.sound("/static/sound/Drone Loop (About)", {formats: ["ogg", "mp3"], autoplay: !1})
                }
            }(this)), this._mainLoop.play().fadeIn(3e3).loop(), window.application.pages.on("updated", this.onPageUpdated, this), this._sounds = [], this._sounds.hover = [], this._sounds.hover_index = -1, e = i = 1; 8 >= i; e = i += 1) this._sounds.hover.push(new buzz.sound("/static/sound/Bit " + e, {formats: ["ogg", "mp3"]}));
            for (this._sounds.click = [], this._sounds.click_index = -1, e = n = 1; 6 >= n; e = n += 1) this._sounds.click.push(new buzz.sound("/static/sound/Click " + e, {formats: ["ogg", "mp3"]}));
            relax.caniuse.localstorage() && "true" === window.localStorage.getItem("muted") && (this.toggleMute(), $("#footer .mute-btn").addClass("selected"))
        } catch (r) {
        }
    }

    return t.prototype._mainLoop = null, t.prototype._caseLoop = null, t.prototype._textLoop = null, t.prototype._magicCatLoop = null, t.prototype._sounds = null, t.prototype._mute = !1, t.disableSound = !1, t.prototype.toggleMute = function () {
        this._mute = !this._mute, relax.caniuse.localstorage() && window.localStorage.setItem("muted", this._mute ? "true" : "false");
        try {
            this._mute ? "undefined" != typeof buzz && null !== buzz && buzz.all().mute() : "undefined" != typeof buzz && null !== buzz && buzz.all().unmute()
        } catch (t) {
        }
        return {
            "catch": function (t) {
            }
        }
    }, t.prototype.onPageUpdated = function (e) {
        var i, n, r, o, a, s;
        if (!t.disableSound && !this._mute && -1 === e.get("type").toLowerCase().indexOf("filter")) {
            try {
                null != (i = this._magicCatLoop) && i.stop(), e.isTextType() ? (null != (n = this._caseLoop) && n.stop(), this._textLoop && (this._textLoop.setPercent(0).play().fadeIn(3e3).loop(), this._mainLoop.fadeOut(3e3, function () {
                    return this.stop()
                }))) : "case" === e.get("type") ? (null != (r = this._textLoop) && r.stop(), "work/magic-cat" === e.get("url") ? (this._magicCatLoop || (this._magicCatLoop = new buzz.sound("/static/sound/magic_cat", {formats: ["ogg", "mp3"]})), this._magicCatLoop.setPercent(0).play().fadeIn(1e3).loop(), this._mainLoop.stop(), null != (o = this._caseLoop) && o.fadeOut(3e3)) : this._caseLoop && (this._caseLoop.setPercent(0).play().fadeIn(3e3).loop(), this._mainLoop.fadeOut(3e3, function () {
                    return this.stop()
                }))) : (null != (a = this._caseLoop) && a.fadeOut(3e3, function () {
                    return this.stop()
                }), null != (s = this._textLoop) && s.fadeOut(3e3, function () {
                    return this.stop()
                }), this._mainLoop.play().fadeIn(3e3))
            } catch (l) {
            }
            return {
                "catch": function (t) {
                }
            }
        }
    }, t.prototype.play = function (e, i) {
        var n;
        if (null == e && (e = null), null == i && (i = -1), !t.disableSound && !this._mute) {
            try {
                if (e && this._sounds[e]) {
                    if (-1 !== i) n = i; else for (n = this._sounds[e + "_index"]; this._sounds[e + "_index"] === n;) n = Math.floor(Math.random() * this._sounds[e].length);
                    this._sounds[e + "_index"] = n, this._sounds[e][this._sounds[e + "_index"]].setPercent(0).play()
                }
            } catch (r) {
            }
            return {
                "catch": function (t) {
                }
            }
        }
    }, t.prototype.onDocumentShow = function () {
        return this._mute ? void 0 : "undefined" != typeof buzz && null !== buzz ? buzz.all().unmute() : void 0
    }, t.prototype.onDocumentHide = function () {
        return "undefined" != typeof buzz && null !== buzz ? buzz.all().mute() : void 0
    }, t
}();
var SiteMenuFilterModel, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
SiteMenuFilterModel = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype.defaults = {visible: !1, "button-visible": !0, filters: []}, e.prototype.initialize = function () {
        return window.application.pages.on("updated", this.onPageUpdated, this), this.set("view", new SiteMenuFilterView({
            el: "#filter-list",
            model: this
        })), this.set("button", new SiteMenuFilterButton({el: "#filter-button", model: this}))
    }, e.prototype.toggleFilter = function (t) {
        var e, i;
        return i = this.get("filters"), e = !0, -1 === i.indexOf(t) ? i.push(t) : (e = !1, i.splice(i.indexOf(t), 1)), 0 === i.length ? window.application.router.navigate("filter") : window.application.router.navigate("filter/" + i.toString()), e
    }, e.prototype.onPageUpdated = function (t) {
        var e, i, n;
        return n = t.get("url"), i = -1 !== n.indexOf("filter"), t && n && (e = n.split("filter/"), e[1] && (e = e[1].split(","), this.set("filters", e))), this.set("visible", i), this.get("view").update(this.get("filters"))
    }, e
}(Backbone.Model);
var ColorTheme, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
ColorTheme = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype.defaults = {primary: "black", secondary: "white"}, e.prototype.initialize = function () {
        return window.application.pages.on("updated", this.onPageUpdated, this)
    }, e.prototype.onPageUpdated = function (t) {
        return this.get("name") && $("#color-background").removeClass("color-" + this.get("name")), this.get("name") && $("body").removeClass("color-" + this.get("name")), t.isTextType() ? this.set({
            name: "white",
            primary: "white",
            secondary: "black",
            rwatggCube: "black"
        }) : this.set({
            name: "black",
            primary: "black",
            secondary: "white",
            rwatggCube: "#fffde9"
        }), $("#color-background").addClass("color-" + this.get("name")), $("body").addClass("color-" + this.get("name"))
    }, e
}(Backbone.Model);
var ThreeWorld;
ThreeWorld = function () {
    function t(t) {
        this.camera = null, this._renderer = null, this.meshes = [], this._projector = new THREE.Projector, window.application.pages.on("updated", this.onPageChange, this), this.init(t)
    }

    return t.prototype.rwatggSphere = null, t.prototype._caseListAnimationProgress = 0, t.prototype._caseInteractionActive = !0, t.prototype._caseDotsVisible = null, t.prototype._rotateXTarget = 0, t.prototype._rotateX = 0, t.prototype._xTarget = 0, t.prototype._x = 0, t.prototype.onPageChange = function (t) {
        var e, i;
        return e = t.get("type"), i = t.get("url"), this._caseInteractionActive = "frontpage" === e, "menuFilter" === e || "menuFilterType" === e ? this._xTarget = 50 : this._xTarget = 0
    }, t.prototype.init = function (t) {
        var e, i, n, r, o, a, s;
        if (this.scene = new THREE.Scene, n = .01, i = 12e3, e = 50, this.camera = new THREE.PerspectiveCamera(e, window.innerWidth / window.innerHeight, n, i), Detector.webgl ? this._renderer = new THREE.WebGLRenderer({
                antialias: !0,
                alpha: !0
            }) : this._renderer = new THREE.CanvasRenderer({
                antialias: !0,
                alpha: !0
            }), Detector.webgl && (this.clock = new THREE.Clock, this.composer = new THREE.EffectComposer(this._renderer), s = new THREE.RenderPass(this.scene, this.camera), this.composer.addPass(s), relax.browser.isMobile() || (this.hblur = new THREE.ShaderPass(THREE.HorizontalBlurShader), this.hblur.uniforms.h.value = 0, this.composer.addPass(this.hblur), this.vblur = new THREE.ShaderPass(THREE.VerticalBlurShader), this.vblur.uniforms.v.value = 0, this.composer.addPass(this.vblur)), this.glitchPass = new THREE.GlitchPass, this.glitchPass.renderToScreen = !0, this.composer.addPass(this.glitchPass)), this._renderer.domElement.setAttribute("id", "wires"), this._renderer.setSize(window.innerWidth, window.innerHeight), document.getElementsByClassName("root")[0].appendChild(this._renderer.domElement), !relax.browser.isMobile()) for (r = o = 0, a = t.cases.length; a >= o; r = o += 1) $(t.cases[r]).attr("href") && this.buildMesh(r, {
            url: $(t.cases[r]).attr("href"),
            numCases: t.cases.length - 1,
            color: $(t.cases[r]).data("color")
        });
        return this.rwatggSphere = new RwatggSphere({
            scene: this.scene,
            camera: this.camera,
            projector: this._projector
        }), this.meshes.push(this.rwatggSphere), this.scene.add(this.rwatggSphere), this.scene.add(new THREE.AmbientLight(16777215, 1)), relax.tools.renderQue.add(this), window.application.stageModel.bind(StageModel.RESIZE, this.resize, this)
    }, t.prototype.throwAGlitch = function () {
        return this.glitchPass ? this.glitchPass.lala() : void 0
    }, t.prototype.buildMesh = function (t, e) {
    }, t.prototype.getMesh = function (t) {
        return this.meshes[t]
    }, t.prototype.peakABoo = function () {
        return this.rwatggSphere.updateVisible(!0), window.application.stageModel.bind(StageModel.SCROLL, this.scroll, this, !0)
    }, t.prototype.resize = function (t) {
        var e, i, n, r, o, a, s, l, h;
        for (this._renderer.setSize(t.w, t.h), null != (a = this.composer) && a.setSize(t.w, t.h), this.camera.aspect = t.w / t.h, this.camera.updateProjectionMatrix(), e = 14e3, l = this.camera.fov * Math.PI / 180, n = 2 * Math.tan(l / 2) * e, h = n * this.camera.aspect, s = this.meshes, r = 0, o = s.length; o > r; r++) i = s[r], i.resize(h, n);
        return this.renderQueCall()
    }, t.prototype.blurTarget = .5, t.prototype.lastScrollTop = 0, t.prototype.scroll = function () {
        var t, e, i;
        return t = window.application.scrollHandler.getPercent(), this._rotateXTarget = -.025 + .1 * t, i = window.application.scrollHandler._stageModel, e = Math.min(.75, i.scrollTop / i.halfh), this._caseInteractionActive || relax.browser.isMobile() || (e = 0), this.rwatggSphere.setScroll(e), this._caseDotsVisible = i.scrollTop > .1 * i.h, this.rwatggPercent = e, .75 > e && this._caseInteractionActive && (this.blurTarget = Math.abs(i.scrollTop - this.lastScrollTop), this.lastScrollTop = i.scrollTop), this._caseDotsVisible ? this.rwatggSphere.unelectricute() : this.rwatggSphere.electricute()
    }, t.prototype.renderQueCall = function () {
        var t, e, i, n, r, o, a;
        for (r = this.meshes, e = 0, i = r.length; i > e; e++) n = r[e], n.render();
        return this.composer ? (t = this.clock.getDelta(), this.composer.render(t)) : this._renderer.render(this.scene, this.camera), this._x += .01 * (this._xTarget - this._x), this.camera.position.x = this._x, this.hblur && this.vblur && Math.abs(0 - this.blurTarget) > 1e-5 ? (this.blurTarget += .1 * (0 - this.blurTarget), o = .01 * this.blurTarget, a = relax.math.lerp(o, 0, .01), this.hblur.uniforms.h.value = a, this.vblur.uniforms.v.value = a) : void 0
    }, t
}();
var DotParticles;
DotParticles = function () {
    function t(e, i) {
        var n;
        null == i && (i = null), this._dot = e, i ? this.numParticles = i : this.numParticles = Math.round(relax.math.lerp(Math.random(), 5, 10)), n = new THREE.TextureLoader, n.load("/static/images/test-texture.jpg", function (e) {
            return function (i) {
                return t.baseMaterial = new THREE.MeshPhongMaterial({map: i}), e.createSystem()
            }
        }(this))
    }

    return t.prototype._system = null, t.prototype._dot = null, t.prototype.numParticles = 0, t.prototype.particleArea = 1e3, t.prototype._texture = null, t.prototype.setPercent = function (t) {
        var e, i, n, r, o, a;
        for (r = this.numParticles - t * this.numParticles, o = this.particleCache, a = [], e = 0, i = o.length; i > e; e++) n = o[e], this.particleCache.indexOf(n) < r ? a.push(n.visible = !0) : a.push(n.visible = !1);
        return a
    }, t.prototype.createSystem = function () {
        var e, i, n, r, o, a, s, l, h;
        for (this._system && this._dot.remove(this._system), this.particleCache = [], this.particlesGeom = new THREE.Geometry, this.pMaterial = new THREE.PointsMaterial({
            color: this._dot.getColor(),
            transparent: !1,
            size: relax.math.lerp(Math.random(), 5, 12)
        }), h = [], i = n = 0, l = this.numParticles; l >= n; i = n += 1) o = Math.round(relax.math.lerp(Math.random(), this.particleArea * -.5, .5 * this.particleArea)), a = Math.round(relax.math.lerp(Math.random(), this.particleArea * -.5, .5 * this.particleArea)), s = Math.round(relax.math.lerp(Math.random(), this.particleArea * -.5, .5 * this.particleArea)), e = new THREE.SphereGeometry(relax.math.lerp(Math.random(), 1, 4), relax.math.lerp(Math.random(), 1, 4), relax.math.lerp(Math.random(), 1, 4)), e.applyMatrix((new THREE.Matrix4).makeTranslation(o, a, s)), r = new THREE.Mesh(e, t.baseMaterial), r.rotation.x = Math.random() * Math.PI / 2, r.rotation.y = Math.random() * Math.PI / 2, r.rotation.z = Math.random() * Math.PI / 2, this.particleCache.push(r), h.push(this._dot.add(r));
        return h
    }, t.prototype.updateColorTo = function (t) {
    }, t.prototype.update = function () {
    }, t
}();
var WorldDot, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
WorldDot = function (t) {
    function e(t) {
        e.__super__.constructor.call(this, this.geometry, this.material), this._index = t.index, this._scene = t.scene, this._camera = t.camera, this._projector = t.projector, this.color = t.color, this._rotationSpeedVector = new THREE.Vector3(relax.math.lerp(Math.random(), -.01, .01), relax.math.lerp(Math.random(), -.01, .01), relax.math.lerp(Math.random(), -.01, .01)), _.extend(this, Backbone.Events), this.setGeometry(), this.material = new THREE.MeshBasicMaterial({
            color: "#ffffff",
            wireframe: !0
        }), this.lineMaterial = new THREE.LineBasicMaterial({
            color: "#ffffff",
            linewidth: 1
        }), this._targetVector = new THREE.Vector3(0, 0, 1e3), this.scale.set(.001, .001, .001), this.particles = new DotParticles(this)
    }

    return extend(e, t), e.prototype.geometry = null, e.prototype.material = null, e.prototype.lineMaterial = null, e.prototype.line = null, e.prototype.lineGeometry = null, e.prototype.nextMesh = null, e.prototype.color = null, e.prototype._active = !1, e.prototype._scene = null, e.prototype._camera = null, e.prototype._projector = null, e.prototype._index = -1, e.prototype._targetVector = null, e.prototype.particles = null, e.prototype._rotationSpeedVector = null, e.prototype._step = 0, e.INITIAL_SCREEN_POS = [{
        x: .140625,
        y: .74025974,
        z: -1e3,
        color: "#00ff00"
    }, {x: .234375, y: .68359375, z: -1e3, color: "#ff0000"}, {x: .34453125, y: .6953125, z: -1e3, color: "#ff00ff"}, {
        x: .44609375,
        y: .575520833,
        z: -1e3,
        color: "#00ffff"
    }, {x: .571875, y: .450520833, z: -1e3, color: "#0000ff"}, {x: .60703125, y: .216145833, z: -1e3, color: "#00ff00"}, {
        x: .75625,
        y: .227864583,
        z: -1e3,
        color: "#ff0000"
    }, {x: .88125, y: .109375, z: -1e3, color: "#ff00ff"}], e.prototype.setGeometry = function (t) {
        return null == t && (t = null), t || (t = Math.ceil(relax.math.lerp(Math.random(), 4, 8))), this.geometry = new THREE.SphereGeometry(t, 5, 5)
    }, e.prototype.connectMesh = function (t) {
        return this.nextMesh = t
    }, e.prototype.toXYCoords = function (t) {
        var e;
        return e = this._projector.projectVector(t.clone(), this._camera), e.x = (e.x + 1) / 2 * window.innerWidth, e.y = -(e.y - 1) / 2 * window.innerHeight, e
    }, e.prototype.updateColor = function (t) {
        return this.color = t, this.updateMaterial()
    }, e.prototype.show = function (t) {
        return null == t && (t = 0), TweenLite.to(this.scale, .2, {
            x: 1,
            y: 1,
            z: 1,
            delay: .1 * t,
            ease: "easeInOutCubic",
            onComplete: function (t) {
                return function () {
                    return t.trigger("animated-in", t)
                }
            }(this)
        })
    }, e.prototype.resize = function (t, e) {
        return this.updateTarget(this._step, {
            width: t,
            height: e
        }), this.line || (this.position.x = this._targetVector.x, this.position.y = this._targetVector.y, this.position.z = this._targetVector.z, this.setupLine()), this.render()
    }, e.prototype.active = function (t) {
        return this._active = t, this._active ? (this._targetVector.x = 0, this._targetVector.y = this._camera.position.y, this._targetVector.z = -20) : this.updateTarget(0), this.particles.createSystem(), this.updateMaterial()
    }, e.prototype.getColor = function () {
        return this._active ? this.color : 16777215
    }, e.prototype.updateMaterial = function () {
        return this.material = new THREE.MeshBasicMaterial({color: this.getColor(), wireframe: !0})
    }, e.prototype.updateTarget = function (t, i) {
        var n, r, o, a, s, l;
        return i && (this.ww = i.width, this.hh = i.height), r = this.ww * -.5, n = .5 * this.hh, this._step = t, 0 === t && (this._index < e.INITIAL_SCREEN_POS.length ? (a = e.INITIAL_SCREEN_POS[this._index].x, s = e.INITIAL_SCREEN_POS[this._index].y, l = e.INITIAL_SCREEN_POS[this._index].z) : (a = e.INITIAL_SCREEN_POS[e.INITIAL_SCREEN_POS.length - 1].x, s = e.INITIAL_SCREEN_POS[e.INITIAL_SCREEN_POS.length - 1].y, l = e.INITIAL_SCREEN_POS[e.INITIAL_SCREEN_POS.length - 1].z), this._targetVector.x = r + a * this.ww, this._targetVector.y = n + s * (-1 * this.hh), this._targetVector.z = l, this._index >= e.INITIAL_SCREEN_POS.length) ? (o = this._index - 7, this._targetVector.x += 150 * o, this._targetVector.y += relax.math.lerp(Math.random(), -20, 20), this._targetVector.z += 50 * o) : void 0
    }, e.prototype.updateToIndex = function (t) {
        var e, i;
        return this.ww && this.hh ? (i = this.ww * -.5, e = .5 * this.hh, this._targetVector.x = i + .9 * this.ww, this._targetVector.y = e + .5 * (-1 * this.hh), this._targetVector.z = this._targetVector.z) : void 0
    }, e.prototype.setupLine = function () {
        var t;
        return this.nextMesh ? (t = this.nextMesh.position, this.lineGeometry = new THREE.Geometry, this._bla = Math.floor(Math.random() * this.geometry.vertices.length), this._blabla = Math.floor(Math.random() * this.nextMesh.geometry.vertices.length), this.lineGeometry.vertices.push(this.position.clone()), this.lineGeometry.vertices.push(new THREE.Vector3(t.x, t.y, t.z)), this.line = new THREE.Line(this.lineGeometry, this.lineMaterial), this._scene.add(this.line)) : void 0
    }, e.prototype._bla = null, e.prototype._blabla = null, e.prototype.render = function () {
        var t, e, i, n, r, o;
        return n = this.position.x + .06 * (this._targetVector.x - this.position.x), r = this.position.y + .06 * (this._targetVector.y - this.position.y), o = this.position.z + .06 * (this._targetVector.z - this.position.z), this.position.x = n, this.position.y = r, this.position.z = o, this.rotation.x += this._rotationSpeedVector.x, this.rotation.y += this._rotationSpeedVector.y, this.rotation.z += this._rotationSpeedVector.z, this.lineGeometry && (e = this.geometry.vertices[this._bla].clone(), i = this.nextMesh.geometry.vertices[this._blabla].clone(), this.updateMatrixWorld(), e = this.localToWorld(e), i = this.nextMesh.localToWorld(i), this.lineGeometry.vertices[0].x = e.x, this.lineGeometry.vertices[0].y = e.y, this.lineGeometry.vertices[0].z = e.z, this.lineGeometry.vertices[1].x = relax.math.lerp(this.scale.x, this.position.x, i.x), this.lineGeometry.vertices[1].y = relax.math.lerp(this.scale.y, this.position.y, i.y), this.lineGeometry.vertices[1].z = relax.math.lerp(this.scale.z, this.position.z, i.z), this.line.geometry.verticesNeedUpdate = !0), this._text ? (t = this.toXYCoords(this.position), this._text.css({
            left: t.x,
            top: t.y,
            opacity: 1 - this._index / 14
        })) : void 0
    }, e
}(THREE.Mesh);
var ImageBlast, RwatggSphere, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
RwatggSphere = function (t) {
    function e(t) {
        this._scene = t.scene, this._camera = t.camera, this._projector = t.projector, _.extend(this, Backbone.Events), this._rotationSpeedVector = new THREE.Vector3(relax.math.lerp(Math.random(), -.01, .01), relax.math.lerp(Math.random(), -.01, .01), relax.math.lerp(Math.random(), -.01, .01)), this.material = new THREE.MeshBasicMaterial({wireframe: !0}), this.geometry = new THREE.SphereGeometry(80, 7, 7), e.__super__.constructor.call(this, this.geometry, this.material), this._targetVector = new THREE.Vector3(0, 0, this._currentZ), relax.browser.isMobile() || relax.browser.isTablet() ? this.position.z = this._targetVector.z = this._currentZ = -100 : this.position.z = this._currentZ, window.application.pages.on("updated", this.onPageChange, this), this.particles = new DotParticles(this, 10 * this.geometry.vertices.length), Modernizr.touch || (this._faceBlast = new ImageBlast({
            geometry: this.geometry.clone(),
            scene: this._scene,
            color: "#ffffff"
        }))
    }

    return extend(e, t), e.prototype._scene = null, e.prototype._camera = null, e.prototype._projector = null, e.prototype._rotationSpeedVector = null, e.prototype._targetVector = null, e.prototype._currentZ = 100, e.prototype._scrollZ = 0, e.prototype._mobileScrollY = 0, e.prototype.material = null, e.prototype._color = "#ffffff", e.prototype.particles = null, e.prototype._eletricuteTimer = 0, e.prototype._visible = !1, e.prototype.updateVisible = function (t) {
        return t && !this._visible ? (this._visible = !0, this._targetVector.z = this._currentZ, this.hiFromMenuItem(16777215, !0)) : void 0
    }, e.prototype.setScroll = function (t) {
        return relax.browser.isMobile() ? this._mobileScrollY = -10 + 10 * t : (this.particles.setPercent(t), this._scrollZ = 45 * t)
    }, e.prototype.onPageChange = function (t) {
        var e, i, n, r;
        return n = t.get("type"), r = t.get("url"), "frontpage" === n || "menuFilter" === n || "menuFilterType" === n ? (i = relax.browser.isMobile() ? -400 : -800, e = this._currentZ !== i, this._currentZ = i, e && (this._rotationSpeedVector = new THREE.Vector3(relax.math.lerp(Math.random(), -.005, .005), relax.math.lerp(Math.random(), -.005, .005), relax.math.lerp(Math.random(), -.005, .005)))) : t.isTextType() ? (this._currentZ = "contact" === t.get("url") ? -350 : -150, "textpage" === t.get("type") ? this._rotationSpeedVector = new THREE.Vector3(Math.random() > .5 ? -1e-4 : 1e-4, Math.random() > .5 ? -1e-4 : 1e-4, Math.random() > .5 ? -1e-4 : 1e-4) : this._rotationSpeedVector = new THREE.Vector3(relax.math.lerp(Math.random(), -.005, .005), relax.math.lerp(Math.random(), -.005, .005), relax.math.lerp(Math.random(), -.005, .005))) : (this._currentZ = 50, this._rotationSpeedVector = new THREE.Vector3(relax.math.lerp(Math.random(), -.001, .001), relax.math.lerp(Math.random(), -.001, .001), relax.math.lerp(Math.random(), -.001, .001))), this._color = new THREE.Color(window.application.colors.get("rwatggCube")), this._visible && (this._targetVector.z = this._currentZ), this.material.color = this._color, this.material.opacity = t.isTextType() ? .3 : 1, this.particles.updateColorTo(this._color)
    }, e.prototype.getColor = function () {
        return this.material.color
    }, e.prototype._hoverindex = 0, e.prototype.hiFromMenuItem = function (t, e, i) {
        return null == e && (e = !1), null == i && (i = null), this._faceBlast ? (this._eletricuteTimer && clearTimeout(this._eletricuteTimer), this._eletricuteTimer = setTimeout(function (e) {
            return function () {
                var i;
                return "number" == typeof t ? e._faceBlast.react(!0, !1, t) : e._faceBlast.react(!0, !1, null, t), null != (i = window.application.sounds) ? i.play("hover", 1 + e._hoverindex++ % 2) : void 0
            }
        }(this), e ? 0 : 150)) : void 0
    }, e.prototype.unhiFromMenuItem = function () {
        return this._eletricuteTimer ? clearTimeout(this._eletricuteTimer) : void 0
    }, e.prototype.electricute = function () {
    }, e.prototype.unelectricute = function () {
    }, e.prototype.resize = function (t, e) {
        var i, n;
        return n = t * -.5, i = .5 * e, this._targetVector.x = n + .5 * t, this._targetVector.y = i + -1 * e * .5, this.render()
    }, e.prototype.render = function () {
        var t, e, i, n;
        return e = this.position.x + .06 * (this._targetVector.x - this.position.x), i = this.position.y + .06 * (this._targetVector.y - this.position.y), n = this.position.z + .06 * (this._targetVector.z - this.position.z), n += this._scrollZ, i += this._mobileScrollY, this.position.x = e, this.position.y = i, this.position.z = n, this.rotation.x += this._rotationSpeedVector.x, this.rotation.y += this._rotationSpeedVector.y, this.rotation.z += this._rotationSpeedVector.z, null != (t = this._faceBlast) ? t.render(this.position, this.rotation) : void 0
    }, e
}(THREE.Mesh), ImageBlast = function () {
    function t(t) {
        var e, i, n, r, o;
        for (this.mesh = new THREE.Mesh, t.color || (t.color = "#ffffff"), this._geom = t.geometry, this._scene = t.scene, this._numFaces = t.geometry.faces.length, e = -1 === relax.browser.getInternetExplorerVersion() ? THREE.DoubleSide : THREE.FrontSide, this._materials = [new THREE.MeshLambertMaterial({
            side: e,
            map: THREE.ImageUtils.loadTexture("/static/images/texture-mapper.png"),
            transparent: !0,
            opacity: 0
        }), new THREE.MeshLambertMaterial({
            side: e,
            map: THREE.ImageUtils.loadTexture("/static/images/texture-mapper.png"),
            transparent: !0,
            opacity: .9
        }), new THREE.MeshLambertMaterial({
            side: e,
            map: THREE.ImageUtils.loadTexture("/static/images/texture-mapper.png"),
            transparent: !0,
            opacity: .9
        }), new THREE.MeshLambertMaterial({
            side: e,
            map: THREE.ImageUtils.loadTexture("/static/images/texture-mapper.png"),
            transparent: !0,
            opacity: .9
        }), new THREE.MeshLambertMaterial({
            side: e,
            map: THREE.ImageUtils.loadTexture("/static/images/texture-mapper.png"),
            transparent: !0,
            opacity: .9
        }), new THREE.MeshLambertMaterial({
            side: e,
            map: THREE.ImageUtils.loadTexture("/static/images/texture-mapper.png"),
            transparent: !0,
            opacity: .9
        })], this._geom.buffersNeedUpdate = !0, this._geom.uvsNeedUpdate = !0, this._faceMaterial = new THREE.MeshFaceMaterial(this._materials), this._loaded = !0, this._materialIndexs = [], i = n = 0, o = this._numFaces; o > n; i = n += 1) r = 1 + i % (this._materials.length - 2), this._materialIndexs.push(r)
    }

    return t.prototype._materialIndexs = null, t.prototype._randomIndexs = null, t.prototype._runningIndex = -1, t.prototype._faceMaterial = null, t.prototype._materials = null, t.prototype._numFaces = -1, t.prototype._reacting = !1, t.prototype._loaded = !1, t.prototype._scene = null, t.prototype._geom = null, t.prototype.mesh = null, t.prototype.stopLoop = function () {
        var t;
        return TweenLite.killTweensOf(this), this._reactTimer && clearTimeout(this._reactTimer), this._reactTimer = null, null != (t = this.mesh) && (t.visible = !1), this._reacting = !1
    }, t.prototype.react = function (t, e, i, n) {
        var r, o, a, s, l, h, u, c;
        if (null == t && (t = !1), null == e && (e = !1), null == i && (i = null), null == n && (n = null), this.stopLoop(), null != (h = this.mesh) && (h.visible = !0), null !== n) for (u = this._materials, o = 0, s = u.length; s > o; o++) l = u[o], l.map.image = n, l.map.needsUpdate = !0, l.needsUpdate = !0;
        if (this._reacting = !0, this.percent = 0, this._runningIndex = -1, t) {
            for (this._randomIndexs = [], r = a = 0, c = this._numFaces; c > a; r = a += 1) this._randomIndexs.push(r);
            this._randomIndexs.sort(function () {
                return .5 - Math.random()
            })
        }
        return TweenLite.to(this, .6, {
            percent: 2, ease: "linear", onUpdate: function (t) {
                return function () {
                    return t.update()
                }
            }(this), onComplete: function (i) {
                return function () {
                    var n;
                    return e ? (i._reactTimer && clearTimeout(i._reactTimer), i._reacting ? i._reactTimer = setTimeout(function () {
                        return i.react(t, e)
                    }, relax.math.lerp(Math.random(), 4e3, 8e3)) : void 0) : null != (n = i.mesh) ? n.visible = !1 : void 0
                }
            }(this)
        })
    }, t.prototype.update = function () {
        var t, e, i, n, r, o;
        if (r = this.percent, r = r > 1 ? 2 - r : r, n = Math.round(this._numFaces * r), n !== this._runningIndex) {
            for (this._runningIndex = n, this.mesh && this._scene.remove(this.mesh), this.mesh = new THREE.Mesh(this._geom.clone(), this._faceMaterial), this._scene.add(this.mesh), e = i = 0, o = this._numFaces; o > i; e = i += 1) t = this._randomIndexs ? this.mesh.geometry.faces[this._randomIndexs[e]] : this.mesh.geometry.faces[e], e < this._runningIndex && this.percent <= 1 || e > this._numFaces - this._runningIndex && this.percent > 1 ? t.materialIndex = this._materialIndexs[e] : t.materialIndex = 0;
            return this.mesh.geometry.colorsNeedUpdate = !0
        }
    }, t.prototype.render = function (t, e) {
        return this._loaded ? (this.mesh.position.x = t.x, this.mesh.position.y = t.y, this.mesh.position.z = t.z, this.mesh.rotation.x = e.x, this.mesh.rotation.y = e.y, this.mesh.rotation.z = e.z) : void 0
    }, t
}();
var IntroView, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
IntroView = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype._mobileRestrictedPercent = 0, e.prototype._currentLogoStep = 0, e.prototype._followScroll = !1, e.prototype._logoHeight = 0, e.prototype._logoWidth = 0, e.prototype._swiper = null, e.prototype._logo = null, e.prototype._text = null, e.prototype._scroll = null, e.prototype.progress = 0, e.INTRO_PERCENTAGE_OFSCROLL = .4, e.prototype.initialize = function () {
        return window.application.pages.on("updated", this.onPageUpdated, this), this._logo = this.$el.find(".logo"), this._text = this.$el.find(".intro-text"), this._scroll = this.el.getElementsByClassName("intro-scroll")[0], this._logoWidth = relax.browser.isMobile() ? 150 : 280, this._logoHeight = Math.round(.74566474 * this._logoWidth), this.setPercent(1e-4)
    }, e.prototype.runTheShow = function () {
        var t, e, i, n;
        return t = -1 === window.location.search.indexOf("develop"), n = t ? 1 : .1, e = t ? .5 : 0, i = t ? 1.5 : 0, TweenLite.to(this, n, {
            progress: .318181818,
            delay: e,
            onUpdate: function (t) {
                return function () {
                    return t.setPercent()
                }
            }(this),
            onComplete: function (t) {
                return function () {
                    return TweenLite.to(t, n, {
                        easing: "easeOutExpo", progress: 1, delay: i, onUpdate: function () {
                            return t.setPercent()
                        }, onComplete: function () {
                            return t.onRunningTheShow()
                        }
                    })
                }
            }(this)
        })
    }, e.prototype.onRunningTheShow = function () {
        return this.trigger("done"), this.$el.addClass("done"), this.$el.find(".logo-step-1_5").click(function (t) {
            return function () {
                return "/" === window.application.router._currentFrag ? $(window).scrollTop(0) : window.application.router.navigate("/")
            }
        }(this))
    }, e.prototype.onPageUpdated = function (t) {
        var e;
        return e = "frontpage" === t.get("type") || "" === t.get("type"), e || Modernizr.touch && (this._mobileRestrictedPercent = 1, this.setPercent(this._mobileRestrictedPercent)), this._followScroll = e
    }, e.prototype.setPercent = function () {
        var t, e, i, n, r, o, a, s, l, h, u, c;
        for (clearTimeout(this._removeTextTimer), this.progress > .85 && this.progress < 1 && !this._text.hasClass("show") || (this.progress < .85 && this._text.hasClass("show") ? (this._text.removeClass("show"), this._scroll.classList.remove("show")) : 1 === this.progress && this._text.hasClass("show") && (this._removeTextTimer = setTimeout(function (t) {
            return function () {
                return t._text.removeClass("show"), t._scroll.classList.remove("show")
            }
        }(this), 500))), o = 22, t = o * this.progress, this.$el.attr("class", ""), this._currentLogoStep = Math.round(o * this.progress), e = i = 0, a = this._currentLogoStep; a > i; e = i += 1) this.$el.addClass("step" + Math.max(e, 0));
        return l = .4, s = 1 - Math.max(0, this.progress - l) / (1 - l), r = relax.math.lerp(s, this._logoWidth, 2 * this._logoWidth), n = relax.math.lerp(s, this._logoHeight, 2 * this._logoHeight), c = 20 * this.progress, u = n - c + s * (window.application.stageModel.h - n), u = .5 * u - .5 * n, h = .5 * window.application.stageModel.w - .5 * r, this._logo.css({
            width: r,
            height: n,
            transform: "translateY(" + u + "px)"
        })
    }, e
}(Backbone.View);
var HoverBomb;
HoverBomb = function () {
    function t(t, e, i) {
        null == e && (e = !1), null == i && (i = 0), this._el = t, this.initialDelay = i, e ? (this._el.append('<div class="svg"></div>'), this._lineWidth = 2) : (this._el.append('<div class="background"></div><div class="svg"></div>'), this._bg = this._el.find(".background")[0], this._label = this._el.find(".label")[0])
    }

    return t.prototype._el = null, t.prototype._bg = null, t.prototype._label = null, t.prototype._lineWidth = 1, t.prototype.over = function (t) {
        var e, i, n, r, o, a;
        for (null == t && (t = null), this._over = !0, this._el.find("> .svg").html(""), o = this._el.width(), n = this._el.height(), e = SVG(this._el.find("> .svg")[0]).size(o, n), a = 0, r = 0; o > a;) i = function (i) {
            return function (a, s) {
                var l, h, u, c, p, d, f, m, g, E;
                return E = relax.math.lerp(Math.random(), 0, o), 0 >= a ? (c = a, p = relax.math.lerp(Math.random(), -10, n + 10), d = a + E, m = Math.random() > .5 ? -10 * Math.random() : n + 10 * Math.random()) : (c = a, p = Math.random() > .5 ? -10 * Math.random() : n + 10 * Math.random(), d = a + E, m = p >= n ? -10 * Math.random() : n + 10 * Math.random()), h = e.line(c, p, c, p).stroke({
                    width: i._lineWidth,
                    color: window.application.colors.get("secondary")
                }), u = {p: 0, i: r}, f = d - c, g = m - p, l = .06 * r++ + s, TweenMax.to(u, .2, {
                    p: 1,
                    delay: l,
                    ease: "easeInCubic",
                    onStart: function () {
                        return 0 === u.i && "function" == typeof t ? t() : void 0
                    },
                    onUpdate: function () {
                        return h.plot(c, p, c + f * u.p, p + g * u.p)
                    },
                    onComplete: function () {
                        return u.p = 0, TweenMax.to(u, .2, {
                            p: 1, onUpdate: function () {
                                return h.plot(c + f * u.p, p + g * u.p, d, m)
                            }
                        })
                    }
                })
            }
        }(this), i(a, this.initialDelay), a += this._label ? relax.math.lerp(Math.random(), 0, .5 * o) : relax.math.lerp(Math.random(), 0, .25 * o);
        return this.initialDelay = 0, this._label && (TweenMax.killTweensOf(this._label), TweenMax.to(this._label, .4, {
            opacity: 0,
            ease: "easeOutCubic"
        }), TweenMax.set(this._label, {delay: .2, transform: "translateX(-10px)"}), TweenMax.to(this._label, .2, {
            delay: .3,
            opacity: 1,
            color: window.application.colors.get("primary"),
            ease: "easeOutExpo",
            transform: "translateX(0px)"
        })), this._bg ? (TweenMax.killTweensOf(this._bg), TweenMax.to(this._bg, .2, {
            opacity: 1,
            background: window.application.colors.get("secondary"),
            delay: .3,
            ease: "easeOutCubic"
        })) : void 0
    }, t.prototype.out = function (t) {
        var e, i, n, r, o, a;
        if (null == t && (t = !1), this._over) {
            if (this._over = !1, !t) for (this._el.find("> .svg").html(""), o = this._el.width(), n = this._el.height(), e = SVG(this._el.find("> .svg")[0]).size(o, n), a = o, r = 0; a > 0;) i = function (t) {
                return function (i) {
                    var a, s, l, h, u, c, p, d, f;
                    return f = relax.math.lerp(Math.random(), 0, o), 0 >= i ? (l = i, h = relax.math.lerp(Math.random(), -10, n + 10), u = i + f, p = Math.random() > .5 ? -10 * Math.random() : n + 10 * Math.random()) : (l = i, h = Math.random() > .5 ? -10 * Math.random() : n + 10 * Math.random(), u = i + f, p = h >= n ? -10 * Math.random() : n + 10 * Math.random()), a = e.line(l, h, l, h).stroke({
                        width: t._lineWidth,
                        color: window.application.colors.get("secondary")
                    }), s = {p: 0}, c = u - l, d = p - h, TweenMax.to(s, .2, {
                        p: 1,
                        delay: .06 * r++,
                        ease: "easeInCubic",
                        onUpdate: function () {
                            return a.plot(l, h, l + c * s.p, h + d * s.p)
                        },
                        onComplete: function () {
                            return s.p = 0, TweenMax.to(s, .2, {
                                p: 1, onUpdate: function () {
                                    return a.plot(l + c * s.p, h + d * s.p, u, p)
                                }
                            })
                        }
                    })
                }
            }(this), i(a), a -= relax.math.lerp(Math.random(), 0, .25 * o);
            return this._bg && (TweenMax.killTweensOf(this._bg), TweenMax.to(this._bg, .2, {
                opacity: 0,
                ease: "easeOutCubic"
            })), this._label ? (TweenMax.killTweensOf(this._label), TweenMax.to(this._label, .2, {
                color: window.application.colors.get("secondary"),
                opacity: 1,
                transform: "translateX(0px)",
                ease: "easeOutExpo",
                onComplete: function (t) {
                    return function () {
                        return $(t._label).css("color", "")
                    }
                }(this)
            })) : void 0
        }
    }, t.prototype.dealoc = function () {
        return TweenMax.killTweensOf(this._label), TweenMax.killTweensOf(this._bg), this._bg = null, this._label = null, this._el = null
    }, t
}();
var SiteMenuFilterButton, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
SiteMenuFilterButton = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype.events = {click: "onClick", mouseenter: "onMouseOver"}, e.prototype.initialize = function () {
        return this.model.on("change:button-visible", this.onButtonVisibilityChange, this), this.model.on("change:visible", this.onVisibilityChange, this), this.onVisibilityChange()
    }, e.prototype.update = function (t) {
    }, e.prototype.onMouseOver = function () {
        return window.application.sounds.play("hover", 0)
    }, e.prototype.onVisibilityChange = function () {
        var t, e;
        return t = this.$el.find("span").eq(0), e = this.model.get("visible") ? t.data("alt-label") : t.data("label"), t.text(e)
    }, e.prototype.onButtonVisibilityChange = function () {
    }, e.prototype.onClick = function (t) {
        var e;
        return this.model.get("button-visible") ? (t.preventDefault(), -1 !== Backbone.history.fragment.indexOf("filter") ? (window.application.router.navigate("/"), window.application.sounds.play("click", 2)) : (e = this.model.get("filters"), window.application.sounds.play("click", 2), e && e.length > 0 ? window.application.router.navigate("filter/" + e.toString()) : window.application.router.navigate("filter"))) : void 0
    }, e
}(Backbone.View);
var SiteMenuFilterView, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
SiteMenuFilterView = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype.events = {
        "click li": "onListItemClick",
        "mouseenter li": "onListItemOver"
    }, e.prototype.initialize = function () {
        return this.model.on("change:visible", this.onVisibilityChange, this), window.application.pages.on("updated", this.onPageUpdated, this)
    }, e.prototype.update = function () {
        var t, e, i, n, r;
        for (this.$el.find("li").removeClass("checked"), e = this.model.get("filters"), r = [], i = 0, n = e.length; n > i; i++) t = e[i], r.push(this.$el.find("li[data-value='" + t + "']").addClass("checked"));
        return r
    }, e.prototype.onListItemOver = function (t) {
        return window.application.sounds.play("hover", 5)
    }, e.prototype.onListItemClick = function (t) {
        var e;
        return $(t.currentTarget).hasClass("checked") || window.application.sounds.play("click", 0), e = $(t.currentTarget).data("value"), this.model.toggleFilter(e)
    }, e.prototype.onVisibilityChange = function () {
        return this.model.get("visible") ? (this.$el.addClass("visible"), setTimeout(function (t) {
            return function () {
                return window.scroll(0, .2 * application.stageModel.h)
            }
        }(this), 0)) : (this.$el.removeClass("visible"), setTimeout(function (t) {
            return function () {
                return window.scroll(0, 0)
            }
        }(this), 0))
    }, e
}(Backbone.View);
var SiteMenuItem, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype,
        t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
SiteMenuItem = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype.events = {click: "onClick"}, e.ANIMATION_TIME = .6, e.prototype._clickable = !0, e.prototype._selected = !1, e.prototype._index = -1, e.prototype._delay = 0, e.prototype._hoverBomb = null, e.prototype._defaultLabel = null, e.prototype._label = null, e.prototype._color = null, e.prototype._filters = null, e.prototype._sphere = null, e.prototype._hoverThumb = null, e.prototype.initialize = function (t) {
        var e;
        return this._index = t.index, this._defaultLabel = this._label = this.$el.find("li .label").html(), this._hoverBomb = new HoverBomb(this.$el.find("li .button-animation-1-context")), this._hoverThumb = new Image, this.$el.data("thumb") ? this._hoverThumb.src = this.$el.data("thumb") : this._hoverThumb.src = "/static/images/about-contact-thumb.jpg", this.$el.data("color") ? this._color = Number("0x" + this.$el.data("color").split("#")[1]) : this._color = 16777215, e = this.$el.find("> li"), relax.browser.isTouch() ? (e.on("touchstart", relax.dom.bind(this, this.onTouchStart)), e.on("touchmove", relax.dom.bind(this, this.onTouchMove)), e.on("touchend", relax.dom.bind(this, this.onClick))) : (e.on("mouseover", relax.dom.bind(this, this.onMouseOver)), e.on("mouseout", relax.dom.bind(this, this.onMouseOut)), this.$el.on("mouseenter", relax.dom.bind(this, this.onMouseEnter))), this.$el.addClass("clickable"), this.$el.data("filters") && (this._filters = this.$el.data("filters").split(",")), this.$el.hasClass("text") ? this._sphere = window.application.threeD.rwatggSphere : this._sphere = window.application.threeD.getMesh(this._index)
    }, e.prototype.setX = function (t, i) {
        return null == i && (i = null), null === i && (i = e.ANIMATION_TIME), this._x = t, TweenMax.to(this.$el, i, {
            force3D: !0,
            x: this._x,
            delay: this._delay,
            ease: "easeInOutExpo"
        })
    }, e.prototype.hasFilter = function (t) {
        var e, i, n, r;
        if (!(this._filters && t.length > 0)) return this.$el.removeClass("filtered-out");
        for (this.$el.removeClass("filtered-out"), i = !1, n = 0, r = t.length; r > n; n++) e = t[n], -1 === this._filters.indexOf(e) && (i = !0);
        return i ? this.$el.addClass("filtered-out") : void 0
    }, e.prototype.resize = function (t) {
        var e, i, n, r;
        return null == t && (t = null), r = window.application.stageModel.w <= 620 ? 38 : window.application.stageModel.w <= 768 ? 90 : 100, n = this._clickable ? 0 : window.application.stageModel.w - r, this._selected ? (i = this.$el.hasClass("text"), window.application.stageModel.w <= 330 && (e = i ? 30 : 50), e = window.application.stageModel.w <= 620 ? i ? 35 : 60 : window.application.stageModel.w <= 768 ? i ? 60 : 110 : i ? 50 : 130, this.setX(n - e, t)) : this.setX(n, t)
    }, e.prototype.setSelected = function (t, e) {
        return this._clickable = e, this.$el.removeClass("clickable"), this._clickable && this.$el.addClass("clickable"), this._selected = t === this._index, -1 !== t && (this._delay = .01 * Math.abs(t - this._index)), this._selected ? (this.setText("back"), this.$el.addClass("clickable")) : (this._hoverBomb.out(!0), this.setText()), this.resize(!0)
    }, e.prototype.setText = function (t) {
        var i, n, r;
        return null == t && (t = null), t = null === t ? this._defaultLabel : t, "back" === t ? this.$el.hasClass("back-button") || this.$el.addClass("back-button") : this.$el.hasClass("back-button") && this.$el.removeClass("back-button"), this._label !== t ? (this._label = t, i = this.$el.find("li"), n = {
            index: 1,
            length: this._label.length
        }, r = .5 * e.ANIMATION_TIME, TweenMax.to(n, r, {
            index: n.length,
            delay: this._selected ? r : .1,
            ease: "easeInOutCubic",
            onUpdate: function (t) {
                return function () {
                    var e;
                    return e = Math.round(n.index), i.find(".label").html(t._label.substr(0, e))
                }
            }(this)
        })) : void 0
    }, e.prototype.onMouseEnter = function (t) {
        var e, i;
        return i = this.$el.hasClass("social"), i ? void 0 : (e = $(t.currentTarget).attr("href"), window.application.pages.fetchCache(e))
    }, e.prototype.onMouseOver = function (t) {
        var e, i;
        if (this._sphere && this._clickable && this._sphere.electricute(), application.threeD.throwAGlitch(), this.$el.hasClass("clickable") && !this.$el.hasClass("filtered-out")) {
            if (this._hoverBomb.over(), i = this.$el.hasClass("text"), e = this.$el.hasClass("social"), !e) return this._hoverThumb && 0 !== this._hoverThumb.width ? window.application.threeD.rwatggSphere.hiFromMenuItem(this._hoverThumb) : window.application.threeD.rwatggSphere.hiFromMenuItem(this._color);
            if (e) return window.application.sounds.play("hover", 7)
        }
    }, e.prototype.onMouseOut = function (t) {
        return this._sphere && this._sphere.unelectricute(), this.$el.hasClass("clickable") && !this.$el.hasClass("filtered-out") ? (this._hoverBomb.out(!0), window.application.threeD.rwatggSphere.unhiFromMenuItem()) : void 0
    }, e.prototype.touchStartY = null, e.prototype.onTouchStart = function (t) {
        return this.touchStartY = relax.geom.getXYFromMouseTouchEvent(t).y, this.onMouseOver()
    }, e.prototype.onTouchMove = function (t) {
        return this.onMouseOut()
    }, e.prototype.onClick = function (t) {
        var e, i, n, r, o, a, s;
        if (s = !1, e = !0, null !== this.touchStartY) {
            try {
                n = relax.geom.getXYFromMouseTouchEvent(t).y
            } catch (r) {
                i = r, n = this.touchStartY
            }
            e = Math.abs(n - this.touchStartY) < 100
        }
        return t.preventDefault(), this._clickable ? (o = this.$el.attr("href"), 1 === this.$el.find("> li[type=social]").length ? (window.application.tracking.event("social", "click", o), window.open(o), window.application.sounds.play("click", 5)) : e && (s = !0, window.application.router.navigate(o), window.application.sounds.play("click", 3), a = this.$el.hasClass("text"), a || window.application.threeD.rwatggSphere.hiFromMenuItem(this._color, !0))) : e && (s = !0, window.application.pages.model.get("prev-model") ? window.application.router.navigate(window.application.pages.model.get("prev-model").get("url")) : window.application.router.navigate("/"), window.application.sounds.play("click", 1)), relax.browser.isTouch() && !s ? this._hoverBomb.out(!0) : void 0
    }, e
}(Backbone.View);
var SiteMenu, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
SiteMenu = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype._y = 0, e.prototype._yTarget = 0, e.prototype._minMenuY = 0, e.prototype._topPadding = 0, e.prototype._hiddenPadding = 0, e.prototype._savedScrollTop = 0, e.prototype._topPaddingTarget = 0, e.prototype._backButtonVisible = !1, e.prototype._initialPositionSet = !1, e.prototype._filterModel = null, e.prototype._animatedIn = !1, e.prototype._hidden = null, e.prototype._items = null, e.prototype._index = -1, e.prototype.initialize = function () {
        var t, e, i, n, r;
        for (this._filterModel = new SiteMenuFilterModel, window.application.pages.on("updated", this.onPageUpdated, this), this._items = [], e = 0, r = this.$el.find("a"), i = 0, n = r.length; n > i; i++) t = r[i], this._items.push(new SiteMenuItem({
            el: t,
            index: e++
        }));
        return window.application.stageModel.bind(StageModel.RESIZE, this.resize, this)
    }, e.prototype.peakABoo = function () {
        return relax.browser.isMobile() || window.application.stageModel.bind(StageModel.SCROLL, this.onScroll, this), this.setY(window.application.stageModel.h), this.$el.css("opacity", 1), Modernizr.touch ? this.setYTarget(0) : void 0
    }, e.prototype.onPageUpdated = function (t) {
        var e, i, n, r, o, a, s, l, h, u, c, p, d;
        if (d = t.get("url"), this._index = this.$el.find("a[href='/" + d + "']").index(), n = -1 !== d.indexOf("filter"), o = -1 !== d.indexOf("impressum"), r = "frontpage" === t.get("type") || "" === t.get("type"), "" === d || "/" === d || n || -1 !== d.indexOf("?") ? this.setVisibility(e = !0) : this.setVisibility(e = !1), this.$el.hasClass("impressum-showing") && this.$el.removeClass("impressum-showing"), this._backButtonPosition = !1, n) for (this.$el.find("#filter-button").addClass("filter-mode"), this.$el.find("#header-list").addClass("filter-mode"), i = this._filterModel.get("filters"), c = this._items, s = 0, h = c.length; h > s; s++) a = c[s], a.hasFilter(i); else if (o) this.$el.addClass("impressum-showing"); else for (this.$el.find("#filter-button").removeClass("filter-mode"), this.$el.find("#header-list").removeClass("filter-mode"), this.$el.find(".back-button").length > 0 && (this._backButtonPosition = this.$el.find(".back-button").position().top + 40), p = this._items, l = 0, u = p.length; u > l; l++) a = p[l], a.hasFilter([]);
        return setTimeout(function (t) {
            return function () {
                return relax.tools.renderQue.add(t)
            }
        }(this), 0)
    }, e.prototype.renderQueCall = function () {
        var t, e, i, n;
        return n = this._yTarget - this._y, i = this._topPaddingTarget - this._topPadding, Math.abs(Math.round(n)) > 0 || Math.abs(Math.round(i)) > 0 ? (this._y += n * ScrollHandler.TIME_SCROLL_SPEED, this._topPadding += i * ScrollHandler.TIME_SCROLL_SPEED) : relax.tools.renderQue.remove(this), t = this._y + this._topPadding, this._backButtonPosition !== !1 && (e = t + this._backButtonPosition, 0 > e ? t += -1 * e : e > this._topPaddingTarget && (t = this._topPaddingTarget - this._backButtonPosition)), this.setY(t)
    }, e.prototype.setY = function (t) {
        return this.lala || (this.lala = this.el.getElementsByClassName("scroll-able")[0]), TweenMax.set(this.lala, {force3D: !0, y: t})
    }, e.prototype.resize = function (t) {
        var e, i, n, r, o, a;
        for (this._topPaddingTarget = t.h - (t.w <= 620 ? 20 : 60), o = t.h - this._topPaddingTarget, e = this.$el.find("#header-list").height(), this._minMenuY = -1 * e, this._initialPositionSet || (this._topPadding = this._topPaddingTarget + 2 * o), this.renderQueCall(), this._initialPositionSet = !0, a = this._items, n = 0, r = a.length; r > n; n++) i = a[n], i.resize();
        return this.setScrollHeight(), relax.tools.renderQue.has(this) ? void 0 : relax.tools.renderQue.add(this)
    }, e.prototype.setScrollHeight = function () {
        var t, e;
        return this._hidden ? void 0 : (t = this.$el.find("#header-list").height(), null != (e = window.application.scrollHandler) ? e.setHeight(t) : void 0)
    }, e.prototype.onScroll = function (t) {
        var e;
        return e = window.application.scrollHandler.getPercent(), this.setYTarget(e * this._minMenuY)
    }, e.prototype.getY = function () {
        return log(this._hiddenPadding), this._yTarget
    }, e.prototype.setYTarget = function (t) {
        return this._yTarget = t + this._hiddenPadding, this._animatedIn || (this._y = this._yTarget), this._animatedIn = !0, relax.tools.renderQue.has(this) ? void 0 : relax.tools.renderQue.add(this)
    }, e.prototype.setVisibility = function (t) {
        var e, i, n, r;
        if (this._hidden !== !t) for (this._hidden = !t, this.$el.removeClass("hidden"), this._hidden && this.$el.addClass("hidden"), this._filterModel.set("button-visible", t), relax.browser.isMobile() ? (this._savedScrollTop = 0, this._hiddenPadding = 0) : this._hidden ? (this._savedScrollTop = window.application.stageModel.scrollTop, this._hiddenPadding = this._yTarget) : (this.setScrollHeight(), window.application.scrollHandler.setY(this._savedScrollTop), this._hiddenPadding = 0), r = this._items, i = 0, n = r.length; n > i; i++) e = r[i], e.setSelected(this._index, !this._hidden);
        return this.setScrollHeight()
    }, e
}(Backbone.View);
var SiteFooter, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
SiteFooter = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype.events = {
        "click a": "onItemClick",
        "click .mute-btn": "onMuteButtonClick"
    }, e.prototype._impressumLabel = null, e.prototype._backShowing = !1, e.prototype.initialize = function () {
        return this._impressumLabel = this.$el.find("a").text(), window.application.pages.on("updated", this.onPageUpdated, this), this.$el.addClass("show")
    }, e.prototype.onPageUpdated = function (t) {
        var e, i;
        return i = t.get("url"), e = -1 !== i.indexOf("impressum"), e ? (this._backShowing = !0, this.$el.find("a").text("back")) : (this._backShowing = !1, this.$el.find("a").text(this._impressumLabel)), e || "" === i ? this.$el.removeClass("hide") : this.$el.addClass("hide")
    }, e.prototype.onMuteButtonClick = function (t) {
        return $(t.currentTarget).toggleClass("selected"), window.application.sounds.toggleMute()
    }, e.prototype.onItemClick = function (t) {
        var e;
        return t.preventDefault(), e = this._backShowing ? "/" : $(t.currentTarget).attr("href"), window.application.router.navigate(e)
    }, e
}(Backbone.View);
var CaseGalleryImage, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
CaseGalleryImage = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype.init = function (t) {
        return _.extend(this, Backbone.Events)
    }, e.prototype.onImageLoaded = function () {
        return e.__super__.onImageLoaded.call(this), this.data.naturalWidth > 600 && this.data.naturalHeight > 300 ? ($(this.data).click(relax.dom.bind(this, this.onClicky)), $(this.data).addClass("clickable")) : void 0
    }, e.prototype.onClicky = function () {
        return this.trigger("click", $(this.data).attr("src"))
    }, e.prototype.position = function (t, e, i, n) {
        return $(this.data).css({left: t, top: e, width: i, height: n})
    }, e.prototype.dealoc = function () {
        return this.data && $(this.data).unbind(), e.__super__.dealoc.call(this)
    }, e
}(relax.displayObject.Image);
var CaseGallery, CaseGalleryIFrame, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
CaseGallery = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype._elements = null, e.prototype._loaded = !1, e.prototype.events = {touchend: "onGalleryClick"}, e.prototype.initialize = function () {
        var t, e, i, n, r;
        this._elements = [], t = this.$el.find("iframe, video"), n = [], t.each(function (t) {
            return function (t, e) {
                return n[$(e).index()] = new CaseGalleryIFrame({el: e})
            }
        }(this)), e = this.$el.find("> .image"), e.each(function (t) {
            return function (e, i) {
                var r, o;
                return o = new CaseGalleryImage, n[$(i).index()] = o, r = $(i).find("img"), o.load(r.attr("src"), t.onImageLoaded.bind(t), !0), r.attr("src", ""), $(o.data).attr("width", $(i).attr("width")), $(o.data).attr("height", $(i).attr("height")), $(o.data).attr("data-transparent", $(r).attr("data-transparent")), r.replaceWith(o.data)
            }
        }(this)), e.length > 0 && this.$el.append("<div class='pseudo-loader'><svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 200 200' preserveAspectRatio='none' xml:space='preserve'><g><rect fill='none' vector-effect='non-scaling-stroke' stroke-width='1px' width='200' height='200'/></g></svg></div>");
        for (i in n) r = n[i], this._elements.push(r);
        return this.resize(), 0 === e.length ? this.onImageLoaded() : void 0
    }, e.prototype.onImageLoaded = function () {
        var t, e, i, n;
        for (this._loaded = !0, n = this._elements, e = 0, i = n.length; i > e; e++) t = n[e], t.loaded || (this._loaded = !1);
        return this._loaded && (setTimeout(function (t) {
            return function () {
                var e, i;
                try {
                    if (-1 !== t.$el.find("iframe").attr("src").indexOf("/static/iframes/")) return t.$el.find("iframe").contents().find("body").addClass("visible")
                } catch (i) {
                    e = i
                }
            }
        }(this), 1e3), TweenLite.to(this.$el.find(".pseudo-loader"), 1, {
            opacity: 0, ease: "easeOutCubic", onComplete: function (t) {
                return function () {
                    return t.$el.find(".pseudo-loader").remove()
                }
            }(this)
        }), this.$el.addClass("loaded"), this.resize(), window.application.stageModel.w <= 1024) ? this.autoTick() : void 0
    }, e.prototype.autoTick = function () {
        return this.autoTimer = setTimeout(function (t) {
            return function () {
                return t.onGalleryClick()
            }
        }(this), 2e3)
    }, e.prototype.autoTimer = null, e.prototype.onGalleryClick = function (t) {
        var e;
        return null == t && (t = null), t && null !== this.autoTimer ? clearTimeout(this.autoTimer) : null === t && this.autoTick(), window.application.stageModel.w <= 1024 ? (e = this.$el.find("> .selected").index(), e++, this.$el.find("> .selected").removeClass("selected"), this.$el.find("> *").eq(e).addClass("selected")) : void 0
    }, e.prototype.resize = function () {
        var t, e, i, n, r, o, a, s, l, h, u, c, p, d, f, m, g, E, v, y, T, _, x, b;
        for (b = 0, y = 0, h = 0, l = this.$el.width(), g = .6 * window.application.stageModel.h, a = Math.max(350, g), s = 0, p = 1 === this._elements.length ? 1 : .5, 1 === this._elements.length && (g = l * (parseInt($(o).attr("height")) / parseInt($(o).attr("width")))), window.application.stageModel.w < 768 ? (p = 1, this.$el.find("> *").eq(0).addClass("selected")) : this.$el.find("> *").removeClass("selected"), i = 1 === p ? g : .6 * g, n = 1 === p ? l : .5 * l, v = this._elements, c = 0, m = v.length; m > c; c++) E = v[c], o = E.data ? E.data : E.el, e = parseInt($(o).attr("width")), t = parseInt($(o).attr("height")), r = t / e, y = n, h = n * r, h > i && (r = e / t, h = i, y = h * r), y > 1e3 && (T = 1e3 / y, y = 1e3, h *= T), d = this._elements.indexOf(E), f = y > h, b = 0, x = 0, u = a * p, _ = l * p, this._elements.length > 1 ? 1 === p ? (x = .5 * _ - .5 * y, b = .5 * u - .5 * h) : (f ? (0 === d || 2 === d ? b = u - .5 * h : 3 === d && (b = a - h), 1 === d || 3 === d ? x = _ - .5 * y : 2 === d ? x = _ : 0 === d && (x = _ - y)) : (0 === d || 2 === d ? b = u - .5 * h : 3 === d && (b = a - h), 0 === d ? x = .475 * l - y : 1 === d || 3 === d ? (x = .5 * l - .5 * y, x += 1 === d ? l * -.1 : .05 * l) : 2 === d && (x = .525 * l)), 0 === d ? b += .05 * a : 1 === d || 3 === d ? b += 1 === d ? 15 : -15 : 2 === d && (b -= .05 * a)) : 1 === this._elements.length && (x = .5 * n - .5 * y), b + h > s && (s = b + h), E.position(x, b, y, h);
        return this.$el.css({height: s})
    }, e.prototype.dealoc = function () {
        var t, e, i, n;
        for (null !== this.autoTimer && clearTimeout(this.autoTimer), this.autoTimer = null, n = this._elements, e = 0, i = n.length; i > e; e++) t = n[e], "function" == typeof t.dealoc && t.dealoc();
        return this.unbind(), this.remove()
    }, e
}(Backbone.View), CaseGalleryIFrame = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype.loaded = !0, e.prototype.position = function (t, e, i, n) {
        return this.$el.css({left: t, top: e, width: i, height: n})
    }, e.prototype.dealoc = function () {
        return this.unbind(), this.remove()
    }, e
}(Backbone.View);
var CasePage, CaseSection, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
CasePage = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype._y = 0, e.prototype._yTarget = 0, e.prototype._initResizeTimeout = null, e.prototype._animateOutTimer = null, e.prototype._sections = null, e.prototype.animatingOut = !1, e.prototype._hoverBombs = null, e.prototype.events = {
        "mouseenter .text > div a": "onTextATagEnter",
        "mouseenter .text > h1 a": "onTextATagEnter"
    }, e.prototype.render = function () {
        return e.__super__.render.call(this), this.$el.find("span").attr("style", ""), Modernizr.touch ? (this._swiper = new relax.tools.DragAndSwipe(document, {preventMoveDefault: !1}), this._swiper.addDrag(relax.dom.bind(this, this.onDrag))) : window.application.stageModel.bind(StageModel.SCROLL, this.onScroll, this), this._sections = [], this.$el.find("section.content").each(function (t) {
            return function (e, i) {
                return t._sections.push(new CaseSection({el: i}))
            }
        }(this)), this.resize(window.application.stageModel), this.$el.find(".gallery > p").remove(), this.model.isTextType() && this.$el.addClass("textpage"), this._hoverBombs = [], this.$el.find(".text > div a, .text > h1 a").each(function (t) {
            return function (e, i) {
                return $(i).data("index", e), t._hoverBombs.push(new HoverBomb($(i), !0))
            }
        }(this)), setTimeout(function (t) {
            return function () {
                return document.getElementsByClassName("root")[0].scroll(0, 0), t.renderQueCall(), t.onScroll(window.application.stageModel)
            }
        }(this), 0), this
    }, e.prototype.onTextATagEnter = function (t) {
        var e;
        return e = $(t.currentTarget).data("index"), this._hoverBombs[e].over()
    }, e.prototype.resize = function (t) {
        var e, i, n, r, o, a;
        for (a = parseInt(this.$el.find(".content").css("margin-top"), 10), isNaN(a) && (a = 0), r = this._sections, e = 0, i = r.length; i > e; e++) o = r[e], o.resize(), o.setTop(a), n = parseInt(o.$el.css("margin-bottom"), 10), isNaN(n) && (n = 0), a += n, a += o._height;
        return setTimeout(function (e) {
            return function () {
                var i, n, r;
                return e._height = e.el.offsetHeight, null != (i = e._swiper) && i.setBoundries({
                    minSwipeY: -1 * (e._height - t.halfh),
                    maxSwipeY: 1
                }), null != (n = window.application.scrollHandler) && n.setHeight(e._height), null != (r = window.application.scrollHandler) ? r.setY(0) : void 0
            }
        }(this), 0)
    }, e.prototype.onDrag = function (t) {
        return this.setYTarget(t.y)
    }, e.prototype.onScroll = function (t) {
        var e;
        return e = window.application.scrollHandler.getPercent(), this.setYTarget(e * (window.application.stageModel.h - this._height))
    }, e.prototype.setYTarget = function (t) {
        return this._yTarget = t, relax.tools.renderQue.has(this) ? void 0 : relax.tools.renderQue.add(this)
    }, e.prototype.dealoc = function () {
        var t, i, n, r, o, a, s, l;
        for (a = this._hoverBombs, i = 0, r = a.length; r > i; i++) t = a[i], t.dealoc();
        for (this._hoverBombs = null, this._initResizeTimeout && clearTimeout(this._initResizeTimeout), s = this._sections, n = 0, o = s.length; o > n; n++) l = s[n], l.dealoc();
        return log("case page dealoc...."), e.__super__.dealoc.call(this)
    }, e.prototype.animateOut = function (t) {
        var i, n, r, o, a;
        if (!this.animatingOut) {
            for (this.animatingOut = !0, window.application.stageModel.unbindAll(this), null != (r = this._swiper) && r.dealoc(), o = this._sections, i = 0, n = o.length; n > i; i++) a = o[i], a.remove();
            return this._animateOutTimer = setTimeout(function (t) {
                return function () {
                    return e.__super__.animateOut.call(t)
                }
            }(this), 1e3)
        }
    }, e.prototype.renderQueCall = function () {
        var t, e, i, n, r, o;
        if (!this.animatingOut) {
            for (o = this._yTarget - this._y, Math.abs(Math.round(o)) > 0 ? this._y += o * ScrollHandler.TIME_SCROLL_SPEED : relax.tools.renderQue.remove(this), i = this._sections, n = [], t = 0, e = i.length; e > t; t++) r = i[t], n.push(r.setY(this._y));
            return n
        }
    }, e
}(DefaultPage), CaseSection = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype._height = 0, e.prototype._gallery = null, e.prototype._visible = !1, e.prototype._removing = !1, e.prototype.events = {
        "click .launch-btn": "onLaunchButtonClick",
        "mouseenter .launch-btn": "onLaunchButtonOver"
    }, e.prototype.initialize = function () {
        return this.render()
    }, e.prototype.onLaunchButtonOver = function (t) {
        return window.application.sounds.play("hover", 0)
    }, e.prototype.onLaunchButtonClick = function (t) {
        return window.application.sounds.play("click", 5)
    }, e.prototype.render = function () {
        var t;
        return this.$el.find(".gallery").length > 0 && (t = CaseGallery, this._gallery = new t({el: this.$el.find(".gallery")[0]})), "mobile" !== window.application.stageModel.currentMQ || this.$el.hasClass("show") ? void 0 : (setTimeout(function (t) {
            return function () {
                return t.$el.addClass("visible"), t.mobileTimer = setTimeout(function () {
                    return t.$el.addClass("show"), window.scroll(0, 0)
                }, 100)
            }
        }(this), 0), this._visible = !0)
    }, e.prototype.setY = function (t) {
        var e;
        if (!this._removing) return e = t + this.top + this._height, this._visible && !relax.browser.isMobile() && TweenMax.set(this.el, {
            force3D: !0,
            y: t
        }), this.setVisibility(e > 0)
    }, e.prototype.setVisibility = function (t) {
        var e, i;
        return "mobile" !== window.application.stageModel.currentMQ && this._visible !== t ? (this._visible = t, this._visible ? (this.$el.addClass("visible"), setTimeout(function (t) {
            return function () {
                return t.$el.addClass("show"), t.$el.find("video").each(function (t, e) {
                    return e.pause(), e.currentTime = 0, e.load(), e.play()
                })
            }
        }(this), 100), null != (e = this._gallery) && "function" == typeof e.setEnabled ? e.setEnabled(!0) : void 0) : (this.$el.removeClass("visible"), this.$el.find("video").each(function (t, e) {
            return e.pause()
        }), "mobile" !== window.application.stageModel.currentMQ && setTimeout(function (t) {
            return function () {
                return t.$el.removeClass("show")
            }
        }(this), 0), null != (i = this._gallery) && "function" == typeof i.setEnabled ? i.setEnabled(!1) : void 0)) : void 0
    }, e.prototype.remove = function () {
        return this._removing = !0, this._visible ? this.$el.removeClass("show") : this.$el.removeClass("visible")
    }, e.prototype.dealoc = function () {
        var t;
        return this.mobileTimer && clearTimeout(this.mobileTimer), null != (t = this._gallery) && t.dealoc(), this.unbind(), this.remove()
    }, e.prototype.setTop = function (t) {
        return this.top = t, this._height = this.$el.height()
    }, e.prototype.resize = function () {
        var t;
        return this._height = this.$el.height(), null != (t = this._gallery) ? t.resize() : void 0
    }, e
}(Backbone.View);
var FrontPage, PeakThumb, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
FrontPage = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.hasAnimatedInBefore = !1, e.prototype.events = {
        "mouseenter section p a": "onTextATagEnter",
        "mouseenter section h1 a": "onTextATagEnter",
        "mouseleave section p a": "onTextATagLeave",
        "mouseleave section h1 a": "onTextATagLeave",
        "click section a": "onTextATagClick",
        "click section h1": "onSectionH1Click"
    }, e.prototype.render = function () {
        var t, i, n, r, o, a, s, l, h, u, c, p, d, f, m;
        for (e.__super__.render.call(this), e.hasAnimatedInBefore = null === this.model.get("prev-model"), this.contentHiddenFromMenu = !0, this._hoverBombs = [], this.$el.find("section p a, section h1 a").each(function (t) {
            return function (e, i) {
                return i.setAttribute("data-index", e), t._hoverBombs.push(new HoverBomb($(i), !0))
            }
        }(this)), i = this.el.getElementsByTagName("a"), s = 0, u = i.length; u > s; s++) if (t = i[s], o = t.getAttribute("data-images")) for (o = o.split(","), l = 0, c = o.length; c > l; l++) a = o[l], r = new Image, r.src = a;
        for (this.sections = this.el.getElementsByTagName("section"), this.sectionHoverBombs = [], n = 0, d = this.sections, f = [], h = 0, p = d.length; p > h; h++) m = d[h], m.classList.remove("not-animated-in"), f.push(this.sectionHoverBombs.push({
            el: m,
            bomb: new HoverBomb($(m), !0, application.stageModel.w <= 920 ? 0 : .3 * n++ + .4),
            visible: !1,
            toggleVisible: function (t) {
                var e;
                return e = t !== this.visible, t && e && (this.visible = !0, this.bomb.over(function (t) {
                    return function () {
                        return t.visible ? t.el.classList.remove("hide") : void 0
                    }
                }(this))), !t && e ? (this.bomb.out(!0), this.visible = !1, this.el.classList.add("hide")) : void 0
            }
        }));
        return f
    }, e.prototype.animateIn = function () {
        return e.__super__.animateIn.call(this), this._introTextExpandTimer = setTimeout(function (t) {
            return function () {
                return t.onSectionH1Click(), t.scroll(application.stageModel)
            }
        }(this), e.hasAnimatedInBefore ? 500 : relax.browser.isMobile() ? 1e3 : 2800), e.hasAnimatedInBefore = !0, this
    }, e.prototype.resize = function (t) {
        return this.section1Rect = this.sectionHoverBombs[0].el.getBoundingClientRect(), this.section2Rect = this.sectionHoverBombs[1].el.getBoundingClientRect(), this.section3Rect = this.sectionHoverBombs[2].el.getBoundingClientRect(), this.section4Rect = this.sectionHoverBombs[3].el.getBoundingClientRect(), this.scroll(t)
    }, e.prototype.scroll = function (t) {
        var e, i, n, r, o, a;
        return this.section1Rect && (relax.browser.isMobile() ? (i = t.scrollTop > .2 * t.h, i && !this.contentHiddenFromMenu ? (this.contentHiddenFromMenu = !0, this.sectionHoverBombs[0].toggleVisible(!1), this.sectionHoverBombs[1].toggleVisible(!1), this.sectionHoverBombs[2].toggleVisible(!1), this.sectionHoverBombs[3].toggleVisible(!1)) : !i && this.contentHiddenFromMenu && (this.contentHiddenFromMenu = !1, this.sectionHoverBombs[0].toggleVisible(!0), this.sectionHoverBombs[1].toggleVisible(!0), this.sectionHoverBombs[2].toggleVisible(!0), this.sectionHoverBombs[3].toggleVisible(!0))) : (e = t.h + application.siteMenu.getY() - 100, n = e > this.section1Rect.bottom, r = e > this.section2Rect.bottom, o = e > this.section3Rect.bottom, a = e > this.section4Rect.bottom, n !== this.sectionHoverBombs[0].visible && this.sectionHoverBombs[0].toggleVisible(n), r !== this.sectionHoverBombs[1].visible && this.sectionHoverBombs[1].toggleVisible(r), o !== this.sectionHoverBombs[2].visible && this.sectionHoverBombs[2].toggleVisible(o), a !== this.sectionHoverBombs[3].visible && this.sectionHoverBombs[3].toggleVisible(a))), t.scrollTop > 100 ? (this._introTextExpandTimer && clearTimeout(this._introTextExpandTimer), this._introTextExpandTimer = null) : void 0
    }, e.prototype.onSectionH1Click = function (t) {
        var e, i, n, r, o, a, s, l, h;
        for (this._introTextExpandTimer && clearTimeout(this._introTextExpandTimer), h = this.el.getElementsByTagName("section"), e = 0, n = h.length; n > e; e++) l = h[e], l.classList.remove("expand");
        for (o = t ? t.currentTarget.parentNode : this.el.getElementsByTagName("h1")[0].parentNode, o.classList.toggle("expand", !o.classList.contains("expand")), o.classList.contains("expand") && (o.classList.remove("hide"), null != (a = window.application.sounds) && a.play("hover", 5)), s = this.sectionHoverBombs, i = 0, r = s.length; r > i; i++) l = s[i], o === l.el && (l.toggleVisible(!0), l.bomb.out(!0), l.bomb.over());
        return application.threeD.throwAGlitch(), this.resize(application.stageModel), window.scroll(0, 0)
    }, e.prototype.onTextATagClick = function (t) {
        var e, i;
        return e = t.currentTarget.getAttribute("href"), i = t.currentTarget.getAttribute("data-mobile-href"), relax.browser.isMobile() && i && (e = i), "/" === e.substr(0, 1) ? (t.preventDefault(), application.router.navigate(e)) : void 0
    }, e.prototype.onTextATagLeave = function (t) {
        var e;
        if (!relax.browser.isMobile() && !relax.browser.isTouch()) return null != (e = this.currentPeakThumb) && e.animateOut(), this.currentPeakThumb = null
    }, e.prototype.onTextATagEnter = function (t) {
        var e, i, n, r, o, a, s, l, h;
        if (!relax.browser.isMobile() && !relax.browser.isTouch()) return h = t.currentTarget, r = parseInt(h.getAttribute("data-index"), 10), this._hoverBombs[r].over(), n = h.getAttribute("data-images"), null != (s = this.currentPeakThumb) && s.animateOut(), this.currentPeakThumb = null, application.threeD.throwAGlitch(), "" !== n ? (a = h.getBoundingClientRect(), e = this.el.getElementsByTagName("article")[0].getBoundingClientRect(), o = {
            width: a.width,
            height: a.height,
            left: a.left - e.left,
            top: a.top - e.top
        }, -1 !== n.indexOf(",") ? (l = n.split(","), i = l[Math.floor(Math.random() * l.length)]) : i = n, this.currentPeakThumb = new PeakThumb({
            rect: o,
            image: i,
            context: this.el.getElementsByTagName("article")[0]
        })) : void 0
    }, e.prototype.dealoc = function () {
        var t, i, n, r, o;
        for (this._introTextExpandTimer && clearTimeout(this._introTextExpandTimer), null != (r = this.currentPeakThumb) && r.dealoc(), this.currentPeakThumb = null, o = this._hoverBombs, i = 0, n = o.length; n > i; i++) t = o[i], t.dealoc();
        return this._hoverBombs = null, e.__super__.dealoc.call(this)
    }, e
}(DefaultPage), PeakThumb = function () {
    function t(t) {
        var e;
        this.el = document.createElement("canvas"), this.el.classList.add("peak-thumb"), t.context.appendChild(this.el), this.loaded = !1, this.removed = !1, this.ctx = this.el.getContext("2d"), this.img = new Image, this.img.onload = function (t) {
            return function (e) {
                return t.onImageLoaded(e)
            }
        }(this), this.img.src = t.image, e = t.rect, TweenLite.set(this.el, {
            left: e.left + .5 * e.width - .5 * this.el.offsetWidth,
            top: e.top - (this.el.offsetHeight + 5)
        }), this._selfDestructTimer = setTimeout(function (t) {
            return function () {
                return t.removed ? void 0 : t.animateOut()
            }
        }(this), 4e3)
    }

    return t.prototype.onImageLoaded = function (t) {
        var e, i, n;
        if (!this.removed) {
            for (window.application.threeD.rwatggSphere.hiFromMenuItem(this.img), this.loaded = !0, this.elementWidth = this.el.offsetWidth, this.elementHeight = this.el.offsetHeight, this.el.width = this.elementWidth, this.el.height = this.elementHeight, this.fixedPoints = [{
                x: .5 * this.elementWidth,
                y: this.elementHeight
            }, {
                x: .25 * this.elementWidth + relax.math.lerp(Math.random(), this.elementWidth * -.1, .1 * this.elementWidth),
                y: .75 * this.elementHeight + relax.math.lerp(Math.random(), this.elementHeight * -.1, .1 * this.elementHeight),
                progress: 0
            }, {
                x: .15 * this.elementWidth + relax.math.lerp(Math.random(), this.elementWidth * -.1, .1 * this.elementWidth),
                y: .5 * this.elementHeight + relax.math.lerp(Math.random(), this.elementHeight * -.1, .1 * this.elementHeight),
                progress: 0
            }, {
                x: .25 * this.elementWidth + relax.math.lerp(Math.random(), this.elementWidth * -.1, .1 * this.elementWidth),
                y: .25 * this.elementHeight + relax.math.lerp(Math.random(), this.elementHeight * -.1, .1 * this.elementHeight),
                progress: 0
            }, {
                x: .75 * this.elementWidth + relax.math.lerp(Math.random(), this.elementWidth * -.1, .1 * this.elementWidth),
                y: .25 * this.elementHeight + relax.math.lerp(Math.random(), this.elementHeight * -.1, .1 * this.elementHeight),
                progress: 0
            }, {
                x: .85 * this.elementWidth + relax.math.lerp(Math.random(), this.elementWidth * -.1, .1 * this.elementWidth),
                y: .5 * this.elementHeight + relax.math.lerp(Math.random(), this.elementHeight * -.1, .1 * this.elementHeight),
                progress: 0
            }, {
                x: .75 * this.elementWidth + relax.math.lerp(Math.random(), this.elementWidth * -.1, .1 * this.elementWidth),
                y: .75 * this.elementHeight + relax.math.lerp(Math.random(), this.elementHeight * -.1, .1 * this.elementHeight),
                progress: 0
            }], this.animateState = "in", this.numLinesDone = this.fixedPoints.length - 1, e = i = 1, n = this.fixedPoints.length - 1; n >= i; e = i += 1) TweenLite.to(this.fixedPoints[e], relax.math.lerp(Math.random(), .2, 1), {
                progress: 1,
                ease: "easeOutElastic",
                onComplete: function (t) {
                    return function () {
                        return t.onLineDone()
                    }
                }(this)
            });
            return relax.tools.renderQue.add(this)
        }
    }, t.prototype.onLineDone = function () {
        return this.numLinesDone--, 0 === this.numLinesDone && (relax.tools.renderQue.remove(this), "out" === this.animateState) ? this.dealoc() : void 0
    }, t.prototype.animateOut = function () {
        var t, e, i;
        if (!this.removed) {
            if (this.loaded) {
                for (this.animateState = "out", this.numLinesDone = this.fixedPoints.length - 1, t = e = 1, i = this.fixedPoints.length - 1; i >= e; t = e += 1) TweenLite.to(this.fixedPoints[t], relax.math.lerp(Math.random(), .2, 1), {
                    progress: 0,
                    ease: "easeOutElastic",
                    onComplete: function (t) {
                        return function () {
                            return t.onLineDone()
                        }
                    }(this)
                });
                return relax.tools.renderQue.add(this)
            }
            return this.dealoc()
        }
    }, t.prototype.renderQueCall = function () {
        var t, e, i, n, r, o, a, s, l, h, u;
        for (i = this.elementWidth / this.img.naturalWidth, l = this.elementHeight / this.img.naturalHeight, a = Math.max(i, l), t = (this.elementWidth - this.img.naturalWidth * a) / 2, e = (this.elementHeight - this.img.naturalHeight * a) / 2, this.ctx.clearRect(0, 0, this.elementWidth, this.elementHeight), this.ctx.globalCompositeOperation = "source-over", this.ctx.drawImage(this.img, 0, 0, this.img.naturalWidth, this.img.naturalHeight, t, e, this.img.naturalWidth * a, this.img.naturalHeight * a), this.ctx.globalCompositeOperation = "destination-in", this.ctx.beginPath(), s = this.fixedPoints, n = 0, r = s.length; r > n; n++) o = s[n], 0 === this.fixedPoints.indexOf(o) ? this.ctx.moveTo(o.x, o.y) : (h = this.fixedPoints[0].x + (o.x - this.fixedPoints[0].x) * o.progress, u = this.fixedPoints[0].y + (o.y - this.fixedPoints[0].y) * o.progress, this.ctx.lineTo(h, u));
        return this.ctx.fillStyle = "#ffffff", this.ctx.fill(), this.ctx.closePath()
    }, t.prototype.dealoc = function () {
        var t, e, i, n;
        if (!this.removed) {
            if (this.removed = !0, clearTimeout(this._selfDestructTimer), relax.tools.renderQue.remove(this), this.fixedPoints) for (n = this.fixedPoints, t = 0, e = n.length; e > t; t++) i = n[t], TweenLite.killTweensOf(i);
            return this.fixedPoints = null, this.img.onload = null, this.img.src = "", this.img = null, this.el.parentNode.removeChild(this.el), this.el = null
        }
    }, t
}();
var AboutPage, extend = function (t, e) {
    function i() {
        this.constructor = t
    }

    for (var n in e) hasProp.call(e, n) && (t[n] = e[n]);
    return i.prototype = e.prototype, t.prototype = new i, t.__super__ = e.prototype, t
}, hasProp = {}.hasOwnProperty;
AboutPage = function (t) {
    function e() {
        return e.__super__.constructor.apply(this, arguments)
    }

    return extend(e, t), e.prototype.render = function (t) {
        return null == t && (t = null), _.extend(this.events, {"click .gallery > img": "onAboutImageClick"}), e.__super__.render.call(this, t)
    }, e.prototype.onAboutImageClick = function (t) {
        return t.preventDefault(), 0 === t.currentTarget.index() ? window.open("http://www.awwwards.com/RWATGG/portfolio") : 1 === t.currentTarget.index() ? window.open("http://www.thefwa.com/profile/relax-we-are-the-good-guys") : 2 === t.currentTarget.index() ? window.open("http://www.creativecircle.dk/") : 3 === t.currentTarget.index() ? window.open("https://www.thinkwithgoogle.com/") : void 0
    }, e
}(CasePage), window.application = {
    stageModel: null,
    colors: null,
    sounds: null,
    pages: null,
    siteMenu: null,
    threeD: null,
    footer: null,
    intro: null,
    initialize: function () {
        var t;
        return t = relax.browser.isMobile && window.innerWidth < 920, this.stageModel = new StageModel({
            scrollContext: t ? document.getElementsByClassName("root")[0] : window,
            mediaqueries: [{horizontalBreakPoint: 768, eventName: "mobile"}, {horizontalBreakPoint: 1e5, eventName: "desktop"}]
        }), relax.browser.getIOSVersion() > 0 && relax.browser.getIOSVersion() < 8 && $("canvas#wires").css("display", "none"), relax.caniuse.localstorage() && sessionStorage.clear(), this.tracking = new GATracking, PageModel.addAliasRoutes({
            about: "case",
            contact: "case",
            impressum: "case",
            workitem: "case"
        }), PageModel.setPageTypes({
            "*": DefaultPage,
            menufilter: DefaultPage,
            frontpage: FrontPage,
            "case": CasePage,
            workitem: CasePage,
            textpage: AboutPage,
            impressum: CasePage
        }), DefaultPage.setStageModel(this.stageModel), this.pages = new PagesCollection({
            modelClasses: {"*": RWATGGPageModel},
            $context: document.getElementById("page-content"),
            rootURL: "/"
        }), this.colors = new ColorTheme, this.router = new Router({
            pages: this.pages,
            routes: window.routes,
            tracking: this.tracking
        }), this.intro = new IntroView({el: $("#intro-context")[0]}), this.intro.on("done", this.onIntroFinished, this), this.threeD = new ThreeWorld({cases: $("#header-list > a:not('.text'):not('.social')")}), this.siteMenu = new SiteMenu({el: $("#header-menu")[0]}), this.sounds = new SoundController, this.intro.runTheShow()
    },
    onIntroFinished: function () {
        return this.scrollHandler = new ScrollHandler, this.siteMenu.peakABoo(), this.footer = new SiteFooter({el: $("#footer")[0]}), this.threeD.peakABoo(), this.router.start()
    }
}, $(function () {
    return relax.browser.isTouch() && document.body.classList.add("touch"), relax.setLog(-1 === window.location.href.indexOf("dev.")), application.initialize(), !0
});
//# sourceMappingURL=main.min.js.map